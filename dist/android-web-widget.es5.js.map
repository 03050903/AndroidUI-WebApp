{"version":3,"sources":["android-web-widget.js"],"names":[],"mappings":"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","file":"android-web-widget.es5.js","sourcesContent":["var android;\n(function (android) {\n    var util;\n    (function (util) {\n        class SparseArray {\n            constructor(initialCapacity) {\n                this.map = new Map();\n            }\n            clone() {\n                let clone = new SparseArray();\n                clone.map = new Map(this.map);\n                return clone;\n            }\n            get(key, valueIfKeyNotFound) {\n                return this.map.get(key) || valueIfKeyNotFound;\n            }\n            delete(key) {\n                this.map.delete(key);\n            }\n            remove(key) {\n                this.delete(key);\n            }\n            removeAt(index) {\n                this.removeAtRange(index);\n            }\n            removeAtRange(index, size = 1) {\n                let keys = [...this.map.keys()];\n                let end = Math.min(this.map.size, index + size);\n                for (let i = index; i < end; i++) {\n                    this.map.delete(keys[i]);\n                }\n            }\n            put(key, value) {\n                this.map.set(key, value);\n            }\n            size() {\n                return this.map.size;\n            }\n            keyAt(index) {\n                return [...this.map.keys()][index];\n            }\n            valueAt(index) {\n                return [...this.map.values()][index];\n            }\n            setValueAt(index, value) {\n                let key = this.keyAt(index);\n                this.map.set(key, value);\n            }\n            indexOfKey(key) {\n                return [...this.map.keys()].indexOf(key);\n            }\n            indexOfValue(value) {\n                return [...this.map.values()].indexOf(value);\n            }\n            clear() {\n                this.map.clear();\n            }\n            append(key, value) {\n                this.put(key, value);\n            }\n        }\n        util.SparseArray = SparseArray;\n    })(util = android.util || (android.util = {}));\n})(android || (android = {}));\nvar android;\n(function (android) {\n    var util;\n    (function (util) {\n        class Log {\n            static getPriorityString(priority) {\n                if (priority > Log.PriorityString.length)\n                    return \"\";\n                return Log.PriorityString[priority - 2];\n            }\n            static v(tag, msg, tr) {\n                console.log(Log.getLogMsg(Log.VERBOSE, tag, msg));\n                if (tr)\n                    console.log(tr);\n            }\n            static d(tag, msg) {\n                console.debug(Log.getLogMsg(Log.DEBUG, tag, msg));\n            }\n            static i(tag, msg, tr) {\n                console.info(Log.getLogMsg(Log.INFO, tag, msg));\n                if (tr)\n                    console.info(tr);\n            }\n            static w(tag, msg, tr) {\n                console.warn(Log.getLogMsg(Log.WARN, tag, msg));\n                if (tr)\n                    console.warn(tr);\n            }\n            static e(tag, msg, tr) {\n                console.error(Log.getLogMsg(Log.ERROR, tag, msg));\n                if (tr)\n                    console.error(tr);\n            }\n            static getLogMsg(priority, tag, msg) {\n                let d = new Date();\n                let dateFormat = d.toLocaleTimeString() + '.' + d.getUTCMilliseconds();\n                return \"[\" + Log.getPriorityString(priority) + \"] \" + dateFormat + \" \\t \" + tag + \" \\t \" + msg;\n            }\n        }\n        Log.View_DBG = false;\n        Log.VelocityTracker_DBG = false;\n        Log.VERBOSE = 2;\n        Log.DEBUG = 3;\n        Log.INFO = 4;\n        Log.WARN = 5;\n        Log.ERROR = 6;\n        Log.ASSERT = 7;\n        Log.PriorityString = [\"VERBOSE\", \"DEBUG\", \"INFO\", \"WARN\", \"ERROR\", \"ASSERT\"];\n        util.Log = Log;\n    })(util = android.util || (android.util = {}));\n})(android || (android = {}));\nvar java;\n(function (java) {\n    var lang;\n    (function (lang) {\n        class StringBuilder {\n            constructor(arg) {\n                this.array = [];\n                if (!Number.isInteger(arg) && arg) {\n                    this.append(arg);\n                }\n            }\n            length() {\n                return this.array.length;\n            }\n            append(str) {\n                str = str + \"\";\n                this.array.push(...str.split(''));\n                return this;\n            }\n            setLength(length) {\n                let arrayLength = this.array.length;\n                if (length === arrayLength)\n                    return;\n                if (length < arrayLength) {\n                    this.array = this.array.splice(length, arrayLength - length);\n                }\n                else {\n                    for (let i = 0; i < arrayLength - length; i++) {\n                        this.array.push(' ');\n                    }\n                }\n            }\n            toString() {\n                return this.array.join(\"\");\n            }\n        }\n        lang.StringBuilder = StringBuilder;\n    })(lang = java.lang || (java.lang = {}));\n})(java || (java = {}));\n///<reference path=\"../../java/lang/StringBuilder.ts\"/>\nvar android;\n(function (android) {\n    var graphics;\n    (function (graphics) {\n        var StringBuilder = java.lang.StringBuilder;\n        class Rect {\n            constructor(...args) {\n                this.left = 0;\n                this.top = 0;\n                this.right = 0;\n                this.bottom = 0;\n                if (args.length === 1) {\n                    let rect = args[0];\n                    this.left = rect.left;\n                    this.top = rect.top;\n                    this.right = rect.right;\n                    this.bottom = rect.bottom;\n                }\n                else if (args.length === 4 || args.length === 0) {\n                    let [left = 0, top = 0, right = 0, bottom = 0] = args;\n                    this.left = left;\n                    this.top = top;\n                    this.right = right;\n                    this.bottom = bottom;\n                }\n            }\n            equals(r) {\n                if (this === r)\n                    return true;\n                if (!r || !(r instanceof Rect))\n                    return false;\n                return this.left === r.left && this.top === r.top\n                    && this.right === r.right && this.bottom === r.bottom;\n            }\n            toString() {\n                let sb = new StringBuilder();\n                sb.append(\"Rect(\");\n                sb.append(this.left);\n                sb.append(\", \");\n                sb.append(this.top);\n                sb.append(\" - \");\n                sb.append(this.right);\n                sb.append(\", \");\n                sb.append(this.bottom);\n                sb.append(\")\");\n                return sb.toString();\n            }\n            toShortString(sb = new StringBuilder()) {\n                sb.setLength(0);\n                sb.append('[');\n                sb.append(this.left);\n                sb.append(',');\n                sb.append(this.top);\n                sb.append(\"][\");\n                sb.append(this.right);\n                sb.append(',');\n                sb.append(this.bottom);\n                sb.append(']');\n                return sb.toString();\n            }\n            flattenToString() {\n                let sb = new StringBuilder(32);\n                sb.append(this.left);\n                sb.append(' ');\n                sb.append(this.top);\n                sb.append(' ');\n                sb.append(this.right);\n                sb.append(' ');\n                sb.append(this.bottom);\n                return sb.toString();\n            }\n            static unflattenFromString(str) {\n                let parts = str.split(\" \");\n                return new Rect(Number.parseInt(parts[0]), Number.parseInt(parts[1]), Number.parseInt(parts[2]), Number.parseInt(parts[3]));\n            }\n            isEmpty() {\n                return this.left >= this.right || this.top >= this.bottom;\n            }\n            width() {\n                return this.right - this.left;\n            }\n            height() {\n                return this.bottom - this.top;\n            }\n            centerX() {\n                return (this.left + this.right) >> 1;\n            }\n            centerY() {\n                return (this.top + this.bottom) >> 1;\n            }\n            exactCenterX() {\n                return (this.left + this.right) * 0.5;\n            }\n            exactCenterY() {\n                return (this.top + this.bottom) * 0.5;\n            }\n            setEmpty() {\n                this.left = this.right = this.top = this.bottom = 0;\n            }\n            set(...args) {\n                if (args.length === 1) {\n                    let rect = args[0];\n                    [this.left, this.top, this.right, this.bottom] = [rect.left, rect.top, rect.right, rect.bottom];\n                }\n                else {\n                    let [left = 0, top = 0, right = 0, bottom = 0] = args;\n                    this.left = left;\n                    this.top = top;\n                    this.right = right;\n                    this.bottom = bottom;\n                }\n            }\n            offset(dx, dy) {\n                this.left += dx;\n                this.top += dy;\n                this.right += dx;\n                this.bottom += dy;\n            }\n            offsetTo(newLeft, newTop) {\n                this.right += newLeft - this.left;\n                this.bottom += newTop - this.top;\n                this.left = newLeft;\n                this.top = newTop;\n            }\n            inset(dx, dy) {\n                this.left += dx;\n                this.top += dy;\n                this.right -= dx;\n                this.bottom -= dy;\n            }\n            contains(...args) {\n                if (args.length === 1) {\n                    let r = args[0];\n                    return this.left < this.right && this.top < this.bottom\n                        && this.left <= r.left && this.top <= r.top && this.right >= r.right && this.bottom >= r.bottom;\n                }\n                else if (args.length === 2) {\n                    let [x, y] = args;\n                    return this.left < this.right && this.top < this.bottom\n                        && x >= this.left && x < this.right && y >= this.top && y < this.bottom;\n                }\n                else {\n                    let [left = 0, top = 0, right = 0, bottom = 0] = args;\n                    return this.left < this.right && this.top < this.bottom\n                        && this.left <= left && this.top <= top\n                        && this.right >= right && this.bottom >= bottom;\n                }\n            }\n            intersect(...args) {\n                if (args.length === 1) {\n                    let rect = args[0];\n                    return this.intersect(rect.left, rect.top, rect.right, rect.bottom);\n                }\n                else {\n                    let [left = 0, t = 0, right = 0, bottom = 0] = args;\n                    if (this.left < right && left < this.right && this.top < bottom && t < this.bottom) {\n                        if (this.left < left)\n                            this.left = left;\n                        if (this.top < t)\n                            this.top = t;\n                        if (this.right > right)\n                            this.right = right;\n                        if (this.bottom > bottom)\n                            this.bottom = bottom;\n                        return true;\n                    }\n                    return false;\n                }\n            }\n            intersects(...args) {\n                if (args.length === 1) {\n                    let rect = args[0];\n                    return this.intersects(rect.left, rect.top, rect.right, rect.bottom);\n                }\n                else {\n                    let [left = 0, t = 0, right = 0, bottom = 0] = args;\n                    return this.left < right && left < this.right && this.top < bottom && t < this.bottom;\n                }\n            }\n            union(...args) {\n                if (arguments.length === 1) {\n                    let rect = args[0];\n                    this.union(rect.left, rect.top, rect.right, rect.bottom);\n                }\n                else if (arguments.length === 2) {\n                    let [x = 0, y = 0] = args;\n                    if (x < this.left) {\n                        this.left = x;\n                    }\n                    else if (x > this.right) {\n                        this.right = x;\n                    }\n                    if (y < this.top) {\n                        this.top = y;\n                    }\n                    else if (y > this.bottom) {\n                        this.bottom = y;\n                    }\n                }\n                else {\n                    let [left = 0, top = 0, right = 0, bottom = 0] = args;\n                    if ((left < right) && (top < bottom)) {\n                        if ((this.left < this.right) && (this.top < this.bottom)) {\n                            if (this.left > left)\n                                this.left = left;\n                            if (this.top > top)\n                                this.top = top;\n                            if (this.right < right)\n                                this.right = right;\n                            if (this.bottom < bottom)\n                                this.bottom = bottom;\n                        }\n                        else {\n                            this.left = left;\n                            this.top = top;\n                            this.right = right;\n                            this.bottom = bottom;\n                        }\n                    }\n                }\n            }\n            sort() {\n                if (this.left > this.right) {\n                    [this.left, this.right] = [this.right, this.left];\n                }\n                if (this.top > this.bottom) {\n                    [this.top, this.bottom] = [this.bottom, this.top];\n                }\n            }\n            scale(scale) {\n                if (scale != 1) {\n                    this.left = this.left * scale;\n                    this.top = this.top * scale;\n                    this.right = this.right * scale;\n                    this.bottom = this.bottom * scale;\n                }\n            }\n        }\n        graphics.Rect = Rect;\n    })(graphics = android.graphics || (android.graphics = {}));\n})(android || (android = {}));\nvar android;\n(function (android) {\n    var graphics;\n    (function (graphics) {\n        class PixelFormat {\n        }\n        PixelFormat.UNKNOWN = 0;\n        PixelFormat.TRANSLUCENT = -3;\n        PixelFormat.TRANSPARENT = -2;\n        PixelFormat.OPAQUE = -1;\n        PixelFormat.RGBA_8888 = 1;\n        PixelFormat.RGBX_8888 = 2;\n        PixelFormat.RGB_888 = 3;\n        PixelFormat.RGB_565 = 4;\n        graphics.PixelFormat = PixelFormat;\n    })(graphics = android.graphics || (android.graphics = {}));\n})(android || (android = {}));\nvar java;\n(function (java) {\n    var lang;\n    (function (lang) {\n        var ref;\n        (function (ref) {\n            const key = \"referent\";\n            class WeakReference {\n                constructor(referent) {\n                    this.weakMap = new WeakMap();\n                    this.weakMap.set(key, referent);\n                }\n                get() {\n                    return this.weakMap.get(key);\n                }\n                set(value) {\n                    this.weakMap.set(key, value);\n                }\n                clear() {\n                    this.weakMap.delete(key);\n                }\n            }\n            ref.WeakReference = WeakReference;\n        })(ref = lang.ref || (lang.ref = {}));\n    })(lang = java.lang || (java.lang = {}));\n})(java || (java = {}));\n/**\n * Created by linfaxin on 15/10/3.\n */\n///<reference path=\"../Rect.ts\"/>\n///<reference path=\"../PixelFormat.ts\"/>\n///<reference path=\"../../../java/lang/ref/WeakReference.ts\"/>\n///<reference path=\"../../../java/lang/Runnable.ts\"/>\nvar android;\n(function (android) {\n    var graphics;\n    (function (graphics) {\n        var drawable;\n        (function (drawable) {\n            var Rect = android.graphics.Rect;\n            var PixelFormat = android.graphics.PixelFormat;\n            var WeakReference = java.lang.ref.WeakReference;\n            const ZERO_BOUNDS_RECT = new Rect();\n            class Drawable {\n                constructor() {\n                    this.mBounds = ZERO_BOUNDS_RECT;\n                    this.mStateSet = [];\n                    this.mLevel = 0;\n                    this.mVisible = true;\n                }\n                draw(canvas) {\n                }\n                setBounds(...args) {\n                    if (args.length === 1) {\n                        let rect = args[0];\n                        return this.setBounds(rect.left, rect.top, rect.right, rect.bottom);\n                    }\n                    else {\n                        let [left = 0, top = 0, right = 0, bottom = 0] = args;\n                        let oldBounds = this.mBounds;\n                        if (oldBounds == ZERO_BOUNDS_RECT) {\n                            oldBounds = this.mBounds = new Rect();\n                        }\n                        if (oldBounds.left != left || oldBounds.top != top ||\n                            oldBounds.right != right || oldBounds.bottom != bottom) {\n                            if (!oldBounds.isEmpty()) {\n                                this.invalidateSelf();\n                            }\n                            this.mBounds.set(left, top, right, bottom);\n                            this.onBoundsChange(this.mBounds);\n                        }\n                    }\n                }\n                copyBounds(bounds = new Rect()) {\n                    bounds.set(this.mBounds);\n                    return bounds;\n                }\n                getBounds() {\n                    if (this.mBounds == ZERO_BOUNDS_RECT) {\n                        this.mBounds = new Rect();\n                    }\n                    return this.mBounds;\n                }\n                setCallback(cb) {\n                    this.mCallback = new WeakReference(cb);\n                }\n                getCallback() {\n                    if (this.mCallback != null) {\n                        return this.mCallback.get();\n                    }\n                    return null;\n                }\n                invalidateSelf() {\n                    let callback = this.getCallback();\n                    if (callback != null) {\n                        callback.invalidateDrawable(this);\n                    }\n                }\n                scheduleSelf(what, when) {\n                    let callback = this.getCallback();\n                    if (callback != null) {\n                        callback.scheduleDrawable(this, what, when);\n                    }\n                }\n                unscheduleSelf(what) {\n                    let callback = this.getCallback();\n                    if (callback != null) {\n                        callback.unscheduleDrawable(this, what);\n                    }\n                }\n                setAlpha(alpha) {\n                }\n                getAlpha() {\n                    return 0xFF;\n                }\n                isStateful() {\n                    return false;\n                }\n                setState(stateSet) {\n                    stateSet = stateSet || [];\n                    if (this.mStateSet && stateSet && this.mStateSet.toString() === stateSet.toString()) {\n                        return false;\n                    }\n                    this.mStateSet = stateSet;\n                    return this.onStateChange(stateSet);\n                }\n                getState() {\n                    return this.mStateSet;\n                }\n                jumpToCurrentState() {\n                }\n                getCurrent() {\n                    return this;\n                }\n                setLevel(level) {\n                    if (this.mLevel != level) {\n                        this.mLevel = level;\n                        return this.onLevelChange(level);\n                    }\n                    return false;\n                }\n                getLevel() {\n                    return this.mLevel;\n                }\n                setVisible(visible, restart) {\n                    let changed = this.mVisible != visible;\n                    if (changed) {\n                        this.mVisible = visible;\n                        this.invalidateSelf();\n                    }\n                    return changed;\n                }\n                isVisible() {\n                    return this.mVisible;\n                }\n                setAutoMirrored(mirrored) {\n                }\n                isAutoMirrored() {\n                    return false;\n                }\n                getOpacity() {\n                    return PixelFormat.OPAQUE;\n                }\n                static resolveOpacity(op1, op2) {\n                    if (op1 == op2) {\n                        return op1;\n                    }\n                    if (op1 == PixelFormat.UNKNOWN || op2 == PixelFormat.UNKNOWN) {\n                        return PixelFormat.UNKNOWN;\n                    }\n                    if (op1 == PixelFormat.TRANSLUCENT || op2 == PixelFormat.TRANSLUCENT) {\n                        return PixelFormat.TRANSLUCENT;\n                    }\n                    if (op1 == PixelFormat.TRANSPARENT || op2 == PixelFormat.TRANSPARENT) {\n                        return PixelFormat.TRANSPARENT;\n                    }\n                    return PixelFormat.OPAQUE;\n                }\n                onStateChange(state) {\n                    return false;\n                }\n                onLevelChange(level) {\n                    return false;\n                }\n                onBoundsChange(bounds) {\n                }\n                getIntrinsicWidth() {\n                    return -1;\n                }\n                getIntrinsicHeight() {\n                    return -1;\n                }\n                getMinimumWidth() {\n                    let intrinsicWidth = this.getIntrinsicWidth();\n                    return intrinsicWidth > 0 ? intrinsicWidth : 0;\n                }\n                getMinimumHeight() {\n                    let intrinsicHeight = this.getIntrinsicHeight();\n                    return intrinsicHeight > 0 ? intrinsicHeight : 0;\n                }\n                getPadding(padding) {\n                    padding.set(0, 0, 0, 0);\n                    return false;\n                }\n                mutate() {\n                    return this;\n                }\n                getConstantState() {\n                    return null;\n                }\n            }\n            drawable.Drawable = Drawable;\n        })(drawable = graphics.drawable || (graphics.drawable = {}));\n    })(graphics = android.graphics || (android.graphics = {}));\n})(android || (android = {}));\n/**\n * Created by linfaxin on 15/10/18.\n */\n///<reference path=\"Rect.ts\"/>\nvar android;\n(function (android) {\n    var graphics;\n    (function (graphics) {\n        class Matrix {\n            isIdentity() {\n                return true;\n            }\n            mapRect(boundingRect) {\n                return false;\n            }\n        }\n        Matrix.IDENTITY_MATRIX = new Matrix();\n        graphics.Matrix = Matrix;\n    })(graphics = android.graphics || (android.graphics = {}));\n})(android || (android = {}));\nvar java;\n(function (java) {\n    var lang;\n    (function (lang) {\n        var util;\n        (function (util) {\n            var concurrent;\n            (function (concurrent) {\n                class CopyOnWriteArrayList {\n                    constructor() {\n                        this.mData = [];\n                        this.isDataNew = true;\n                    }\n                    iterator() {\n                        this.isDataNew = false;\n                        return this.mData;\n                    }\n                    [Symbol.iterator]() {\n                        this.isDataNew = false;\n                        return this.mData[Symbol.iterator]();\n                    }\n                    checkNewData() {\n                        if (!this.isDataNew) {\n                            this.isDataNew = true;\n                            this.mData = [...this.mData];\n                        }\n                    }\n                    size() {\n                        return this.mData.length;\n                    }\n                    add(...items) {\n                        this.checkNewData();\n                        this.mData.push(...items);\n                    }\n                    addAll(array) {\n                        this.checkNewData();\n                        this.mData.push(...array.mData);\n                    }\n                    remove(item) {\n                        this.checkNewData();\n                        this.mData.splice(this.mData.indexOf(item), 1);\n                    }\n                }\n                concurrent.CopyOnWriteArrayList = CopyOnWriteArrayList;\n            })(concurrent = util.concurrent || (util.concurrent = {}));\n        })(util = lang.util || (lang.util = {}));\n    })(lang = java.lang || (java.lang = {}));\n})(java || (java = {}));\nvar android;\n(function (android) {\n    var util;\n    (function (util) {\n        class Access {\n            get(index) {\n                return this.mData[index];\n            }\n            size() {\n                return this.mSize;\n            }\n        }\n        class CopyOnWriteArray {\n            constructor() {\n                this.mData = [];\n                this.mAccess = new Access();\n            }\n            getArray() {\n                if (this.mStart) {\n                    if (this.mDataCopy == null)\n                        this.mDataCopy = [...this.mData];\n                    return this.mDataCopy;\n                }\n                return this.mData;\n            }\n            start() {\n                if (this.mStart)\n                    throw new Error(\"Iteration already started\");\n                this.mStart = true;\n                this.mDataCopy = null;\n                this.mAccess.mData = this.mData;\n                this.mAccess.mSize = this.mData.length;\n                return this.mAccess.mData;\n            }\n            end() {\n                if (!this.mStart)\n                    throw new Error(\"Iteration not started\");\n                this.mStart = false;\n                if (this.mDataCopy != null) {\n                    this.mData = this.mDataCopy;\n                    this.mAccess.mData = [];\n                    this.mAccess.mSize = 0;\n                }\n                this.mDataCopy = null;\n            }\n            size() {\n                return this.getArray().length;\n            }\n            add(...items) {\n                this.getArray().push(...items);\n            }\n            addAll(array) {\n                this.getArray().push(...array.mData);\n            }\n            remove(item) {\n                this.getArray().splice(this.getArray().indexOf(item), 1);\n            }\n        }\n        util.CopyOnWriteArray = CopyOnWriteArray;\n    })(util = android.util || (android.util = {}));\n})(android || (android = {}));\n/**\n * Created by linfaxin on 15/10/8.\n */\n///<reference path=\"../../java/lang/util/concurrent/CopyOnWriteArrayList.ts\"/>\n///<reference path=\"../util/CopyOnWriteArray.ts\"/>\nvar android;\n(function (android) {\n    var view;\n    (function (view) {\n        class ViewTreeObserver {\n            dispatchOnWindowAttachedChange(attached) {\n                let listeners = this.mOnWindowAttachListeners;\n                if (listeners != null && listeners.size() > 0) {\n                    for (let listener of listeners) {\n                        if (attached)\n                            listener.onWindowAttached();\n                        else\n                            listener.onWindowDetached();\n                    }\n                }\n            }\n            dispatchOnGlobalLayout() {\n                let listeners = this.mOnGlobalLayoutListeners;\n                if (listeners != null && listeners.size() > 0) {\n                    let access = listeners.start();\n                    try {\n                        let count = access.length;\n                        for (let i = 0; i < count; i++) {\n                            access[i].onGlobalLayout();\n                        }\n                    }\n                    finally {\n                        listeners.end();\n                    }\n                }\n            }\n            dispatchOnPreDraw() {\n                let cancelDraw = false;\n                const listeners = this.mOnPreDrawListeners;\n                if (listeners != null && listeners.size() > 0) {\n                    let access = listeners.start();\n                    try {\n                        let count = access.length;\n                        for (let i = 0; i < count; i++) {\n                            cancelDraw = cancelDraw || !(access[i].onPreDraw());\n                        }\n                    }\n                    finally {\n                        listeners.end();\n                    }\n                }\n                return cancelDraw;\n            }\n            dispatchOnScrollChanged() {\n                let listeners = this.mOnScrollChangedListeners;\n                if (listeners != null && listeners.size() > 0) {\n                    let access = listeners.start();\n                    try {\n                        let count = access.length;\n                        for (let i = 0; i < count; i++) {\n                            access[i].onScrollChanged();\n                        }\n                    }\n                    finally {\n                        listeners.end();\n                    }\n                }\n            }\n            dispatchOnDraw() {\n                if (this.mOnDrawListeners != null) {\n                    for (let listener of this.mOnDrawListeners) {\n                        listener.onDraw();\n                    }\n                }\n            }\n        }\n        view.ViewTreeObserver = ViewTreeObserver;\n    })(view = android.view || (android.view = {}));\n})(android || (android = {}));\nvar android;\n(function (android) {\n    var util;\n    (function (util) {\n        class DisplayMetrics {\n        }\n        DisplayMetrics.DENSITY_LOW = 120;\n        DisplayMetrics.DENSITY_MEDIUM = 160;\n        DisplayMetrics.DENSITY_HIGH = 240;\n        DisplayMetrics.DENSITY_XHIGH = 320;\n        DisplayMetrics.DENSITY_XXHIGH = 480;\n        DisplayMetrics.DENSITY_XXXHIGH = 640;\n        DisplayMetrics.DENSITY_DEFAULT = DisplayMetrics.DENSITY_MEDIUM;\n        util.DisplayMetrics = DisplayMetrics;\n    })(util = android.util || (android.util = {}));\n})(android || (android = {}));\n///<reference path=\"../../util/DisplayMetrics.ts\"/>\nvar android;\n(function (android) {\n    var content;\n    (function (content) {\n        var res;\n        (function (res) {\n            var DisplayMetrics = android.util.DisplayMetrics;\n            class Resources {\n                static getDisplayMetrics() {\n                    if (Resources.displayMetrics)\n                        return Resources.displayMetrics;\n                    Resources.displayMetrics = new DisplayMetrics();\n                    let displayMetrics = Resources.displayMetrics;\n                    displayMetrics.widthPixels = window.innerWidth;\n                    displayMetrics.heightPixels = window.innerHeight;\n                    displayMetrics.xdpi = window.screen.deviceXDPI || DisplayMetrics.DENSITY_DEFAULT;\n                    displayMetrics.ydpi = window.screen.deviceYDPI || DisplayMetrics.DENSITY_DEFAULT;\n                    displayMetrics.density = Resources.density;\n                    displayMetrics.densityDpi = displayMetrics.density * DisplayMetrics.DENSITY_DEFAULT;\n                    displayMetrics.scaledDensity = displayMetrics.density;\n                    return displayMetrics;\n                }\n                static setDensity(density) {\n                    Resources.density = density;\n                    Resources.displayMetrics = null;\n                }\n            }\n            Resources.density = 1;\n            res.Resources = Resources;\n        })(res = content.res || (content.res = {}));\n    })(content = android.content || (android.content = {}));\n})(android || (android = {}));\n/**\n * Created by linfaxin on 15/10/6.\n */\n///<reference path=\"../content/res/Resources.ts\"/>\nvar android;\n(function (android) {\n    var view;\n    (function (view) {\n        var Resources = android.content.res.Resources;\n        let density = Resources.getDisplayMetrics().density;\n        class MotionEvent {\n            constructor(e, action) {\n                this.mAction = 0;\n                this.mDownTime = 0;\n                this.mEventTime = 0;\n                this.mActivePointerId = 0;\n                this.mXOffset = 0;\n                this.mYOffset = 0;\n                this.mViewRootTop = 0;\n                this.mViewRootLeft = 0;\n                this.mAction = action;\n                if (e)\n                    this.init(e, action);\n            }\n            static obtainWithTouchEvent(e, action) {\n                return new MotionEvent(e, action);\n            }\n            static obtain(event) {\n                let newEv = new MotionEvent(null, 0);\n                Object.assign(newEv, event);\n                return newEv;\n            }\n            static obtainWithAction(downTime, eventTime, action, x, y) {\n                let newEv = new MotionEvent(null, action);\n                newEv.mDownTime = downTime;\n                newEv.mEventTime = eventTime;\n                let touch = {\n                    identifier: 0,\n                    target: null,\n                    screenX: x,\n                    screenY: y,\n                    clientX: x,\n                    clientY: y,\n                    pageX: x,\n                    pageY: y\n                };\n                newEv.mTouchingPointers = [touch];\n                return newEv;\n            }\n            init(event, baseAction, windowXOffset = 0, windowYOffset = 0) {\n                let e = event;\n                let action = baseAction;\n                let actionIndex = -1;\n                let activeTouch = e.changedTouches[0];\n                let activePointerId = activeTouch.identifier;\n                for (let i = 0, length = e.touches.length; i < length; i++) {\n                    if (e.touches[i].identifier === activePointerId) {\n                        actionIndex = i;\n                        MotionEvent.IdIndexCache.set(activePointerId, i);\n                        break;\n                    }\n                }\n                if (actionIndex < 0 && (baseAction === MotionEvent.ACTION_UP || baseAction === MotionEvent.ACTION_CANCEL)) {\n                    actionIndex = MotionEvent.IdIndexCache.get(activePointerId);\n                }\n                if (actionIndex < 0)\n                    throw Error('not find action index');\n                switch (baseAction) {\n                    case MotionEvent.ACTION_DOWN:\n                    case MotionEvent.ACTION_UP:\n                        MotionEvent.TouchMoveRecord.set(activePointerId, []);\n                        break;\n                    case MotionEvent.ACTION_MOVE:\n                        let moveHistory = MotionEvent.TouchMoveRecord.get(activePointerId);\n                        if (moveHistory) {\n                            activeTouch.mEventTime = e.timeStamp;\n                            moveHistory.push(activeTouch);\n                            if (moveHistory.length > MotionEvent.HistoryMaxSize)\n                                moveHistory.shift();\n                        }\n                        break;\n                }\n                this.mTouchingPointers = Array.from(e.touches);\n                if (baseAction === MotionEvent.ACTION_UP) {\n                    this.mTouchingPointers.splice(actionIndex, 0, activeTouch);\n                }\n                if (this.mTouchingPointers.length > 1) {\n                    switch (action) {\n                        case MotionEvent.ACTION_DOWN:\n                            action = MotionEvent.ACTION_POINTER_DOWN;\n                            break;\n                        case MotionEvent.ACTION_UP:\n                            action = MotionEvent.ACTION_POINTER_UP;\n                            break;\n                    }\n                }\n                this.mAction = actionIndex << MotionEvent.ACTION_POINTER_INDEX_SHIFT | action;\n                this.mActivePointerId = activePointerId;\n                if (activePointerId === 0 && action == MotionEvent.ACTION_DOWN) {\n                    this.mDownTime = e.timeStamp;\n                }\n                this.mEventTime = e.timeStamp;\n                this.mViewRootLeft = windowXOffset;\n                this.mViewRootTop = windowYOffset;\n            }\n            recycle() {\n            }\n            getAction() {\n                return this.mAction;\n            }\n            getActionMasked() {\n                return this.mAction & MotionEvent.ACTION_MASK;\n            }\n            getActionIndex() {\n                return (this.mAction & MotionEvent.ACTION_POINTER_INDEX_MASK) >> MotionEvent.ACTION_POINTER_INDEX_SHIFT;\n            }\n            getDownTime() {\n                return this.mDownTime;\n            }\n            getEventTime() {\n                return this.mEventTime;\n            }\n            getX(pointerIndex = 0) {\n                return (this.mTouchingPointers[pointerIndex].pageX - this.mViewRootLeft) * density + this.mXOffset;\n            }\n            getY(pointerIndex = 0) {\n                return (this.mTouchingPointers[pointerIndex].pageY - this.mViewRootTop) * density + this.mYOffset;\n            }\n            getPointerCount() {\n                return this.mTouchingPointers.length;\n            }\n            getPointerId(pointerIndex) {\n                return this.mTouchingPointers[pointerIndex].identifier;\n            }\n            findPointerIndex(pointerId) {\n                for (let i = 0, length = this.mTouchingPointers.length; i < length; i++) {\n                    if (this.mTouchingPointers[i].identifier === pointerId) {\n                        return i;\n                    }\n                }\n                return -1;\n            }\n            getRawX() {\n                return (this.mTouchingPointers[0].pageX - this.mViewRootLeft) * density;\n            }\n            getRawY() {\n                return (this.mTouchingPointers[0].pageY - this.mViewRootTop) * density;\n            }\n            getHistorySize(id = this.mActivePointerId) {\n                let moveHistory = MotionEvent.TouchMoveRecord.get(id);\n                return moveHistory ? moveHistory.length : 0;\n            }\n            getHistoricalX(pointerIndex, pos) {\n                let moveHistory = MotionEvent.TouchMoveRecord.get(this.mTouchingPointers[pointerIndex].identifier);\n                return (moveHistory[pos].pageX - this.mViewRootLeft) * density + this.mXOffset;\n            }\n            getHistoricalY(pointerIndex, pos) {\n                let moveHistory = MotionEvent.TouchMoveRecord.get(this.mTouchingPointers[pointerIndex].identifier);\n                return (moveHistory[pos].pageY - this.mViewRootTop) * density + this.mYOffset;\n            }\n            getHistoricalEventTime(...args) {\n                let pos, activePointerId;\n                if (args.length === 1) {\n                    pos = args[0];\n                    activePointerId = this.mActivePointerId;\n                }\n                else {\n                    pos = args[1];\n                    activePointerId = this.getPointerId(args[0]);\n                }\n                let moveHistory = MotionEvent.TouchMoveRecord.get(activePointerId);\n                return moveHistory[pos].mEventTime;\n            }\n            setAction(action) {\n                this.mAction = action;\n            }\n            offsetLocation(deltaX, deltaY) {\n                this.mXOffset += deltaX;\n                this.mYOffset += deltaY;\n            }\n            setLocation(x, y) {\n                this.mXOffset = x - this.getRawX();\n                this.mYOffset = y - this.getRawY();\n            }\n            getPointerIdBits() {\n                let idBits = 0;\n                let pointerCount = this.getPointerCount();\n                for (let i = 0; i < pointerCount; i++) {\n                    idBits |= 1 << this.getPointerId(i);\n                }\n                return idBits;\n            }\n            split(idBits) {\n                let ev = MotionEvent.obtain(this);\n                let oldPointerCount = this.getPointerCount();\n                const oldAction = this.getAction();\n                const oldActionMasked = oldAction & MotionEvent.ACTION_MASK;\n                let newPointerIds = [];\n                for (let i = 0; i < oldPointerCount; i++) {\n                    let pointerId = this.getPointerId(i);\n                    let idBit = 1 << pointerId;\n                    if ((idBit & idBits) != 0) {\n                        newPointerIds.push(pointerId);\n                    }\n                }\n                let newActionPointerIndex = newPointerIds.indexOf(this.mActivePointerId);\n                let newPointerCount = newPointerIds.length;\n                let newAction;\n                if (oldActionMasked == MotionEvent.ACTION_POINTER_DOWN || oldActionMasked == MotionEvent.ACTION_POINTER_UP) {\n                    if (newActionPointerIndex < 0) {\n                        newAction = MotionEvent.ACTION_MOVE;\n                    }\n                    else if (newPointerCount == 1) {\n                        newAction = oldActionMasked == MotionEvent.ACTION_POINTER_DOWN\n                            ? MotionEvent.ACTION_DOWN : MotionEvent.ACTION_UP;\n                    }\n                    else {\n                        newAction = oldActionMasked | (newActionPointerIndex << MotionEvent.ACTION_POINTER_INDEX_SHIFT);\n                    }\n                }\n                else {\n                    newAction = oldAction;\n                }\n                ev.mAction = newAction;\n                ev.mTouchingPointers = this.mTouchingPointers.filter((item) => {\n                    return newPointerIds.indexOf(item.identifier) >= 0;\n                });\n                return ev;\n            }\n            toString() {\n                return \"MotionEvent{action=\" + this.getAction() + \" x=\" + this.getX()\n                    + \" y=\" + this.getY() + \"}\";\n            }\n        }\n        MotionEvent.ACTION_MASK = 0xff;\n        MotionEvent.ACTION_DOWN = 0;\n        MotionEvent.ACTION_UP = 1;\n        MotionEvent.ACTION_MOVE = 2;\n        MotionEvent.ACTION_CANCEL = 3;\n        MotionEvent.ACTION_OUTSIDE = 4;\n        MotionEvent.ACTION_POINTER_DOWN = 5;\n        MotionEvent.ACTION_POINTER_UP = 6;\n        MotionEvent.ACTION_HOVER_MOVE = 7;\n        MotionEvent.ACTION_SCROLL = 8;\n        MotionEvent.ACTION_HOVER_ENTER = 9;\n        MotionEvent.ACTION_HOVER_EXIT = 10;\n        MotionEvent.ACTION_POINTER_INDEX_MASK = 0xff00;\n        MotionEvent.ACTION_POINTER_INDEX_SHIFT = 8;\n        MotionEvent.HistoryMaxSize = 10;\n        MotionEvent.TouchMoveRecord = new Map();\n        MotionEvent.IdIndexCache = new Map();\n        view.MotionEvent = MotionEvent;\n    })(view = android.view || (android.view = {}));\n})(android || (android = {}));\n/**\n * Created by linfaxin on 15/10/5.\n */\n///<reference path=\"../util/SparseArray.ts\"/>\n///<reference path=\"../content/res/Resources.ts\"/>\nvar android;\n(function (android) {\n    var view;\n    (function (view) {\n        var Resources = android.content.res.Resources;\n        const metrics = Resources.getDisplayMetrics();\n        const density = metrics.density;\n        const sizeAndDensity = density;\n        class ViewConfiguration {\n            constructor() {\n                this.mEdgeSlop = sizeAndDensity * ViewConfiguration.EDGE_SLOP;\n                this.mFadingEdgeLength = sizeAndDensity * ViewConfiguration.FADING_EDGE_LENGTH;\n                this.mMinimumFlingVelocity = density * ViewConfiguration.MINIMUM_FLING_VELOCITY;\n                this.mMaximumFlingVelocity = density * ViewConfiguration.MAXIMUM_FLING_VELOCITY;\n                this.mScrollbarSize = density * ViewConfiguration.SCROLL_BAR_SIZE;\n                this.mTouchSlop = density * ViewConfiguration.TOUCH_SLOP;\n                this.mDoubleTapTouchSlop = sizeAndDensity * ViewConfiguration.DOUBLE_TAP_TOUCH_SLOP;\n                this.mPagingTouchSlop = density * ViewConfiguration.PAGING_TOUCH_SLOP;\n                this.mDoubleTapSlop = density * ViewConfiguration.DOUBLE_TAP_SLOP;\n                this.mWindowTouchSlop = sizeAndDensity * ViewConfiguration.WINDOW_TOUCH_SLOP;\n                this.mOverscrollDistance = sizeAndDensity * ViewConfiguration.OVERSCROLL_DISTANCE;\n                this.mOverflingDistance = sizeAndDensity * ViewConfiguration.OVERFLING_DISTANCE;\n            }\n            static get() {\n                if (!ViewConfiguration.instance) {\n                    ViewConfiguration.instance = new ViewConfiguration();\n                }\n                return ViewConfiguration.instance;\n            }\n            getScaledScrollBarSize() {\n                return this.mScrollbarSize;\n            }\n            static getScrollBarFadeDuration() {\n                return ViewConfiguration.SCROLL_BAR_FADE_DURATION;\n            }\n            static getScrollDefaultDelay() {\n                return ViewConfiguration.SCROLL_BAR_DEFAULT_DELAY;\n            }\n            getScaledFadingEdgeLength() {\n                return this.mFadingEdgeLength;\n            }\n            static getPressedStateDuration() {\n                return ViewConfiguration.PRESSED_STATE_DURATION;\n            }\n            static getLongPressTimeout() {\n                return ViewConfiguration.DEFAULT_LONG_PRESS_TIMEOUT;\n            }\n            static getKeyRepeatDelay() {\n                return ViewConfiguration.KEY_REPEAT_DELAY;\n            }\n            static getTapTimeout() {\n                return ViewConfiguration.TAP_TIMEOUT;\n            }\n            static getJumpTapTimeout() {\n                return ViewConfiguration.JUMP_TAP_TIMEOUT;\n            }\n            static getDoubleTapTimeout() {\n                return ViewConfiguration.DOUBLE_TAP_TIMEOUT;\n            }\n            static getDoubleTapMinTime() {\n                return ViewConfiguration.DOUBLE_TAP_MIN_TIME;\n            }\n            getScaledEdgeSlop() {\n                return this.mEdgeSlop;\n            }\n            getScaledTouchSlop() {\n                return this.mTouchSlop;\n            }\n            getScaledPagingTouchSlop() {\n                return this.mPagingTouchSlop;\n            }\n            getScaledDoubleTapSlop() {\n                return this.mDoubleTapSlop;\n            }\n            getScaledWindowTouchSlop() {\n                return this.mWindowTouchSlop;\n            }\n            getScaledMinimumFlingVelocity() {\n                return this.mMinimumFlingVelocity;\n            }\n            getScaledMaximumFlingVelocity() {\n                return this.mMaximumFlingVelocity;\n            }\n            getScaledOverscrollDistance() {\n                return this.mOverscrollDistance;\n            }\n            getScaledOverflingDistance() {\n                return this.mOverflingDistance;\n            }\n            static getScrollFriction() {\n                return ViewConfiguration.SCROLL_FRICTION;\n            }\n        }\n        ViewConfiguration.SCROLL_BAR_SIZE = 10;\n        ViewConfiguration.SCROLL_BAR_FADE_DURATION = 250;\n        ViewConfiguration.SCROLL_BAR_DEFAULT_DELAY = 300;\n        ViewConfiguration.FADING_EDGE_LENGTH = 12;\n        ViewConfiguration.PRESSED_STATE_DURATION = 64;\n        ViewConfiguration.DEFAULT_LONG_PRESS_TIMEOUT = 500;\n        ViewConfiguration.KEY_REPEAT_DELAY = 50;\n        ViewConfiguration.GLOBAL_ACTIONS_KEY_TIMEOUT = 500;\n        ViewConfiguration.TAP_TIMEOUT = 180;\n        ViewConfiguration.JUMP_TAP_TIMEOUT = 500;\n        ViewConfiguration.DOUBLE_TAP_TIMEOUT = 300;\n        ViewConfiguration.DOUBLE_TAP_MIN_TIME = 40;\n        ViewConfiguration.HOVER_TAP_TIMEOUT = 150;\n        ViewConfiguration.HOVER_TAP_SLOP = 20;\n        ViewConfiguration.ZOOM_CONTROLS_TIMEOUT = 3000;\n        ViewConfiguration.EDGE_SLOP = 12;\n        ViewConfiguration.TOUCH_SLOP = 8;\n        ViewConfiguration.DOUBLE_TAP_TOUCH_SLOP = ViewConfiguration.TOUCH_SLOP;\n        ViewConfiguration.PAGING_TOUCH_SLOP = ViewConfiguration.TOUCH_SLOP * 2;\n        ViewConfiguration.DOUBLE_TAP_SLOP = 100;\n        ViewConfiguration.WINDOW_TOUCH_SLOP = 16;\n        ViewConfiguration.MINIMUM_FLING_VELOCITY = 50;\n        ViewConfiguration.MAXIMUM_FLING_VELOCITY = 8000;\n        ViewConfiguration.SCROLL_FRICTION = 0.015;\n        ViewConfiguration.OVERSCROLL_DISTANCE = 800;\n        ViewConfiguration.OVERFLING_DISTANCE = 400;\n        view.ViewConfiguration = ViewConfiguration;\n    })(view = android.view || (android.view = {}));\n})(android || (android = {}));\n/**\n * Created by linfaxin on 15/10/16.\n */\n///<reference path=\"View.ts\"/>\n///<reference path=\"../graphics/Rect.ts\"/>\n///<reference path=\"ViewConfiguration.ts\"/>\nvar android;\n(function (android) {\n    var view;\n    (function (view) {\n        var Rect = android.graphics.Rect;\n        class TouchDelegate {\n            constructor(bounds, delegateView) {\n                this.mDelegateTargeted = false;\n                this.mSlop = 0;\n                this.mBounds = bounds;\n                this.mSlop = view.ViewConfiguration.get().getScaledTouchSlop();\n                this.mSlopBounds = new Rect(bounds);\n                this.mSlopBounds.inset(-this.mSlop, -this.mSlop);\n                this.mDelegateView = delegateView;\n            }\n            onTouchEvent(event) {\n                let x = event.getX();\n                let y = event.getY();\n                let sendToDelegate = false;\n                let hit = true;\n                let handled = false;\n                switch (event.getAction()) {\n                    case view.MotionEvent.ACTION_DOWN:\n                        let bounds = this.mBounds;\n                        if (bounds.contains(x, y)) {\n                            this.mDelegateTargeted = true;\n                            sendToDelegate = true;\n                        }\n                        break;\n                    case view.MotionEvent.ACTION_UP:\n                    case view.MotionEvent.ACTION_MOVE:\n                        sendToDelegate = this.mDelegateTargeted;\n                        if (sendToDelegate) {\n                            let slopBounds = this.mSlopBounds;\n                            if (!slopBounds.contains(x, y)) {\n                                hit = false;\n                            }\n                        }\n                        break;\n                    case view.MotionEvent.ACTION_CANCEL:\n                        sendToDelegate = this.mDelegateTargeted;\n                        this.mDelegateTargeted = false;\n                        break;\n                }\n                if (sendToDelegate) {\n                    let delegateView = this.mDelegateView;\n                    if (hit) {\n                        event.setLocation(delegateView.getWidth() / 2, delegateView.getHeight() / 2);\n                    }\n                    else {\n                        let slop = this.mSlop;\n                        event.setLocation(-(slop * 2), -(slop * 2));\n                    }\n                    handled = delegateView.dispatchTouchEvent(event);\n                }\n                return handled;\n            }\n        }\n        view.TouchDelegate = TouchDelegate;\n    })(view = android.view || (android.view = {}));\n})(android || (android = {}));\nvar android;\n(function (android) {\n    var util;\n    (function (util) {\n        class Pools {\n        }\n        util.Pools = Pools;\n        (function (Pools) {\n            class SimplePool {\n                constructor(maxPoolSize) {\n                    this.mPoolSize = 0;\n                    if (maxPoolSize <= 0) {\n                        throw new Error(\"The max pool size must be > 0\");\n                    }\n                    this.mPool = new Array(maxPoolSize);\n                }\n                acquire() {\n                    if (this.mPoolSize > 0) {\n                        const lastPooledIndex = this.mPoolSize - 1;\n                        let instance = this.mPool[lastPooledIndex];\n                        this.mPool[lastPooledIndex] = null;\n                        this.mPoolSize--;\n                        return instance;\n                    }\n                    return null;\n                }\n                release(instance) {\n                    if (this.isInPool(instance)) {\n                        throw new Error(\"Already in the pool!\");\n                    }\n                    if (this.mPoolSize < this.mPool.length) {\n                        this.mPool[this.mPoolSize] = instance;\n                        this.mPoolSize++;\n                        return true;\n                    }\n                    return false;\n                }\n                isInPool(instance) {\n                    for (let i = 0; i < this.mPoolSize; i++) {\n                        if (this.mPool[i] == instance) {\n                            return true;\n                        }\n                    }\n                    return false;\n                }\n            }\n            Pools.SimplePool = SimplePool;\n            class SynchronizedPool extends SimplePool {\n            }\n            Pools.SynchronizedPool = SynchronizedPool;\n        })(Pools = util.Pools || (util.Pools = {}));\n    })(util = android.util || (android.util = {}));\n})(android || (android = {}));\nvar android;\n(function (android) {\n    var os;\n    (function (os) {\n        class SystemClock {\n            static uptimeMillis() {\n                return new Date().getTime();\n            }\n        }\n        os.SystemClock = SystemClock;\n    })(os = android.os || (android.os = {}));\n})(android || (android = {}));\n/**\n * Created by linfaxin on 15/10/5.\n */\n///<reference path=\"Handler.ts\"/>\n///<reference path=\"../../java/lang/Runnable.ts\"/>\n///<reference path=\"../../java/lang/StringBuilder.ts\"/>\n///<reference path=\"../util/Pools.ts\"/>\n///<reference path=\"SystemClock.ts\"/>\nvar android;\n(function (android) {\n    var os;\n    (function (os) {\n        var StringBuilder = java.lang.StringBuilder;\n        var Pools = android.util.Pools;\n        class Message {\n            constructor() {\n                this.what = 0;\n                this.arg1 = 0;\n                this.arg2 = 0;\n                this.when = 0;\n            }\n            recycle() {\n                this.clearForRecycle();\n                Message.sPool.release(this);\n            }\n            copyFrom(o) {\n                this.what = o.what;\n                this.arg1 = o.arg1;\n                this.arg2 = o.arg2;\n                this.obj = o.obj;\n            }\n            sendToTarget() {\n                this.target.sendMessage(this);\n            }\n            clearForRecycle() {\n                this.what = 0;\n                this.arg1 = 0;\n                this.arg2 = 0;\n                this.obj = null;\n                this.when = 0;\n                this.target = null;\n                this.callback = null;\n            }\n            toString(now = os.SystemClock.uptimeMillis()) {\n                let b = new StringBuilder();\n                b.append(\"{ what=\");\n                b.append(this.what);\n                b.append(\" when=\");\n                b.append(this.when - now).append(\"ms\");\n                if (this.arg1 != 0) {\n                    b.append(\" arg1=\");\n                    b.append(this.arg1);\n                }\n                if (this.arg2 != 0) {\n                    b.append(\" arg2=\");\n                    b.append(this.arg2);\n                }\n                if (this.obj != null) {\n                    b.append(\" obj=\");\n                    b.append(this.obj);\n                }\n                b.append(\" }\");\n                return b.toString();\n            }\n            static obtain(...args) {\n                let m = Message.sPool.acquire();\n                m = m || new Message();\n                if (args.length === 1 && args[0] instanceof Message) {\n                    let orig = args[0];\n                    [m.target, m.what, m.arg1, m.arg2, m.obj, m.callback] =\n                        [orig.target, orig.what, orig.arg1, orig.arg2, orig.obj, orig.callback];\n                }\n                else if (args.length === 2) {\n                    [m.what = 0, m.callback] = args;\n                }\n                else if (args.length === 3) {\n                    [m.what = 0, m.arg1 = 0, m.obj] = args;\n                }\n                else {\n                    [m.target, m.what = 0, m.arg1 = 0, m.arg2 = 0, m.obj, m.callback] = args;\n                }\n                return m;\n            }\n        }\n        Message.sPool = new Pools.SynchronizedPool(10);\n        os.Message = Message;\n    })(os = android.os || (android.os = {}));\n})(android || (android = {}));\n/**\n * Created by linfaxin on 15/10/5.\n */\n///<reference path=\"Message.ts\"/>\n///<reference path=\"Handler.ts\"/>\n///<reference path=\"../../java/lang/Runnable.ts\"/>\nvar android;\n(function (android) {\n    var os;\n    (function (os) {\n        class MessageQueue {\n            constructor() {\n                this.messages = new Map();\n            }\n            getMessages(h, args, object) {\n                let msgs = [];\n                if (h == null) {\n                    return msgs;\n                }\n                if (typeof args === \"number\") {\n                    let what = args;\n                    for (let p of this.messages.keys()) {\n                        if (p.target == h && p.what == what && (object == null || p.obj == object)) {\n                            msgs.push(p);\n                        }\n                    }\n                }\n                else {\n                    let r = args;\n                    for (let p of this.messages.keys()) {\n                        if (p.target == h && p.callback == r && (object == null || p.obj == object)) {\n                            msgs.push(p);\n                        }\n                    }\n                }\n                return msgs;\n            }\n            hasMessages(h, args, object) {\n                return this.getMessages(h, args, object).length > 0;\n            }\n            addMessage(handler, msg, delayHandleID) {\n                this.messages.set(msg, delayHandleID);\n            }\n            recycleMessage(handler, message) {\n                try {\n                    message.recycle();\n                }\n                catch (e) {\n                }\n                let oldId = this.messages.get(message);\n                if (oldId !== undefined) {\n                    if (oldId > 0)\n                        clearTimeout(oldId);\n                    else if (oldId < 0)\n                        cancelAnimationFrame(-oldId);\n                    this.messages.delete(message);\n                }\n            }\n            removeMessages(h, args, object) {\n                let p = this.getMessages(h, args, object);\n                if (p && p.length > 0) {\n                    p.forEach((item) => this.recycleMessage(h, item));\n                }\n            }\n            removeCallbacksAndMessages(h, object) {\n                if (h == null) {\n                    return;\n                }\n                for (let p of this.messages.keys()) {\n                    if (p != null && p.target == h && (object == null || p.obj == object)) {\n                        this.recycleMessage(h, p);\n                    }\n                }\n            }\n        }\n        os.MessageQueue = MessageQueue;\n    })(os = android.os || (android.os = {}));\n})(android || (android = {}));\n/**\n * Created by linfaxin on 15/10/5.\n */\n///<reference path=\"Message.ts\"/>\n///<reference path=\"MessageQueue.ts\"/>\n///<reference path=\"../../java/lang/Runnable.ts\"/>\n///<reference path=\"SystemClock.ts\"/>\nvar android;\n(function (android) {\n    var os;\n    (function (os) {\n        class Handler {\n            constructor(mCallback) {\n                this.mQueue = new os.MessageQueue();\n                this.mCallback = mCallback;\n            }\n            handleMessage(msg) {\n            }\n            dispatchMessage(msg) {\n                if (msg.callback != null) {\n                    msg.callback.run.call(msg.callback);\n                }\n                else {\n                    if (this.mCallback != null) {\n                        if (this.mCallback.handleMessage(msg)) {\n                            return;\n                        }\n                    }\n                    this.handleMessage(msg);\n                }\n            }\n            obtainMessage(...args) {\n                if (args.length === 2) {\n                    let [what, obj] = args;\n                    return os.Message.obtain(this, what, obj);\n                }\n                else {\n                    let [what, arg1, arg2, obj] = args;\n                    return os.Message.obtain(this, what, arg1, arg2, obj);\n                }\n            }\n            post(r) {\n                return this.sendMessageDelayed(Handler.getPostMessage(r), 0);\n            }\n            postAtTime(...args) {\n                if (args.length === 2) {\n                    let [r, uptimeMillis] = args;\n                    return this.sendMessageAtTime(Handler.getPostMessage(r), uptimeMillis);\n                }\n                else {\n                    let [r, token, uptimeMillis] = args;\n                    return this.sendMessageAtTime(Handler.getPostMessage(r, token), uptimeMillis);\n                }\n            }\n            postDelayed(r, delayMillis) {\n                return this.sendMessageDelayed(Handler.getPostMessage(r), delayMillis);\n            }\n            postAtFrontOfQueue(r) {\n                return this.post(r);\n            }\n            removeCallbacks(r, token) {\n                this.mQueue.removeMessages(this, r, token);\n            }\n            sendMessage(msg) {\n                return this.sendMessageDelayed(msg, 0);\n            }\n            sendEmptyMessage(what) {\n                return this.sendEmptyMessageDelayed(what, 0);\n            }\n            sendEmptyMessageDelayed(what, delayMillis) {\n                let msg = os.Message.obtain();\n                msg.what = what;\n                return this.sendMessageDelayed(msg, delayMillis);\n            }\n            sendEmptyMessageAtTime(what, uptimeMillis) {\n                let msg = os.Message.obtain();\n                msg.what = what;\n                return this.sendMessageAtTime(msg, uptimeMillis);\n            }\n            sendMessageDelayed(msg, delayMillis) {\n                if (delayMillis < 0) {\n                    delayMillis = 0;\n                }\n                msg.target = this;\n                let func = () => {\n                    this.dispatchMessage(msg);\n                    this.mQueue.recycleMessage(this, msg);\n                };\n                if (delayMillis <= 17) {\n                    var id = -requestAnimationFrame(func);\n                }\n                else {\n                    var id = setTimeout(func, delayMillis);\n                }\n                this.mQueue.addMessage(this, msg, id);\n                return true;\n            }\n            sendMessageAtTime(msg, uptimeMillis) {\n                return this.sendMessageDelayed(msg, uptimeMillis - os.SystemClock.uptimeMillis());\n            }\n            sendMessageAtFrontOfQueue(msg) {\n                return this.sendMessage(msg);\n            }\n            removeMessages(what, object) {\n                this.mQueue.removeMessages(this, what, object);\n            }\n            removeCallbacksAndMessages(token) {\n                this.mQueue.removeCallbacksAndMessages(this, token);\n            }\n            hasMessages(what, object) {\n                return this.mQueue.hasMessages(this, what, object);\n            }\n            static getPostMessage(r, token) {\n                let m = os.Message.obtain();\n                m.obj = token;\n                m.callback = r;\n                return m;\n            }\n        }\n        os.Handler = Handler;\n    })(os = android.os || (android.os = {}));\n})(android || (android = {}));\nvar android;\n(function (android) {\n    var graphics;\n    (function (graphics) {\n        class Color {\n            static alpha(color) {\n                return color >>> 24;\n            }\n            static red(color) {\n                return (color >> 16) & 0xFF;\n            }\n            static green(color) {\n                return (color >> 8) & 0xFF;\n            }\n            static blue(color) {\n                return color & 0xFF;\n            }\n            static rgb(red, green, blue) {\n                return (0xFF << 24) | (red << 16) | (green << 8) | blue;\n            }\n            static argb(alpha, red, green, blue) {\n                return (alpha << 24) | (red << 16) | (green << 8) | blue;\n            }\n            static parseColor(colorString) {\n                if (colorString.charAt(0) == '#') {\n                    let color = parseInt(colorString.substring(1), 16);\n                    if (colorString.length == 7) {\n                        color |= 0x00000000ff000000;\n                    }\n                    else if (colorString.length != 9) {\n                        throw new Error(\"Unknown color\");\n                    }\n                    return color;\n                }\n                else {\n                    let color = Color.sColorNameMap.get(colorString.toLowerCase());\n                    if (color != null) {\n                        return color;\n                    }\n                }\n                throw new Error(\"Unknown color\");\n            }\n            static getHtmlColor(color) {\n                let i = Color.sColorNameMap.get(color.toLowerCase());\n                return i;\n            }\n        }\n        Color.BLACK = 0xFF000000;\n        Color.DKGRAY = 0xFF444444;\n        Color.GRAY = 0xFF888888;\n        Color.LTGRAY = 0xFFCCCCCC;\n        Color.WHITE = 0xFFFFFFFF;\n        Color.RED = 0xFFFF0000;\n        Color.GREEN = 0xFF00FF00;\n        Color.BLUE = 0xFF0000FF;\n        Color.YELLOW = 0xFFFFFF00;\n        Color.CYAN = 0xFF00FFFF;\n        Color.MAGENTA = 0xFFFF00FF;\n        Color.TRANSPARENT = 0;\n        Color.sColorNameMap = new Map();\n        graphics.Color = Color;\n        Color.sColorNameMap = new Map();\n        Color.sColorNameMap.set(\"black\", Color.BLACK);\n        Color.sColorNameMap.set(\"darkgray\", Color.DKGRAY);\n        Color.sColorNameMap.set(\"gray\", Color.GRAY);\n        Color.sColorNameMap.set(\"lightgray\", Color.LTGRAY);\n        Color.sColorNameMap.set(\"white\", Color.WHITE);\n        Color.sColorNameMap.set(\"red\", Color.RED);\n        Color.sColorNameMap.set(\"green\", Color.GREEN);\n        Color.sColorNameMap.set(\"blue\", Color.BLUE);\n        Color.sColorNameMap.set(\"yellow\", Color.YELLOW);\n        Color.sColorNameMap.set(\"cyan\", Color.CYAN);\n        Color.sColorNameMap.set(\"magenta\", Color.MAGENTA);\n        Color.sColorNameMap.set(\"aqua\", 0xFF00FFFF);\n        Color.sColorNameMap.set(\"fuchsia\", 0xFFFF00FF);\n        Color.sColorNameMap.set(\"darkgrey\", Color.DKGRAY);\n        Color.sColorNameMap.set(\"grey\", Color.GRAY);\n        Color.sColorNameMap.set(\"lightgrey\", Color.LTGRAY);\n        Color.sColorNameMap.set(\"lime\", 0xFF00FF00);\n        Color.sColorNameMap.set(\"maroon\", 0xFF800000);\n        Color.sColorNameMap.set(\"navy\", 0xFF000080);\n        Color.sColorNameMap.set(\"olive\", 0xFF808000);\n        Color.sColorNameMap.set(\"purple\", 0xFF800080);\n        Color.sColorNameMap.set(\"silver\", 0xFFC0C0C0);\n        Color.sColorNameMap.set(\"teal\", 0xFF008080);\n    })(graphics = android.graphics || (android.graphics = {}));\n})(android || (android = {}));\n///<reference path=\"../util/Pools.ts\"/>\n///<reference path=\"../util/Log.ts\"/>\n///<reference path=\"Rect.ts\"/>\n///<reference path=\"Color.ts\"/>\nvar android;\n(function (android) {\n    var graphics;\n    (function (graphics) {\n        var Pools = android.util.Pools;\n        var Rect = android.graphics.Rect;\n        var Color = android.graphics.Color;\n        class Canvas {\n            constructor(...args) {\n                this._saveCount = 0;\n                this.shouldDoRectBeforeRestoreMap = new Map();\n                this.mClipStateMap = new Map();\n                this.mCanvasElement = args.length === 1 ? args[0] : document.createElement(\"canvas\");\n                if (args.length === 1) {\n                    this.mCanvasElement = args[0];\n                }\n                else if (args.length === 2) {\n                    this.mCanvasElement = document.createElement(\"canvas\");\n                    this.mCanvasElement.width = args[0];\n                    this.mCanvasElement.height = args[1];\n                }\n                this.init();\n            }\n            init() {\n                this._mCanvasContent = this.mCanvasElement.getContext(\"2d\");\n                this.mCurrentClip = new Rect(0, 0, this.mCanvasElement.width, this.mCanvasElement.height);\n                this._saveCount = 0;\n                this.fullRectForClip();\n                this._mCanvasContent.clip();\n                this.save();\n            }\n            get canvasElement() {\n                return this.mCanvasElement;\n            }\n            getHeight() {\n                return this.mCanvasElement.height;\n            }\n            getWidth() {\n                return this.mCanvasElement.width;\n            }\n            translate(dx, dy) {\n                if (this.mCurrentClip)\n                    this.mCurrentClip.offset(-dx, -dy);\n                this._mCanvasContent.translate(dx, dy);\n            }\n            scale(sx, sy, px, py) {\n                if (px && py)\n                    this.translate(px, py);\n                this._mCanvasContent.scale(sx, sy);\n                if (px && py)\n                    this.translate(-px, -py);\n            }\n            rotate(degrees, px, py) {\n                if (px && py)\n                    this.translate(px, py);\n                this._mCanvasContent.rotate(degrees);\n                if (px && py)\n                    this.translate(-px, -py);\n            }\n            drawRGB(r, g, b) {\n                this._mCanvasContent.fillStyle = `rgb(${r},${g},${b})`;\n                this._mCanvasContent.fillRect(this.mCurrentClip.left, this.mCurrentClip.top, this.mCurrentClip.width(), this.mCurrentClip.height());\n            }\n            drawARGB(a, r, g, b) {\n                this._mCanvasContent.fillStyle = `rgba(${r},${g},${b},${a})`;\n                this._mCanvasContent.fillRect(this.mCurrentClip.left, this.mCurrentClip.top, this.mCurrentClip.width(), this.mCurrentClip.height());\n            }\n            drawColor(color) {\n                this.drawARGB(Color.alpha(color), Color.red(color), Color.green(color), Color.blue(color));\n            }\n            clearColor() {\n                this._mCanvasContent.clearRect(this.mCurrentClip.left, this.mCurrentClip.top, this.mCurrentClip.width(), this.mCurrentClip.height());\n            }\n            save() {\n                this._mCanvasContent.save();\n                if (this.mCurrentClip)\n                    this.mClipStateMap.set(this._saveCount, new Rect(this.mCurrentClip));\n                this._saveCount++;\n                return this._saveCount;\n            }\n            restore() {\n                let doRects = this.shouldDoRectBeforeRestoreMap.get(this._saveCount);\n                if (doRects && doRects.length > 0) {\n                    doRects.forEach((rect) => {\n                        this._mCanvasContent.rect(rect.left, rect.top, rect.width(), rect.height());\n                    });\n                    if (doRects.length % 2 == 1) {\n                        this.fullRectForClip();\n                    }\n                    this.shouldDoRectBeforeRestoreMap.delete(this._saveCount);\n                }\n                this._saveCount--;\n                this._mCanvasContent.restore();\n                let savedClip = this.mClipStateMap.get(this._saveCount);\n                if (savedClip) {\n                    this.mClipStateMap.delete(this._saveCount);\n                    this.mCurrentClip.set(savedClip);\n                }\n            }\n            restoreToCount(saveCount) {\n                if (saveCount <= 0)\n                    throw Error('saveCount can\\'t <= 0');\n                while (saveCount <= this._saveCount) {\n                    this.restore();\n                }\n            }\n            getSaveCount() {\n                return this._saveCount;\n            }\n            fullRectForClip() {\n                this._mCanvasContent.rect(Canvas.FullRect.left, Canvas.FullRect.top, Canvas.FullRect.width(), Canvas.FullRect.height());\n            }\n            clipRect(...args) {\n                let rect = new Rect();\n                if (args.length === 1) {\n                    rect.set(args[0]);\n                }\n                else {\n                    let [left = 0, top = 0, right = 0, bottom = 0] = args;\n                    rect.set(left, top, right, bottom);\n                }\n                this._mCanvasContent.rect(Math.floor(rect.left), Math.floor(rect.top), Math.ceil(rect.width()), Math.ceil(rect.height()));\n                this.fullRectForClip();\n                this._mCanvasContent.clip('evenodd');\n                let doRects = this.shouldDoRectBeforeRestoreMap.get(this._saveCount);\n                if (!doRects) {\n                    doRects = [];\n                    this.shouldDoRectBeforeRestoreMap.set(this._saveCount, doRects);\n                }\n                doRects.push(rect);\n                this.mCurrentClip.intersect(rect);\n                return rect.isEmpty();\n            }\n            getClipBounds(bounds) {\n                if (!this.mCurrentClip)\n                    this.mCurrentClip = new Rect();\n                let rect = bounds || new Rect();\n                rect.set(this.mCurrentClip);\n                return rect;\n            }\n            quickReject(...args) {\n                if (!this.mCurrentClip)\n                    return false;\n                if (args.length == 1) {\n                    return !this.mCurrentClip.intersects(args[0]);\n                }\n                else {\n                    let [left = 0, t = 0, right = 0, bottom = 0] = args;\n                    return !this.mCurrentClip.intersects(left, t, right, bottom);\n                }\n            }\n            drawCanvas(canvas, offsetX, offsetY, width, height, canvasOffsetX, canvasOffsetY, canvasImageWidth, canvasImageHeight) {\n                this._mCanvasContent.drawImage(canvas.canvasElement, offsetX, offsetY, width, height, canvasOffsetX, canvasOffsetY, canvasImageWidth, canvasImageHeight);\n            }\n        }\n        Canvas.FullRect = new Rect(-10000, -10000, 10000, 10000);\n        Canvas.sPool = new Pools.SynchronizedPool(10);\n        graphics.Canvas = Canvas;\n    })(graphics = android.graphics || (android.graphics = {}));\n})(android || (android = {}));\n/**\n * Created by linfaxin on 15/9/27.\n */\n///<reference path=\"../util/SparseArray.ts\"/>\n///<reference path=\"../util/Log.ts\"/>\n///<reference path=\"../graphics/drawable/Drawable.ts\"/>\n///<reference path=\"../graphics/PixelFormat.ts\"/>\n///<reference path=\"../graphics/Matrix.ts\"/>\n///<reference path=\"../../java/lang/StringBuilder.ts\"/>\n///<reference path=\"../../java/lang/Runnable.ts\"/>\n///<reference path=\"../../java/lang/util/concurrent/CopyOnWriteArrayList.ts\"/>\n///<reference path=\"ViewRootImpl.ts\"/>\n///<reference path=\"ViewParent.ts\"/>\n///<reference path=\"ViewGroup.ts\"/>\n///<reference path=\"ViewOverlay.ts\"/>\n///<reference path=\"ViewTreeObserver.ts\"/>\n///<reference path=\"MotionEvent.ts\"/>\n///<reference path=\"TouchDelegate.ts\"/>\n///<reference path=\"../os/Handler.ts\"/>\n///<reference path=\"../os/SystemClock.ts\"/>\n///<reference path=\"../content/res/Resources.ts\"/>\n///<reference path=\"../graphics/Rect.ts\"/>\n///<reference path=\"../graphics/Canvas.ts\"/>\n///<reference path=\"../util/Pools.ts\"/>\nvar android;\n(function (android) {\n    var view;\n    (function (view_1) {\n        var SparseArray = android.util.SparseArray;\n        var PixelFormat = android.graphics.PixelFormat;\n        var Matrix = android.graphics.Matrix;\n        var StringBuilder = java.lang.StringBuilder;\n        var SystemClock = android.os.SystemClock;\n        var Log = android.util.Log;\n        var Rect = android.graphics.Rect;\n        var Resources = android.content.res.Resources;\n        var Pools = android.util.Pools;\n        class View {\n            constructor() {\n                this.mPrivateFlags = 0;\n                this.mPrivateFlags2 = 0;\n                this.mPrivateFlags3 = 0;\n                this.mOldWidthMeasureSpec = Number.MIN_SAFE_INTEGER;\n                this.mOldHeightMeasureSpec = Number.MIN_SAFE_INTEGER;\n                this.mMeasuredWidth = 0;\n                this.mMeasuredHeight = 0;\n                this.mBackgroundSizeChanged = false;\n                this.mHasPerformedLongPress = false;\n                this.mMinWidth = 0;\n                this.mMinHeight = 0;\n                this.mTouchSlop = 0;\n                this.mVerticalScrollFactor = 0;\n                this.mOverScrollMode = 0;\n                this.mViewFlags = 0;\n                this.mLayerType = View.LAYER_TYPE_NONE;\n                this.mWindowAttachCount = 0;\n                this.mLastIsOpaque = false;\n                this.mLeft = 0;\n                this.mRight = 0;\n                this.mTop = 0;\n                this.mBottom = 0;\n                this._mScrollX = 0;\n                this._mScrollY = 0;\n                this.mPaddingLeft = 0;\n                this.mPaddingRight = 0;\n                this.mPaddingTop = 0;\n                this.mPaddingBottom = 0;\n                this.mTouchSlop = view_1.ViewConfiguration.get().getScaledTouchSlop();\n            }\n            get mScrollX() {\n                return this._mScrollX;\n            }\n            set mScrollX(value) {\n                this._mScrollX = value;\n                Array.from(this.bindElement.children).forEach((item) => {\n                    if (item == this.bindScrollContent)\n                        return;\n                    if (value != 0)\n                        item.style.marginLeft = -value + 'px';\n                    else\n                        item.style.marginLeft = \"\";\n                });\n                this.bindElement.scrollLeft = value;\n            }\n            get mScrollY() {\n                return this._mScrollY;\n            }\n            set mScrollY(value) {\n                this._mScrollY = value;\n                Array.from(this.bindElement.children).forEach((item) => {\n                    if (item == this.bindScrollContent)\n                        return;\n                    if (value != 0)\n                        item.style.marginTop = -value + 'px';\n                    else\n                        item.style.marginTop = \"\";\n                });\n                this.bindElement.scrollTop = value;\n            }\n            getWidth() {\n                return this.mRight - this.mLeft;\n            }\n            getHeight() {\n                return this.mBottom - this.mTop;\n            }\n            getTop() {\n                return this.mTop;\n            }\n            setTop(top) {\n                if (top != this.mTop) {\n                    if (this.mAttachInfo != null) {\n                        let minTop;\n                        let yLoc;\n                        if (top < this.mTop) {\n                            minTop = top;\n                            yLoc = top - this.mTop;\n                        }\n                        else {\n                            minTop = this.mTop;\n                            yLoc = 0;\n                        }\n                        this.invalidate(0, yLoc, this.mRight - this.mLeft, this.mBottom - minTop);\n                    }\n                    let width = this.mRight - this.mLeft;\n                    let oldHeight = this.mBottom - this.mTop;\n                    this.mTop = top;\n                    this.sizeChange(width, this.mBottom - this.mTop, width, oldHeight);\n                    this.mBackgroundSizeChanged = true;\n                }\n            }\n            getBottom() {\n                return this.mBottom;\n            }\n            setBottom(bottom) {\n                if (bottom != this.mBottom) {\n                    if (this.mAttachInfo != null) {\n                        let maxBottom;\n                        if (bottom < this.mBottom) {\n                            maxBottom = this.mBottom;\n                        }\n                        else {\n                            maxBottom = bottom;\n                        }\n                        this.invalidate(0, 0, this.mRight - this.mLeft, maxBottom - this.mTop);\n                    }\n                    let width = this.mRight - this.mLeft;\n                    let oldHeight = this.mBottom - this.mTop;\n                    this.mBottom = bottom;\n                    this.sizeChange(width, this.mBottom - this.mTop, width, oldHeight);\n                    this.mBackgroundSizeChanged = true;\n                }\n            }\n            getLeft() {\n                return this.mLeft;\n            }\n            setLeft(left) {\n                if (left != this.mLeft) {\n                    if (this.mAttachInfo != null) {\n                        let minLeft;\n                        let xLoc;\n                        if (left < this.mLeft) {\n                            minLeft = left;\n                            xLoc = left - this.mLeft;\n                        }\n                        else {\n                            minLeft = this.mLeft;\n                            xLoc = 0;\n                        }\n                        this.invalidate(xLoc, 0, this.mRight - minLeft, this.mBottom - this.mTop);\n                    }\n                    let oldWidth = this.mRight - this.mLeft;\n                    let height = this.mBottom - this.mTop;\n                    this.mLeft = left;\n                    this.sizeChange(this.mRight - this.mLeft, height, oldWidth, height);\n                    this.mBackgroundSizeChanged = true;\n                }\n            }\n            getRight() {\n                return this.mRight;\n            }\n            setRight(right) {\n                if (right != this.mRight) {\n                    if (this.mAttachInfo != null) {\n                        let maxRight;\n                        if (right < this.mRight) {\n                            maxRight = this.mRight;\n                        }\n                        else {\n                            maxRight = right;\n                        }\n                        this.invalidate(0, 0, maxRight - this.mLeft, this.mBottom - this.mTop);\n                    }\n                    let oldWidth = this.mRight - this.mLeft;\n                    let height = this.mBottom - this.mTop;\n                    this.mRight = right;\n                    this.sizeChange(this.mRight - this.mLeft, height, oldWidth, height);\n                    this.mBackgroundSizeChanged = true;\n                }\n            }\n            getPaddingLeft() {\n                return this.mPaddingLeft;\n            }\n            getPaddingTop() {\n                return this.mPaddingTop;\n            }\n            getPaddingRight() {\n                return this.mPaddingRight;\n            }\n            getPaddingBottom() {\n                return this.mPaddingBottom;\n            }\n            setPadding(left, top, right, bottom) {\n                let changed = false;\n                if (this.mPaddingLeft != left) {\n                    changed = true;\n                    this.mPaddingLeft = left;\n                }\n                if (this.mPaddingTop != top) {\n                    changed = true;\n                    this.mPaddingTop = top;\n                }\n                if (this.mPaddingRight != right) {\n                    changed = true;\n                    this.mPaddingRight = right;\n                }\n                if (this.mPaddingBottom != bottom) {\n                    changed = true;\n                    this.mPaddingBottom = bottom;\n                }\n                if (changed) {\n                    this.requestLayout();\n                }\n            }\n            setScrollX(value) {\n                this.scrollTo(value, this.mScrollY);\n            }\n            setScrollY(value) {\n                this.scrollTo(this.mScrollX, value);\n            }\n            getScrollX() {\n                return this.mScrollX;\n            }\n            getScrollY() {\n                return this.mScrollY;\n            }\n            getFinalAlpha() {\n                return 1;\n            }\n            getMatrix() {\n                return Matrix.IDENTITY_MATRIX;\n            }\n            hasIdentityMatrix() {\n                return true;\n            }\n            transformRect(rect) {\n                if (!this.getMatrix().isIdentity()) {\n                    let boundingRect = this.mAttachInfo.mTmpTransformRect;\n                    boundingRect.set(rect);\n                    this.getMatrix().mapRect(boundingRect);\n                    rect.set(boundingRect);\n                }\n            }\n            pointInView(localX, localY, slop = 0) {\n                return localX >= -slop && localY >= -slop && localX < ((this.mRight - this.mLeft) + slop) &&\n                    localY < ((this.mBottom - this.mTop) + slop);\n            }\n            getHandler() {\n                let attachInfo = this.mAttachInfo;\n                if (attachInfo != null) {\n                    return attachInfo.mHandler;\n                }\n                return null;\n            }\n            getViewRootImpl() {\n                if (this.mAttachInfo != null) {\n                    return this.mAttachInfo.mViewRootImpl;\n                }\n                return null;\n            }\n            post(action) {\n                let attachInfo = this.mAttachInfo;\n                if (attachInfo != null) {\n                    return attachInfo.mHandler.post(action);\n                }\n                view_1.ViewRootImpl.getRunQueue().post(action);\n                return true;\n            }\n            postDelayed(action, delayMillis) {\n                let attachInfo = this.mAttachInfo;\n                if (attachInfo != null) {\n                    return attachInfo.mHandler.postDelayed(action, delayMillis);\n                }\n                view_1.ViewRootImpl.getRunQueue().postDelayed(action, delayMillis);\n                return true;\n            }\n            postOnAnimation(action) {\n                return this.post(action);\n            }\n            postOnAnimationDelayed(action, delayMillis) {\n                return this.postDelayed(action, delayMillis);\n            }\n            removeCallbacks(action) {\n                if (action != null) {\n                    let attachInfo = this.mAttachInfo;\n                    if (attachInfo != null) {\n                        attachInfo.mHandler.removeCallbacks(action);\n                    }\n                    else {\n                        view_1.ViewRootImpl.getRunQueue().removeCallbacks(action);\n                    }\n                }\n                return true;\n            }\n            getParent() {\n                return this.mParent;\n            }\n            setFlags(flags, mask) {\n                let old = this.mViewFlags;\n                this.mViewFlags = (this.mViewFlags & ~mask) | (flags & mask);\n                let changed = this.mViewFlags ^ old;\n                if (changed == 0) {\n                    return;\n                }\n                let privateFlags = this.mPrivateFlags;\n                const newVisibility = flags & View.VISIBILITY_MASK;\n                if (newVisibility == View.VISIBLE) {\n                    if ((changed & View.VISIBILITY_MASK) != 0) {\n                        this.mPrivateFlags |= View.PFLAG_DRAWN;\n                        this.invalidate(true);\n                        if ((this.mParent != null) && (this.mBottom > this.mTop) && (this.mRight > this.mLeft)) {\n                            this.mParent.focusableViewAvailable(this);\n                        }\n                    }\n                }\n                if ((changed & View.GONE) != 0) {\n                    this.requestLayout();\n                    if (((this.mViewFlags & View.VISIBILITY_MASK) == View.GONE)) {\n                        if (this.hasFocus())\n                            this.clearFocus();\n                        this.destroyDrawingCache();\n                        if (this.mParent instanceof View) {\n                            this.mParent.invalidate(true);\n                        }\n                        this.mPrivateFlags |= View.PFLAG_DRAWN;\n                    }\n                    if (this.mAttachInfo != null) {\n                        this.mAttachInfo.mViewVisibilityChanged = true;\n                    }\n                }\n                if ((changed & View.INVISIBLE) != 0) {\n                    this.mPrivateFlags |= View.PFLAG_DRAWN;\n                    if (((this.mViewFlags & View.VISIBILITY_MASK) == View.INVISIBLE)) {\n                        if (this.getRootView() != this) {\n                            if (this.hasFocus())\n                                this.clearFocus();\n                        }\n                    }\n                    if (this.mAttachInfo != null) {\n                        this.mAttachInfo.mViewVisibilityChanged = true;\n                    }\n                }\n                if ((changed & View.VISIBILITY_MASK) != 0) {\n                    if (newVisibility != View.VISIBLE) {\n                        this.cleanupDraw();\n                    }\n                    if (this.mParent instanceof view_1.ViewGroup) {\n                        this.mParent.onChildVisibilityChanged(this, (changed & View.VISIBILITY_MASK), newVisibility);\n                        this.mParent.invalidate(true);\n                    }\n                    else if (this.mParent != null) {\n                        this.mParent.invalidateChild(this, null);\n                    }\n                    this.dispatchVisibilityChanged(this, newVisibility);\n                }\n                if ((changed & View.WILL_NOT_CACHE_DRAWING) != 0) {\n                    this.destroyDrawingCache();\n                }\n                if ((changed & View.DRAWING_CACHE_ENABLED) != 0) {\n                    this.destroyDrawingCache();\n                    this.mPrivateFlags &= ~View.PFLAG_DRAWING_CACHE_VALID;\n                    this.invalidateParentCaches();\n                }\n                if ((changed & View.DRAW_MASK) != 0) {\n                    if ((this.mViewFlags & View.WILL_NOT_DRAW) != 0) {\n                        if (this.mBackground != null) {\n                            this.mPrivateFlags &= ~View.PFLAG_SKIP_DRAW;\n                            this.mPrivateFlags |= View.PFLAG_ONLY_DRAWS_BACKGROUND;\n                        }\n                        else {\n                            this.mPrivateFlags |= View.PFLAG_SKIP_DRAW;\n                        }\n                    }\n                    else {\n                        this.mPrivateFlags &= ~View.PFLAG_SKIP_DRAW;\n                    }\n                    this.requestLayout();\n                    this.invalidate(true);\n                }\n            }\n            bringToFront() {\n                if (this.mParent != null) {\n                    this.mParent.bringChildToFront(this);\n                }\n            }\n            onScrollChanged(l, t, oldl, oldt) {\n                this.mBackgroundSizeChanged = true;\n                let ai = this.mAttachInfo;\n                if (ai != null) {\n                    ai.mViewScrollChanged = true;\n                }\n            }\n            onSizeChanged(w, h, oldw, oldh) {\n            }\n            getListenerInfo() {\n                if (this.mListenerInfo != null) {\n                    return this.mListenerInfo;\n                }\n                this.mListenerInfo = new View.ListenerInfo();\n                return this.mListenerInfo;\n            }\n            isFocusable() {\n                return View.FOCUSABLE == (this.mViewFlags & View.FOCUSABLE_MASK);\n            }\n            isFocusableInTouchMode() {\n                return View.FOCUSABLE_IN_TOUCH_MODE == (this.mViewFlags & View.FOCUSABLE_IN_TOUCH_MODE);\n            }\n            hasFocus() {\n                return (this.mPrivateFlags & View.PFLAG_FOCUSED) != 0;\n            }\n            hasFocusable() {\n                return (this.mViewFlags & View.VISIBILITY_MASK) == View.VISIBLE && this.isFocusable();\n            }\n            clearFocus() {\n            }\n            findFocus() {\n                return (this.mPrivateFlags & View.PFLAG_FOCUSED) != 0 ? this : null;\n            }\n            isFocused() {\n                return (this.mPrivateFlags & View.PFLAG_FOCUSED) != 0;\n            }\n            getVisibility() {\n                return this.mViewFlags & View.VISIBILITY_MASK;\n            }\n            setVisibility(visibility) {\n                this.setFlags(visibility, View.VISIBILITY_MASK);\n                if (this.mBackground != null)\n                    this.mBackground.setVisible(visibility == View.VISIBLE, false);\n            }\n            dispatchVisibilityChanged(changedView, visibility) {\n                this.onVisibilityChanged(changedView, visibility);\n            }\n            onVisibilityChanged(changedView, visibility) {\n                if (visibility == View.VISIBLE) {\n                    if (this.mAttachInfo != null) {\n                    }\n                    else {\n                        this.mPrivateFlags |= View.PFLAG_AWAKEN_SCROLL_BARS_ON_ATTACH;\n                    }\n                }\n            }\n            isEnabled() {\n                return (this.mViewFlags & View.ENABLED_MASK) == View.ENABLED;\n            }\n            setEnabled(enabled) {\n                if (enabled == this.isEnabled())\n                    return;\n                this.setFlags(enabled ? View.ENABLED : View.DISABLED, View.ENABLED_MASK);\n                this.refreshDrawableState();\n                this.invalidate(true);\n            }\n            resetPressedState() {\n                if ((this.mViewFlags & View.ENABLED_MASK) == View.DISABLED) {\n                    return;\n                }\n                if (this.isPressed()) {\n                    this.setPressed(false);\n                    if (!this.mHasPerformedLongPress) {\n                        this.removeLongPressCallback();\n                    }\n                }\n            }\n            dispatchTouchEvent(event) {\n                if (this.onFilterTouchEventForSecurity(event)) {\n                    let li = this.mListenerInfo;\n                    if (li != null && li.mOnTouchListener != null && (this.mViewFlags & View.ENABLED_MASK) == View.ENABLED\n                        && li.mOnTouchListener.onTouch(this, event)) {\n                        return true;\n                    }\n                    if (this.onTouchEvent(event)) {\n                        return true;\n                    }\n                }\n                return false;\n            }\n            onFilterTouchEventForSecurity(event) {\n                return true;\n            }\n            onTouchEvent(event) {\n                let viewFlags = this.mViewFlags;\n                if ((viewFlags & View.ENABLED_MASK) == View.DISABLED) {\n                    if (event.getAction() == view_1.MotionEvent.ACTION_UP && (this.mPrivateFlags & View.PFLAG_PRESSED) != 0) {\n                        this.setPressed(false);\n                    }\n                    return (((viewFlags & View.CLICKABLE) == View.CLICKABLE ||\n                        (viewFlags & View.LONG_CLICKABLE) == View.LONG_CLICKABLE));\n                }\n                if (this.mTouchDelegate != null) {\n                    if (this.mTouchDelegate.onTouchEvent(event)) {\n                        return true;\n                    }\n                }\n                if (((viewFlags & View.CLICKABLE) == View.CLICKABLE ||\n                    (viewFlags & View.LONG_CLICKABLE) == View.LONG_CLICKABLE)) {\n                    switch (event.getAction()) {\n                        case view_1.MotionEvent.ACTION_UP:\n                            let prepressed = (this.mPrivateFlags & View.PFLAG_PREPRESSED) != 0;\n                            if ((this.mPrivateFlags & View.PFLAG_PRESSED) != 0 || prepressed) {\n                                let focusTaken = false;\n                                if (prepressed) {\n                                    this.setPressed(true);\n                                }\n                                if (!this.mHasPerformedLongPress) {\n                                    this.removeLongPressCallback();\n                                    if (!focusTaken) {\n                                        if (this.mPerformClick == null) {\n                                            this.mPerformClick = new PerformClick(this);\n                                        }\n                                        if (!this.post(this.mPerformClick)) {\n                                            this.performClick();\n                                        }\n                                    }\n                                }\n                                if (this.mUnsetPressedState == null) {\n                                    this.mUnsetPressedState = new UnsetPressedState(this);\n                                }\n                                if (prepressed) {\n                                    this.postDelayed(this.mUnsetPressedState, view_1.ViewConfiguration.getPressedStateDuration());\n                                }\n                                else if (!this.post(this.mUnsetPressedState)) {\n                                    this.mUnsetPressedState.run();\n                                }\n                                this.removeTapCallback();\n                            }\n                            break;\n                        case view_1.MotionEvent.ACTION_DOWN:\n                            this.mHasPerformedLongPress = false;\n                            let isInScrollingContainer = this.isInScrollingContainer();\n                            if (isInScrollingContainer) {\n                                this.mPrivateFlags |= View.PFLAG_PREPRESSED;\n                                if (this.mPendingCheckForTap == null) {\n                                    this.mPendingCheckForTap = new CheckForTap(this);\n                                }\n                                this.postDelayed(this.mPendingCheckForTap, view_1.ViewConfiguration.getTapTimeout());\n                            }\n                            else {\n                                this.setPressed(true);\n                                this.checkForLongClick(0);\n                            }\n                            break;\n                        case view_1.MotionEvent.ACTION_CANCEL:\n                            this.setPressed(false);\n                            this.removeTapCallback();\n                            this.removeLongPressCallback();\n                            break;\n                        case view_1.MotionEvent.ACTION_MOVE:\n                            const x = event.getX();\n                            const y = event.getY();\n                            if (!this.pointInView(x, y, this.mTouchSlop)) {\n                                this.removeTapCallback();\n                                if ((this.mPrivateFlags & View.PFLAG_PRESSED) != 0) {\n                                    this.removeLongPressCallback();\n                                    this.setPressed(false);\n                                }\n                            }\n                            break;\n                    }\n                    return true;\n                }\n                return false;\n            }\n            isInScrollingContainer() {\n                let p = this.getParent();\n                while (p != null && p instanceof view_1.ViewGroup) {\n                    if (p.shouldDelayChildPressedState()) {\n                        return true;\n                    }\n                    p = p.getParent();\n                }\n                return false;\n            }\n            removeLongPressCallback() {\n                if (this.mPendingCheckForLongPress != null) {\n                    this.removeCallbacks(this.mPendingCheckForLongPress);\n                }\n            }\n            removePerformClickCallback() {\n                if (this.mPerformClick != null) {\n                    this.removeCallbacks(this.mPerformClick);\n                }\n            }\n            removeUnsetPressCallback() {\n                if ((this.mPrivateFlags & View.PFLAG_PRESSED) != 0 && this.mUnsetPressedState != null) {\n                    this.setPressed(false);\n                    this.removeCallbacks(this.mUnsetPressedState);\n                }\n            }\n            removeTapCallback() {\n                if (this.mPendingCheckForTap != null) {\n                    this.mPrivateFlags &= ~View.PFLAG_PREPRESSED;\n                    this.removeCallbacks(this.mPendingCheckForTap);\n                }\n            }\n            cancelLongPress() {\n                this.removeLongPressCallback();\n                this.removeTapCallback();\n            }\n            setTouchDelegate(delegate) {\n                this.mTouchDelegate = delegate;\n            }\n            getTouchDelegate() {\n                return this.mTouchDelegate;\n            }\n            setOnLongClickListener(l) {\n                if (!this.isLongClickable()) {\n                    this.setLongClickable(true);\n                }\n                this.getListenerInfo().mOnLongClickListener = l;\n            }\n            performClick() {\n                let li = this.mListenerInfo;\n                if (li != null && li.mOnClickListener != null) {\n                    li.mOnClickListener.onClick(this);\n                    return true;\n                }\n                return false;\n            }\n            callOnClick() {\n                let li = this.mListenerInfo;\n                if (li != null && li.mOnClickListener != null) {\n                    li.mOnClickListener.onClick(this);\n                    return true;\n                }\n                return false;\n            }\n            performLongClick() {\n                let handled = false;\n                let li = this.mListenerInfo;\n                if (li != null && li.mOnLongClickListener != null) {\n                    handled = li.mOnLongClickListener.onLongClick(this);\n                }\n                return handled;\n            }\n            checkForLongClick(delayOffset = 0) {\n                if ((this.mViewFlags & View.LONG_CLICKABLE) == View.LONG_CLICKABLE) {\n                    this.mHasPerformedLongPress = false;\n                    if (this.mPendingCheckForLongPress == null) {\n                        this.mPendingCheckForLongPress = new CheckForLongPress(this);\n                    }\n                    this.mPendingCheckForLongPress.rememberWindowAttachCount();\n                    this.postDelayed(this.mPendingCheckForLongPress, view_1.ViewConfiguration.getLongPressTimeout() - delayOffset);\n                }\n            }\n            setOnTouchListener(l) {\n                this.getListenerInfo().mOnTouchListener = l;\n            }\n            isClickable() {\n                return (this.mViewFlags & View.CLICKABLE) == View.CLICKABLE;\n            }\n            setClickable(clickable) {\n                this.setFlags(clickable ? View.CLICKABLE : 0, View.CLICKABLE);\n            }\n            isLongClickable() {\n                return (this.mViewFlags & View.LONG_CLICKABLE) == View.LONG_CLICKABLE;\n            }\n            setLongClickable(longClickable) {\n                this.setFlags(longClickable ? View.LONG_CLICKABLE : 0, View.LONG_CLICKABLE);\n            }\n            setPressed(pressed) {\n            }\n            isPressed() {\n                return (this.mPrivateFlags & View.PFLAG_PRESSED) == View.PFLAG_PRESSED;\n            }\n            isLayoutRtl() {\n                return false;\n            }\n            getBaseline() {\n                return -1;\n            }\n            isLayoutRequested() {\n                return (this.mPrivateFlags & View.PFLAG_FORCE_LAYOUT) == View.PFLAG_FORCE_LAYOUT;\n            }\n            getLayoutParams() {\n                return this.mLayoutParams;\n            }\n            setLayoutParams(params) {\n                if (params == null) {\n                    throw new Error(\"Layout parameters cannot be null\");\n                }\n                this.mLayoutParams = params;\n                let p = this.mParent;\n                if (p instanceof view_1.ViewGroup) {\n                    p.onSetLayoutParams(this, params);\n                }\n                this.requestLayout();\n            }\n            requestLayout() {\n                if (this.mMeasureCache != null)\n                    this.mMeasureCache.clear();\n                if (this.mAttachInfo != null && this.mAttachInfo.mViewRequestingLayout == null) {\n                    let viewRoot = this.getViewRootImpl();\n                    if (viewRoot != null && viewRoot.isInLayout()) {\n                        if (!viewRoot.requestLayoutDuringLayout(this)) {\n                            return;\n                        }\n                    }\n                    this.mAttachInfo.mViewRequestingLayout = this;\n                }\n                this.mPrivateFlags |= View.PFLAG_FORCE_LAYOUT;\n                this.mPrivateFlags |= View.PFLAG_INVALIDATED;\n                if (this.mParent != null && !this.mParent.isLayoutRequested()) {\n                    this.mParent.requestLayout();\n                }\n            }\n            forceLayout() {\n                if (this.mMeasureCache != null)\n                    this.mMeasureCache.clear();\n                this.mPrivateFlags |= View.PFLAG_FORCE_LAYOUT;\n                this.mPrivateFlags |= View.PFLAG_INVALIDATED;\n            }\n            isLaidOut() {\n                return (this.mPrivateFlags3 & View.PFLAG3_IS_LAID_OUT) == View.PFLAG3_IS_LAID_OUT;\n            }\n            layout(l, t, r, b) {\n                if ((this.mPrivateFlags3 & View.PFLAG3_MEASURE_NEEDED_BEFORE_LAYOUT) != 0) {\n                    this.onMeasure(this.mOldWidthMeasureSpec, this.mOldHeightMeasureSpec);\n                    this.mPrivateFlags3 &= ~View.PFLAG3_MEASURE_NEEDED_BEFORE_LAYOUT;\n                }\n                let oldL = this.mLeft;\n                let oldT = this.mTop;\n                let oldB = this.mBottom;\n                let oldR = this.mRight;\n                let changed = this.setFrame(l, t, r, b);\n                if (changed)\n                    this.syncBoundToElement();\n                if (changed || (this.mPrivateFlags & View.PFLAG_LAYOUT_REQUIRED) == View.PFLAG_LAYOUT_REQUIRED) {\n                    this.onLayout(changed, l, t, r, b);\n                    this.mPrivateFlags &= ~View.PFLAG_LAYOUT_REQUIRED;\n                    let li = this.mListenerInfo;\n                    if (li != null && li.mOnLayoutChangeListeners != null) {\n                        let listenersCopy = li.mOnLayoutChangeListeners.concat();\n                        let numListeners = listenersCopy.length;\n                        for (let i = 0; i < numListeners; ++i) {\n                            listenersCopy[i].onLayoutChange(this, l, t, r, b, oldL, oldT, oldR, oldB);\n                        }\n                    }\n                }\n                this.mPrivateFlags &= ~View.PFLAG_FORCE_LAYOUT;\n                this.mPrivateFlags3 |= View.PFLAG3_IS_LAID_OUT;\n            }\n            onLayout(changed, left, top, right, bottom) {\n            }\n            setFrame(left, top, right, bottom) {\n                let changed = false;\n                if (View.DBG) {\n                    Log.i(\"View\", this + \" View.setFrame(\" + left + \",\" + top + \",\"\n                        + right + \",\" + bottom + \")\");\n                }\n                if (this.mLeft != left || this.mRight != right || this.mTop != top || this.mBottom != bottom) {\n                    changed = true;\n                    let drawn = this.mPrivateFlags & View.PFLAG_DRAWN;\n                    let oldWidth = this.mRight - this.mLeft;\n                    let oldHeight = this.mBottom - this.mTop;\n                    let newWidth = right - left;\n                    let newHeight = bottom - top;\n                    let sizeChanged = (newWidth != oldWidth) || (newHeight != oldHeight);\n                    this.invalidate(sizeChanged);\n                    this.mLeft = left;\n                    this.mTop = top;\n                    this.mRight = right;\n                    this.mBottom = bottom;\n                    this.mPrivateFlags |= View.PFLAG_HAS_BOUNDS;\n                    if (sizeChanged) {\n                        if ((this.mPrivateFlags & View.PFLAG_PIVOT_EXPLICITLY_SET) == 0) {\n                        }\n                        this.sizeChange(newWidth, newHeight, oldWidth, oldHeight);\n                    }\n                    if ((this.mViewFlags & View.VISIBILITY_MASK) == View.VISIBLE) {\n                        this.mPrivateFlags |= View.PFLAG_DRAWN;\n                        this.invalidate(sizeChanged);\n                    }\n                    this.mPrivateFlags |= drawn;\n                    this.mBackgroundSizeChanged = true;\n                }\n                return changed;\n            }\n            sizeChange(newWidth, newHeight, oldWidth, oldHeight) {\n                this.onSizeChanged(newWidth, newHeight, oldWidth, oldHeight);\n                if (this.mOverlay != null) {\n                    this.mOverlay.getOverlayView().setRight(newWidth);\n                    this.mOverlay.getOverlayView().setBottom(newHeight);\n                }\n            }\n            getDrawingRect(outRect) {\n                outRect.left = this.mScrollX;\n                outRect.top = this.mScrollY;\n                outRect.right = this.mScrollX + (this.mRight - this.mLeft);\n                outRect.bottom = this.mScrollY + (this.mBottom - this.mTop);\n            }\n            getMeasuredWidth() {\n                return this.mMeasuredWidth & View.MEASURED_SIZE_MASK;\n            }\n            getMeasuredWidthAndState() {\n                return this.mMeasuredWidth;\n            }\n            getMeasuredHeight() {\n                return this.mMeasuredHeight & View.MEASURED_SIZE_MASK;\n            }\n            getMeasuredHeightAndState() {\n                return this.mMeasuredHeight;\n            }\n            getMeasuredState() {\n                return (this.mMeasuredWidth & View.MEASURED_STATE_MASK)\n                    | ((this.mMeasuredHeight >> View.MEASURED_HEIGHT_STATE_SHIFT)\n                        & (View.MEASURED_STATE_MASK >> View.MEASURED_HEIGHT_STATE_SHIFT));\n            }\n            measure(widthMeasureSpec, heightMeasureSpec) {\n                let key = widthMeasureSpec << 32 | heightMeasureSpec & 0xffffffff;\n                if (this.mMeasureCache == null)\n                    this.mMeasureCache = new SparseArray();\n                if ((this.mPrivateFlags & View.PFLAG_FORCE_LAYOUT) == View.PFLAG_FORCE_LAYOUT ||\n                    widthMeasureSpec != this.mOldWidthMeasureSpec ||\n                    heightMeasureSpec != this.mOldHeightMeasureSpec) {\n                    this.mPrivateFlags &= ~View.PFLAG_MEASURED_DIMENSION_SET;\n                    let cacheIndex = (this.mPrivateFlags & View.PFLAG_FORCE_LAYOUT) == View.PFLAG_FORCE_LAYOUT ? -1 :\n                        this.mMeasureCache.indexOfKey(key);\n                    if (cacheIndex < 0) {\n                        this.onMeasure(widthMeasureSpec, heightMeasureSpec);\n                        this.mPrivateFlags3 &= ~View.PFLAG3_MEASURE_NEEDED_BEFORE_LAYOUT;\n                    }\n                    else {\n                        let value = this.mMeasureCache.valueAt(cacheIndex);\n                        this.setMeasuredDimension(value >> 32, value);\n                        this.mPrivateFlags3 |= View.PFLAG3_MEASURE_NEEDED_BEFORE_LAYOUT;\n                    }\n                    if ((this.mPrivateFlags & View.PFLAG_MEASURED_DIMENSION_SET) != View.PFLAG_MEASURED_DIMENSION_SET) {\n                        throw new Error(\"onMeasure() did not set the\"\n                            + \" measured dimension by calling\"\n                            + \" setMeasuredDimension()\");\n                    }\n                    this.mPrivateFlags |= View.PFLAG_LAYOUT_REQUIRED;\n                }\n                this.mOldWidthMeasureSpec = widthMeasureSpec;\n                this.mOldHeightMeasureSpec = heightMeasureSpec;\n                this.mMeasureCache.put(key, (this.mMeasuredWidth) << 32 | this.mMeasuredHeight & 0xffffffff);\n            }\n            onMeasure(widthMeasureSpec, heightMeasureSpec) {\n                this.setMeasuredDimension(View.getDefaultSize(this.getSuggestedMinimumWidth(), widthMeasureSpec), View.getDefaultSize(this.getSuggestedMinimumHeight(), heightMeasureSpec));\n            }\n            setMeasuredDimension(measuredWidth, measuredHeight) {\n                this.mMeasuredWidth = measuredWidth;\n                this.mMeasuredHeight = measuredHeight;\n                this.mPrivateFlags |= View.PFLAG_MEASURED_DIMENSION_SET;\n            }\n            static combineMeasuredStates(curState, newState) {\n                return curState | newState;\n            }\n            static resolveSize(size, measureSpec) {\n                return View.resolveSizeAndState(size, measureSpec, 0) & View.MEASURED_SIZE_MASK;\n            }\n            static resolveSizeAndState(size, measureSpec, childMeasuredState) {\n                let MeasureSpec = View.MeasureSpec;\n                let result = size;\n                let specMode = MeasureSpec.getMode(measureSpec);\n                let specSize = MeasureSpec.getSize(measureSpec);\n                switch (specMode) {\n                    case MeasureSpec.UNSPECIFIED:\n                        result = size;\n                        break;\n                    case MeasureSpec.AT_MOST:\n                        if (specSize < size) {\n                            result = specSize | View.MEASURED_STATE_TOO_SMALL;\n                        }\n                        else {\n                            result = size;\n                        }\n                        break;\n                    case MeasureSpec.EXACTLY:\n                        result = specSize;\n                        break;\n                }\n                return result | (childMeasuredState & View.MEASURED_STATE_MASK);\n            }\n            static getDefaultSize(size, measureSpec) {\n                let MeasureSpec = View.MeasureSpec;\n                let result = size;\n                let specMode = MeasureSpec.getMode(measureSpec);\n                let specSize = MeasureSpec.getSize(measureSpec);\n                switch (specMode) {\n                    case MeasureSpec.UNSPECIFIED:\n                        result = size;\n                        break;\n                    case MeasureSpec.AT_MOST:\n                    case MeasureSpec.EXACTLY:\n                        result = specSize;\n                        break;\n                }\n                return result;\n            }\n            getSuggestedMinimumHeight() {\n                return (this.mBackground == null) ? this.mMinHeight :\n                    Math.max(this.mMinHeight, this.mBackground.getMinimumHeight());\n            }\n            getSuggestedMinimumWidth() {\n                return (this.mBackground == null) ? this.mMinWidth :\n                    Math.max(this.mMinWidth, this.mBackground.getMinimumWidth());\n            }\n            getMinimumHeight() {\n                return this.mMinHeight;\n            }\n            setMinimumHeight(minHeight) {\n                this.mMinHeight = minHeight;\n                this.requestLayout();\n            }\n            getMinimumWidth() {\n                return this.mMinWidth;\n            }\n            setMinimumWidth(minWidth) {\n                this.mMinWidth = minWidth;\n                this.requestLayout();\n            }\n            _invalidateRect(l, t, r, b) {\n                if (this.skipInvalidate()) {\n                    return;\n                }\n                if ((this.mPrivateFlags & (View.PFLAG_DRAWN | View.PFLAG_HAS_BOUNDS)) == (View.PFLAG_DRAWN | View.PFLAG_HAS_BOUNDS) ||\n                    (this.mPrivateFlags & View.PFLAG_DRAWING_CACHE_VALID) == View.PFLAG_DRAWING_CACHE_VALID ||\n                    (this.mPrivateFlags & View.PFLAG_INVALIDATED) != View.PFLAG_INVALIDATED) {\n                    this.mPrivateFlags &= ~View.PFLAG_DRAWING_CACHE_VALID;\n                    this.mPrivateFlags |= View.PFLAG_INVALIDATED;\n                    this.mPrivateFlags |= View.PFLAG_DIRTY;\n                    const p = this.mParent;\n                    const ai = this.mAttachInfo;\n                    if (p != null && ai != null && l < r && t < b) {\n                        const scrollX = this.mScrollX;\n                        const scrollY = this.mScrollY;\n                        const tmpr = ai.mTmpInvalRect;\n                        tmpr.set(l - scrollX, t - scrollY, r - scrollX, b - scrollY);\n                        p.invalidateChild(this, tmpr);\n                    }\n                }\n            }\n            _invalidateCache(invalidateCache = true) {\n                if (this.skipInvalidate()) {\n                    return;\n                }\n                if ((this.mPrivateFlags & (View.PFLAG_DRAWN | View.PFLAG_HAS_BOUNDS)) == (View.PFLAG_DRAWN | View.PFLAG_HAS_BOUNDS) ||\n                    (invalidateCache && (this.mPrivateFlags & View.PFLAG_DRAWING_CACHE_VALID) == View.PFLAG_DRAWING_CACHE_VALID) ||\n                    (this.mPrivateFlags & View.PFLAG_INVALIDATED) != View.PFLAG_INVALIDATED || this.isOpaque() != this.mLastIsOpaque) {\n                    this.mLastIsOpaque = this.isOpaque();\n                    this.mPrivateFlags &= ~View.PFLAG_DRAWN;\n                    this.mPrivateFlags |= View.PFLAG_DIRTY;\n                    if (invalidateCache) {\n                        this.mPrivateFlags |= View.PFLAG_INVALIDATED;\n                        this.mPrivateFlags &= ~View.PFLAG_DRAWING_CACHE_VALID;\n                    }\n                    const ai = this.mAttachInfo;\n                    const p = this.mParent;\n                    if (p != null && ai != null) {\n                        const r = ai.mTmpInvalRect;\n                        r.set(0, 0, this.mRight - this.mLeft, this.mBottom - this.mTop);\n                        p.invalidateChild(this, r);\n                    }\n                }\n            }\n            invalidate(...args) {\n                if (args.length === 0 || (args.length === 1 && typeof args[0] === 'boolean')) {\n                    this._invalidateCache(args[0]);\n                }\n                else if (args.length === 1 && args[0] instanceof Rect) {\n                    let rect = args[0];\n                    this._invalidateRect(rect.left, rect.top, rect.right, rect.bottom);\n                }\n                else if (args.length === 4) {\n                    this._invalidateRect(...args);\n                }\n            }\n            invalidateViewProperty(invalidateParent, forceRedraw) {\n                if ((this.mPrivateFlags & View.PFLAG_DRAW_ANIMATION) == View.PFLAG_DRAW_ANIMATION) {\n                    if (invalidateParent) {\n                        this.invalidateParentCaches();\n                    }\n                    if (forceRedraw) {\n                        this.mPrivateFlags |= View.PFLAG_DRAWN;\n                    }\n                    this.invalidate(false);\n                }\n                else {\n                    const ai = this.mAttachInfo;\n                    const p = this.mParent;\n                    if (p != null && ai != null) {\n                        const r = ai.mTmpInvalRect;\n                        r.set(0, 0, this.mRight - this.mLeft, this.mBottom - this.mTop);\n                        if (this.mParent instanceof view_1.ViewGroup) {\n                            this.mParent.invalidateChildFast(this, r);\n                        }\n                        else {\n                            this.mParent.invalidateChild(this, r);\n                        }\n                    }\n                }\n            }\n            invalidateParentCaches() {\n                if (this.mParent instanceof View) {\n                    this.mParent.mPrivateFlags |= View.PFLAG_INVALIDATED;\n                }\n            }\n            invalidateParentIfNeeded() {\n            }\n            postInvalidate(l, t, r, b) {\n                this.postInvalidateDelayed(0, l, t, r, b);\n            }\n            postInvalidateDelayed(delayMilliseconds, left, top, right, bottom) {\n                const attachInfo = this.mAttachInfo;\n                if (attachInfo != null) {\n                    if (!Number.isInteger(left) || !Number.isInteger(top) || !Number.isInteger(right) || !Number.isInteger(bottom)) {\n                        attachInfo.mViewRootImpl.dispatchInvalidateDelayed(this, delayMilliseconds);\n                    }\n                    else {\n                        const info = View.AttachInfo.InvalidateInfo.obtain();\n                        info.target = this;\n                        info.left = left;\n                        info.top = top;\n                        info.right = right;\n                        info.bottom = bottom;\n                        attachInfo.mViewRootImpl.dispatchInvalidateRectDelayed(info, delayMilliseconds);\n                    }\n                }\n            }\n            postInvalidateOnAnimation(left, top, right, bottom) {\n                const attachInfo = this.mAttachInfo;\n                if (attachInfo != null) {\n                    if (!Number.isInteger(left) || !Number.isInteger(top) || !Number.isInteger(right) || !Number.isInteger(bottom)) {\n                        attachInfo.mViewRootImpl.dispatchInvalidateOnAnimation(this);\n                    }\n                    else {\n                        const info = View.AttachInfo.InvalidateInfo.obtain();\n                        info.target = this;\n                        info.left = left;\n                        info.top = top;\n                        info.right = right;\n                        info.bottom = bottom;\n                        attachInfo.mViewRootImpl.dispatchInvalidateRectOnAnimation(info);\n                    }\n                }\n            }\n            skipInvalidate() {\n                return (this.mViewFlags & View.VISIBILITY_MASK) != View.VISIBLE;\n            }\n            isOpaque() {\n                return (this.mPrivateFlags & View.PFLAG_OPAQUE_MASK) == View.PFLAG_OPAQUE_MASK &&\n                    this.getFinalAlpha() >= 1;\n            }\n            computeOpaqueFlags() {\n                // Opaque if:\n                //   - Has a background\n                //   - Background is opaque\n                //   - Doesn't have scrollbars or scrollbars overlay\n                if (this.mBackground != null && this.mBackground.getOpacity() == PixelFormat.OPAQUE) {\n                    this.mPrivateFlags |= View.PFLAG_OPAQUE_BACKGROUND;\n                }\n                else {\n                    this.mPrivateFlags &= ~View.PFLAG_OPAQUE_BACKGROUND;\n                }\n            }\n            getLayerType() {\n                return this.mLayerType;\n            }\n            setClipBounds(clipBounds) {\n                if (clipBounds != null) {\n                    if (clipBounds.equals(this.mClipBounds)) {\n                        return;\n                    }\n                    if (this.mClipBounds == null) {\n                        this.invalidate();\n                        this.mClipBounds = new Rect(clipBounds);\n                    }\n                    else {\n                        this.invalidate(Math.min(this.mClipBounds.left, clipBounds.left), Math.min(this.mClipBounds.top, clipBounds.top), Math.max(this.mClipBounds.right, clipBounds.right), Math.max(this.mClipBounds.bottom, clipBounds.bottom));\n                        this.mClipBounds.set(clipBounds);\n                    }\n                }\n                else {\n                    if (this.mClipBounds != null) {\n                        this.invalidate();\n                        this.mClipBounds = null;\n                    }\n                }\n            }\n            getClipBounds() {\n                return (this.mClipBounds != null) ? new Rect(this.mClipBounds) : null;\n            }\n            getDrawingTime() {\n                return this.mAttachInfo != null ? this.mAttachInfo.mDrawingTime : 0;\n            }\n            drawFromParent(canvas, parent, drawingTime) {\n                let useDisplayListProperties = false;\n                let more = false;\n                let childHasIdentityMatrix = true;\n                let flags = parent.mGroupFlags;\n                let scalingRequired = false;\n                let concatMatrix = false;\n                let caching = false;\n                let layerType = this.getLayerType();\n                if ((flags & view_1.ViewGroup.FLAG_CHILDREN_DRAWN_WITH_CACHE) != 0 ||\n                    (flags & view_1.ViewGroup.FLAG_ALWAYS_DRAWN_WITH_CACHE) != 0) {\n                    caching = true;\n                }\n                else {\n                    caching = (layerType != View.LAYER_TYPE_NONE);\n                }\n                concatMatrix == concatMatrix || !childHasIdentityMatrix;\n                this.mPrivateFlags |= View.PFLAG_DRAWN;\n                if (!concatMatrix &&\n                    (flags & (view_1.ViewGroup.FLAG_SUPPORT_STATIC_TRANSFORMATIONS |\n                        view_1.ViewGroup.FLAG_CLIP_CHILDREN)) == view_1.ViewGroup.FLAG_CLIP_CHILDREN &&\n                    canvas.quickReject(this.mLeft, this.mTop, this.mRight, this.mBottom) &&\n                    (this.mPrivateFlags & View.PFLAG_DRAW_ANIMATION) == 0) {\n                    this.mPrivateFlags2 |= View.PFLAG2_VIEW_QUICK_REJECTED;\n                    return more;\n                }\n                this.mPrivateFlags2 &= ~View.PFLAG2_VIEW_QUICK_REJECTED;\n                let cache = null;\n                if (caching) {\n                    if (layerType != View.LAYER_TYPE_NONE) {\n                        layerType = View.LAYER_TYPE_SOFTWARE;\n                    }\n                }\n                let sx = this.mScrollX;\n                let sy = this.mScrollY;\n                this.computeScroll();\n                let hasNoCache = cache == null;\n                let offsetForScroll = cache == null;\n                let restoreTo = canvas.save();\n                if (offsetForScroll) {\n                    canvas.translate(this.mLeft - sx, this.mTop - sy);\n                }\n                else {\n                    canvas.translate(this.mLeft, this.mTop);\n                }\n                let alpha = 1;\n                if ((flags & view_1.ViewGroup.FLAG_CLIP_CHILDREN) == view_1.ViewGroup.FLAG_CLIP_CHILDREN &&\n                    !useDisplayListProperties && cache == null) {\n                    if (offsetForScroll) {\n                        canvas.clipRect(sx, sy, sx + (this.mRight - this.mLeft), sy + (this.mBottom - this.mTop));\n                    }\n                    else {\n                        if (!scalingRequired || cache == null) {\n                            canvas.clipRect(0, 0, this.mRight - this.mLeft, this.mBottom - this.mTop);\n                        }\n                        else {\n                            canvas.clipRect(0, 0, cache.getWidth(), cache.getHeight());\n                        }\n                    }\n                }\n                if (hasNoCache) {\n                    if ((this.mPrivateFlags & View.PFLAG_SKIP_DRAW) == View.PFLAG_SKIP_DRAW) {\n                        this.mPrivateFlags &= ~View.PFLAG_DIRTY_MASK;\n                        this.dispatchDraw(canvas);\n                    }\n                    else {\n                        this.draw(canvas);\n                    }\n                }\n                else if (cache != null) {\n                    this.mPrivateFlags &= ~View.PFLAG_DIRTY_MASK;\n                    if (alpha < 1) {\n                        parent.mGroupFlags |= view_1.ViewGroup.FLAG_ALPHA_LOWER_THAN_ONE;\n                    }\n                    else if ((flags & view_1.ViewGroup.FLAG_ALPHA_LOWER_THAN_ONE) != 0) {\n                        parent.mGroupFlags &= ~view_1.ViewGroup.FLAG_ALPHA_LOWER_THAN_ONE;\n                    }\n                    canvas.drawCanvas(cache, 0, 0);\n                }\n                if (restoreTo >= 0) {\n                    canvas.restoreToCount(restoreTo);\n                }\n                return more;\n            }\n            draw(canvas) {\n                if (this.mClipBounds != null) {\n                    canvas.clipRect(this.mClipBounds);\n                }\n                let privateFlags = this.mPrivateFlags;\n                const dirtyOpaque = (privateFlags & View.PFLAG_DIRTY_MASK) == View.PFLAG_DIRTY_OPAQUE &&\n                    (this.mAttachInfo == null || !this.mAttachInfo.mIgnoreDirtyState);\n                this.mPrivateFlags = (privateFlags & ~View.PFLAG_DIRTY_MASK) | View.PFLAG_DRAWN;\n                if (!dirtyOpaque) {\n                    let background = this.mBackground;\n                    if (background != null) {\n                        let scrollX = this.mScrollX;\n                        let scrollY = this.mScrollY;\n                        if (this.mBackgroundSizeChanged) {\n                            background.setBounds(0, 0, this.mRight - this.mLeft, this.mBottom - this.mTop);\n                            this.mBackgroundSizeChanged = false;\n                        }\n                        if ((scrollX | scrollY) == 0) {\n                            background.draw(canvas);\n                        }\n                        else {\n                            canvas.translate(scrollX, scrollY);\n                            background.draw(canvas);\n                            canvas.translate(-scrollX, -scrollY);\n                        }\n                    }\n                }\n                if (!dirtyOpaque)\n                    this.onDraw(canvas);\n                this.dispatchDraw(canvas);\n                if (this.mOverlay != null && !this.mOverlay.isEmpty()) {\n                    this.mOverlay.getOverlayView().dispatchDraw(canvas);\n                }\n            }\n            onDraw(canvas) {\n            }\n            dispatchDraw(canvas) {\n            }\n            destroyDrawingCache() {\n            }\n            setWillNotDraw(willNotDraw) {\n                this.setFlags(willNotDraw ? View.WILL_NOT_DRAW : 0, View.DRAW_MASK);\n            }\n            willNotDraw() {\n                return (this.mViewFlags & View.DRAW_MASK) == View.WILL_NOT_DRAW;\n            }\n            setWillNotCacheDrawing(willNotCacheDrawing) {\n                this.setFlags(willNotCacheDrawing ? View.WILL_NOT_CACHE_DRAWING : 0, View.WILL_NOT_CACHE_DRAWING);\n            }\n            willNotCacheDrawing() {\n                return (this.mViewFlags & View.WILL_NOT_CACHE_DRAWING) == View.WILL_NOT_CACHE_DRAWING;\n            }\n            jumpDrawablesToCurrentState() {\n                if (this.mBackground != null) {\n                    this.mBackground.jumpToCurrentState();\n                }\n            }\n            invalidateDrawable(drawable) {\n                if (this.verifyDrawable(drawable)) {\n                    const dirty = drawable.getBounds();\n                    const scrollX = this.mScrollX;\n                    const scrollY = this.mScrollY;\n                    this.invalidate(dirty.left + scrollX, dirty.top + scrollY, dirty.right + scrollX, dirty.bottom + scrollY);\n                }\n            }\n            scheduleDrawable(who, what, when) {\n                if (this.verifyDrawable(who) && what != null) {\n                    const delay = when - SystemClock.uptimeMillis();\n                    if (this.mAttachInfo != null) {\n                        this.mAttachInfo.mHandler.postAtTime(what, who, when);\n                    }\n                    else {\n                        view_1.ViewRootImpl.getRunQueue().postDelayed(what, delay);\n                    }\n                }\n            }\n            unscheduleDrawable(who, what) {\n                if (this.verifyDrawable(who) && what != null) {\n                    if (this.mAttachInfo != null) {\n                        this.mAttachInfo.mHandler.removeCallbacks(what, who);\n                    }\n                    else {\n                        view_1.ViewRootImpl.getRunQueue().removeCallbacks(what);\n                    }\n                }\n                else if (what === null) {\n                    if (this.mAttachInfo != null && who != null) {\n                        this.mAttachInfo.mHandler.removeCallbacksAndMessages(who);\n                    }\n                }\n            }\n            verifyDrawable(who) {\n                return who == this.mBackground;\n            }\n            drawableStateChanged() {\n                let d = this.mBackground;\n                if (d != null && d.isStateful()) {\n                    d.setState(this.getDrawableState());\n                }\n            }\n            refreshDrawableState() {\n                this.mPrivateFlags |= View.PFLAG_DRAWABLE_STATE_DIRTY;\n                this.drawableStateChanged();\n                let parent = this.mParent;\n                if (parent != null) {\n                    parent.childDrawableStateChanged(this);\n                }\n            }\n            getDrawableState() {\n                return [];\n            }\n            getAnimation() {\n                return null;\n            }\n            computeHorizontalScrollRange() {\n                return this.getWidth();\n            }\n            computeHorizontalScrollOffset() {\n                return this.mScrollX;\n            }\n            computeHorizontalScrollExtent() {\n                return this.getWidth();\n            }\n            computeVerticalScrollRange() {\n                return this.getHeight();\n            }\n            computeVerticalScrollOffset() {\n                return this.mScrollY;\n            }\n            computeVerticalScrollExtent() {\n                return this.getHeight();\n            }\n            canScrollHorizontally(direction) {\n                const offset = this.computeHorizontalScrollOffset();\n                const range = this.computeHorizontalScrollRange() - this.computeHorizontalScrollExtent();\n                if (range == 0)\n                    return false;\n                if (direction < 0) {\n                    return offset > 0;\n                }\n                else {\n                    return offset < range - 1;\n                }\n            }\n            canScrollVertically(direction) {\n                const offset = this.computeVerticalScrollOffset();\n                const range = this.computeVerticalScrollRange() - this.computeVerticalScrollExtent();\n                if (range == 0)\n                    return false;\n                if (direction < 0) {\n                    return offset > 0;\n                }\n                else {\n                    return offset < range - 1;\n                }\n            }\n            overScrollBy(deltaX, deltaY, scrollX, scrollY, scrollRangeX, scrollRangeY, maxOverScrollX, maxOverScrollY, isTouchEvent) {\n                const overScrollMode = this.mOverScrollMode;\n                const canScrollHorizontal = this.computeHorizontalScrollRange() > this.computeHorizontalScrollExtent();\n                const canScrollVertical = this.computeVerticalScrollRange() > this.computeVerticalScrollExtent();\n                const overScrollHorizontal = overScrollMode == View.OVER_SCROLL_ALWAYS ||\n                    (overScrollMode == View.OVER_SCROLL_IF_CONTENT_SCROLLS && canScrollHorizontal);\n                const overScrollVertical = overScrollMode == View.OVER_SCROLL_ALWAYS ||\n                    (overScrollMode == View.OVER_SCROLL_IF_CONTENT_SCROLLS && canScrollVertical);\n                if (isTouchEvent) {\n                    if ((deltaX < 0 && scrollX <= 0) || (deltaX > 0 && scrollX >= scrollRangeX)) {\n                        deltaX /= 2;\n                    }\n                    if ((deltaY < 0 && scrollY <= 0) || (deltaY > 0 && scrollY >= scrollRangeY)) {\n                        deltaY /= 2;\n                    }\n                }\n                let newScrollX = scrollX + deltaX;\n                if (!overScrollHorizontal) {\n                    maxOverScrollX = 0;\n                }\n                let newScrollY = scrollY + deltaY;\n                if (!overScrollVertical) {\n                    maxOverScrollY = 0;\n                }\n                const left = -maxOverScrollX;\n                const right = maxOverScrollX + scrollRangeX;\n                const top = -maxOverScrollY;\n                const bottom = maxOverScrollY + scrollRangeY;\n                let clampedX = false;\n                if (newScrollX > right) {\n                    newScrollX = right;\n                    clampedX = true;\n                }\n                else if (newScrollX < left) {\n                    newScrollX = left;\n                    clampedX = true;\n                }\n                let clampedY = false;\n                if (newScrollY > bottom) {\n                    newScrollY = bottom;\n                    clampedY = true;\n                }\n                else if (newScrollY < top) {\n                    newScrollY = top;\n                    clampedY = true;\n                }\n                this.onOverScrolled(newScrollX, newScrollY, clampedX, clampedY);\n                return clampedX || clampedY;\n            }\n            onOverScrolled(scrollX, scrollY, clampedX, clampedY) {\n            }\n            getOverScrollMode() {\n                return this.mOverScrollMode;\n            }\n            setOverScrollMode(overScrollMode) {\n                if (overScrollMode != View.OVER_SCROLL_ALWAYS &&\n                    overScrollMode != View.OVER_SCROLL_IF_CONTENT_SCROLLS &&\n                    overScrollMode != View.OVER_SCROLL_NEVER) {\n                    throw new Error(\"Invalid overscroll mode \" + overScrollMode);\n                }\n                this.mOverScrollMode = overScrollMode;\n            }\n            getVerticalScrollFactor() {\n                if (this.mVerticalScrollFactor == 0) {\n                    this.mVerticalScrollFactor = Resources.getDisplayMetrics().density * 64;\n                }\n                return this.mVerticalScrollFactor;\n            }\n            getHorizontalScrollFactor() {\n                return this.getVerticalScrollFactor();\n            }\n            computeScroll() {\n            }\n            scrollTo(x, y) {\n                if (this.mScrollX != x || this.mScrollY != y) {\n                    let oldX = this.mScrollX;\n                    let oldY = this.mScrollY;\n                    this.mScrollX = x;\n                    this.mScrollY = y;\n                    this.invalidateParentCaches();\n                    this.onScrollChanged(this.mScrollX, this.mScrollY, oldX, oldY);\n                    if (!this.awakenScrollBars()) {\n                        this.postInvalidateOnAnimation();\n                    }\n                }\n            }\n            scrollBy(x, y) {\n                this.scrollTo(this.mScrollX + x, this.mScrollY + y);\n            }\n            awakenScrollBars(startDelay = view_1.ViewConfiguration.getScrollDefaultDelay(), invalidate = true) {\n                if (!this.bindScrollContent.parentNode) {\n                    this.bindElement.appendChild(this.bindScrollContent);\n                    this.bindElement.style.overflow = \"scroll\";\n                }\n                this.bindScrollContent.style.height = this.computeVerticalScrollRange() + \"px\";\n                this.bindScrollContent.style.width = this.computeHorizontalScrollRange() + \"px\";\n                return false;\n            }\n            getVerticalFadingEdgeLength() {\n                return 0;\n            }\n            setFadingEdgeLength(length) {\n            }\n            getHorizontalFadingEdgeLength() {\n                return 0;\n            }\n            getVerticalScrollbarWidth() {\n                return 0;\n            }\n            getHorizontalScrollbarHeight() {\n                return 0;\n            }\n            assignParent(parent) {\n                if (this.mParent == null) {\n                    this.mParent = parent;\n                }\n                else if (parent == null) {\n                    this.mParent = null;\n                }\n                else {\n                    throw new Error(\"view \" + this + \" being added, but\"\n                        + \" it already has a parent\");\n                }\n            }\n            onFinishInflate() {\n            }\n            dispatchAttachedToWindow(info, visibility) {\n                this.mAttachInfo = info;\n                if (this.mOverlay != null) {\n                    this.mOverlay.getOverlayView().dispatchAttachedToWindow(info, visibility);\n                }\n                this.mWindowAttachCount++;\n                this.mPrivateFlags |= View.PFLAG_DRAWABLE_STATE_DIRTY;\n                if ((this.mPrivateFlags & View.PFLAG_SCROLL_CONTAINER) != 0) {\n                    this.mAttachInfo.mScrollContainers.add(this);\n                    this.mPrivateFlags |= View.PFLAG_SCROLL_CONTAINER_ADDED;\n                }\n                this.onAttachedToWindow();\n                let li = this.mListenerInfo;\n                let listeners = li != null ? li.mOnAttachStateChangeListeners : null;\n                if (listeners != null && listeners.size() > 0) {\n                    for (let listener of listeners) {\n                        listener.onViewAttachedToWindow(this);\n                    }\n                }\n                if ((this.mPrivateFlags & View.PFLAG_DRAWABLE_STATE_DIRTY) != 0) {\n                    this.refreshDrawableState();\n                }\n            }\n            onAttachedToWindow() {\n                //if ((this.mPrivateFlags & View.PFLAG_REQUEST_TRANSPARENT_REGIONS) != 0) {\n                //    this.mParent.requestTransparentRegion(this);\n                //}\n                this.mPrivateFlags3 &= ~View.PFLAG3_IS_LAID_OUT;\n                this.jumpDrawablesToCurrentState();\n            }\n            dispatchDetachedFromWindow() {\n                this.onDetachedFromWindow();\n                let li = this.mListenerInfo;\n                let listeners = li != null ? li.mOnAttachStateChangeListeners : null;\n                if (listeners != null && listeners.size() > 0) {\n                    for (let listener of listeners) {\n                        listener.onViewDetachedFromWindow(this);\n                    }\n                }\n                if ((this.mPrivateFlags & View.PFLAG_SCROLL_CONTAINER_ADDED) != 0) {\n                    this.mAttachInfo.mScrollContainers.delete(this);\n                    this.mPrivateFlags &= ~View.PFLAG_SCROLL_CONTAINER_ADDED;\n                }\n                this.mAttachInfo = null;\n                if (this.mOverlay != null) {\n                    this.mOverlay.getOverlayView().dispatchDetachedFromWindow();\n                }\n            }\n            onDetachedFromWindow() {\n                this.mPrivateFlags &= ~View.PFLAG_CANCEL_NEXT_UP_EVENT;\n                this.mPrivateFlags3 &= ~View.PFLAG3_IS_LAID_OUT;\n                this.removeUnsetPressCallback();\n                this.removeLongPressCallback();\n                this.removePerformClickCallback();\n                this.destroyDrawingCache();\n                this.cleanupDraw();\n            }\n            cleanupDraw() {\n                if (this.mAttachInfo != null) {\n                    this.mAttachInfo.mViewRootImpl.cancelInvalidate(this);\n                }\n            }\n            debug(depth = 0) {\n                let originProto = Object.getPrototypeOf(this);\n                console.dir(Object.assign(Object.create(originProto), this));\n            }\n            toString() {\n                return this.tagName();\n            }\n            getRootView() {\n                if (this.mAttachInfo != null) {\n                    let v = this.mAttachInfo.mRootView;\n                    if (v != null) {\n                        return v;\n                    }\n                }\n                let parent = this;\n                while (parent.mParent != null && parent.mParent instanceof View) {\n                    parent = parent.mParent;\n                }\n                return parent;\n            }\n            findViewById(id) {\n                let bindEle = this.bindElement.querySelector('#' + id);\n                return bindEle ? bindEle['bindView'] : null;\n            }\n            get bindElement() {\n                if (!this._bindElement)\n                    this.initBindElement();\n                return this._bindElement;\n            }\n            get bindScrollContent() {\n                if (!this._bindScrollContent)\n                    this._bindScrollContent = document.createElement('div');\n                return this._bindScrollContent;\n            }\n            initBindElement(bindElement) {\n                this._bindElement = bindElement || document.createElement(this.tagName());\n                this._bindElement['bindView'] = this;\n            }\n            syncBoundToElement() {\n                let bind = this.bindElement;\n                bind.style.position = 'absolute';\n                bind.style.boxSizing = 'border-box';\n                bind.style.left = this.mLeft + 'px';\n                bind.style.top = this.mTop + 'px';\n                bind.style.width = this.getWidth() + 'px';\n                bind.style.height = this.getHeight() + 'px';\n            }\n            tagName() {\n                return \"ANDROID-\" + this.constructor.name;\n            }\n            static inflate(domtree) {\n                let className = domtree.tagName;\n                if (className.startsWith('ANDROID-')) {\n                    className = className.substring('ANDROID-'.length);\n                }\n                let rootViewClass;\n                for (let key in android['view']) {\n                    if (key.toUpperCase() == className.toUpperCase()) {\n                        rootViewClass = android.view[key];\n                        break;\n                    }\n                }\n                if (!rootViewClass) {\n                    for (let key in android['widget']) {\n                        if (key.toUpperCase() == className.toUpperCase()) {\n                            rootViewClass = android['widget'][key];\n                            break;\n                        }\n                    }\n                }\n                if (!rootViewClass) {\n                    try {\n                        rootViewClass = window.eval(className);\n                    }\n                    catch (e) {\n                    }\n                }\n                if (!rootViewClass)\n                    return null;\n                let rootView = new rootViewClass();\n                rootView.initBindElement(domtree);\n                if (rootView instanceof view_1.ViewGroup) {\n                    Array.from(domtree.children).forEach((item) => {\n                        if (item instanceof HTMLElement) {\n                            let view = View.inflate(item);\n                            if (view)\n                                rootView.addView(view);\n                        }\n                    });\n                }\n                rootView.onFinishInflate();\n                return rootView;\n            }\n        }\n        View.DBG = Log.View_DBG;\n        View.VIEW_LOG_TAG = \"View\";\n        View.PFLAG_WANTS_FOCUS = 0x00000001;\n        View.PFLAG_FOCUSED = 0x00000002;\n        View.PFLAG_SELECTED = 0x00000004;\n        View.PFLAG_IS_ROOT_NAMESPACE = 0x00000008;\n        View.PFLAG_HAS_BOUNDS = 0x00000010;\n        View.PFLAG_DRAWN = 0x00000020;\n        View.PFLAG_DRAW_ANIMATION = 0x00000040;\n        View.PFLAG_SKIP_DRAW = 0x00000080;\n        View.PFLAG_ONLY_DRAWS_BACKGROUND = 0x00000100;\n        View.PFLAG_REQUEST_TRANSPARENT_REGIONS = 0x00000200;\n        View.PFLAG_DRAWABLE_STATE_DIRTY = 0x00000400;\n        View.PFLAG_MEASURED_DIMENSION_SET = 0x00000800;\n        View.PFLAG_FORCE_LAYOUT = 0x00001000;\n        View.PFLAG_LAYOUT_REQUIRED = 0x00002000;\n        View.PFLAG_PRESSED = 0x00004000;\n        View.PFLAG_DRAWING_CACHE_VALID = 0x00008000;\n        View.PFLAG_ANIMATION_STARTED = 0x00010000;\n        View.PFLAG_ALPHA_SET = 0x00040000;\n        View.PFLAG_SCROLL_CONTAINER = 0x00080000;\n        View.PFLAG_SCROLL_CONTAINER_ADDED = 0x00100000;\n        View.PFLAG_DIRTY = 0x00200000;\n        View.PFLAG_DIRTY_OPAQUE = 0x00400000;\n        View.PFLAG_DIRTY_MASK = 0x00600000;\n        View.PFLAG_OPAQUE_BACKGROUND = 0x00800000;\n        View.PFLAG_OPAQUE_SCROLLBARS = 0x01000000;\n        View.PFLAG_OPAQUE_MASK = 0x01800000;\n        View.PFLAG_PREPRESSED = 0x02000000;\n        View.PFLAG_CANCEL_NEXT_UP_EVENT = 0x04000000;\n        View.PFLAG_AWAKEN_SCROLL_BARS_ON_ATTACH = 0x08000000;\n        View.PFLAG_HOVERED = 0x10000000;\n        View.PFLAG_PIVOT_EXPLICITLY_SET = 0x20000000;\n        View.PFLAG_ACTIVATED = 0x40000000;\n        View.PFLAG_INVALIDATED = 0x80000000;\n        View.PFLAG2_VIEW_QUICK_REJECTED = 0x10000000;\n        View.PFLAG3_VIEW_IS_ANIMATING_TRANSFORM = 0x1;\n        View.PFLAG3_VIEW_IS_ANIMATING_ALPHA = 0x2;\n        View.PFLAG3_IS_LAID_OUT = 0x4;\n        View.PFLAG3_MEASURE_NEEDED_BEFORE_LAYOUT = 0x8;\n        View.PFLAG3_CALLED_SUPER = 0x10;\n        View.NOT_FOCUSABLE = 0x00000000;\n        View.FOCUSABLE = 0x00000001;\n        View.FOCUSABLE_MASK = 0x00000001;\n        View.OVER_SCROLL_ALWAYS = 0;\n        View.OVER_SCROLL_IF_CONTENT_SCROLLS = 1;\n        View.OVER_SCROLL_NEVER = 2;\n        View.MEASURED_SIZE_MASK = 0x00ffffff;\n        View.MEASURED_STATE_MASK = 0xff000000;\n        View.MEASURED_HEIGHT_STATE_SHIFT = 16;\n        View.MEASURED_STATE_TOO_SMALL = 0x01000000;\n        View.VISIBILITY_MASK = 0x0000000C;\n        View.VISIBLE = 0x00000000;\n        View.INVISIBLE = 0x00000004;\n        View.GONE = 0x00000008;\n        View.ENABLED = 0x00000000;\n        View.DISABLED = 0x00000020;\n        View.ENABLED_MASK = 0x00000020;\n        View.WILL_NOT_DRAW = 0x00000080;\n        View.DRAW_MASK = 0x00000080;\n        View.FOCUSABLES_ALL = 0x00000000;\n        View.FOCUSABLES_TOUCH_MODE = 0x00000001;\n        View.FOCUS_BACKWARD = 0x00000001;\n        View.FOCUS_FORWARD = 0x00000002;\n        View.FOCUS_LEFT = 0x00000011;\n        View.FOCUS_UP = 0x00000021;\n        View.FOCUS_RIGHT = 0x00000042;\n        View.FOCUS_DOWN = 0x00000082;\n        View.CLICKABLE = 0x00004000;\n        View.DRAWING_CACHE_ENABLED = 0x00008000;\n        View.WILL_NOT_CACHE_DRAWING = 0x000020000;\n        View.FOCUSABLE_IN_TOUCH_MODE = 0x00040000;\n        View.LONG_CLICKABLE = 0x00200000;\n        View.DUPLICATE_PARENT_STATE = 0x00400000;\n        View.LAYER_TYPE_NONE = 0;\n        View.LAYER_TYPE_SOFTWARE = 1;\n        view_1.View = View;\n        (function (View) {\n            class MeasureSpec {\n                static makeMeasureSpec(size, mode) {\n                    return (size & ~MeasureSpec.MODE_MASK) | (mode & MeasureSpec.MODE_MASK);\n                }\n                static getMode(measureSpec) {\n                    return (measureSpec & MeasureSpec.MODE_MASK);\n                }\n                static getSize(measureSpec) {\n                    return (measureSpec & ~MeasureSpec.MODE_MASK);\n                }\n                static adjust(measureSpec, delta) {\n                    return MeasureSpec.makeMeasureSpec(MeasureSpec.getSize(measureSpec + delta), MeasureSpec.getMode(measureSpec));\n                }\n                static toString(measureSpec) {\n                    let mode = MeasureSpec.getMode(measureSpec);\n                    let size = MeasureSpec.getSize(measureSpec);\n                    let sb = new StringBuilder(\"MeasureSpec: \");\n                    if (mode == MeasureSpec.UNSPECIFIED)\n                        sb.append(\"UNSPECIFIED \");\n                    else if (mode == MeasureSpec.EXACTLY)\n                        sb.append(\"EXACTLY \");\n                    else if (mode == MeasureSpec.AT_MOST)\n                        sb.append(\"AT_MOST \");\n                    else\n                        sb.append(mode).append(\" \");\n                    sb.append(size);\n                    return sb.toString();\n                }\n            }\n            MeasureSpec.MODE_SHIFT = 30;\n            MeasureSpec.MODE_MASK = 0x3 << MeasureSpec.MODE_SHIFT;\n            MeasureSpec.UNSPECIFIED = 0 << MeasureSpec.MODE_SHIFT;\n            MeasureSpec.EXACTLY = 1 << MeasureSpec.MODE_SHIFT;\n            MeasureSpec.AT_MOST = 2 << MeasureSpec.MODE_SHIFT;\n            View.MeasureSpec = MeasureSpec;\n            class AttachInfo {\n                constructor(mViewRootImpl, mHandler) {\n                    this.mDrawingTime = 0;\n                    this.mTmpInvalRect = new Rect();\n                    this.mTmpTransformRect = new Rect();\n                    this.mScrollContainers = new Set();\n                    this.mViewScrollChanged = false;\n                    this.mTreeObserver = new view_1.ViewTreeObserver();\n                    this.mViewVisibilityChanged = false;\n                    this.mInvalidateChildLocation = new Array(2);\n                    this.mIgnoreDirtyState = false;\n                    this.mSetIgnoreDirtyState = false;\n                    this.mViewRootImpl = mViewRootImpl;\n                    this.mHandler = mHandler;\n                }\n            }\n            View.AttachInfo = AttachInfo;\n            class ListenerInfo {\n            }\n            View.ListenerInfo = ListenerInfo;\n        })(View = view_1.View || (view_1.View = {}));\n        (function (View) {\n            var AttachInfo;\n            (function (AttachInfo) {\n                class InvalidateInfo {\n                    constructor() {\n                        this.left = 0;\n                        this.top = 0;\n                        this.right = 0;\n                        this.bottom = 0;\n                    }\n                    static obtain() {\n                        let instance = InvalidateInfo.sPool.acquire();\n                        return (instance != null) ? instance : new InvalidateInfo();\n                    }\n                    recycle() {\n                        this.target = null;\n                        InvalidateInfo.sPool.release(this);\n                    }\n                }\n                InvalidateInfo.POOL_LIMIT = 10;\n                InvalidateInfo.sPool = new Pools.SynchronizedPool(InvalidateInfo.POOL_LIMIT);\n                AttachInfo.InvalidateInfo = InvalidateInfo;\n            })(AttachInfo = View.AttachInfo || (View.AttachInfo = {}));\n        })(View = view_1.View || (view_1.View = {}));\n        class CheckForLongPress {\n            constructor(View_this) {\n                this.mOriginalWindowAttachCount = 0;\n                this.View_this = View_this;\n            }\n            run() {\n                if (this.View_this.isPressed() && (this.View_this.mParent != null)\n                    && this.mOriginalWindowAttachCount == this.View_this.mWindowAttachCount) {\n                    if (this.View_this.performLongClick()) {\n                        this.View_this.mHasPerformedLongPress = true;\n                    }\n                }\n            }\n            rememberWindowAttachCount() {\n                this.mOriginalWindowAttachCount = this.View_this.mWindowAttachCount;\n            }\n        }\n        class CheckForTap {\n            constructor(View_this) {\n                this.View_this = View_this;\n            }\n            run() {\n                this.View_this.mPrivateFlags &= ~View.PFLAG_PREPRESSED;\n                this.View_this.setPressed(true);\n                this.View_this.checkForLongClick(view_1.ViewConfiguration.getTapTimeout());\n            }\n        }\n        class PerformClick {\n            constructor(View_this) {\n                this.View_this = View_this;\n            }\n            run() {\n                this.View_this.performClick();\n            }\n        }\n        class UnsetPressedState {\n            constructor(View_this) {\n                this.View_this = View_this;\n            }\n            run() {\n                this.View_this.setPressed(false);\n            }\n        }\n    })(view = android.view || (android.view = {}));\n})(android || (android = {}));\nvar android;\n(function (android) {\n    var graphics;\n    (function (graphics) {\n        class Point {\n            constructor(...args) {\n                this.x = 0;\n                this.y = 0;\n                if (args.length === 1) {\n                    let src = args[0];\n                    this.x = src.x;\n                    this.y = src.y;\n                }\n                else {\n                    let [x = 0, y = 0] = args;\n                    this.x = x;\n                    this.y = y;\n                }\n            }\n            set(x, y) {\n                this.x = x;\n                this.y = y;\n            }\n            negate() {\n                this.x = -this.x;\n                this.y = -this.y;\n            }\n            offset(dx, dy) {\n                this.x += dx;\n                this.y += dy;\n            }\n            equals(...args) {\n                if (args.length === 2) {\n                    let [x = 0, y = 0] = args;\n                    return this.x == x && this.y == y;\n                }\n                else {\n                    let o = args[0];\n                    if (this === o)\n                        return true;\n                    if (!o || !(o instanceof Point))\n                        return false;\n                    let point = o;\n                    if (this.x != point.x)\n                        return false;\n                    if (this.y != point.y)\n                        return false;\n                    return true;\n                }\n            }\n            toString() {\n                return \"Point(\" + this.x + \", \" + this.y + \")\";\n            }\n        }\n        graphics.Point = Point;\n    })(graphics = android.graphics || (android.graphics = {}));\n})(android || (android = {}));\n/**\n * Created by linfaxin on 15/10/5.\n */\n///<reference path=\"View.ts\"/>\n///<reference path=\"../graphics/Point.ts\"/>\n///<reference path=\"../graphics/Rect.ts\"/>\n/**\n * Created by linfaxin on 15/10/13.\n */\n///<reference path=\"../graphics/Rect.ts\"/>\n///<reference path=\"../graphics/Canvas.ts\"/>\n///<reference path=\"../graphics/Canvas.ts\"/>\nvar android;\n(function (android) {\n    var view;\n    (function (view) {\n        var Rect = android.graphics.Rect;\n        var Canvas = android.graphics.Canvas;\n        class Surface {\n            constructor(canvasElement) {\n                this.mLockedCanvasMap = new WeakMap();\n                this.mCanvasElement = canvasElement;\n            }\n            lockCanvas(dirty) {\n                let fullWidth = this.mCanvasElement.width;\n                let fullHeight = this.mCanvasElement.height;\n                let rect;\n                if (dirty.isEmpty()) {\n                    rect = new Rect(0, 0, fullWidth, fullHeight);\n                }\n                else {\n                    rect = new Rect(Math.floor(dirty.left - 1), Math.floor(dirty.top - 1), Math.ceil(dirty.right + 1), Math.ceil(dirty.bottom + 1));\n                }\n                let width = rect.width();\n                let height = rect.height();\n                let canvas = new Canvas(width, height);\n                canvas.translate(-rect.left, -rect.top);\n                this.mLockedCanvasMap.set(canvas, rect);\n                let mCanvasContent = this.mCanvasElement.getContext('2d');\n                mCanvasContent.clearRect(rect.left, rect.top, width, height);\n                return canvas;\n            }\n            unlockCanvasAndPost(canvas) {\n                let rect = this.mLockedCanvasMap.get(canvas);\n                if (rect) {\n                    let mCanvasContent = this.mCanvasElement.getContext('2d');\n                    mCanvasContent.drawImage(canvas.canvasElement, rect.left, rect.top);\n                }\n            }\n        }\n        view.Surface = Surface;\n    })(view = android.view || (android.view = {}));\n})(android || (android = {}));\nvar java;\n(function (java) {\n    var lang;\n    (function (lang) {\n        class System {\n            static currentTimeMillis() {\n                return new Date().getTime();\n            }\n        }\n        System.out = {\n            println(any) {\n                console.log('\\n');\n                console.log(any);\n            },\n            print(any) {\n                console.log(any);\n            }\n        };\n        lang.System = System;\n    })(lang = java.lang || (java.lang = {}));\n})(java || (java = {}));\n///<reference path=\"ViewParent.ts\"/>\n///<reference path=\"View.ts\"/>\n///<reference path=\"Surface.ts\"/>\n///<reference path=\"../util/Log.ts\"/>\n///<reference path=\"../util/Log.ts\"/>\n///<reference path=\"../os/Handler.ts\"/>\n///<reference path=\"../os/Message.ts\"/>\n///<reference path=\"../os/SystemClock.ts\"/>\n///<reference path=\"../content/res/Resources.ts\"/>\n///<reference path=\"../graphics/Point.ts\"/>\n///<reference path=\"../graphics/Rect.ts\"/>\n///<reference path=\"../graphics/Canvas.ts\"/>\n///<reference path=\"../../java/lang/Runnable.ts\"/>\n///<reference path=\"../../java/lang/System.ts\"/>\nvar android;\n(function (android) {\n    var view;\n    (function (view_2) {\n        var View = android.view.View;\n        var Resources = android.content.res.Resources;\n        var Rect = android.graphics.Rect;\n        var Handler = android.os.Handler;\n        var SystemClock = android.os.SystemClock;\n        var System = java.lang.System;\n        var Log = android.util.Log;\n        var Surface = android.view.Surface;\n        class ViewRootImpl {\n            constructor() {\n                this.mViewVisibility = 0;\n                this.mWidth = -1;\n                this.mHeight = -1;\n                this.mDirty = new Rect();\n                this.mTempRect = new Rect();\n                this.mVisRect = new Rect();\n                this.mTraversalScheduled = false;\n                this.mWillDrawSoon = false;\n                this.mIsInTraversal = false;\n                this.mLayoutRequested = false;\n                this.mFirst = true;\n                this.mFullRedrawNeeded = false;\n                this.mIsDrawing = false;\n                this.mAdded = false;\n                this.mWinFrame = new Rect();\n                this.mLayoutRequesters = [];\n                this.mHandler = new ViewRootHandler();\n                this.mFpsStartTime = -1;\n                this.mFpsPrevTime = -1;\n                this.mFpsNumFrames = 0;\n                this.mInvalidateOnAnimationRunnable = new InvalidateOnAnimationRunnable(this.mHandler);\n                this.mAttachInfo = new View.AttachInfo(this, this.mHandler);\n                this.mTraversalRunnable = new TraversalRunnable(this);\n            }\n            initSurface(canvasElement) {\n                this.mSurface = new Surface(canvasElement);\n            }\n            setView(view) {\n                if (this.mView == null) {\n                    this.mView = view;\n                    this.mAttachInfo.mRootView = view;\n                    this.mAdded = true;\n                    this.requestLayout();\n                    view.assignParent(this);\n                }\n            }\n            getView() {\n                return this.mView;\n            }\n            getHostVisibility() {\n                return this.mView.getVisibility();\n            }\n            scheduleTraversals() {\n                if (!this.mTraversalScheduled) {\n                    this.mTraversalScheduled = true;\n                    this.mHandler.post(this.mTraversalRunnable);\n                }\n            }\n            unscheduleTraversals() {\n                if (this.mTraversalScheduled) {\n                    this.mTraversalScheduled = false;\n                    this.mHandler.removeCallbacks(this.mTraversalRunnable);\n                }\n            }\n            doTraversal() {\n                if (this.mTraversalScheduled) {\n                    this.mTraversalScheduled = false;\n                    this.performTraversals();\n                }\n            }\n            measureHierarchy(host, lp, desiredWindowWidth, desiredWindowHeight) {\n                let windowSizeMayChange = false;\n                if (ViewRootImpl.DEBUG_ORIENTATION || ViewRootImpl.DEBUG_LAYOUT)\n                    Log.v(ViewRootImpl.TAG, \"Measuring \" + host + \" in display \" + desiredWindowWidth\n                        + \"x\" + desiredWindowHeight + \"...\");\n                let childWidthMeasureSpec = ViewRootImpl.getRootMeasureSpec(desiredWindowWidth, lp.width);\n                let childHeightMeasureSpec = ViewRootImpl.getRootMeasureSpec(desiredWindowHeight, lp.height);\n                this.performMeasure(childWidthMeasureSpec, childHeightMeasureSpec);\n                if (this.mWidth != host.getMeasuredWidth() || this.mHeight != host.getMeasuredHeight()) {\n                    windowSizeMayChange = true;\n                }\n                if (ViewRootImpl.DBG) {\n                    System.out.println(\"======================================\");\n                    System.out.println(\"performTraversals -- after measure\");\n                    host.debug();\n                }\n                return windowSizeMayChange;\n            }\n            static getRootMeasureSpec(windowSize, rootDimension) {\n                let MeasureSpec = View.MeasureSpec;\n                let measureSpec;\n                switch (rootDimension) {\n                    case view_2.ViewGroup.LayoutParams.MATCH_PARENT:\n                        measureSpec = MeasureSpec.makeMeasureSpec(windowSize, MeasureSpec.EXACTLY);\n                        break;\n                    case view_2.ViewGroup.LayoutParams.WRAP_CONTENT:\n                        measureSpec = MeasureSpec.makeMeasureSpec(windowSize, MeasureSpec.AT_MOST);\n                        break;\n                    default:\n                        measureSpec = MeasureSpec.makeMeasureSpec(rootDimension, MeasureSpec.EXACTLY);\n                        break;\n                }\n                return measureSpec;\n            }\n            performTraversals() {\n                let host = this.mView;\n                if (ViewRootImpl.DBG) {\n                    System.out.println(\"======================================\");\n                    System.out.println(\"performTraversals\");\n                    host.debug();\n                }\n                if (host == null || !this.mAdded)\n                    return;\n                this.mIsInTraversal = true;\n                this.mWillDrawSoon = true;\n                let windowSizeMayChange = false;\n                let newSurface = false;\n                let surfaceChanged = false;\n                let lp = new view_2.ViewGroup.LayoutParams(view_2.ViewGroup.LayoutParams.MATCH_PARENT, view_2.ViewGroup.LayoutParams.MATCH_PARENT);\n                let desiredWindowWidth;\n                let desiredWindowHeight;\n                let attachInfo = this.mAttachInfo;\n                let viewVisibility = this.getHostVisibility();\n                let viewVisibilityChanged = this.mViewVisibility != viewVisibility;\n                let params = null;\n                let frame = this.mWinFrame;\n                if (this.mFirst) {\n                    this.mFullRedrawNeeded = true;\n                    this.mLayoutRequested = true;\n                    let packageMetrics = Resources.getDisplayMetrics();\n                    desiredWindowWidth = packageMetrics.widthPixels;\n                    desiredWindowHeight = packageMetrics.heightPixels;\n                    viewVisibilityChanged = false;\n                    host.dispatchAttachedToWindow(attachInfo, 0);\n                    attachInfo.mTreeObserver.dispatchOnWindowAttachedChange(true);\n                }\n                else {\n                    desiredWindowWidth = frame.width();\n                    desiredWindowHeight = frame.height();\n                    if (desiredWindowWidth != this.mWidth || desiredWindowHeight != this.mHeight) {\n                        if (ViewRootImpl.DEBUG_ORIENTATION) {\n                            Log.v(ViewRootImpl.TAG, \"View \" + host + \" resized to: \" + frame);\n                        }\n                        this.mFullRedrawNeeded = true;\n                        this.mLayoutRequested = true;\n                        windowSizeMayChange = true;\n                    }\n                }\n                ViewRootImpl.getRunQueue(this).executeActions(attachInfo.mHandler);\n                let layoutRequested = this.mLayoutRequested;\n                if (layoutRequested) {\n                    if (this.mFirst) {\n                    }\n                    else {\n                        if (lp.width == view_2.ViewGroup.LayoutParams.WRAP_CONTENT\n                            || lp.height == view_2.ViewGroup.LayoutParams.WRAP_CONTENT) {\n                            windowSizeMayChange = true;\n                            let packageMetrics = Resources.getDisplayMetrics();\n                            desiredWindowWidth = packageMetrics.widthPixels;\n                            desiredWindowHeight = packageMetrics.heightPixels;\n                        }\n                        windowSizeMayChange = windowSizeMayChange || this.measureHierarchy(host, lp, desiredWindowWidth, desiredWindowHeight);\n                    }\n                    windowSizeMayChange == windowSizeMayChange || this.measureHierarchy(host, lp, desiredWindowWidth, desiredWindowHeight);\n                }\n                if (this.mFirst || attachInfo.mViewVisibilityChanged) {\n                    attachInfo.mViewVisibilityChanged = false;\n                }\n                if (layoutRequested) {\n                    this.mLayoutRequested = false;\n                }\n                let windowShouldResize = layoutRequested && windowSizeMayChange\n                    && ((this.mWidth != host.getMeasuredWidth() || this.mHeight != host.getMeasuredHeight())\n                        || (lp.width == view_2.ViewGroup.LayoutParams.WRAP_CONTENT &&\n                            frame.width() < desiredWindowWidth && frame.width() != this.mWidth)\n                        || (lp.height == view_2.ViewGroup.LayoutParams.WRAP_CONTENT &&\n                            frame.height() < desiredWindowHeight && frame.height() != this.mHeight));\n                if (this.mFirst || windowShouldResize || viewVisibilityChanged) {\n                    if (ViewRootImpl.DEBUG_LAYOUT) {\n                        Log.i(ViewRootImpl.TAG, \"host=w:\" + host.getMeasuredWidth() + \", h:\" +\n                            host.getMeasuredHeight() + \", params=\" + params);\n                    }\n                    if (ViewRootImpl.DEBUG_ORIENTATION)\n                        Log.v(ViewRootImpl.TAG, \"Relayout returned: frame=\" + frame);\n                    if (this.mWidth != frame.width() || this.mHeight != frame.height()) {\n                        this.mWidth = frame.width();\n                        this.mHeight = frame.height();\n                    }\n                    if (this.mWidth != host.getMeasuredWidth()\n                        || this.mHeight != host.getMeasuredHeight()) {\n                        let childWidthMeasureSpec = ViewRootImpl.getRootMeasureSpec(this.mWidth, lp.width);\n                        let childHeightMeasureSpec = ViewRootImpl.getRootMeasureSpec(this.mHeight, lp.height);\n                        if (ViewRootImpl.DEBUG_LAYOUT)\n                            Log.v(ViewRootImpl.TAG, \"Ooops, something changed!  mWidth=\"\n                                + this.mWidth + \" measuredWidth=\" + host.getMeasuredWidth()\n                                + \" mHeight=\" + this.mHeight\n                                + \" measuredHeight=\" + host.getMeasuredHeight());\n                        this.performMeasure(childWidthMeasureSpec, childHeightMeasureSpec);\n                        layoutRequested = true;\n                    }\n                }\n                const didLayout = layoutRequested;\n                let triggerGlobalLayoutListener = didLayout;\n                if (didLayout) {\n                    this.performLayout(lp, desiredWindowWidth, desiredWindowHeight);\n                    if (ViewRootImpl.DBG) {\n                        System.out.println(\"======================================\");\n                        System.out.println(\"performTraversals -- after setFrame\");\n                        host.debug();\n                    }\n                }\n                if (triggerGlobalLayoutListener) {\n                    attachInfo.mTreeObserver.dispatchOnGlobalLayout();\n                }\n                let skipDraw = false;\n                this.mFirst = false;\n                this.mWillDrawSoon = false;\n                this.mViewVisibility = viewVisibility;\n                let cancelDraw = attachInfo.mTreeObserver.dispatchOnPreDraw() ||\n                    viewVisibility != View.VISIBLE;\n                if (!cancelDraw) {\n                    if (!skipDraw) {\n                        this.performDraw();\n                    }\n                }\n                else {\n                    if (viewVisibility == View.VISIBLE) {\n                        this.scheduleTraversals();\n                    }\n                }\n                this.mIsInTraversal = false;\n            }\n            performLayout(lp, desiredWindowWidth, desiredWindowHeight) {\n                this.mLayoutRequested = false;\n                this.mInLayout = true;\n                let host = this.mView;\n                if (ViewRootImpl.DEBUG_ORIENTATION || ViewRootImpl.DEBUG_LAYOUT) {\n                    Log.v(ViewRootImpl.TAG, \"Laying out \" + host + \" to (\" +\n                        host.getMeasuredWidth() + \", \" + host.getMeasuredHeight() + \")\");\n                }\n                host.layout(0, 0, host.getMeasuredWidth(), host.getMeasuredHeight());\n                this.mInLayout = false;\n                let numViewsRequestingLayout = this.mLayoutRequesters.length;\n                if (numViewsRequestingLayout > 0) {\n                    let validLayoutRequesters = this.getValidLayoutRequesters(this.mLayoutRequesters, false);\n                    if (validLayoutRequesters != null) {\n                        this.mHandlingLayoutInLayoutRequest = true;\n                        let numValidRequests = validLayoutRequesters.length;\n                        for (let i = 0; i < numValidRequests; ++i) {\n                            let view = validLayoutRequesters[i];\n                            Log.w(\"View\", \"requestLayout() improperly called by \" + view +\n                                \" during layout: running second layout pass\");\n                            view.requestLayout();\n                        }\n                        this.measureHierarchy(host, lp, desiredWindowWidth, desiredWindowHeight);\n                        this.mInLayout = true;\n                        host.layout(0, 0, host.getMeasuredWidth(), host.getMeasuredHeight());\n                        this.mHandlingLayoutInLayoutRequest = false;\n                        validLayoutRequesters = this.getValidLayoutRequesters(this.mLayoutRequesters, true);\n                        if (validLayoutRequesters != null) {\n                            let finalRequesters = validLayoutRequesters;\n                            ViewRootImpl.getRunQueue(this).post({\n                                run() {\n                                    let numValidRequests = finalRequesters.length;\n                                    for (let i = 0; i < numValidRequests; ++i) {\n                                        const view = finalRequesters[i];\n                                        Log.w(\"View\", \"requestLayout() improperly called by \" + view +\n                                            \" during second layout pass: posting in next frame\");\n                                        view.requestLayout();\n                                    }\n                                }\n                            });\n                        }\n                    }\n                }\n                this.mInLayout = false;\n            }\n            getValidLayoutRequesters(layoutRequesters, secondLayoutRequests) {\n                let numViewsRequestingLayout = layoutRequesters.length;\n                let validLayoutRequesters = null;\n                for (let i = 0; i < numViewsRequestingLayout; ++i) {\n                    let view = layoutRequesters[i];\n                    if (view != null && view.mAttachInfo != null && view.mParent != null &&\n                        (secondLayoutRequests || (view.mPrivateFlags & View.PFLAG_FORCE_LAYOUT) ==\n                            View.PFLAG_FORCE_LAYOUT)) {\n                        let gone = false;\n                        let parent = view;\n                        while (parent != null) {\n                            if ((parent.mViewFlags & View.VISIBILITY_MASK) == View.GONE) {\n                                gone = true;\n                                break;\n                            }\n                            if (parent.mParent instanceof View) {\n                                parent = parent.mParent;\n                            }\n                            else {\n                                parent = null;\n                            }\n                        }\n                        if (!gone) {\n                            if (validLayoutRequesters == null) {\n                                validLayoutRequesters = [];\n                            }\n                            validLayoutRequesters.push(view);\n                        }\n                    }\n                }\n                if (!secondLayoutRequests) {\n                    for (let i = 0; i < numViewsRequestingLayout; ++i) {\n                        let view = layoutRequesters[i];\n                        while (view != null &&\n                            (view.mPrivateFlags & View.PFLAG_FORCE_LAYOUT) != 0) {\n                            view.mPrivateFlags &= ~View.PFLAG_FORCE_LAYOUT;\n                            if (view.mParent instanceof View) {\n                                view = view.mParent;\n                            }\n                            else {\n                                view = null;\n                            }\n                        }\n                    }\n                }\n                layoutRequesters.splice(0, layoutRequesters.length);\n                return validLayoutRequesters;\n            }\n            performMeasure(childWidthMeasureSpec, childHeightMeasureSpec) {\n                this.mView.measure(childWidthMeasureSpec, childHeightMeasureSpec);\n            }\n            isInLayout() {\n                return this.mInLayout;\n            }\n            requestLayoutDuringLayout(view) {\n                if (view.mParent == null || view.mAttachInfo == null) {\n                    return true;\n                }\n                if (this.mLayoutRequesters.indexOf(view) === -1) {\n                    this.mLayoutRequesters.push(view);\n                }\n                if (!this.mHandlingLayoutInLayoutRequest) {\n                    return true;\n                }\n                else {\n                    return false;\n                }\n            }\n            trackFPS() {\n                let nowTime = System.currentTimeMillis();\n                if (this.mFpsStartTime < 0) {\n                    this.mFpsStartTime = this.mFpsPrevTime = nowTime;\n                    this.mFpsNumFrames = 0;\n                }\n                else {\n                    this.mFpsNumFrames++;\n                    let frameTime = nowTime - this.mFpsPrevTime;\n                    let totalTime = nowTime - this.mFpsStartTime;\n                    Log.v(ViewRootImpl.TAG, \"Frame time:\\t\" + frameTime);\n                    this.mFpsPrevTime = nowTime;\n                    if (totalTime > 1000) {\n                        let fps = this.mFpsNumFrames * 1000 / totalTime;\n                        Log.v(ViewRootImpl.TAG, \"FPS:\\t\" + fps);\n                        this.mFpsStartTime = nowTime;\n                        this.mFpsNumFrames = 0;\n                    }\n                }\n            }\n            performDraw() {\n                let fullRedrawNeeded = this.mFullRedrawNeeded;\n                this.mFullRedrawNeeded = false;\n                this.mIsDrawing = true;\n                try {\n                    this.draw(fullRedrawNeeded);\n                }\n                finally {\n                    this.mIsDrawing = false;\n                }\n            }\n            draw(fullRedrawNeeded) {\n                if (ViewRootImpl.DEBUG_FPS) {\n                    this.trackFPS();\n                }\n                let attachInfo = this.mAttachInfo;\n                if (attachInfo.mViewScrollChanged) {\n                    attachInfo.mViewScrollChanged = false;\n                    attachInfo.mTreeObserver.dispatchOnScrollChanged();\n                }\n                if (fullRedrawNeeded) {\n                    attachInfo.mIgnoreDirtyState = true;\n                    this.mDirty.set(0, 0, this.mWidth, this.mHeight);\n                }\n                if (ViewRootImpl.DEBUG_ORIENTATION || ViewRootImpl.DEBUG_DRAW) {\n                    Log.v(ViewRootImpl.TAG, \"Draw \" + this.mView + \", width=\" + this.mWidth + \", height=\" + this.mHeight + \", dirty=\" + this.mDirty);\n                }\n                attachInfo.mTreeObserver.dispatchOnDraw();\n                this.drawSoftware();\n            }\n            drawSoftware() {\n                let canvas = this.mSurface.lockCanvas(this.mDirty);\n                this.mDirty.setEmpty();\n                let attachInfo = this.mAttachInfo;\n                attachInfo.mDrawingTime = SystemClock.uptimeMillis();\n                this.mView.mPrivateFlags |= View.PFLAG_DRAWN;\n                attachInfo.mSetIgnoreDirtyState = false;\n                this.mView.draw(canvas);\n                if (!attachInfo.mSetIgnoreDirtyState) {\n                    attachInfo.mIgnoreDirtyState = false;\n                }\n                this.mSurface.unlockCanvasAndPost(canvas);\n                if (ViewRootImpl.LOCAL_LOGV) {\n                    Log.v(ViewRootImpl.TAG, \"Surface unlockCanvasAndPost\");\n                }\n            }\n            isLayoutRequested() {\n                return this.mLayoutRequested;\n            }\n            dispatchInvalidateDelayed(view, delayMilliseconds) {\n                let msg = this.mHandler.obtainMessage(ViewRootHandler.MSG_INVALIDATE, view);\n                this.mHandler.sendMessageDelayed(msg, delayMilliseconds);\n            }\n            dispatchInvalidateRectDelayed(info, delayMilliseconds) {\n                let msg = this.mHandler.obtainMessage(ViewRootHandler.MSG_INVALIDATE_RECT, info);\n                this.mHandler.sendMessageDelayed(msg, delayMilliseconds);\n            }\n            dispatchInvalidateOnAnimation(view) {\n                this.mInvalidateOnAnimationRunnable.addView(view);\n            }\n            dispatchInvalidateRectOnAnimation(info) {\n                this.mInvalidateOnAnimationRunnable.addViewRect(info);\n            }\n            cancelInvalidate(view) {\n                this.mHandler.removeMessages(ViewRootHandler.MSG_INVALIDATE, view);\n                this.mHandler.removeMessages(ViewRootHandler.MSG_INVALIDATE_RECT, view);\n                this.mInvalidateOnAnimationRunnable.removeView(view);\n            }\n            getParent() {\n                return null;\n            }\n            requestLayout() {\n                if (!this.mHandlingLayoutInLayoutRequest) {\n                    this.mLayoutRequested = true;\n                    this.scheduleTraversals();\n                }\n            }\n            invalidate() {\n                this.mDirty.set(0, 0, this.mWidth, this.mHeight);\n                this.scheduleTraversals();\n            }\n            invalidateWorld(view) {\n                view.invalidate();\n                if (view instanceof view_2.ViewGroup) {\n                    let parent = view;\n                    for (let i = 0; i < parent.getChildCount(); i++) {\n                        this.invalidateWorld(parent.getChildAt(i));\n                    }\n                }\n            }\n            invalidateChild(child, dirty) {\n                this.invalidateChildInParent(null, dirty);\n            }\n            invalidateChildInParent(location, dirty) {\n                if (ViewRootImpl.DEBUG_DRAW)\n                    Log.v(ViewRootImpl.TAG, \"Invalidate child: \" + dirty);\n                if (dirty == null) {\n                    this.invalidate();\n                    return null;\n                }\n                else if (dirty.isEmpty()) {\n                    return null;\n                }\n                const localDirty = this.mDirty;\n                if (!localDirty.isEmpty() && !localDirty.contains(dirty)) {\n                    this.mAttachInfo.mSetIgnoreDirtyState = true;\n                    this.mAttachInfo.mIgnoreDirtyState = true;\n                }\n                localDirty.union(dirty.left, dirty.top, dirty.right, dirty.bottom);\n                const intersected = localDirty.intersect(0, 0, this.mWidth, this.mHeight);\n                if (!intersected) {\n                    localDirty.setEmpty();\n                }\n                if (!this.mWillDrawSoon && (intersected)) {\n                    this.scheduleTraversals();\n                }\n                return null;\n            }\n            requestChildFocus(child, focused) {\n            }\n            clearChildFocus(child) {\n            }\n            getChildVisibleRect(child, r, offset) {\n                return undefined;\n            }\n            focusSearch(v, direction) {\n                return undefined;\n            }\n            bringChildToFront(child) {\n            }\n            focusableViewAvailable(v) {\n            }\n            childDrawableStateChanged(child) {\n            }\n            requestDisallowInterceptTouchEvent(disallowIntercept) {\n            }\n            childHasTransientStateChanged(child, hasTransientState) {\n            }\n            static getRunQueue(viewRoot) {\n                if (viewRoot) {\n                    if (!viewRoot.mRunQueue)\n                        viewRoot.mRunQueue = new ViewRootImpl.RunQueue();\n                    return viewRoot.mRunQueue;\n                }\n                else {\n                    if (!this.RunQueueInstance) {\n                        this.RunQueueInstance = new RunQueueForNoViewRoot();\n                    }\n                    return this.RunQueueInstance;\n                }\n            }\n        }\n        ViewRootImpl.TAG = \"ViewRootImpl\";\n        ViewRootImpl.DBG = Log.View_DBG;\n        ViewRootImpl.LOCAL_LOGV = ViewRootImpl.DBG;\n        ViewRootImpl.DEBUG_DRAW = false || ViewRootImpl.LOCAL_LOGV;\n        ViewRootImpl.DEBUG_LAYOUT = false || ViewRootImpl.LOCAL_LOGV;\n        ViewRootImpl.DEBUG_INPUT_RESIZE = false || ViewRootImpl.LOCAL_LOGV;\n        ViewRootImpl.DEBUG_ORIENTATION = false || ViewRootImpl.LOCAL_LOGV;\n        ViewRootImpl.DEBUG_CONFIGURATION = false || ViewRootImpl.LOCAL_LOGV;\n        ViewRootImpl.DEBUG_FPS = false || ViewRootImpl.LOCAL_LOGV;\n        view_2.ViewRootImpl = ViewRootImpl;\n        (function (ViewRootImpl) {\n            class RunQueue {\n                constructor() {\n                    this.mActions = [];\n                }\n                post(action) {\n                    this.postDelayed(action, 0);\n                }\n                postDelayed(action, delayMillis) {\n                    let handlerAction = {\n                        action: action,\n                        delay: delayMillis\n                    };\n                    this.mActions.push(handlerAction);\n                }\n                removeCallbacks(action) {\n                    this.mActions = this.mActions.filter((item) => {\n                        return item.action == action;\n                    });\n                }\n                executeActions(handler) {\n                    for (let handlerAction of this.mActions) {\n                        handler.postDelayed(handlerAction.action, handlerAction.delay);\n                    }\n                    this.mActions = [];\n                }\n            }\n            ViewRootImpl.RunQueue = RunQueue;\n        })(ViewRootImpl = view_2.ViewRootImpl || (view_2.ViewRootImpl = {}));\n        class RunQueueForNoViewRoot extends ViewRootImpl.RunQueue {\n            postDelayed(action, delayMillis) {\n                RunQueueForNoViewRoot.Handler.postDelayed(action, delayMillis);\n            }\n            removeCallbacks(action) {\n                RunQueueForNoViewRoot.Handler.removeCallbacks(action);\n            }\n        }\n        RunQueueForNoViewRoot.Handler = new Handler();\n        class TraversalRunnable {\n            constructor(impl) {\n                this.ViewRootImpl_this = impl;\n            }\n            run() {\n                this.ViewRootImpl_this.doTraversal();\n            }\n        }\n        class InvalidateOnAnimationRunnable {\n            constructor(handler) {\n                this.mPosted = false;\n                this.mViews = new Set();\n                this.mViewRects = new Map();\n                this.mHandler = handler;\n            }\n            addView(view) {\n                this.mViews.add(view);\n                this.postIfNeededLocked();\n            }\n            addViewRect(info) {\n                this.mViewRects.set(info.target, info);\n                this.postIfNeededLocked();\n            }\n            removeView(view) {\n                this.mViews.delete(view);\n                this.mViewRects.delete(view);\n                if (this.mPosted && this.mViews.size === 0 && this.mViewRects.size === 0) {\n                    this.mHandler.removeCallbacks(this);\n                    this.mPosted = false;\n                }\n            }\n            run() {\n                this.mPosted = false;\n                for (let view of this.mViews) {\n                    view.invalidate();\n                }\n                this.mViews.clear();\n                for (let info of this.mViewRects.values()) {\n                    info.target.invalidate(info.left, info.top, info.right, info.bottom);\n                    info.recycle();\n                }\n                this.mViewRects.clear();\n            }\n            postIfNeededLocked() {\n                if (!this.mPosted) {\n                    this.mHandler.post(this);\n                    this.mPosted = true;\n                }\n            }\n        }\n        class ViewRootHandler extends Handler {\n            handleMessage(msg) {\n                switch (msg.what) {\n                    case ViewRootHandler.MSG_INVALIDATE:\n                        msg.obj.invalidate();\n                        break;\n                    case ViewRootHandler.MSG_INVALIDATE_RECT:\n                        const info = msg.obj;\n                        info.target.invalidate(info.left, info.top, info.right, info.bottom);\n                        info.recycle();\n                        break;\n                }\n            }\n        }\n        ViewRootHandler.MSG_INVALIDATE = 1;\n        ViewRootHandler.MSG_INVALIDATE_RECT = 2;\n    })(view = android.view || (android.view = {}));\n})(android || (android = {}));\n/**\n * Created by linfaxin on 15/10/5.\n */\n///<reference path=\"ViewRootImpl.ts\"/>\n///<reference path=\"View.ts\"/>\n///<reference path=\"MotionEvent.ts\"/>\n///<reference path=\"ViewParent.ts\"/>\n///<reference path=\"../graphics/Canvas.ts\"/>\n///<reference path=\"../graphics/Point.ts\"/>\n///<reference path=\"../graphics/Matrix.ts\"/>\n///<reference path=\"../graphics/Rect.ts\"/>\n///<reference path=\"../os/SystemClock.ts\"/>\nvar android;\n(function (android) {\n    var view;\n    (function (view_3) {\n        var Rect = android.graphics.Rect;\n        var SystemClock = android.os.SystemClock;\n        class ViewGroup extends view_3.View {\n            constructor() {\n                super();\n                this.mLastTouchDownTime = 0;\n                this.mLastTouchDownIndex = -1;\n                this.mLastTouchDownX = 0;\n                this.mLastTouchDownY = 0;\n                this.mGroupFlags = 0;\n                this.mLayoutMode = ViewGroup.LAYOUT_MODE_UNDEFINED;\n                this.mChildren = [];\n                this.mSuppressLayout = false;\n                this.mLayoutCalledWhileSuppressed = false;\n                this.initViewGroup();\n            }\n            get mChildrenCount() {\n                return this.mChildren.length;\n            }\n            initViewGroup() {\n                this.setFlags(view_3.View.WILL_NOT_DRAW, view_3.View.DRAW_MASK);\n                this.mGroupFlags |= ViewGroup.FLAG_CLIP_CHILDREN;\n                this.mGroupFlags |= ViewGroup.FLAG_CLIP_TO_PADDING;\n                this.mGroupFlags |= ViewGroup.FLAG_ANIMATION_DONE;\n                this.mGroupFlags |= ViewGroup.FLAG_ANIMATION_CACHE;\n                this.mGroupFlags |= ViewGroup.FLAG_ALWAYS_DRAWN_WITH_CACHE;\n                this.mGroupFlags |= ViewGroup.FLAG_SPLIT_MOTION_EVENTS;\n            }\n            addView(...args) {\n                let child = args[0];\n                let params = child.getLayoutParams();\n                let index = -1;\n                if (args.length == 2) {\n                    if (args[1] instanceof ViewGroup.LayoutParams)\n                        params = args[1];\n                    else\n                        index = args[1];\n                }\n                else if (args.length == 3) {\n                    if (args[2] instanceof ViewGroup.LayoutParams) {\n                        index = args[1];\n                        params = args[2];\n                    }\n                    else {\n                        params = this.generateDefaultLayoutParams();\n                        params.width = args[1];\n                        params.height = args[2];\n                    }\n                }\n                if (params == null) {\n                    params = this.generateDefaultLayoutParams();\n                    if (params == null) {\n                        throw new Error(\"generateDefaultLayoutParams() cannot return null\");\n                    }\n                }\n                this.requestLayout();\n                this.invalidate(true);\n                this.addViewInner(child, index, params, false);\n            }\n            checkLayoutParams(p) {\n                return p != null;\n            }\n            setOnHierarchyChangeListener(listener) {\n                this.mOnHierarchyChangeListener = listener;\n            }\n            onViewAdded(child) {\n                if (this.mOnHierarchyChangeListener != null) {\n                    this.mOnHierarchyChangeListener.onChildViewAdded(this, child);\n                }\n            }\n            onViewRemoved(child) {\n                if (this.mOnHierarchyChangeListener != null) {\n                    this.mOnHierarchyChangeListener.onChildViewRemoved(this, child);\n                }\n            }\n            clearCachedLayoutMode() {\n                if (!this.hasBooleanFlag(ViewGroup.FLAG_LAYOUT_MODE_WAS_EXPLICITLY_SET)) {\n                    this.mLayoutMode = ViewGroup.LAYOUT_MODE_UNDEFINED;\n                }\n            }\n            addViewInLayout(child, index, params, preventRequestLayout = false) {\n                child.mParent = null;\n                this.addViewInner(child, index, params, preventRequestLayout);\n                child.mPrivateFlags = (child.mPrivateFlags & ~ViewGroup.PFLAG_DIRTY_MASK) | ViewGroup.PFLAG_DRAWN;\n                return true;\n            }\n            cleanupLayoutState(child) {\n                child.mPrivateFlags &= ~view_3.View.PFLAG_FORCE_LAYOUT;\n            }\n            addViewInner(child, index, params, preventRequestLayout) {\n                if (child.getParent() != null) {\n                    throw new Error(\"The specified child already has a parent. \" +\n                        \"You must call removeView() on the child's parent first.\");\n                }\n                if (!this.checkLayoutParams(params)) {\n                    params = this.generateLayoutParams(params);\n                }\n                if (preventRequestLayout) {\n                    child.mLayoutParams = params;\n                }\n                else {\n                    child.setLayoutParams(params);\n                }\n                if (index < 0) {\n                    index = this.mChildrenCount;\n                }\n                this.addInArray(child, index);\n                if (preventRequestLayout) {\n                    child.assignParent(this);\n                }\n                else {\n                    child.mParent = this;\n                }\n                let ai = this.mAttachInfo;\n                if (ai != null && (this.mGroupFlags & ViewGroup.FLAG_PREVENT_DISPATCH_ATTACHED_TO_WINDOW) == 0) {\n                    child.dispatchAttachedToWindow(this.mAttachInfo, (this.mViewFlags & ViewGroup.VISIBILITY_MASK));\n                }\n                this.onViewAdded(child);\n                if ((child.mViewFlags & ViewGroup.DUPLICATE_PARENT_STATE) == ViewGroup.DUPLICATE_PARENT_STATE) {\n                    this.mGroupFlags |= ViewGroup.FLAG_NOTIFY_CHILDREN_ON_DRAWABLE_STATE_CHANGE;\n                }\n            }\n            addInArray(child, index) {\n                let count = this.mChildrenCount;\n                if (index == count) {\n                    this.mChildren.push(child);\n                    this.addToBindElement(child.bindElement, null);\n                }\n                else if (index < count) {\n                    let refChild = this.getChildAt(index);\n                    this.mChildren.splice(index, 0, child);\n                    this.addToBindElement(child.bindElement, refChild.bindElement);\n                }\n                else {\n                    throw new Error(\"index=\" + index + \" count=\" + count);\n                }\n            }\n            addToBindElement(childElement, insertBeforeElement) {\n                if (childElement.parentElement) {\n                    if (childElement.parentElement == this.bindElement)\n                        return;\n                    childElement.parentElement.removeChild(childElement);\n                }\n                if (insertBeforeElement) {\n                    this.bindElement.appendChild(childElement);\n                }\n                else {\n                    this.bindElement.insertBefore(childElement, insertBeforeElement);\n                }\n            }\n            removeFromArray(index, count = 1) {\n                let start = Math.max(0, index);\n                let end = Math.min(this.mChildrenCount, start + count);\n                if (start == end) {\n                    return;\n                }\n                for (let i = start; i < end; i++) {\n                    this.mChildren[i].mParent = null;\n                    this.bindElement.removeChild(this.mChildren[i].bindElement);\n                }\n                this.mChildren.splice(index, end - start);\n            }\n            removeView(view) {\n                this.removeViewInternal(view);\n                this.requestLayout();\n                this.invalidate(true);\n            }\n            removeViewInLayout(view) {\n                this.removeViewInternal(view);\n            }\n            removeViewsInLayout(start, count) {\n                this.removeViewsInternal(start, count);\n            }\n            removeViewAt(index) {\n                this.removeViewsInternal(index, 1);\n                this.requestLayout();\n                this.invalidate(true);\n            }\n            removeViews(start, count) {\n                this.removeViewsInternal(start, count);\n                this.requestLayout();\n                this.invalidate(true);\n            }\n            removeViewInternal(view) {\n                let index = this.indexOfChild(view);\n                if (index >= 0) {\n                    this.removeViewsInternal(index, 1);\n                }\n            }\n            removeViewsInternal(start, count) {\n                const detach = this.mAttachInfo != null;\n                const children = this.mChildren;\n                const end = start + count;\n                for (let i = start; i < end; i++) {\n                    const view = children[i];\n                    if (detach) {\n                        view.dispatchDetachedFromWindow();\n                    }\n                    this.onViewRemoved(view);\n                }\n                this.removeFromArray(start, count);\n            }\n            removeAllViews() {\n                this.removeAllViewsInLayout();\n                this.requestLayout();\n                this.invalidate(true);\n            }\n            removeAllViewsInLayout() {\n                const count = this.mChildrenCount;\n                if (count <= 0) {\n                    return;\n                }\n                this.removeViewsInternal(0, count);\n            }\n            indexOfChild(child) {\n                return this.mChildren.indexOf(child);\n            }\n            getChildCount() {\n                return this.mChildrenCount;\n            }\n            getChildAt(index) {\n                if (index < 0 || index >= this.mChildrenCount) {\n                    return null;\n                }\n                return this.mChildren[index];\n            }\n            bringChildToFront(child) {\n                let index = this.indexOfChild(child);\n                if (index >= 0) {\n                    this.removeFromArray(index);\n                    this.addInArray(child, this.mChildrenCount);\n                    child.mParent = this;\n                    this.requestLayout();\n                    this.invalidate();\n                }\n            }\n            hasBooleanFlag(flag) {\n                return (this.mGroupFlags & flag) == flag;\n            }\n            setBooleanFlag(flag, value) {\n                if (value) {\n                    this.mGroupFlags |= flag;\n                }\n                else {\n                    this.mGroupFlags &= ~flag;\n                }\n            }\n            onInterceptTouchEvent(ev) {\n                return false;\n            }\n            dispatchTouchEvent(ev) {\n                let handled = false;\n                if (this.onFilterTouchEventForSecurity(ev)) {\n                    let action = ev.getAction();\n                    let actionMasked = action & view_3.MotionEvent.ACTION_MASK;\n                    if (actionMasked == view_3.MotionEvent.ACTION_DOWN) {\n                        this.cancelAndClearTouchTargets(ev);\n                        this.resetTouchState();\n                    }\n                    let intercepted;\n                    if (actionMasked == view_3.MotionEvent.ACTION_DOWN\n                        || this.mFirstTouchTarget != null) {\n                        let disallowIntercept = (this.mGroupFlags & ViewGroup.FLAG_DISALLOW_INTERCEPT) != 0;\n                        if (!disallowIntercept) {\n                            intercepted = this.onInterceptTouchEvent(ev);\n                            ev.setAction(action);\n                        }\n                        else {\n                            intercepted = false;\n                        }\n                    }\n                    else {\n                        intercepted = true;\n                    }\n                    let canceled = ViewGroup.resetCancelNextUpFlag(this)\n                        || actionMasked == view_3.MotionEvent.ACTION_CANCEL;\n                    let split = (this.mGroupFlags & ViewGroup.FLAG_SPLIT_MOTION_EVENTS) != 0;\n                    let newTouchTarget = null;\n                    let alreadyDispatchedToNewTouchTarget = false;\n                    if (!canceled && !intercepted) {\n                        if (actionMasked == view_3.MotionEvent.ACTION_DOWN\n                            || (split && actionMasked == view_3.MotionEvent.ACTION_POINTER_DOWN)\n                            || actionMasked == view_3.MotionEvent.ACTION_HOVER_MOVE) {\n                            let actionIndex = ev.getActionIndex();\n                            let idBitsToAssign = split ? 1 << ev.getPointerId(actionIndex)\n                                : TouchTarget.ALL_POINTER_IDS;\n                            this.removePointersFromTouchTargets(idBitsToAssign);\n                            let childrenCount = this.mChildrenCount;\n                            if (newTouchTarget == null && childrenCount != 0) {\n                                let x = ev.getX(actionIndex);\n                                let y = ev.getY(actionIndex);\n                                let children = this.mChildren;\n                                let customOrder = this.isChildrenDrawingOrderEnabled();\n                                for (let i = childrenCount - 1; i >= 0; i--) {\n                                    let childIndex = customOrder ? this.getChildDrawingOrder(childrenCount, i) : i;\n                                    let child = children[childIndex];\n                                    if (!ViewGroup.canViewReceivePointerEvents(child)\n                                        || !this.isTransformedTouchPointInView(x, y, child, null)) {\n                                        continue;\n                                    }\n                                    newTouchTarget = this.getTouchTarget(child);\n                                    if (newTouchTarget != null) {\n                                        newTouchTarget.pointerIdBits |= idBitsToAssign;\n                                        break;\n                                    }\n                                    ViewGroup.resetCancelNextUpFlag(child);\n                                    if (this.dispatchTransformedTouchEvent(ev, false, child, idBitsToAssign)) {\n                                        this.mLastTouchDownTime = ev.getDownTime();\n                                        this.mLastTouchDownIndex = childIndex;\n                                        this.mLastTouchDownX = ev.getX();\n                                        this.mLastTouchDownY = ev.getY();\n                                        newTouchTarget = this.addTouchTarget(child, idBitsToAssign);\n                                        alreadyDispatchedToNewTouchTarget = true;\n                                        break;\n                                    }\n                                }\n                            }\n                            if (newTouchTarget == null && this.mFirstTouchTarget != null) {\n                                newTouchTarget = this.mFirstTouchTarget;\n                                while (newTouchTarget.next != null) {\n                                    newTouchTarget = newTouchTarget.next;\n                                }\n                                newTouchTarget.pointerIdBits |= idBitsToAssign;\n                            }\n                        }\n                    }\n                    if (this.mFirstTouchTarget == null) {\n                        handled = this.dispatchTransformedTouchEvent(ev, canceled, null, TouchTarget.ALL_POINTER_IDS);\n                    }\n                    else {\n                        let predecessor = null;\n                        let target = this.mFirstTouchTarget;\n                        while (target != null) {\n                            const next = target.next;\n                            if (alreadyDispatchedToNewTouchTarget && target == newTouchTarget) {\n                                handled = true;\n                            }\n                            else {\n                                let cancelChild = ViewGroup.resetCancelNextUpFlag(target.child)\n                                    || intercepted;\n                                if (this.dispatchTransformedTouchEvent(ev, cancelChild, target.child, target.pointerIdBits)) {\n                                    handled = true;\n                                }\n                                if (cancelChild) {\n                                    if (predecessor == null) {\n                                        this.mFirstTouchTarget = next;\n                                    }\n                                    else {\n                                        predecessor.next = next;\n                                    }\n                                    target.recycle();\n                                    target = next;\n                                    continue;\n                                }\n                            }\n                            predecessor = target;\n                            target = next;\n                        }\n                    }\n                    if (canceled\n                        || actionMasked == view_3.MotionEvent.ACTION_UP\n                        || actionMasked == view_3.MotionEvent.ACTION_HOVER_MOVE) {\n                        this.resetTouchState();\n                    }\n                    else if (split && actionMasked == view_3.MotionEvent.ACTION_POINTER_UP) {\n                        let actionIndex = ev.getActionIndex();\n                        let idBitsToRemove = 1 << ev.getPointerId(actionIndex);\n                        this.removePointersFromTouchTargets(idBitsToRemove);\n                    }\n                }\n                return handled;\n            }\n            resetTouchState() {\n                this.clearTouchTargets();\n                ViewGroup.resetCancelNextUpFlag(this);\n                this.mGroupFlags &= ~ViewGroup.FLAG_DISALLOW_INTERCEPT;\n            }\n            static resetCancelNextUpFlag(view) {\n                if ((view.mPrivateFlags & view_3.View.PFLAG_CANCEL_NEXT_UP_EVENT) != 0) {\n                    view.mPrivateFlags &= ~view_3.View.PFLAG_CANCEL_NEXT_UP_EVENT;\n                    return true;\n                }\n                return false;\n            }\n            clearTouchTargets() {\n                let target = this.mFirstTouchTarget;\n                if (target != null) {\n                    do {\n                        let next = target.next;\n                        target.recycle();\n                        target = next;\n                    } while (target != null);\n                    this.mFirstTouchTarget = null;\n                }\n            }\n            cancelAndClearTouchTargets(event) {\n                if (this.mFirstTouchTarget != null) {\n                    let syntheticEvent = false;\n                    if (event == null) {\n                        let now = SystemClock.uptimeMillis();\n                        event = view_3.MotionEvent.obtainWithAction(now, now, view_3.MotionEvent.ACTION_CANCEL, 0, 0);\n                        syntheticEvent = true;\n                    }\n                    for (let target = this.mFirstTouchTarget; target != null; target = target.next) {\n                        ViewGroup.resetCancelNextUpFlag(target.child);\n                        this.dispatchTransformedTouchEvent(event, true, target.child, target.pointerIdBits);\n                    }\n                    this.clearTouchTargets();\n                    if (syntheticEvent) {\n                        event.recycle();\n                    }\n                }\n            }\n            getTouchTarget(child) {\n                for (let target = this.mFirstTouchTarget; target != null; target = target.next) {\n                    if (target.child == child) {\n                        return target;\n                    }\n                }\n                return null;\n            }\n            addTouchTarget(child, pointerIdBits) {\n                let target = TouchTarget.obtain(child, pointerIdBits);\n                target.next = this.mFirstTouchTarget;\n                this.mFirstTouchTarget = target;\n                return target;\n            }\n            removePointersFromTouchTargets(pointerIdBits) {\n                let predecessor = null;\n                let target = this.mFirstTouchTarget;\n                while (target != null) {\n                    let next = target.next;\n                    if ((target.pointerIdBits & pointerIdBits) != 0) {\n                        target.pointerIdBits &= ~pointerIdBits;\n                        if (target.pointerIdBits == 0) {\n                            if (predecessor == null) {\n                                this.mFirstTouchTarget = next;\n                            }\n                            else {\n                                predecessor.next = next;\n                            }\n                            target.recycle();\n                            target = next;\n                            continue;\n                        }\n                    }\n                    predecessor = target;\n                    target = next;\n                }\n            }\n            cancelTouchTarget(view) {\n                let predecessor = null;\n                let target = this.mFirstTouchTarget;\n                while (target != null) {\n                    let next = target.next;\n                    if (target.child == view) {\n                        if (predecessor == null) {\n                            this.mFirstTouchTarget = next;\n                        }\n                        else {\n                            predecessor.next = next;\n                        }\n                        target.recycle();\n                        let now = SystemClock.uptimeMillis();\n                        let event = view_3.MotionEvent.obtainWithAction(now, now, view_3.MotionEvent.ACTION_CANCEL, 0, 0);\n                        view.dispatchTouchEvent(event);\n                        event.recycle();\n                        return;\n                    }\n                    predecessor = target;\n                    target = next;\n                }\n            }\n            static canViewReceivePointerEvents(child) {\n                return (child.mViewFlags & view_3.View.VISIBILITY_MASK) == view_3.View.VISIBLE;\n            }\n            isTransformedTouchPointInView(x, y, child, outLocalPoint) {\n                let localX = x + this.mScrollX - child.mLeft;\n                let localY = y + this.mScrollY - child.mTop;\n                let isInView = child.pointInView(localX, localY);\n                if (isInView && outLocalPoint != null) {\n                    outLocalPoint.set(localX, localY);\n                }\n                return isInView;\n            }\n            dispatchTransformedTouchEvent(event, cancel, child, desiredPointerIdBits) {\n                let handled;\n                const oldAction = event.getAction();\n                if (cancel || oldAction == view_3.MotionEvent.ACTION_CANCEL) {\n                    event.setAction(view_3.MotionEvent.ACTION_CANCEL);\n                    if (child == null) {\n                        handled = super.dispatchTouchEvent(event);\n                    }\n                    else {\n                        handled = child.dispatchTouchEvent(event);\n                    }\n                    event.setAction(oldAction);\n                    return handled;\n                }\n                const oldPointerIdBits = event.getPointerIdBits();\n                const newPointerIdBits = oldPointerIdBits & desiredPointerIdBits;\n                if (newPointerIdBits == 0) {\n                    return false;\n                }\n                let transformedEvent;\n                if (newPointerIdBits == oldPointerIdBits) {\n                    if (child == null || child.hasIdentityMatrix()) {\n                        if (child == null) {\n                            handled = super.dispatchTouchEvent(event);\n                        }\n                        else {\n                            let offsetX = this.mScrollX - child.mLeft;\n                            let offsetY = this.mScrollY - child.mTop;\n                            event.offsetLocation(offsetX, offsetY);\n                            handled = child.dispatchTouchEvent(event);\n                            event.offsetLocation(-offsetX, -offsetY);\n                        }\n                        return handled;\n                    }\n                    transformedEvent = view_3.MotionEvent.obtain(event);\n                }\n                else {\n                    transformedEvent = event.split(newPointerIdBits);\n                }\n                if (child == null) {\n                    handled = super.dispatchTouchEvent(transformedEvent);\n                }\n                else {\n                    let offsetX = this.mScrollX - child.mLeft;\n                    let offsetY = this.mScrollY - child.mTop;\n                    transformedEvent.offsetLocation(offsetX, offsetY);\n                    handled = child.dispatchTouchEvent(transformedEvent);\n                }\n                transformedEvent.recycle();\n                return handled;\n            }\n            isChildrenDrawingOrderEnabled() {\n                return (this.mGroupFlags & ViewGroup.FLAG_USE_CHILD_DRAWING_ORDER) == ViewGroup.FLAG_USE_CHILD_DRAWING_ORDER;\n            }\n            setChildrenDrawingOrderEnabled(enabled) {\n                this.setBooleanFlag(ViewGroup.FLAG_USE_CHILD_DRAWING_ORDER, enabled);\n            }\n            getChildDrawingOrder(childCount, i) {\n                return i;\n            }\n            generateLayoutParams(p) {\n                return p;\n            }\n            generateDefaultLayoutParams() {\n                return new ViewGroup.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);\n            }\n            measureChildren(widthMeasureSpec, heightMeasureSpec) {\n                const size = this.mChildren.length;\n                for (let i = 0; i < size; ++i) {\n                    const child = this.mChildren[i];\n                    if ((child.mViewFlags & view_3.View.VISIBILITY_MASK) != view_3.View.GONE) {\n                        this.measureChild(child, widthMeasureSpec, heightMeasureSpec);\n                    }\n                }\n            }\n            measureChild(child, parentWidthMeasureSpec, parentHeightMeasureSpec) {\n                let lp = child.getLayoutParams();\n                const childWidthMeasureSpec = ViewGroup.getChildMeasureSpec(parentWidthMeasureSpec, this.mPaddingLeft + this.mPaddingRight, lp.width);\n                const childHeightMeasureSpec = ViewGroup.getChildMeasureSpec(parentHeightMeasureSpec, this.mPaddingTop + this.mPaddingBottom, lp.height);\n                child.measure(childWidthMeasureSpec, childHeightMeasureSpec);\n            }\n            measureChildWithMargins(child, parentWidthMeasureSpec, widthUsed, parentHeightMeasureSpec, heightUsed) {\n                let lp = child.getLayoutParams();\n                if (lp instanceof ViewGroup.MarginLayoutParams) {\n                    const childWidthMeasureSpec = ViewGroup.getChildMeasureSpec(parentWidthMeasureSpec, this.mPaddingLeft + this.mPaddingRight + lp.leftMargin + lp.rightMargin\n                        + widthUsed, lp.width);\n                    const childHeightMeasureSpec = ViewGroup.getChildMeasureSpec(parentHeightMeasureSpec, this.mPaddingTop + this.mPaddingBottom + lp.topMargin + lp.bottomMargin\n                        + heightUsed, lp.height);\n                    child.measure(childWidthMeasureSpec, childHeightMeasureSpec);\n                }\n            }\n            static getChildMeasureSpec(spec, padding, childDimension) {\n                let MeasureSpec = view_3.View.MeasureSpec;\n                let specMode = MeasureSpec.getMode(spec);\n                let specSize = MeasureSpec.getSize(spec);\n                let size = Math.max(0, specSize - padding);\n                let resultSize = 0;\n                let resultMode = 0;\n                switch (specMode) {\n                    case MeasureSpec.EXACTLY:\n                        if (childDimension >= 0) {\n                            resultSize = childDimension;\n                            resultMode = MeasureSpec.EXACTLY;\n                        }\n                        else if (childDimension == ViewGroup.LayoutParams.MATCH_PARENT) {\n                            resultSize = size;\n                            resultMode = MeasureSpec.EXACTLY;\n                        }\n                        else if (childDimension == ViewGroup.LayoutParams.WRAP_CONTENT) {\n                            resultSize = size;\n                            resultMode = MeasureSpec.AT_MOST;\n                        }\n                        break;\n                    case MeasureSpec.AT_MOST:\n                        if (childDimension >= 0) {\n                            resultSize = childDimension;\n                            resultMode = MeasureSpec.EXACTLY;\n                        }\n                        else if (childDimension == ViewGroup.LayoutParams.MATCH_PARENT) {\n                            resultSize = size;\n                            resultMode = MeasureSpec.AT_MOST;\n                        }\n                        else if (childDimension == ViewGroup.LayoutParams.WRAP_CONTENT) {\n                            resultSize = size;\n                            resultMode = MeasureSpec.AT_MOST;\n                        }\n                        break;\n                    case MeasureSpec.UNSPECIFIED:\n                        if (childDimension >= 0) {\n                            resultSize = childDimension;\n                            resultMode = MeasureSpec.EXACTLY;\n                        }\n                        else if (childDimension == ViewGroup.LayoutParams.MATCH_PARENT) {\n                            resultSize = 0;\n                            resultMode = MeasureSpec.UNSPECIFIED;\n                        }\n                        else if (childDimension == ViewGroup.LayoutParams.WRAP_CONTENT) {\n                            resultSize = 0;\n                            resultMode = MeasureSpec.UNSPECIFIED;\n                        }\n                        break;\n                }\n                return MeasureSpec.makeMeasureSpec(resultSize, resultMode);\n            }\n            dispatchAttachedToWindow(info, visibility) {\n                this.mGroupFlags |= ViewGroup.FLAG_PREVENT_DISPATCH_ATTACHED_TO_WINDOW;\n                super.dispatchAttachedToWindow(info, visibility);\n                this.mGroupFlags &= ~ViewGroup.FLAG_PREVENT_DISPATCH_ATTACHED_TO_WINDOW;\n                const count = this.mChildrenCount;\n                const children = this.mChildren;\n                for (let i = 0; i < count; i++) {\n                    const child = children[i];\n                    child.dispatchAttachedToWindow(info, visibility | (child.mViewFlags & view_3.View.VISIBILITY_MASK));\n                }\n            }\n            onAttachedToWindow() {\n                super.onAttachedToWindow();\n                this.clearCachedLayoutMode();\n            }\n            onDetachedFromWindow() {\n                super.onDetachedFromWindow();\n                this.clearCachedLayoutMode();\n            }\n            dispatchDetachedFromWindow() {\n                this.cancelAndClearTouchTargets(null);\n                this.mLayoutCalledWhileSuppressed = false;\n                this.mChildren.forEach((child) => child.dispatchDetachedFromWindow());\n                super.dispatchDetachedFromWindow();\n            }\n            dispatchVisibilityChanged(changedView, visibility) {\n                super.dispatchVisibilityChanged(changedView, visibility);\n                const count = this.mChildrenCount;\n                let children = this.mChildren;\n                for (let i = 0; i < count; i++) {\n                    children[i].dispatchVisibilityChanged(changedView, visibility);\n                }\n            }\n            offsetDescendantRectToMyCoords(descendant, rect) {\n                this.offsetRectBetweenParentAndChild(descendant, rect, true, false);\n            }\n            offsetRectIntoDescendantCoords(descendant, rect) {\n                this.offsetRectBetweenParentAndChild(descendant, rect, false, false);\n            }\n            offsetRectBetweenParentAndChild(descendant, rect, offsetFromChildToParent, clipToBounds) {\n                if (descendant == this) {\n                    return;\n                }\n                let theParent = descendant.mParent;\n                while ((theParent != null)\n                    && (theParent instanceof view_3.View)\n                    && (theParent != this)) {\n                    if (offsetFromChildToParent) {\n                        rect.offset(descendant.mLeft - descendant.mScrollX, descendant.mTop - descendant.mScrollY);\n                        if (clipToBounds) {\n                            let p = theParent;\n                            rect.intersect(0, 0, p.mRight - p.mLeft, p.mBottom - p.mTop);\n                        }\n                    }\n                    else {\n                        if (clipToBounds) {\n                            let p = theParent;\n                            rect.intersect(0, 0, p.mRight - p.mLeft, p.mBottom - p.mTop);\n                        }\n                        rect.offset(descendant.mScrollX - descendant.mLeft, descendant.mScrollY - descendant.mTop);\n                    }\n                    descendant = theParent;\n                    theParent = descendant.mParent;\n                }\n                if (theParent == this) {\n                    if (offsetFromChildToParent) {\n                        rect.offset(descendant.mLeft - descendant.mScrollX, descendant.mTop - descendant.mScrollY);\n                    }\n                    else {\n                        rect.offset(descendant.mScrollX - descendant.mLeft, descendant.mScrollY - descendant.mTop);\n                    }\n                }\n                else {\n                    throw new Error(\"parameter must be a descendant of this view\");\n                }\n            }\n            offsetChildrenTopAndBottom(offset) {\n                const count = this.mChildrenCount;\n                const children = this.mChildren;\n                for (let i = 0; i < count; i++) {\n                    const v = children[i];\n                    v.mTop += offset;\n                    v.mBottom += offset;\n                }\n                this.invalidateViewProperty(false, false);\n            }\n            suppressLayout(suppress) {\n                this.mSuppressLayout = suppress;\n                if (!suppress) {\n                    if (this.mLayoutCalledWhileSuppressed) {\n                        this.requestLayout();\n                        this.mLayoutCalledWhileSuppressed = false;\n                    }\n                }\n            }\n            isLayoutSuppressed() {\n                return this.mSuppressLayout;\n            }\n            layout(l, t, r, b) {\n                if (!this.mSuppressLayout) {\n                    super.layout(l, t, r, b);\n                }\n                else {\n                    this.mLayoutCalledWhileSuppressed = true;\n                }\n            }\n            getChildVisibleRect(child, r, offset) {\n                const rect = this.mAttachInfo != null ? this.mAttachInfo.mTmpTransformRect : new Rect();\n                rect.set(r);\n                let dx = child.mLeft - this.mScrollX;\n                let dy = child.mTop - this.mScrollY;\n                rect.offset(dx, dy);\n                if (offset != null) {\n                    offset.x += dx;\n                    offset.y += dy;\n                }\n                if (rect.intersect(0, 0, this.mRight - this.mLeft, this.mBottom - this.mTop)) {\n                    if (this.mParent == null)\n                        return true;\n                    r.set(rect);\n                    return this.mParent.getChildVisibleRect(this, r, offset);\n                }\n                return false;\n            }\n            dispatchDraw(canvas) {\n                let count = this.mChildrenCount;\n                let children = this.mChildren;\n                let flags = this.mGroupFlags;\n                let saveCount = 0;\n                let clipToPadding = (flags & ViewGroup.CLIP_TO_PADDING_MASK) == ViewGroup.CLIP_TO_PADDING_MASK;\n                if (clipToPadding) {\n                    saveCount = canvas.save();\n                    canvas.clipRect(this.mScrollX + this.mPaddingLeft, this.mScrollY + this.mPaddingTop, this.mScrollX + this.mRight - this.mLeft - this.mPaddingRight, this.mScrollY + this.mBottom - this.mTop - this.mPaddingBottom);\n                }\n                this.mPrivateFlags &= ~ViewGroup.PFLAG_DRAW_ANIMATION;\n                this.mGroupFlags &= ~ViewGroup.FLAG_INVALIDATE_REQUIRED;\n                let more = false;\n                let drawingTime = this.getDrawingTime();\n                let customOrder = this.isChildrenDrawingOrderEnabled();\n                for (let i = 0; i < count; i++) {\n                    let child = children[customOrder ? this.getChildDrawingOrder(count, i) : i];\n                    if ((child.mViewFlags & view_3.View.VISIBILITY_MASK) == view_3.View.VISIBLE) {\n                        more = more || this.drawChild(canvas, child, drawingTime);\n                    }\n                }\n                if (clipToPadding) {\n                    canvas.restoreToCount(saveCount);\n                }\n                flags = this.mGroupFlags;\n                if ((flags & ViewGroup.FLAG_INVALIDATE_REQUIRED) == ViewGroup.FLAG_INVALIDATE_REQUIRED) {\n                    this.invalidate(true);\n                }\n            }\n            drawChild(canvas, child, drawingTime) {\n                return child.drawFromParent(canvas, this, drawingTime);\n            }\n            getClipChildren() {\n                return ((this.mGroupFlags & ViewGroup.FLAG_CLIP_CHILDREN) != 0);\n            }\n            setClipChildren(clipChildren) {\n                let previousValue = (this.mGroupFlags & ViewGroup.FLAG_CLIP_CHILDREN) == ViewGroup.FLAG_CLIP_CHILDREN;\n                if (clipChildren != previousValue) {\n                    this.setBooleanFlag(ViewGroup.FLAG_CLIP_CHILDREN, clipChildren);\n                }\n            }\n            setClipToPadding(clipToPadding) {\n                this.setBooleanFlag(ViewGroup.FLAG_CLIP_TO_PADDING, clipToPadding);\n            }\n            invalidateChild(child, dirty) {\n                let parent = this;\n                const attachInfo = this.mAttachInfo;\n                if (attachInfo != null) {\n                    const drawAnimation = (child.mPrivateFlags & view_3.View.PFLAG_DRAW_ANIMATION)\n                        == view_3.View.PFLAG_DRAW_ANIMATION;\n                    let childMatrix = child.getMatrix();\n                    const isOpaque = child.isOpaque() && !drawAnimation &&\n                        child.getAnimation() == null && childMatrix.isIdentity();\n                    let opaqueFlag = isOpaque ? view_3.View.PFLAG_DIRTY_OPAQUE : view_3.View.PFLAG_DIRTY;\n                    if (child.mLayerType != view_3.View.LAYER_TYPE_NONE) {\n                        this.mPrivateFlags |= view_3.View.PFLAG_INVALIDATED;\n                        this.mPrivateFlags &= ~view_3.View.PFLAG_DRAWING_CACHE_VALID;\n                    }\n                    const location = attachInfo.mInvalidateChildLocation;\n                    location[0] = child.mLeft;\n                    location[1] = child.mTop;\n                    do {\n                        let view = null;\n                        if (parent instanceof view_3.View) {\n                            view = parent;\n                        }\n                        if (view != null) {\n                            opaqueFlag = view_3.View.PFLAG_DIRTY;\n                            if ((view.mPrivateFlags & view_3.View.PFLAG_DIRTY_MASK) != view_3.View.PFLAG_DIRTY) {\n                                view.mPrivateFlags = (view.mPrivateFlags & ~view_3.View.PFLAG_DIRTY_MASK) | opaqueFlag;\n                            }\n                        }\n                        parent = parent.invalidateChildInParent(location, dirty);\n                        if (view != null) {\n                            let m = view.getMatrix();\n                            if (!m.isIdentity()) {\n                                let boundingRect = attachInfo.mTmpTransformRect;\n                                boundingRect.set(dirty);\n                                m.mapRect(boundingRect);\n                                dirty.set(boundingRect);\n                            }\n                        }\n                    } while (parent != null);\n                }\n            }\n            invalidateChildInParent(location, dirty) {\n                if ((this.mPrivateFlags & view_3.View.PFLAG_DRAWN) == view_3.View.PFLAG_DRAWN ||\n                    (this.mPrivateFlags & view_3.View.PFLAG_DRAWING_CACHE_VALID) == view_3.View.PFLAG_DRAWING_CACHE_VALID) {\n                    if ((this.mGroupFlags & (ViewGroup.FLAG_OPTIMIZE_INVALIDATE | ViewGroup.FLAG_ANIMATION_DONE)) !=\n                        ViewGroup.FLAG_OPTIMIZE_INVALIDATE) {\n                        dirty.offset(location[0] - this.mScrollX, location[1] - this.mScrollY);\n                        if ((this.mGroupFlags & ViewGroup.FLAG_CLIP_CHILDREN) == 0) {\n                            dirty.union(0, 0, this.mRight - this.mLeft, this.mBottom - this.mTop);\n                        }\n                        const left = this.mLeft;\n                        const top = this.mTop;\n                        if ((this.mGroupFlags & ViewGroup.FLAG_CLIP_CHILDREN) == ViewGroup.FLAG_CLIP_CHILDREN) {\n                            if (!dirty.intersect(0, 0, this.mRight - left, this.mBottom - top)) {\n                                dirty.setEmpty();\n                            }\n                        }\n                        this.mPrivateFlags &= ~view_3.View.PFLAG_DRAWING_CACHE_VALID;\n                        location[0] = left;\n                        location[1] = top;\n                        if (this.mLayerType != view_3.View.LAYER_TYPE_NONE) {\n                            this.mPrivateFlags |= view_3.View.PFLAG_INVALIDATED;\n                        }\n                        return this.mParent;\n                    }\n                    else {\n                        this.mPrivateFlags &= ~view_3.View.PFLAG_DRAWN & ~view_3.View.PFLAG_DRAWING_CACHE_VALID;\n                        location[0] = this.mLeft;\n                        location[1] = this.mTop;\n                        if ((this.mGroupFlags & ViewGroup.FLAG_CLIP_CHILDREN) == ViewGroup.FLAG_CLIP_CHILDREN) {\n                            dirty.set(0, 0, this.mRight - this.mLeft, this.mBottom - this.mTop);\n                        }\n                        else {\n                            dirty.union(0, 0, this.mRight - this.mLeft, this.mBottom - this.mTop);\n                        }\n                        if (this.mLayerType != view_3.View.LAYER_TYPE_NONE) {\n                            this.mPrivateFlags |= view_3.View.PFLAG_INVALIDATED;\n                        }\n                        return this.mParent;\n                    }\n                }\n                return null;\n            }\n            invalidateChildFast(child, dirty) {\n                let parent = this;\n                const attachInfo = this.mAttachInfo;\n                if (attachInfo != null) {\n                    let left = child.mLeft;\n                    let top = child.mTop;\n                    if (!child.getMatrix().isIdentity()) {\n                        child.transformRect(dirty);\n                    }\n                    do {\n                        if (parent instanceof ViewGroup) {\n                            let parentVG = parent;\n                            if (parentVG.mLayerType != view_3.View.LAYER_TYPE_NONE) {\n                                parentVG.invalidate();\n                                parent = null;\n                            }\n                            else {\n                                parent = parentVG.invalidateChildInParentFast(left, top, dirty);\n                                left = parentVG.mLeft;\n                                top = parentVG.mTop;\n                            }\n                        }\n                        else {\n                            const location = attachInfo.mInvalidateChildLocation;\n                            location[0] = left;\n                            location[1] = top;\n                            parent = parent.invalidateChildInParent(location, dirty);\n                        }\n                    } while (parent != null);\n                }\n            }\n            invalidateChildInParentFast(left, top, dirty) {\n                if ((this.mPrivateFlags & view_3.View.PFLAG_DRAWN) == view_3.View.PFLAG_DRAWN ||\n                    (this.mPrivateFlags & view_3.View.PFLAG_DRAWING_CACHE_VALID) == view_3.View.PFLAG_DRAWING_CACHE_VALID) {\n                    dirty.offset(left - this.mScrollX, top - this.mScrollY);\n                    if ((this.mGroupFlags & ViewGroup.FLAG_CLIP_CHILDREN) == 0) {\n                        dirty.union(0, 0, this.mRight - this.mLeft, this.mBottom - this.mTop);\n                    }\n                    if ((this.mGroupFlags & ViewGroup.FLAG_CLIP_CHILDREN) == 0 ||\n                        dirty.intersect(0, 0, this.mRight - this.mLeft, this.mBottom - this.mTop)) {\n                        if (this.mLayerType != view_3.View.LAYER_TYPE_NONE) {\n                        }\n                        if (!this.getMatrix().isIdentity()) {\n                            this.transformRect(dirty);\n                        }\n                        return this.mParent;\n                    }\n                }\n                return null;\n            }\n            requestTransparentRegion(child) {\n            }\n            requestChildFocus(child, focused) {\n            }\n            recomputeViewAttributes(child) {\n            }\n            clearChildFocus(child) {\n            }\n            focusSearch(v, direction) {\n                return undefined;\n            }\n            focusableViewAvailable(v) {\n            }\n            childDrawableStateChanged(child) {\n            }\n            requestDisallowInterceptTouchEvent(disallowIntercept) {\n                if (disallowIntercept == ((this.mGroupFlags & ViewGroup.FLAG_DISALLOW_INTERCEPT) != 0)) {\n                    return;\n                }\n                if (disallowIntercept) {\n                    this.mGroupFlags |= ViewGroup.FLAG_DISALLOW_INTERCEPT;\n                }\n                else {\n                    this.mGroupFlags &= ~ViewGroup.FLAG_DISALLOW_INTERCEPT;\n                }\n                if (this.mParent != null) {\n                    this.mParent.requestDisallowInterceptTouchEvent(disallowIntercept);\n                }\n            }\n            requestChildRectangleOnScreen(child, rectangle, immediate) {\n                return undefined;\n            }\n            childHasTransientStateChanged(child, hasTransientState) {\n            }\n            shouldDelayChildPressedState() {\n                return true;\n            }\n            onSetLayoutParams(child, layoutParams) {\n            }\n        }\n        ViewGroup.FLAG_CLIP_CHILDREN = 0x1;\n        ViewGroup.FLAG_CLIP_TO_PADDING = 0x2;\n        ViewGroup.FLAG_INVALIDATE_REQUIRED = 0x4;\n        ViewGroup.FLAG_RUN_ANIMATION = 0x8;\n        ViewGroup.FLAG_ANIMATION_DONE = 0x10;\n        ViewGroup.FLAG_PADDING_NOT_NULL = 0x20;\n        ViewGroup.FLAG_ANIMATION_CACHE = 0x40;\n        ViewGroup.FLAG_OPTIMIZE_INVALIDATE = 0x80;\n        ViewGroup.FLAG_CLEAR_TRANSFORMATION = 0x100;\n        ViewGroup.FLAG_NOTIFY_ANIMATION_LISTENER = 0x200;\n        ViewGroup.FLAG_USE_CHILD_DRAWING_ORDER = 0x400;\n        ViewGroup.FLAG_SUPPORT_STATIC_TRANSFORMATIONS = 0x800;\n        ViewGroup.FLAG_ALPHA_LOWER_THAN_ONE = 0x1000;\n        ViewGroup.FLAG_ADD_STATES_FROM_CHILDREN = 0x2000;\n        ViewGroup.FLAG_ALWAYS_DRAWN_WITH_CACHE = 0x4000;\n        ViewGroup.FLAG_CHILDREN_DRAWN_WITH_CACHE = 0x8000;\n        ViewGroup.FLAG_NOTIFY_CHILDREN_ON_DRAWABLE_STATE_CHANGE = 0x10000;\n        ViewGroup.FLAG_MASK_FOCUSABILITY = 0x60000;\n        ViewGroup.FOCUS_BEFORE_DESCENDANTS = 0x20000;\n        ViewGroup.FOCUS_AFTER_DESCENDANTS = 0x40000;\n        ViewGroup.FOCUS_BLOCK_DESCENDANTS = 0x60000;\n        ViewGroup.FLAG_DISALLOW_INTERCEPT = 0x80000;\n        ViewGroup.FLAG_SPLIT_MOTION_EVENTS = 0x200000;\n        ViewGroup.FLAG_PREVENT_DISPATCH_ATTACHED_TO_WINDOW = 0x400000;\n        ViewGroup.FLAG_LAYOUT_MODE_WAS_EXPLICITLY_SET = 0x800000;\n        ViewGroup.LAYOUT_MODE_UNDEFINED = -1;\n        ViewGroup.LAYOUT_MODE_CLIP_BOUNDS = 0;\n        ViewGroup.LAYOUT_MODE_DEFAULT = ViewGroup.LAYOUT_MODE_CLIP_BOUNDS;\n        ViewGroup.CLIP_TO_PADDING_MASK = ViewGroup.FLAG_CLIP_TO_PADDING | ViewGroup.FLAG_PADDING_NOT_NULL;\n        view_3.ViewGroup = ViewGroup;\n        (function (ViewGroup) {\n            class LayoutParams {\n                constructor(...args) {\n                    this.width = 0;\n                    this.height = 0;\n                    if (args.length === 1) {\n                        let src = args[0];\n                        this.width = src.width;\n                        this.height = src.height;\n                    }\n                    else if (args.length === 2) {\n                        let [width = 0, height = 0] = args;\n                        this.width = width;\n                        this.height = height;\n                    }\n                }\n            }\n            LayoutParams.FILL_PARENT = -1;\n            LayoutParams.MATCH_PARENT = -1;\n            LayoutParams.WRAP_CONTENT = -2;\n            ViewGroup.LayoutParams = LayoutParams;\n            class MarginLayoutParams extends LayoutParams {\n                constructor(...args) {\n                    super();\n                    this.leftMargin = 0;\n                    this.topMargin = 0;\n                    this.rightMargin = 0;\n                    this.bottomMargin = 0;\n                    if (args.length === 1) {\n                        let src = args[0];\n                        if (src instanceof MarginLayoutParams) {\n                            this.leftMargin = src.leftMargin;\n                            this.topMargin = src.topMargin;\n                            this.rightMargin = src.rightMargin;\n                            this.bottomMargin = src.bottomMargin;\n                        }\n                    }\n                    else if (args.length == 2) {\n                        super(args[0], args[1]);\n                    }\n                }\n                setMargins(left, top, right, bottom) {\n                    this.leftMargin = left;\n                    this.topMargin = top;\n                    this.rightMargin = right;\n                    this.bottomMargin = bottom;\n                }\n            }\n            ViewGroup.MarginLayoutParams = MarginLayoutParams;\n        })(ViewGroup = view_3.ViewGroup || (view_3.ViewGroup = {}));\n        class TouchTarget {\n            static obtain(child, pointerIdBits) {\n                let target;\n                if (TouchTarget.sRecycleBin == null) {\n                    target = new TouchTarget();\n                }\n                else {\n                    target = TouchTarget.sRecycleBin;\n                    TouchTarget.sRecycleBin = target.next;\n                    TouchTarget.sRecycledCount--;\n                    target.next = null;\n                }\n                target.child = child;\n                target.pointerIdBits = pointerIdBits;\n                return target;\n            }\n            recycle() {\n                if (TouchTarget.sRecycledCount < TouchTarget.MAX_RECYCLED) {\n                    this.next = TouchTarget.sRecycleBin;\n                    TouchTarget.sRecycleBin = this;\n                    TouchTarget.sRecycledCount += 1;\n                }\n                else {\n                    this.next = null;\n                }\n                this.child = null;\n            }\n        }\n        TouchTarget.MAX_RECYCLED = 32;\n        TouchTarget.sRecycledCount = 0;\n        TouchTarget.ALL_POINTER_IDS = -1;\n    })(view = android.view || (android.view = {}));\n})(android || (android = {}));\n/**\n * Created by linfaxin on 15/10/6.\n */\n///<reference path=\"ViewGroup.ts\"/>\n///<reference path=\"ViewRootImpl.ts\"/>\n///<reference path=\"View.ts\"/>\n///<reference path=\"../graphics/drawable/Drawable.ts\"/>\nvar android;\n(function (android) {\n    var view;\n    (function (view) {\n        var Drawable = android.graphics.drawable.Drawable;\n        class ViewOverlay {\n            constructor(hostView) {\n                this.mOverlayViewGroup = new ViewOverlay.OverlayViewGroup(hostView);\n            }\n            getOverlayView() {\n                return this.mOverlayViewGroup;\n            }\n            add(drawable) {\n                this.mOverlayViewGroup.add(drawable);\n            }\n            remove(drawable) {\n            }\n            clear() {\n                this.mOverlayViewGroup.clear();\n            }\n            isEmpty() {\n                return this.mOverlayViewGroup.isEmpty();\n            }\n        }\n        view.ViewOverlay = ViewOverlay;\n        (function (ViewOverlay) {\n            class OverlayViewGroup extends view.ViewGroup {\n                constructor(hostView) {\n                    super();\n                    this.mHostView = hostView;\n                    this.mAttachInfo = hostView.mAttachInfo;\n                    this.mRight = hostView.getWidth();\n                    this.mBottom = hostView.getHeight();\n                }\n                addDrawable(drawable) {\n                }\n                addView(child) {\n                }\n                add(arg) {\n                    if (arg instanceof Drawable)\n                        this.addDrawable(arg);\n                    else if (arg instanceof view.View)\n                        this.addView(arg);\n                }\n                clear() {\n                }\n                isEmpty() {\n                    return true;\n                }\n            }\n            ViewOverlay.OverlayViewGroup = OverlayViewGroup;\n        })(ViewOverlay = view.ViewOverlay || (view.ViewOverlay = {}));\n    })(view = android.view || (android.view = {}));\n})(android || (android = {}));\nvar android;\n(function (android) {\n    var view;\n    (function (view) {\n        class Gravity {\n        }\n        Gravity.NO_GRAVITY = 0x0000;\n        Gravity.AXIS_SPECIFIED = 0x0001;\n        Gravity.AXIS_PULL_BEFORE = 0x0002;\n        Gravity.AXIS_PULL_AFTER = 0x0004;\n        Gravity.AXIS_CLIP = 0x0008;\n        Gravity.AXIS_X_SHIFT = 0;\n        Gravity.AXIS_Y_SHIFT = 4;\n        Gravity.TOP = (Gravity.AXIS_PULL_BEFORE | Gravity.AXIS_SPECIFIED) << Gravity.AXIS_Y_SHIFT;\n        Gravity.BOTTOM = (Gravity.AXIS_PULL_AFTER | Gravity.AXIS_SPECIFIED) << Gravity.AXIS_Y_SHIFT;\n        Gravity.LEFT = (Gravity.AXIS_PULL_BEFORE | Gravity.AXIS_SPECIFIED) << Gravity.AXIS_X_SHIFT;\n        Gravity.RIGHT = (Gravity.AXIS_PULL_AFTER | Gravity.AXIS_SPECIFIED) << Gravity.AXIS_X_SHIFT;\n        Gravity.CENTER_VERTICAL = Gravity.AXIS_SPECIFIED << Gravity.AXIS_Y_SHIFT;\n        Gravity.FILL_VERTICAL = Gravity.TOP | Gravity.BOTTOM;\n        Gravity.CENTER_HORIZONTAL = Gravity.AXIS_SPECIFIED << Gravity.AXIS_X_SHIFT;\n        Gravity.FILL_HORIZONTAL = Gravity.LEFT | Gravity.RIGHT;\n        Gravity.CENTER = Gravity.CENTER_VERTICAL | Gravity.CENTER_HORIZONTAL;\n        Gravity.FILL = Gravity.FILL_VERTICAL | Gravity.FILL_HORIZONTAL;\n        Gravity.CLIP_VERTICAL = Gravity.AXIS_CLIP << Gravity.AXIS_Y_SHIFT;\n        Gravity.CLIP_HORIZONTAL = Gravity.AXIS_CLIP << Gravity.AXIS_X_SHIFT;\n        Gravity.HORIZONTAL_GRAVITY_MASK = (Gravity.AXIS_SPECIFIED |\n            Gravity.AXIS_PULL_BEFORE | Gravity.AXIS_PULL_AFTER) << Gravity.AXIS_X_SHIFT;\n        Gravity.VERTICAL_GRAVITY_MASK = (Gravity.AXIS_SPECIFIED |\n            Gravity.AXIS_PULL_BEFORE | Gravity.AXIS_PULL_AFTER) << Gravity.AXIS_Y_SHIFT;\n        Gravity.DISPLAY_CLIP_VERTICAL = 0x10000000;\n        Gravity.DISPLAY_CLIP_HORIZONTAL = 0x01000000;\n        view.Gravity = Gravity;\n    })(view = android.view || (android.view = {}));\n})(android || (android = {}));\n/**\n * Created by linfaxin on 15/10/9.\n */\n///<reference path=\"../view/Gravity.ts\"/>\n///<reference path=\"../view/View.ts\"/>\n///<reference path=\"../view/ViewGroup.ts\"/>\n///<reference path=\"../graphics/drawable/Drawable.ts\"/>\n///<reference path=\"../graphics/Rect.ts\"/>\nvar android;\n(function (android) {\n    var widget;\n    (function (widget) {\n        var Gravity = android.view.Gravity;\n        var View = android.view.View;\n        var ViewGroup = android.view.ViewGroup;\n        var Rect = android.graphics.Rect;\n        class FrameLayout extends ViewGroup {\n            constructor(...args) {\n                super(...args);\n                this.mMeasureAllChildren = false;\n                this.mForegroundPaddingLeft = 0;\n                this.mForegroundPaddingTop = 0;\n                this.mForegroundPaddingRight = 0;\n                this.mForegroundPaddingBottom = 0;\n                this.mSelfBounds = new Rect();\n                this.mOverlayBounds = new Rect();\n                this.mForegroundGravity = Gravity.FILL;\n                this.mForegroundInPadding = true;\n                this.mForegroundBoundsChanged = false;\n                this.mMatchParentChildren = new Array(1);\n            }\n            getForegroundGravity() {\n                return this.mForegroundGravity;\n            }\n            setForegroundGravity(foregroundGravity) {\n                if (this.mForegroundGravity != foregroundGravity) {\n                    if ((foregroundGravity & Gravity.HORIZONTAL_GRAVITY_MASK) == 0) {\n                        foregroundGravity |= Gravity.LEFT;\n                    }\n                    if ((foregroundGravity & Gravity.VERTICAL_GRAVITY_MASK) == 0) {\n                        foregroundGravity |= Gravity.TOP;\n                    }\n                    this.mForegroundGravity = foregroundGravity;\n                    if (this.mForegroundGravity == Gravity.FILL && this.mForeground != null) {\n                        let padding = new Rect();\n                        if (this.mForeground.getPadding(padding)) {\n                            this.mForegroundPaddingLeft = padding.left;\n                            this.mForegroundPaddingTop = padding.top;\n                            this.mForegroundPaddingRight = padding.right;\n                            this.mForegroundPaddingBottom = padding.bottom;\n                        }\n                    }\n                    else {\n                        this.mForegroundPaddingLeft = 0;\n                        this.mForegroundPaddingTop = 0;\n                        this.mForegroundPaddingRight = 0;\n                        this.mForegroundPaddingBottom = 0;\n                    }\n                    this.requestLayout();\n                }\n            }\n            verifyDrawable(who) {\n                return super.verifyDrawable(who) || (who == this.mForeground);\n            }\n            jumpDrawablesToCurrentState() {\n                super.jumpDrawablesToCurrentState();\n                if (this.mForeground != null)\n                    this.mForeground.jumpToCurrentState();\n            }\n            drawableStateChanged() {\n                super.drawableStateChanged();\n                if (this.mForeground != null && this.mForeground.isStateful()) {\n                    this.mForeground.setState(this.getDrawableState());\n                }\n            }\n            generateDefaultLayoutParams() {\n                return new FrameLayout.LayoutParams(FrameLayout.LayoutParams.MATCH_PARENT, FrameLayout.LayoutParams.MATCH_PARENT);\n            }\n            setForeground(drawable) {\n            }\n            getForeground() {\n                return this.mForeground;\n            }\n            getPaddingLeftWithForeground() {\n                return this.mForegroundInPadding ? Math.max(this.mPaddingLeft, this.mForegroundPaddingLeft) :\n                    this.mPaddingLeft + this.mForegroundPaddingLeft;\n            }\n            getPaddingRightWithForeground() {\n                return this.mForegroundInPadding ? Math.max(this.mPaddingRight, this.mForegroundPaddingRight) :\n                    this.mPaddingRight + this.mForegroundPaddingRight;\n            }\n            getPaddingTopWithForeground() {\n                return this.mForegroundInPadding ? Math.max(this.mPaddingTop, this.mForegroundPaddingTop) :\n                    this.mPaddingTop + this.mForegroundPaddingTop;\n            }\n            getPaddingBottomWithForeground() {\n                return this.mForegroundInPadding ? Math.max(this.mPaddingBottom, this.mForegroundPaddingBottom) :\n                    this.mPaddingBottom + this.mForegroundPaddingBottom;\n            }\n            onMeasure(widthMeasureSpec, heightMeasureSpec) {\n                let count = this.getChildCount();\n                let measureMatchParentChildren = View.MeasureSpec.getMode(widthMeasureSpec) != View.MeasureSpec.EXACTLY ||\n                    View.MeasureSpec.getMode(heightMeasureSpec) != View.MeasureSpec.EXACTLY;\n                this.mMatchParentChildren = [];\n                let maxHeight = 0;\n                let maxWidth = 0;\n                let childState = 0;\n                for (let i = 0; i < count; i++) {\n                    let child = this.getChildAt(i);\n                    if (this.mMeasureAllChildren || child.getVisibility() != View.GONE) {\n                        this.measureChildWithMargins(child, widthMeasureSpec, 0, heightMeasureSpec, 0);\n                        let lp = child.getLayoutParams();\n                        maxWidth = Math.max(maxWidth, child.getMeasuredWidth() + lp.leftMargin + lp.rightMargin);\n                        maxHeight = Math.max(maxHeight, child.getMeasuredHeight() + lp.topMargin + lp.bottomMargin);\n                        childState = View.combineMeasuredStates(childState, child.getMeasuredState());\n                        if (measureMatchParentChildren) {\n                            if (lp.width == FrameLayout.LayoutParams.MATCH_PARENT ||\n                                lp.height == FrameLayout.LayoutParams.MATCH_PARENT) {\n                                this.mMatchParentChildren.push(child);\n                            }\n                        }\n                    }\n                }\n                maxWidth += this.getPaddingLeftWithForeground() + this.getPaddingRightWithForeground();\n                maxHeight += this.getPaddingTopWithForeground() + this.getPaddingBottomWithForeground();\n                maxHeight = Math.max(maxHeight, this.getSuggestedMinimumHeight());\n                maxWidth = Math.max(maxWidth, this.getSuggestedMinimumWidth());\n                let drawable = this.getForeground();\n                if (drawable != null) {\n                    maxHeight = Math.max(maxHeight, drawable.getMinimumHeight());\n                    maxWidth = Math.max(maxWidth, drawable.getMinimumWidth());\n                }\n                this.setMeasuredDimension(View.resolveSizeAndState(maxWidth, widthMeasureSpec, childState), View.resolveSizeAndState(maxHeight, heightMeasureSpec, childState << View.MEASURED_HEIGHT_STATE_SHIFT));\n                count = this.mMatchParentChildren.length;\n                if (count > 1) {\n                    for (let i = 0; i < count; i++) {\n                        let child = this.mMatchParentChildren[i];\n                        let lp = child.getLayoutParams();\n                        let childWidthMeasureSpec;\n                        let childHeightMeasureSpec;\n                        if (lp.width == FrameLayout.LayoutParams.MATCH_PARENT) {\n                            childWidthMeasureSpec = View.MeasureSpec.makeMeasureSpec(this.getMeasuredWidth() -\n                                this.getPaddingLeftWithForeground() - this.getPaddingRightWithForeground() -\n                                lp.leftMargin - lp.rightMargin, View.MeasureSpec.EXACTLY);\n                        }\n                        else {\n                            childWidthMeasureSpec = ViewGroup.getChildMeasureSpec(widthMeasureSpec, this.getPaddingLeftWithForeground() + this.getPaddingRightWithForeground() +\n                                lp.leftMargin + lp.rightMargin, lp.width);\n                        }\n                        if (lp.height == FrameLayout.LayoutParams.MATCH_PARENT) {\n                            childHeightMeasureSpec = View.MeasureSpec.makeMeasureSpec(this.getMeasuredHeight() -\n                                this.getPaddingTopWithForeground() - this.getPaddingBottomWithForeground() -\n                                lp.topMargin - lp.bottomMargin, View.MeasureSpec.EXACTLY);\n                        }\n                        else {\n                            childHeightMeasureSpec = ViewGroup.getChildMeasureSpec(heightMeasureSpec, this.getPaddingTopWithForeground() + this.getPaddingBottomWithForeground() +\n                                lp.topMargin + lp.bottomMargin, lp.height);\n                        }\n                        child.measure(childWidthMeasureSpec, childHeightMeasureSpec);\n                    }\n                }\n            }\n            onLayout(changed, left, top, right, bottom) {\n                this.layoutChildren(left, top, right, bottom, false);\n            }\n            layoutChildren(left, top, right, bottom, forceLeftGravity) {\n                const count = this.getChildCount();\n                const parentLeft = this.getPaddingLeftWithForeground();\n                const parentRight = right - left - this.getPaddingRightWithForeground();\n                const parentTop = this.getPaddingTopWithForeground();\n                const parentBottom = bottom - top - this.getPaddingBottomWithForeground();\n                this.mForegroundBoundsChanged = true;\n                for (let i = 0; i < count; i++) {\n                    let child = this.getChildAt(i);\n                    if (child.getVisibility() != View.GONE) {\n                        const lp = child.getLayoutParams();\n                        const width = child.getMeasuredWidth();\n                        const height = child.getMeasuredHeight();\n                        let childLeft;\n                        let childTop;\n                        let gravity = lp.gravity;\n                        if (gravity == -1) {\n                            gravity = FrameLayout.DEFAULT_CHILD_GRAVITY;\n                        }\n                        const absoluteGravity = gravity;\n                        const verticalGravity = gravity & Gravity.VERTICAL_GRAVITY_MASK;\n                        switch (absoluteGravity & Gravity.HORIZONTAL_GRAVITY_MASK) {\n                            case Gravity.CENTER_HORIZONTAL:\n                                childLeft = parentLeft + (parentRight - parentLeft - width) / 2 +\n                                    lp.leftMargin - lp.rightMargin;\n                                break;\n                            case Gravity.RIGHT:\n                                if (!forceLeftGravity) {\n                                    childLeft = parentRight - width - lp.rightMargin;\n                                    break;\n                                }\n                            case Gravity.LEFT:\n                            default:\n                                childLeft = parentLeft + lp.leftMargin;\n                        }\n                        switch (verticalGravity) {\n                            case Gravity.TOP:\n                                childTop = parentTop + lp.topMargin;\n                                break;\n                            case Gravity.CENTER_VERTICAL:\n                                childTop = parentTop + (parentBottom - parentTop - height) / 2 +\n                                    lp.topMargin - lp.bottomMargin;\n                                break;\n                            case Gravity.BOTTOM:\n                                childTop = parentBottom - height - lp.bottomMargin;\n                                break;\n                            default:\n                                childTop = parentTop + lp.topMargin;\n                        }\n                        child.layout(childLeft, childTop, childLeft + width, childTop + height);\n                    }\n                }\n            }\n            onSizeChanged(w, h, oldw, oldh) {\n                super.onSizeChanged(w, h, oldw, oldh);\n                this.mForegroundBoundsChanged = true;\n            }\n            setMeasureAllChildren(measureAll) {\n                this.mMeasureAllChildren = measureAll;\n            }\n            getMeasureAllChildren() {\n                return this.mMeasureAllChildren;\n            }\n            shouldDelayChildPressedState() {\n                return false;\n            }\n        }\n        FrameLayout.DEFAULT_CHILD_GRAVITY = Gravity.TOP | Gravity.LEFT;\n        widget.FrameLayout = FrameLayout;\n        (function (FrameLayout) {\n            class LayoutParams extends ViewGroup.MarginLayoutParams {\n                constructor(...args) {\n                    super();\n                    this.gravity = -1;\n                    if (args.length === 1 && args[0] instanceof LayoutParams) {\n                        this.gravity = args[0].gravity;\n                    }\n                    else {\n                        let [width, height, gravity = -1] = args;\n                        super(width, height);\n                        this.gravity = gravity;\n                    }\n                }\n            }\n            FrameLayout.LayoutParams = LayoutParams;\n        })(FrameLayout = widget.FrameLayout || (widget.FrameLayout = {}));\n    })(widget = android.widget || (android.widget = {}));\n})(android || (android = {}));\n/**\n * Created by linfaxin on 15/10/23.\n */\n///<reference path=\"../android/view/View.ts\"/>\n///<reference path=\"../android/view/ViewRootImpl.ts\"/>\n///<reference path=\"../android/widget/FrameLayout.ts\"/>\n///<reference path=\"../android/view/MotionEvent.ts\"/>\nvar runtime;\n(function (runtime) {\n    var View = android.view.View;\n    var ViewRootImpl = android.view.ViewRootImpl;\n    var FrameLayout = android.widget.FrameLayout;\n    var MotionEvent = android.view.MotionEvent;\n    class AndroidUI {\n        constructor(element) {\n            this.element = element;\n            if (element['AndroidUI']) {\n                throw Error('already init a AndroidUI with this element');\n            }\n            element['AndroidUI'] = this;\n            this.init();\n        }\n        init() {\n            this.viewRootImpl = new ViewRootImpl();\n            this.rootLayout = new RootLayout();\n            this.canvas = document.createElement(\"canvas\");\n            this.initInflateView();\n            this.initRootElementStyle();\n            this.initCanvasStyle();\n            this.initBindElementStyle();\n            this.element.innerHTML = '';\n            this.element.appendChild(this.rootStyleElement);\n            this.element.appendChild(this.canvas);\n            this.element.appendChild(this.rootLayout.bindElement);\n            this.viewRootImpl.setView(this.rootLayout);\n            this.viewRootImpl.initSurface(this.canvas);\n            this.initTouch();\n            this.tryStartLayoutAfterInit();\n        }\n        initInflateView() {\n            Array.from(this.element.children).forEach((item) => {\n                if (item instanceof HTMLStyleElement) {\n                    this.rootStyleElement = item;\n                    return;\n                }\n                if (item instanceof HTMLElement) {\n                    let view = View.inflate(item);\n                    if (view)\n                        this.rootLayout.addView(view);\n                }\n            });\n        }\n        initRootElementStyle() {\n            if (!this.element.style.position) {\n                this.element.style.position = \"relative\";\n            }\n            if (!this.element.style.display || this.element.style.display == \"none\") {\n                this.element.style.display = \"inline-block\";\n            }\n            this.element.style.overflow = 'hidden';\n        }\n        initCanvasStyle() {\n            let canvas = this.canvas;\n            canvas.style.position = \"absolute\";\n            canvas.style.left = '0px';\n            canvas.style.top = '0px';\n        }\n        initTouch() {\n            let motionEvent;\n            let windowXOffset = 0, windowYOffset = 0;\n            this.element.addEventListener('touchstart', (e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                let rootViewBound = this.element.getBoundingClientRect();\n                windowXOffset = rootViewBound.left;\n                windowYOffset = rootViewBound.top;\n                if (!motionEvent)\n                    motionEvent = MotionEvent.obtainWithTouchEvent(e, MotionEvent.ACTION_DOWN);\n                else\n                    motionEvent.init(e, MotionEvent.ACTION_DOWN, windowXOffset, windowYOffset);\n                this.rootLayout.dispatchTouchEvent(motionEvent);\n            }, true);\n            this.element.addEventListener('touchmove', (e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                motionEvent.init(e, MotionEvent.ACTION_MOVE, windowXOffset, windowYOffset);\n                this.rootLayout.dispatchTouchEvent(motionEvent);\n            }, true);\n            this.element.addEventListener('touchend', (e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                motionEvent.init(e, MotionEvent.ACTION_UP);\n                this.rootLayout.dispatchTouchEvent(motionEvent);\n            }, true);\n            this.element.addEventListener('touchcancel', (e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                motionEvent.init(e, MotionEvent.ACTION_CANCEL, windowXOffset, windowYOffset);\n                this.rootLayout.dispatchTouchEvent(motionEvent);\n            }, true);\n        }\n        initBindElementStyle() {\n            if (!this.rootStyleElement)\n                this.rootStyleElement = document.createElement(\"style\");\n            this.rootStyleElement.setAttribute(\"scoped\", '');\n            let iOS = /iPad|iPhone|iPod/.test(navigator.platform);\n            if (iOS) {\n                this.rootStyleElement.innerHTML += `\n                    android-ScrollView::-webkit-scrollbar {\n                        -webkit-appearance: none;\n                        width: 4px;\n                    }\n                    android-ScrollView::-webkit-scrollbar-thumb {\n                        border-radius: 2px;\n                        background-color: rgba(0,0,0,.3);\n                    }\n                `;\n            }\n            let density = android.content.res.Resources.getDisplayMetrics().density;\n            if (density != 1) {\n                this.rootStyleElement.innerHTML += `\n                android-RootLayout {\n                    transform:scale(${1 / density},${1 / density});\n                    -webkit-transform:scale(${1 / density},${1 / density});\n                    transform-origin:0 0;\n                    -webkit-transform-origin:0 0;\n                }\n                `;\n            }\n        }\n        tryStartLayoutAfterInit() {\n            let width = this.element.offsetWidth;\n            let height = this.element.offsetHeight;\n            if (width > 0 && height > 0)\n                this.notifySizeChange(width, height);\n        }\n        notifySizeChange(width, height) {\n            let density = android.content.res.Resources.getDisplayMetrics().density;\n            this.viewRootImpl.mWinFrame.set(0, 0, width * density, height * density);\n            this.canvas.width = width * density;\n            this.canvas.height = height * density;\n            this.canvas.style.width = width + \"px\";\n            this.canvas.style.height = height + \"px\";\n            this.viewRootImpl.requestLayout();\n        }\n        setContentView(view) {\n            this.rootLayout.removeAllViews();\n            this.rootLayout.addView(view);\n        }\n        addContentView(view) {\n            this.rootLayout.addView(view);\n        }\n        findViewById(id) {\n            return this.rootLayout.findViewById(id);\n        }\n    }\n    runtime.AndroidUI = AndroidUI;\n    class RootLayout extends FrameLayout {\n    }\n})(runtime || (runtime = {}));\n/**\n * Created by linfaxin on 15/10/11.\n */\n///<reference path=\"../view/View.ts\"/>\n///<reference path=\"../view/ViewRootImpl.ts\"/>\n///<reference path=\"../widget/FrameLayout.ts\"/>\n///<reference path=\"../view/MotionEvent.ts\"/>\n///<reference path=\"../../runtime/AndroidUI.ts\"/>\nvar android;\n(function (android) {\n    var app;\n    (function (app) {\n        var AndroidUI = runtime.AndroidUI;\n        if (typeof HTMLDivElement !== 'function') {\n            var _HTMLDivElement = function () { };\n            _HTMLDivElement.prototype = HTMLDivElement.prototype;\n            HTMLDivElement = _HTMLDivElement;\n        }\n        class Activity extends HTMLDivElement {\n            onCreate() {\n            }\n            createdCallback() {\n                this.AndroidUI = new AndroidUI(this);\n                this.onCreate();\n            }\n            attachedCallback() {\n                this.AndroidUI.notifySizeChange(this.offsetWidth, this.offsetHeight);\n            }\n            detachedCallback() {\n            }\n            attributeChangedCallback(attributeName, oldVal, newVal) {\n            }\n            setContentView(view) {\n                this.AndroidUI.setContentView(view);\n            }\n            addContentView(view) {\n                this.AndroidUI.addContentView(view);\n            }\n            findViewById(id) {\n                return this.AndroidUI.findViewById(id);\n            }\n            static registerCustomElement() {\n                document.registerElement(\"android-\" + this.name, this);\n            }\n        }\n        app.Activity = Activity;\n    })(app = android.app || (android.app = {}));\n})(android || (android = {}));\n/**\n * Created by linfaxin on 15/10/17.\n */\n///<reference path=\"../view/ViewConfiguration.ts\"/>\n///<reference path=\"../view/animation/Interpolator.ts\"/>\n///<reference path=\"../content/res/Resources.ts\"/>\n///<reference path=\"../os/SystemClock.ts\"/>\n///<reference path=\"../util/Log.ts\"/>\nvar android;\n(function (android) {\n    var widget;\n    (function (widget) {\n        var ViewConfiguration = android.view.ViewConfiguration;\n        var Resources = android.content.res.Resources;\n        var SystemClock = android.os.SystemClock;\n        var Log = android.util.Log;\n        class OverScroller {\n            constructor(interpolator, flywheel = true) {\n                this.mMode = 0;\n                this.mFlywheel = true;\n                this.mInterpolator = interpolator;\n                this.mFlywheel = flywheel;\n                this.mScrollerX = new SplineOverScroller();\n                this.mScrollerY = new SplineOverScroller();\n            }\n            setFriction(friction) {\n                this.mScrollerX.setFriction(friction);\n                this.mScrollerY.setFriction(friction);\n            }\n            isFinished() {\n                return this.mScrollerX.mFinished && this.mScrollerY.mFinished;\n            }\n            forceFinished(finished) {\n                this.mScrollerX.mFinished = this.mScrollerY.mFinished = finished;\n            }\n            getCurrX() {\n                return this.mScrollerX.mCurrentPosition;\n            }\n            getCurrY() {\n                return this.mScrollerY.mCurrentPosition;\n            }\n            getCurrVelocity() {\n                let squaredNorm = this.mScrollerX.mCurrVelocity * this.mScrollerX.mCurrVelocity;\n                squaredNorm += this.mScrollerY.mCurrVelocity * this.mScrollerY.mCurrVelocity;\n                return Math.sqrt(squaredNorm);\n            }\n            getStartX() {\n                return this.mScrollerX.mStart;\n            }\n            getStartY() {\n                return this.mScrollerY.mStart;\n            }\n            getFinalX() {\n                return this.mScrollerX.mFinal;\n            }\n            getFinalY() {\n                return this.mScrollerY.mFinal;\n            }\n            computeScrollOffset() {\n                if (this.isFinished()) {\n                    return false;\n                }\n                switch (this.mMode) {\n                    case OverScroller.SCROLL_MODE:\n                        let time = SystemClock.uptimeMillis();\n                        const elapsedTime = time - this.mScrollerX.mStartTime;\n                        const duration = this.mScrollerX.mDuration;\n                        if (elapsedTime < duration) {\n                            let q = (elapsedTime) / duration;\n                            if (this.mInterpolator == null) {\n                                q = Scroller_viscousFluid(q);\n                            }\n                            else {\n                                q = this.mInterpolator.getInterpolation(q);\n                            }\n                            this.mScrollerX.updateScroll(q);\n                            this.mScrollerY.updateScroll(q);\n                        }\n                        else {\n                            this.abortAnimation();\n                        }\n                        break;\n                    case OverScroller.FLING_MODE:\n                        if (!this.mScrollerX.mFinished) {\n                            if (!this.mScrollerX.update()) {\n                                if (!this.mScrollerX.continueWhenFinished()) {\n                                    this.mScrollerX.finish();\n                                }\n                            }\n                        }\n                        if (!this.mScrollerY.mFinished) {\n                            if (!this.mScrollerY.update()) {\n                                if (!this.mScrollerY.continueWhenFinished()) {\n                                    this.mScrollerY.finish();\n                                }\n                            }\n                        }\n                        break;\n                }\n                return true;\n            }\n            startScroll(startX, startY, dx, dy, duration = OverScroller.DEFAULT_DURATION) {\n                this.mMode = OverScroller.SCROLL_MODE;\n                this.mScrollerX.startScroll(startX, dx, duration);\n                this.mScrollerY.startScroll(startY, dy, duration);\n            }\n            springBack(startX, startY, minX, maxX, minY, maxY) {\n                this.mMode = OverScroller.FLING_MODE;\n                const spingbackX = this.mScrollerX.springback(startX, minX, maxX);\n                const spingbackY = this.mScrollerY.springback(startY, minY, maxY);\n                return spingbackX || spingbackY;\n            }\n            fling(startX, startY, velocityX, velocityY, minX, maxX, minY, maxY, overX = 0, overY = 0) {\n                if (this.mFlywheel && !this.isFinished()) {\n                    let oldVelocityX = this.mScrollerX.mCurrVelocity;\n                    let oldVelocityY = this.mScrollerY.mCurrVelocity;\n                    if (Math_signum(velocityX) == Math_signum(oldVelocityX) &&\n                        Math_signum(velocityY) == Math_signum(oldVelocityY)) {\n                        velocityX += oldVelocityX;\n                        velocityY += oldVelocityY;\n                    }\n                }\n                this.mMode = OverScroller.FLING_MODE;\n                this.mScrollerX.fling(startX, velocityX, minX, maxX, overX);\n                this.mScrollerY.fling(startY, velocityY, minY, maxY, overY);\n            }\n            notifyHorizontalEdgeReached(startX, finalX, overX) {\n                this.mScrollerX.notifyEdgeReached(startX, finalX, overX);\n            }\n            notifyVerticalEdgeReached(startY, finalY, overY) {\n                this.mScrollerY.notifyEdgeReached(startY, finalY, overY);\n            }\n            isOverScrolled() {\n                return ((!this.mScrollerX.mFinished &&\n                    this.mScrollerX.mState != SplineOverScroller.SPLINE) ||\n                    (!this.mScrollerY.mFinished &&\n                        this.mScrollerY.mState != SplineOverScroller.SPLINE));\n            }\n            abortAnimation() {\n                this.mScrollerX.finish();\n                this.mScrollerY.finish();\n            }\n            timePassed() {\n                const time = SystemClock.uptimeMillis();\n                const startTime = Math.min(this.mScrollerX.mStartTime, this.mScrollerY.mStartTime);\n                return (time - startTime);\n            }\n            isScrollingInDirection(xvel, yvel) {\n                const dx = this.mScrollerX.mFinal - this.mScrollerX.mStart;\n                const dy = this.mScrollerY.mFinal - this.mScrollerY.mStart;\n                return !this.isFinished() && Math_signum(xvel) == Math_signum(dx) &&\n                    Math_signum(yvel) == Math_signum(dy);\n            }\n        }\n        OverScroller.DEFAULT_DURATION = 250;\n        OverScroller.SCROLL_MODE = 0;\n        OverScroller.FLING_MODE = 1;\n        widget.OverScroller = OverScroller;\n        class SplineOverScroller {\n            constructor() {\n                this.mStart = 0;\n                this.mCurrentPosition = 0;\n                this.mFinal = 0;\n                this.mVelocity = 0;\n                this.mCurrVelocity = 0;\n                this.mDeceleration = 0;\n                this.mStartTime = 0;\n                this.mDuration = 0;\n                this.mSplineDuration = 0;\n                this.mSplineDistance = 0;\n                this.mFinished = false;\n                this.mOver = 0;\n                this.mFlingFriction = ViewConfiguration.getScrollFriction();\n                this.mState = SplineOverScroller.SPLINE;\n                this.mPhysicalCoeff = 0;\n                this.mFinished = true;\n                let ppi = Resources.getDisplayMetrics().density * 160;\n                this.mPhysicalCoeff = 9.80665\n                    * 39.37\n                    * ppi\n                    * 0.84;\n            }\n            setFriction(friction) {\n                this.mFlingFriction = friction;\n            }\n            updateScroll(q) {\n                this.mCurrentPosition = this.mStart + Math.round(q * (this.mFinal - this.mStart));\n            }\n            static getDeceleration(velocity) {\n                return velocity > 0 ? -SplineOverScroller.GRAVITY : SplineOverScroller.GRAVITY;\n            }\n            adjustDuration(start, oldFinal, newFinal) {\n                let oldDistance = oldFinal - start;\n                let newDistance = newFinal - start;\n                let x = Math.abs(newDistance / oldDistance);\n                let index = Number.parseInt((SplineOverScroller.NB_SAMPLES * x));\n                if (index < SplineOverScroller.NB_SAMPLES) {\n                    let x_inf = index / SplineOverScroller.NB_SAMPLES;\n                    let x_sup = (index + 1) / SplineOverScroller.NB_SAMPLES;\n                    let t_inf = SplineOverScroller.SPLINE_TIME[index];\n                    let t_sup = SplineOverScroller.SPLINE_TIME[index + 1];\n                    let timeCoef = t_inf + (x - x_inf) / (x_sup - x_inf) * (t_sup - t_inf);\n                    this.mDuration *= timeCoef;\n                }\n            }\n            startScroll(start, distance, duration) {\n                this.mFinished = false;\n                this.mStart = start;\n                this.mFinal = start + distance;\n                this.mStartTime = SystemClock.uptimeMillis();\n                this.mDuration = duration;\n                this.mDeceleration = 0;\n                this.mVelocity = 0;\n            }\n            finish() {\n                this.mCurrentPosition = this.mFinal;\n                this.mFinished = true;\n            }\n            setFinalPosition(position) {\n                this.mFinal = position;\n                this.mFinished = false;\n            }\n            extendDuration(extend) {\n                let time = SystemClock.uptimeMillis();\n                let elapsedTime = (time - this.mStartTime);\n                this.mDuration = elapsedTime + extend;\n                this.mFinished = false;\n            }\n            springback(start, min, max) {\n                this.mFinished = true;\n                this.mStart = this.mFinal = start;\n                this.mVelocity = 0;\n                this.mStartTime = SystemClock.uptimeMillis();\n                this.mDuration = 0;\n                if (start < min) {\n                    this.startSpringback(start, min, 0);\n                }\n                else if (start > max) {\n                    this.startSpringback(start, max, 0);\n                }\n                return !this.mFinished;\n            }\n            startSpringback(start, end, velocity) {\n                this.mFinished = false;\n                this.mState = SplineOverScroller.CUBIC;\n                this.mStart = start;\n                this.mFinal = end;\n                const delta = start - end;\n                this.mDeceleration = SplineOverScroller.getDeceleration(delta);\n                this.mVelocity = -delta;\n                this.mOver = Math.abs(delta);\n                this.mDuration = (1000.0 * Math.sqrt(-2.0 * delta / this.mDeceleration));\n            }\n            fling(start, velocity, min, max, over) {\n                this.mOver = over;\n                this.mFinished = false;\n                this.mCurrVelocity = this.mVelocity = velocity;\n                this.mDuration = this.mSplineDuration = 0;\n                this.mStartTime = SystemClock.uptimeMillis();\n                this.mCurrentPosition = this.mStart = start;\n                if (start > max || start < min) {\n                    this.startAfterEdge(start, min, max, velocity);\n                    return;\n                }\n                this.mState = SplineOverScroller.SPLINE;\n                let totalDistance = 0.0;\n                if (velocity != 0) {\n                    this.mDuration = this.mSplineDuration = this.getSplineFlingDuration(velocity);\n                    totalDistance = this.getSplineFlingDistance(velocity);\n                }\n                this.mSplineDistance = (totalDistance * Math_signum(velocity));\n                this.mFinal = start + this.mSplineDistance;\n                if (this.mFinal < min) {\n                    this.adjustDuration(this.mStart, this.mFinal, min);\n                    this.mFinal = min;\n                }\n                if (this.mFinal > max) {\n                    this.adjustDuration(this.mStart, this.mFinal, max);\n                    this.mFinal = max;\n                }\n            }\n            getSplineDeceleration(velocity) {\n                return Math.log(SplineOverScroller.INFLEXION * Math.abs(velocity) / (this.mFlingFriction * this.mPhysicalCoeff));\n            }\n            getSplineFlingDistance(velocity) {\n                let l = this.getSplineDeceleration(velocity);\n                let decelMinusOne = SplineOverScroller.DECELERATION_RATE - 1.0;\n                return this.mFlingFriction * this.mPhysicalCoeff * Math.exp(SplineOverScroller.DECELERATION_RATE / decelMinusOne * l);\n            }\n            getSplineFlingDuration(velocity) {\n                let l = this.getSplineDeceleration(velocity);\n                let decelMinusOne = SplineOverScroller.DECELERATION_RATE - 1.0;\n                return (1000.0 * Math.exp(l / decelMinusOne));\n            }\n            fitOnBounceCurve(start, end, velocity) {\n                let durationToApex = -velocity / this.mDeceleration;\n                let distanceToApex = velocity * velocity / 2.0 / Math.abs(this.mDeceleration);\n                let distanceToEdge = Math.abs(end - start);\n                let totalDuration = Math.sqrt(2.0 * (distanceToApex + distanceToEdge) / Math.abs(this.mDeceleration));\n                this.mStartTime -= (1000 * (totalDuration - durationToApex));\n                this.mStart = end;\n                this.mVelocity = (-this.mDeceleration * totalDuration);\n            }\n            startBounceAfterEdge(start, end, velocity) {\n                this.mDeceleration = SplineOverScroller.getDeceleration(velocity == 0 ? start - end : velocity);\n                this.fitOnBounceCurve(start, end, velocity);\n                this.onEdgeReached();\n            }\n            startAfterEdge(start, min, max, velocity) {\n                if (start > min && start < max) {\n                    Log.e(\"OverScroller\", \"startAfterEdge called from a valid position\");\n                    this.mFinished = true;\n                    return;\n                }\n                const positive = start > max;\n                const edge = positive ? max : min;\n                const overDistance = start - edge;\n                let keepIncreasing = overDistance * velocity >= 0;\n                if (keepIncreasing) {\n                    this.startBounceAfterEdge(start, edge, velocity);\n                }\n                else {\n                    const totalDistance = this.getSplineFlingDistance(velocity);\n                    if (totalDistance > Math.abs(overDistance)) {\n                        this.fling(start, velocity, positive ? min : start, positive ? start : max, this.mOver);\n                    }\n                    else {\n                        this.startSpringback(start, edge, velocity);\n                    }\n                }\n            }\n            notifyEdgeReached(start, end, over) {\n                if (this.mState == SplineOverScroller.SPLINE) {\n                    this.mOver = over;\n                    this.mStartTime = SystemClock.uptimeMillis();\n                    this.startAfterEdge(start, end, end, this.mCurrVelocity);\n                }\n            }\n            onEdgeReached() {\n                let distance = this.mVelocity * this.mVelocity / (2 * Math.abs(this.mDeceleration));\n                const sign = Math_signum(this.mVelocity);\n                if (distance > this.mOver) {\n                    this.mDeceleration = -sign * this.mVelocity * this.mVelocity / (2.0 * this.mOver);\n                    distance = this.mOver;\n                }\n                this.mOver = distance;\n                this.mState = SplineOverScroller.BALLISTIC;\n                this.mFinal = this.mStart + (this.mVelocity > 0 ? distance : -distance);\n                this.mDuration = -(1000 * this.mVelocity / this.mDeceleration);\n            }\n            continueWhenFinished() {\n                switch (this.mState) {\n                    case SplineOverScroller.SPLINE:\n                        if (this.mDuration < this.mSplineDuration) {\n                            this.mStart = this.mFinal;\n                            this.mVelocity = this.mCurrVelocity;\n                            this.mDeceleration = SplineOverScroller.getDeceleration(this.mVelocity);\n                            this.mStartTime += this.mDuration;\n                            this.onEdgeReached();\n                        }\n                        else {\n                            return false;\n                        }\n                        break;\n                    case SplineOverScroller.BALLISTIC:\n                        this.mStartTime += this.mDuration;\n                        this.startSpringback(this.mFinal, this.mStart, 0);\n                        break;\n                    case SplineOverScroller.CUBIC:\n                        return false;\n                }\n                this.update();\n                return true;\n            }\n            update() {\n                const time = SystemClock.uptimeMillis();\n                const currentTime = time - this.mStartTime;\n                if (currentTime > this.mDuration) {\n                    return false;\n                }\n                let distance = 0;\n                switch (this.mState) {\n                    case SplineOverScroller.SPLINE: {\n                        const t = currentTime / this.mSplineDuration;\n                        const index = Number.parseInt((SplineOverScroller.NB_SAMPLES * t));\n                        let distanceCoef = 1;\n                        let velocityCoef = 0;\n                        if (index < SplineOverScroller.NB_SAMPLES) {\n                            const t_inf = index / SplineOverScroller.NB_SAMPLES;\n                            const t_sup = (index + 1) / SplineOverScroller.NB_SAMPLES;\n                            const d_inf = SplineOverScroller.SPLINE_POSITION[index];\n                            const d_sup = SplineOverScroller.SPLINE_POSITION[index + 1];\n                            velocityCoef = (d_sup - d_inf) / (t_sup - t_inf);\n                            distanceCoef = d_inf + (t - t_inf) * velocityCoef;\n                        }\n                        distance = distanceCoef * this.mSplineDistance;\n                        this.mCurrVelocity = velocityCoef * this.mSplineDistance / this.mSplineDuration * 1000;\n                        break;\n                    }\n                    case SplineOverScroller.BALLISTIC: {\n                        const t = currentTime / 1000;\n                        this.mCurrVelocity = this.mVelocity + this.mDeceleration * t;\n                        distance = this.mVelocity * t + this.mDeceleration * t * t / 2;\n                        break;\n                    }\n                    case SplineOverScroller.CUBIC: {\n                        const t = (currentTime) / this.mDuration;\n                        const t2 = t * t;\n                        const sign = Math_signum(this.mVelocity);\n                        distance = sign * this.mOver * (3 * t2 - 2 * t * t2);\n                        this.mCurrVelocity = sign * this.mOver * 6 * (-t + t2);\n                        break;\n                    }\n                }\n                this.mCurrentPosition = this.mStart + Math.round(distance);\n                return true;\n            }\n        }\n        SplineOverScroller.DECELERATION_RATE = (Math.log(0.78) / Math.log(0.9));\n        SplineOverScroller.INFLEXION = 0.35;\n        SplineOverScroller.START_TENSION = 0.5;\n        SplineOverScroller.END_TENSION = 1.0;\n        SplineOverScroller.P1 = SplineOverScroller.START_TENSION * SplineOverScroller.INFLEXION;\n        SplineOverScroller.P2 = 1.0 - SplineOverScroller.END_TENSION * (1 - SplineOverScroller.INFLEXION);\n        SplineOverScroller.NB_SAMPLES = 100;\n        SplineOverScroller.SPLINE_POSITION = new Array(SplineOverScroller.NB_SAMPLES + 1);\n        SplineOverScroller.SPLINE_TIME = new Array(SplineOverScroller.NB_SAMPLES + 1);\n        SplineOverScroller.SPLINE = 0;\n        SplineOverScroller.CUBIC = 1;\n        SplineOverScroller.BALLISTIC = 2;\n        SplineOverScroller.GRAVITY = 2000;\n        SplineOverScroller._staticFunc = function () {\n            let x_min = 0.0;\n            let y_min = 0.0;\n            for (let i = 0; i < SplineOverScroller.NB_SAMPLES; i++) {\n                const alpha = i / SplineOverScroller.NB_SAMPLES;\n                let x_max = 1.0;\n                let x, tx, coef;\n                while (true) {\n                    x = x_min + (x_max - x_min) / 2.0;\n                    coef = 3.0 * x * (1.0 - x);\n                    tx = coef * ((1.0 - x) * SplineOverScroller.P1 + x * SplineOverScroller.P2) + x * x * x;\n                    if (Math.abs(tx - alpha) < 1E-5)\n                        break;\n                    if (tx > alpha)\n                        x_max = x;\n                    else\n                        x_min = x;\n                }\n                SplineOverScroller.SPLINE_POSITION[i] = coef * ((1.0 - x) * SplineOverScroller.START_TENSION + x) + x * x * x;\n                let y_max = 1.0;\n                let y, dy;\n                while (true) {\n                    y = y_min + (y_max - y_min) / 2.0;\n                    coef = 3.0 * y * (1.0 - y);\n                    dy = coef * ((1.0 - y) * SplineOverScroller.START_TENSION + y) + y * y * y;\n                    if (Math.abs(dy - alpha) < 1E-5)\n                        break;\n                    if (dy > alpha)\n                        y_max = y;\n                    else\n                        y_min = y;\n                }\n                SplineOverScroller.SPLINE_TIME[i] = coef * ((1.0 - y) * SplineOverScroller.P1 + y * SplineOverScroller.P2) + y * y * y;\n            }\n            SplineOverScroller.SPLINE_POSITION[SplineOverScroller.NB_SAMPLES] = SplineOverScroller.SPLINE_TIME[SplineOverScroller.NB_SAMPLES] = 1.0;\n        }();\n        function Math_signum(value) {\n            if (value === 0 || Number.isNaN(value))\n                return value;\n            return Math.abs(value) === value ? 1 : -1;\n        }\n        let sViscousFluidScale = 8;\n        let sViscousFluidNormalize = 1;\n        function Scroller_viscousFluid(x) {\n            x *= sViscousFluidScale;\n            if (x < 1) {\n                x -= (1 - Math.exp(-x));\n            }\n            else {\n                let start = 0.36787944117;\n                x = 1 - Math.exp(1 - x);\n                x = start + x * (1 - start);\n            }\n            x *= sViscousFluidNormalize;\n            return x;\n        }\n        sViscousFluidNormalize = 1 / Scroller_viscousFluid(1);\n    })(widget = android.widget || (android.widget = {}));\n})(android || (android = {}));\n/**\n * Created by linfaxin on 15/10/17.\n */\n///<reference path=\"../util/Log.ts\"/>\n///<reference path=\"../util/Pools.ts\"/>\n///<reference path=\"MotionEvent.ts\"/>\nvar android;\n(function (android) {\n    var view;\n    (function (view) {\n        var Log = android.util.Log;\n        var Pools = android.util.Pools;\n        class VelocityTracker {\n            constructor() {\n                this.mLastTouchIndex = 0;\n                this.mGeneration = 0;\n                this.clear();\n            }\n            static obtain() {\n                let instance = VelocityTracker.sPool.acquire();\n                return (instance != null) ? instance : new VelocityTracker();\n            }\n            recycle() {\n                this.clear();\n                VelocityTracker.sPool.release(this);\n            }\n            setNextPoolable(element) {\n                this.mNext = element;\n            }\n            getNextPoolable() {\n                return this.mNext;\n            }\n            clear() {\n                VelocityTracker.releasePointerList(this.mPointerListHead);\n                this.mPointerListHead = null;\n                this.mLastTouchIndex = 0;\n            }\n            addMovement(ev) {\n                let historySize = ev.getHistorySize();\n                const pointerCount = ev.getPointerCount();\n                const lastTouchIndex = this.mLastTouchIndex;\n                const nextTouchIndex = (lastTouchIndex + 1) % VelocityTracker.NUM_PAST;\n                const finalTouchIndex = (nextTouchIndex + historySize) % VelocityTracker.NUM_PAST;\n                const generation = this.mGeneration++;\n                this.mLastTouchIndex = finalTouchIndex;\n                let previousPointer = null;\n                for (let i = 0; i < pointerCount; i++) {\n                    const pointerId = ev.getPointerId(i);\n                    let nextPointer;\n                    if (previousPointer == null || pointerId < previousPointer.id) {\n                        previousPointer = null;\n                        nextPointer = this.mPointerListHead;\n                    }\n                    else {\n                        nextPointer = previousPointer.next;\n                    }\n                    let pointer;\n                    for (;;) {\n                        if (nextPointer != null) {\n                            const nextPointerId = nextPointer.id;\n                            if (nextPointerId == pointerId) {\n                                pointer = nextPointer;\n                                break;\n                            }\n                            if (nextPointerId < pointerId) {\n                                nextPointer = nextPointer.next;\n                                continue;\n                            }\n                        }\n                        pointer = VelocityTracker.obtainPointer();\n                        pointer.id = pointerId;\n                        pointer.pastTime[lastTouchIndex] = Number.MIN_VALUE;\n                        pointer.next = nextPointer;\n                        if (previousPointer == null) {\n                            this.mPointerListHead = pointer;\n                        }\n                        else {\n                            previousPointer.next = pointer;\n                        }\n                        break;\n                    }\n                    pointer.generation = generation;\n                    previousPointer = pointer;\n                    const pastX = pointer.pastX;\n                    const pastY = pointer.pastY;\n                    const pastTime = pointer.pastTime;\n                    historySize = ev.getHistorySize(pointerId);\n                    for (let j = 0; j < historySize; j++) {\n                        const touchIndex = (nextTouchIndex + j) % VelocityTracker.NUM_PAST;\n                        pastX[touchIndex] = ev.getHistoricalX(i, j);\n                        pastY[touchIndex] = ev.getHistoricalY(i, j);\n                        pastTime[touchIndex] = ev.getHistoricalEventTime(i, j);\n                    }\n                    pastX[finalTouchIndex] = ev.getX(i);\n                    pastY[finalTouchIndex] = ev.getY(i);\n                    pastTime[finalTouchIndex] = ev.getEventTime();\n                }\n                previousPointer = null;\n                for (let pointer = this.mPointerListHead; pointer != null;) {\n                    const nextPointer = pointer.next;\n                    if (pointer.generation != generation) {\n                        if (previousPointer == null) {\n                            this.mPointerListHead = nextPointer;\n                        }\n                        else {\n                            previousPointer.next = nextPointer;\n                        }\n                        VelocityTracker.releasePointer(pointer);\n                    }\n                    else {\n                        previousPointer = pointer;\n                    }\n                    pointer = nextPointer;\n                }\n            }\n            computeCurrentVelocity(units, maxVelocity = Number.MAX_SAFE_INTEGER) {\n                const lastTouchIndex = this.mLastTouchIndex;\n                for (let pointer = this.mPointerListHead; pointer != null; pointer = pointer.next) {\n                    const pastTime = pointer.pastTime;\n                    let oldestTouchIndex = lastTouchIndex;\n                    let numTouches = 1;\n                    const minTime = pastTime[lastTouchIndex] - VelocityTracker.MAX_AGE_MILLISECONDS;\n                    while (numTouches < VelocityTracker.NUM_PAST) {\n                        const nextOldestTouchIndex = (oldestTouchIndex + VelocityTracker.NUM_PAST - 1) % VelocityTracker.NUM_PAST;\n                        const nextOldestTime = pastTime[nextOldestTouchIndex];\n                        if (nextOldestTime < minTime) {\n                            break;\n                        }\n                        oldestTouchIndex = nextOldestTouchIndex;\n                        numTouches += 1;\n                    }\n                    if (numTouches > 3) {\n                        numTouches -= 1;\n                    }\n                    const pastX = pointer.pastX;\n                    const pastY = pointer.pastY;\n                    const oldestX = pastX[oldestTouchIndex];\n                    const oldestY = pastY[oldestTouchIndex];\n                    const oldestTime = pastTime[oldestTouchIndex];\n                    let accumX = 0;\n                    let accumY = 0;\n                    for (let i = 1; i < numTouches; i++) {\n                        const touchIndex = (oldestTouchIndex + i) % VelocityTracker.NUM_PAST;\n                        const duration = (pastTime[touchIndex] - oldestTime);\n                        if (duration == 0)\n                            continue;\n                        let delta = pastX[touchIndex] - oldestX;\n                        let velocity = (delta / duration) * units;\n                        accumX = (accumX == 0) ? velocity : (accumX + velocity) * .5;\n                        delta = pastY[touchIndex] - oldestY;\n                        velocity = (delta / duration) * units;\n                        accumY = (accumY == 0) ? velocity : (accumY + velocity) * .5;\n                    }\n                    if (accumX < -maxVelocity) {\n                        accumX = -maxVelocity;\n                    }\n                    else if (accumX > maxVelocity) {\n                        accumX = maxVelocity;\n                    }\n                    if (accumY < -maxVelocity) {\n                        accumY = -maxVelocity;\n                    }\n                    else if (accumY > maxVelocity) {\n                        accumY = maxVelocity;\n                    }\n                    pointer.xVelocity = accumX;\n                    pointer.yVelocity = accumY;\n                    if (VelocityTracker.localLOGV) {\n                        Log.v(VelocityTracker.TAG, \"Pointer \" + pointer.id\n                            + \": Y velocity=\" + accumX + \" X velocity=\" + accumY + \" N=\" + numTouches);\n                    }\n                }\n            }\n            getXVelocity(id = 0) {\n                let pointer = this.getPointer(id);\n                return pointer != null ? pointer.xVelocity : 0;\n            }\n            getYVelocity(id = 0) {\n                let pointer = this.getPointer(id);\n                return pointer != null ? pointer.yVelocity : 0;\n            }\n            getPointer(id) {\n                for (let pointer = this.mPointerListHead; pointer != null; pointer = pointer.next) {\n                    if (pointer.id == id) {\n                        return pointer;\n                    }\n                }\n                return null;\n            }\n            static obtainPointer() {\n                if (VelocityTracker.sRecycledPointerCount != 0) {\n                    let element = VelocityTracker.sRecycledPointerListHead;\n                    VelocityTracker.sRecycledPointerCount -= 1;\n                    VelocityTracker.sRecycledPointerListHead = element.next;\n                    element.next = null;\n                    return element;\n                }\n                return new Pointer();\n            }\n            static releasePointer(pointer) {\n                if (VelocityTracker.sRecycledPointerCount < VelocityTracker.POINTER_POOL_CAPACITY) {\n                    pointer.next = VelocityTracker.sRecycledPointerListHead;\n                    VelocityTracker.sRecycledPointerCount += 1;\n                    VelocityTracker.sRecycledPointerListHead = pointer;\n                }\n            }\n            static releasePointerList(pointer) {\n                if (pointer != null) {\n                    let count = VelocityTracker.sRecycledPointerCount;\n                    if (count >= VelocityTracker.POINTER_POOL_CAPACITY) {\n                        return;\n                    }\n                    let tail = pointer;\n                    for (;;) {\n                        count += 1;\n                        if (count >= VelocityTracker.POINTER_POOL_CAPACITY) {\n                            break;\n                        }\n                        let next = tail.next;\n                        if (next == null) {\n                            break;\n                        }\n                        tail = next;\n                    }\n                    tail.next = VelocityTracker.sRecycledPointerListHead;\n                    VelocityTracker.sRecycledPointerCount = count;\n                    VelocityTracker.sRecycledPointerListHead = pointer;\n                }\n            }\n        }\n        VelocityTracker.TAG = \"VelocityTracker\";\n        VelocityTracker.DEBUG = Log.VelocityTracker_DBG;\n        VelocityTracker.localLOGV = VelocityTracker.DEBUG;\n        VelocityTracker.NUM_PAST = 10;\n        VelocityTracker.MAX_AGE_MILLISECONDS = 200;\n        VelocityTracker.POINTER_POOL_CAPACITY = 20;\n        VelocityTracker.sPool = new Pools.SynchronizedPool(2);\n        VelocityTracker.sRecycledPointerCount = 0;\n        view.VelocityTracker = VelocityTracker;\n        class Pointer {\n            constructor() {\n                this.id = 0;\n                this.xVelocity = 0;\n                this.yVelocity = 0;\n                this.pastX = new Array(VelocityTracker.NUM_PAST);\n                this.pastY = new Array(VelocityTracker.NUM_PAST);\n                this.pastTime = new Array(VelocityTracker.NUM_PAST);\n                this.generation = 0;\n            }\n        }\n    })(view = android.view || (android.view = {}));\n})(android || (android = {}));\n/**\n * Created by linfaxin on 15/10/17.\n */\n///<reference path=\"../view/View.ts\"/>\n///<reference path=\"../view/ViewGroup.ts\"/>\n///<reference path=\"../view/MotionEvent.ts\"/>\n///<reference path=\"FrameLayout.ts\"/>\n///<reference path=\"OverScroller.ts\"/>\n///<reference path=\"../view/VelocityTracker.ts\"/>\n///<reference path=\"../view/ViewConfiguration.ts\"/>\n///<reference path=\"../util/Log.ts\"/>\n///<reference path=\"../os/SystemClock.ts\"/>\n///<reference path=\"../graphics/Rect.ts\"/>\nvar android;\n(function (android) {\n    var widget;\n    (function (widget) {\n        var View = android.view.View;\n        var ViewGroup = android.view.ViewGroup;\n        var MeasureSpec = View.MeasureSpec;\n        var MotionEvent = android.view.MotionEvent;\n        var VelocityTracker = android.view.VelocityTracker;\n        var ViewConfiguration = android.view.ViewConfiguration;\n        var Rect = android.graphics.Rect;\n        var OverScroller = android.widget.OverScroller;\n        var Log = android.util.Log;\n        var SystemClock = android.os.SystemClock;\n        class ScrollView extends widget.FrameLayout {\n            constructor() {\n                super();\n                this.mLastScroll = 0;\n                this.mTempRect = new Rect();\n                this.mLastMotionY = 0;\n                this.mIsLayoutDirty = true;\n                this.mIsBeingDragged = false;\n                this.mFillViewport = false;\n                this.mSmoothScrollingEnabled = true;\n                this.mMinimumVelocity = 0;\n                this.mMaximumVelocity = 0;\n                this.mOverscrollDistance = 0;\n                this.mOverflingDistance = 0;\n                this.mActivePointerId = ScrollView.INVALID_POINTER;\n                this.initScrollView();\n            }\n            shouldDelayChildPressedState() {\n                return true;\n            }\n            getMaxScrollAmount() {\n                return (ScrollView.MAX_SCROLL_FACTOR * (this.mBottom - this.mTop));\n            }\n            initScrollView() {\n                this.mScroller = new OverScroller();\n                this.setWillNotDraw(false);\n                const configuration = ViewConfiguration.get();\n                this.mTouchSlop = configuration.getScaledTouchSlop();\n                this.mMinimumVelocity = configuration.getScaledMinimumFlingVelocity();\n                this.mMaximumVelocity = configuration.getScaledMaximumFlingVelocity();\n                this.mOverscrollDistance = configuration.getScaledOverscrollDistance();\n                this.mOverflingDistance = configuration.getScaledOverflingDistance();\n            }\n            addView(...args) {\n                if (this.getChildCount() > 0) {\n                    throw new Error(\"ScrollView can host only one direct child\");\n                }\n                return super.addView(...args);\n            }\n            canScroll() {\n                let child = this.getChildAt(0);\n                if (child != null) {\n                    let childHeight = child.getHeight();\n                    return this.getHeight() < childHeight + this.mPaddingTop + this.mPaddingBottom;\n                }\n                return false;\n            }\n            isFillViewport() {\n                return this.mFillViewport;\n            }\n            setFillViewport(fillViewport) {\n                if (fillViewport != this.mFillViewport) {\n                    this.mFillViewport = fillViewport;\n                    this.requestLayout();\n                }\n            }\n            isSmoothScrollingEnabled() {\n                return this.mSmoothScrollingEnabled;\n            }\n            setSmoothScrollingEnabled(smoothScrollingEnabled) {\n                this.mSmoothScrollingEnabled = smoothScrollingEnabled;\n            }\n            onMeasure(widthMeasureSpec, heightMeasureSpec) {\n                super.onMeasure(widthMeasureSpec, heightMeasureSpec);\n                if (!this.mFillViewport) {\n                    return;\n                }\n                const heightMode = MeasureSpec.getMode(heightMeasureSpec);\n                if (heightMode == MeasureSpec.UNSPECIFIED) {\n                    return;\n                }\n                if (this.getChildCount() > 0) {\n                    const child = this.getChildAt(0);\n                    let height = this.getMeasuredHeight();\n                    if (child.getMeasuredHeight() < height) {\n                        const lp = child.getLayoutParams();\n                        let childWidthMeasureSpec = widget.FrameLayout.getChildMeasureSpec(widthMeasureSpec, this.mPaddingLeft + this.mPaddingRight, lp.width);\n                        height -= this.mPaddingTop;\n                        height -= this.mPaddingBottom;\n                        let childHeightMeasureSpec = MeasureSpec.makeMeasureSpec(height, MeasureSpec.EXACTLY);\n                        child.measure(childWidthMeasureSpec, childHeightMeasureSpec);\n                    }\n                }\n            }\n            inChild(x, y) {\n                if (this.getChildCount() > 0) {\n                    const scrollY = this.mScrollY;\n                    const child = this.getChildAt(0);\n                    return !(y < child.getTop() - scrollY\n                        || y >= child.getBottom() - scrollY\n                        || x < child.getLeft()\n                        || x >= child.getRight());\n                }\n                return false;\n            }\n            initOrResetVelocityTracker() {\n                if (this.mVelocityTracker == null) {\n                    this.mVelocityTracker = VelocityTracker.obtain();\n                }\n                else {\n                    this.mVelocityTracker.clear();\n                }\n            }\n            initVelocityTrackerIfNotExists() {\n                if (this.mVelocityTracker == null) {\n                    this.mVelocityTracker = VelocityTracker.obtain();\n                }\n            }\n            recycleVelocityTracker() {\n                if (this.mVelocityTracker != null) {\n                    this.mVelocityTracker.recycle();\n                    this.mVelocityTracker = null;\n                }\n            }\n            requestDisallowInterceptTouchEvent(disallowIntercept) {\n                if (disallowIntercept) {\n                    this.recycleVelocityTracker();\n                }\n                super.requestDisallowInterceptTouchEvent(disallowIntercept);\n            }\n            onInterceptTouchEvent(ev) {\n                /*\n                 * This method JUST determines whether we want to intercept the motion.\n                 * If we return true, onMotionEvent will be called and we do the actual\n                 * scrolling there.\n                 */\n                const action = ev.getAction();\n                if ((action == MotionEvent.ACTION_MOVE) && (this.mIsBeingDragged)) {\n                    return true;\n                }\n                if (this.getScrollY() == 0 && !this.canScrollVertically(1)) {\n                    return false;\n                }\n                switch (action & MotionEvent.ACTION_MASK) {\n                    case MotionEvent.ACTION_MOVE:\n                        {\n                            const activePointerId = this.mActivePointerId;\n                            if (activePointerId == ScrollView.INVALID_POINTER) {\n                                break;\n                            }\n                            const pointerIndex = ev.findPointerIndex(activePointerId);\n                            if (pointerIndex == -1) {\n                                Log.e(ScrollView.TAG, \"Invalid pointerId=\" + activePointerId\n                                    + \" in onInterceptTouchEvent\");\n                                break;\n                            }\n                            const y = ev.getY(pointerIndex);\n                            const yDiff = Math.abs(y - this.mLastMotionY);\n                            if (yDiff > this.mTouchSlop) {\n                                this.mIsBeingDragged = true;\n                                this.mLastMotionY = y;\n                                this.initVelocityTrackerIfNotExists();\n                                this.mVelocityTracker.addMovement(ev);\n                                const parent = this.getParent();\n                                if (parent != null) {\n                                    parent.requestDisallowInterceptTouchEvent(true);\n                                }\n                            }\n                            break;\n                        }\n                    case MotionEvent.ACTION_DOWN:\n                        {\n                            const y = ev.getY();\n                            if (!this.inChild(ev.getX(), y)) {\n                                this.mIsBeingDragged = false;\n                                this.recycleVelocityTracker();\n                                break;\n                            }\n                            this.mLastMotionY = y;\n                            this.mActivePointerId = ev.getPointerId(0);\n                            this.initOrResetVelocityTracker();\n                            this.mVelocityTracker.addMovement(ev);\n                            this.mIsBeingDragged = !this.mScroller.isFinished();\n                            break;\n                        }\n                    case MotionEvent.ACTION_CANCEL:\n                    case MotionEvent.ACTION_UP:\n                        this.mIsBeingDragged = false;\n                        this.mActivePointerId = ScrollView.INVALID_POINTER;\n                        this.recycleVelocityTracker();\n                        if (this.mScroller.springBack(this.mScrollX, this.mScrollY, 0, 0, 0, this.getScrollRange())) {\n                            this.postInvalidateOnAnimation();\n                        }\n                        break;\n                    case MotionEvent.ACTION_POINTER_UP:\n                        this.onSecondaryPointerUp(ev);\n                        break;\n                }\n                return this.mIsBeingDragged;\n            }\n            onTouchEvent(ev) {\n                this.initVelocityTrackerIfNotExists();\n                this.mVelocityTracker.addMovement(ev);\n                const action = ev.getAction();\n                switch (action & MotionEvent.ACTION_MASK) {\n                    case MotionEvent.ACTION_DOWN:\n                        {\n                            if (this.getChildCount() == 0) {\n                                return false;\n                            }\n                            if ((this.mIsBeingDragged = !this.mScroller.isFinished())) {\n                                const parent = this.getParent();\n                                if (parent != null) {\n                                    parent.requestDisallowInterceptTouchEvent(true);\n                                }\n                            }\n                            if (!this.mScroller.isFinished()) {\n                                this.mScroller.abortAnimation();\n                            }\n                            this.mLastMotionY = ev.getY();\n                            this.mActivePointerId = ev.getPointerId(0);\n                            break;\n                        }\n                    case MotionEvent.ACTION_MOVE:\n                        const activePointerIndex = ev.findPointerIndex(this.mActivePointerId);\n                        if (activePointerIndex == -1) {\n                            Log.e(ScrollView.TAG, \"Invalid pointerId=\" + this.mActivePointerId + \" in onTouchEvent\");\n                            break;\n                        }\n                        const y = ev.getY(activePointerIndex);\n                        let deltaY = this.mLastMotionY - y;\n                        if (!this.mIsBeingDragged && Math.abs(deltaY) > this.mTouchSlop) {\n                            const parent = this.getParent();\n                            if (parent != null) {\n                                parent.requestDisallowInterceptTouchEvent(true);\n                            }\n                            this.mIsBeingDragged = true;\n                            if (deltaY > 0) {\n                                deltaY -= this.mTouchSlop;\n                            }\n                            else {\n                                deltaY += this.mTouchSlop;\n                            }\n                        }\n                        if (this.mIsBeingDragged) {\n                            this.mLastMotionY = y;\n                            const oldX = this.mScrollX;\n                            const oldY = this.mScrollY;\n                            const range = this.getScrollRange();\n                            const overscrollMode = this.getOverScrollMode();\n                            const canOverscroll = overscrollMode == ScrollView.OVER_SCROLL_ALWAYS ||\n                                (overscrollMode == ScrollView.OVER_SCROLL_IF_CONTENT_SCROLLS && range > 0);\n                            if (this.overScrollBy(0, deltaY, 0, this.mScrollY, 0, range, 0, this.mOverscrollDistance, true)) {\n                                this.mVelocityTracker.clear();\n                            }\n                            if (canOverscroll) {\n                                const pulledToY = oldY + deltaY;\n                                if (pulledToY < 0) {\n                                }\n                                else if (pulledToY > range) {\n                                }\n                            }\n                        }\n                        break;\n                    case MotionEvent.ACTION_UP:\n                        if (this.mIsBeingDragged) {\n                            let velocityTracker = this.mVelocityTracker;\n                            velocityTracker.computeCurrentVelocity(1000, this.mMaximumVelocity);\n                            let initialVelocity = velocityTracker.getYVelocity(this.mActivePointerId);\n                            if (this.getChildCount() > 0) {\n                                if ((Math.abs(initialVelocity) > this.mMinimumVelocity)) {\n                                    this.fling(-initialVelocity);\n                                }\n                                else {\n                                    if (this.mScroller.springBack(this.mScrollX, this.mScrollY, 0, 0, 0, this.getScrollRange())) {\n                                        this.postInvalidateOnAnimation();\n                                    }\n                                }\n                            }\n                            this.mActivePointerId = ScrollView.INVALID_POINTER;\n                            this.endDrag();\n                        }\n                        break;\n                    case MotionEvent.ACTION_CANCEL:\n                        if (this.mIsBeingDragged && this.getChildCount() > 0) {\n                            if (this.mScroller.springBack(this.mScrollX, this.mScrollY, 0, 0, 0, this.getScrollRange())) {\n                                this.postInvalidateOnAnimation();\n                            }\n                            this.mActivePointerId = ScrollView.INVALID_POINTER;\n                            this.endDrag();\n                        }\n                        break;\n                    case MotionEvent.ACTION_POINTER_DOWN:\n                        {\n                            const index = ev.getActionIndex();\n                            this.mLastMotionY = ev.getY(index);\n                            this.mActivePointerId = ev.getPointerId(index);\n                            break;\n                        }\n                    case MotionEvent.ACTION_POINTER_UP:\n                        this.onSecondaryPointerUp(ev);\n                        this.mLastMotionY = ev.getY(ev.findPointerIndex(this.mActivePointerId));\n                        break;\n                }\n                return true;\n            }\n            onSecondaryPointerUp(ev) {\n                const pointerIndex = (ev.getAction() & MotionEvent.ACTION_POINTER_INDEX_MASK) >>\n                    MotionEvent.ACTION_POINTER_INDEX_SHIFT;\n                const pointerId = ev.getPointerId(pointerIndex);\n                if (pointerId == this.mActivePointerId) {\n                    const newPointerIndex = pointerIndex == 0 ? 1 : 0;\n                    this.mLastMotionY = ev.getY(newPointerIndex);\n                    this.mActivePointerId = ev.getPointerId(newPointerIndex);\n                    if (this.mVelocityTracker != null) {\n                        this.mVelocityTracker.clear();\n                    }\n                }\n            }\n            onOverScrolled(scrollX, scrollY, clampedX, clampedY) {\n                if (!this.mScroller.isFinished()) {\n                    const oldX = this.mScrollX;\n                    const oldY = this.mScrollY;\n                    this.mScrollX = scrollX;\n                    this.mScrollY = scrollY;\n                    this.invalidateParentIfNeeded();\n                    this.onScrollChanged(this.mScrollX, this.mScrollY, oldX, oldY);\n                    if (clampedY || this.mScroller.getCurrVelocity() < this.mMinimumVelocity) {\n                        this.mScroller.springBack(this.mScrollX, this.mScrollY, 0, 0, 0, this.getScrollRange());\n                    }\n                }\n                else {\n                    super.scrollTo(scrollX, scrollY);\n                }\n                if (!this.awakenScrollBars()) {\n                }\n            }\n            getScrollRange() {\n                let scrollRange = 0;\n                if (this.getChildCount() > 0) {\n                    let child = this.getChildAt(0);\n                    scrollRange = Math.max(0, child.getHeight() - (this.getHeight() - this.mPaddingBottom - this.mPaddingTop));\n                }\n                return scrollRange;\n            }\n            findFocusableViewInBounds(topFocus, top, bottom) {\n                return null;\n            }\n            pageScroll(direction) {\n                let down = direction == View.FOCUS_DOWN;\n                let height = this.getHeight();\n                if (down) {\n                    this.mTempRect.top = this.getScrollY() + height;\n                    let count = this.getChildCount();\n                    if (count > 0) {\n                        let view = this.getChildAt(count - 1);\n                        if (this.mTempRect.top + height > view.getBottom()) {\n                            this.mTempRect.top = view.getBottom() - height;\n                        }\n                    }\n                }\n                else {\n                    this.mTempRect.top = this.getScrollY() - height;\n                    if (this.mTempRect.top < 0) {\n                        this.mTempRect.top = 0;\n                    }\n                }\n                this.mTempRect.bottom = this.mTempRect.top + height;\n                return this.scrollAndFocus(direction, this.mTempRect.top, this.mTempRect.bottom);\n            }\n            fullScroll(direction) {\n                let down = direction == View.FOCUS_DOWN;\n                let height = this.getHeight();\n                this.mTempRect.top = 0;\n                this.mTempRect.bottom = height;\n                if (down) {\n                    let count = this.getChildCount();\n                    if (count > 0) {\n                        let view = this.getChildAt(count - 1);\n                        this.mTempRect.bottom = view.getBottom() + this.mPaddingBottom;\n                        this.mTempRect.top = this.mTempRect.bottom - height;\n                    }\n                }\n                return this.scrollAndFocus(direction, this.mTempRect.top, this.mTempRect.bottom);\n            }\n            scrollAndFocus(direction, top, bottom) {\n                let handled = true;\n                let height = this.getHeight();\n                let containerTop = this.getScrollY();\n                let containerBottom = containerTop + height;\n                let up = direction == View.FOCUS_UP;\n                let newFocused = this.findFocusableViewInBounds(up, top, bottom);\n                if (newFocused == null) {\n                    newFocused = this;\n                }\n                if (top >= containerTop && bottom <= containerBottom) {\n                    handled = false;\n                }\n                else {\n                    let delta = up ? (top - containerTop) : (bottom - containerBottom);\n                    this.doScrollY(delta);\n                }\n                return handled;\n            }\n            arrowScroll(direction) {\n                return false;\n            }\n            isOffScreen(descendant) {\n                return !this.isWithinDeltaOfScreen(descendant, 0, this.getHeight());\n            }\n            isWithinDeltaOfScreen(descendant, delta, height) {\n                descendant.getDrawingRect(this.mTempRect);\n                this.offsetDescendantRectToMyCoords(descendant, this.mTempRect);\n                return (this.mTempRect.bottom + delta) >= this.getScrollY()\n                    && (this.mTempRect.top - delta) <= (this.getScrollY() + height);\n            }\n            doScrollY(delta) {\n                if (delta != 0) {\n                    if (this.mSmoothScrollingEnabled) {\n                        this.smoothScrollBy(0, delta);\n                    }\n                    else {\n                        this.scrollBy(0, delta);\n                    }\n                }\n            }\n            smoothScrollBy(dx, dy) {\n                if (this.getChildCount() == 0) {\n                    return;\n                }\n                let duration = SystemClock.uptimeMillis() - this.mLastScroll;\n                if (duration > ScrollView.ANIMATED_SCROLL_GAP) {\n                    const height = this.getHeight() - this.mPaddingBottom - this.mPaddingTop;\n                    const bottom = this.getChildAt(0).getHeight();\n                    const maxY = Math.max(0, bottom - height);\n                    const scrollY = this.mScrollY;\n                    dy = Math.max(0, Math.min(scrollY + dy, maxY)) - scrollY;\n                    this.mScroller.startScroll(this.mScrollX, scrollY, 0, dy);\n                    this.postInvalidateOnAnimation();\n                }\n                else {\n                    if (!this.mScroller.isFinished()) {\n                        this.mScroller.abortAnimation();\n                    }\n                    scrollBy(dx, dy);\n                }\n                this.mLastScroll = SystemClock.uptimeMillis();\n            }\n            smoothScrollTo(x, y) {\n                this.smoothScrollBy(x - this.mScrollX, y - this.mScrollY);\n            }\n            computeVerticalScrollRange() {\n                const count = this.getChildCount();\n                const contentHeight = this.getHeight() - this.mPaddingBottom - this.mPaddingTop;\n                if (count == 0) {\n                    return contentHeight;\n                }\n                let scrollRange = this.getChildAt(0).getBottom();\n                const scrollY = this.mScrollY;\n                const overscrollBottom = Math.max(0, scrollRange - contentHeight);\n                if (scrollY < 0) {\n                    scrollRange -= scrollY;\n                }\n                else if (scrollY > overscrollBottom) {\n                    scrollRange += scrollY - overscrollBottom;\n                }\n                return scrollRange;\n            }\n            computeVerticalScrollOffset() {\n                return Math.max(0, super.computeVerticalScrollOffset());\n            }\n            measureChild(child, parentWidthMeasureSpec, parentHeightMeasureSpec) {\n                let lp = child.getLayoutParams();\n                let childWidthMeasureSpec;\n                let childHeightMeasureSpec;\n                childWidthMeasureSpec = ViewGroup.getChildMeasureSpec(parentWidthMeasureSpec, this.mPaddingLeft\n                    + this.mPaddingRight, lp.width);\n                childHeightMeasureSpec = MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED);\n                child.measure(childWidthMeasureSpec, childHeightMeasureSpec);\n            }\n            measureChildWithMargins(child, parentWidthMeasureSpec, widthUsed, parentHeightMeasureSpec, heightUsed) {\n                const lp = child.getLayoutParams();\n                const childWidthMeasureSpec = ScrollView.getChildMeasureSpec(parentWidthMeasureSpec, this.mPaddingLeft + this.mPaddingRight + lp.leftMargin + lp.rightMargin\n                    + widthUsed, lp.width);\n                const childHeightMeasureSpec = MeasureSpec.makeMeasureSpec(lp.topMargin + lp.bottomMargin, MeasureSpec.UNSPECIFIED);\n                child.measure(childWidthMeasureSpec, childHeightMeasureSpec);\n            }\n            computeScroll() {\n                if (this.mScroller.computeScrollOffset()) {\n                    let oldX = this.mScrollX;\n                    let oldY = this.mScrollY;\n                    let x = this.mScroller.getCurrX();\n                    let y = this.mScroller.getCurrY();\n                    if (oldX != x || oldY != y) {\n                        const range = this.getScrollRange();\n                        const overscrollMode = this.getOverScrollMode();\n                        const canOverscroll = overscrollMode == ScrollView.OVER_SCROLL_ALWAYS ||\n                            (overscrollMode == ScrollView.OVER_SCROLL_IF_CONTENT_SCROLLS && range > 0);\n                        this.overScrollBy(x - oldX, y - oldY, oldX, oldY, 0, range, 0, this.mOverflingDistance, false);\n                        this.onScrollChanged(this.mScrollX, this.mScrollY, oldX, oldY);\n                        if (canOverscroll) {\n                            if (y < 0 && oldY >= 0) {\n                            }\n                            else if (y > range && oldY <= range) {\n                            }\n                        }\n                    }\n                    if (!this.awakenScrollBars()) {\n                        this.postInvalidateOnAnimation();\n                    }\n                }\n                else {\n                }\n            }\n            scrollToChild(child) {\n                child.getDrawingRect(this.mTempRect);\n                this.offsetDescendantRectToMyCoords(child, this.mTempRect);\n                let scrollDelta = this.computeScrollDeltaToGetChildRectOnScreen(this.mTempRect);\n                if (scrollDelta != 0) {\n                    this.scrollBy(0, scrollDelta);\n                }\n            }\n            scrollToChildRect(rect, immediate) {\n                const delta = this.computeScrollDeltaToGetChildRectOnScreen(rect);\n                const scroll = delta != 0;\n                if (scroll) {\n                    if (immediate) {\n                        this.scrollBy(0, delta);\n                    }\n                    else {\n                        this.smoothScrollBy(0, delta);\n                    }\n                }\n                return scroll;\n            }\n            computeScrollDeltaToGetChildRectOnScreen(rect) {\n                if (this.getChildCount() == 0)\n                    return 0;\n                let height = this.getHeight();\n                let screenTop = this.getScrollY();\n                let screenBottom = screenTop + height;\n                let fadingEdge = this.getVerticalFadingEdgeLength();\n                if (rect.top > 0) {\n                    screenTop += fadingEdge;\n                }\n                if (rect.bottom < this.getChildAt(0).getHeight()) {\n                    screenBottom -= fadingEdge;\n                }\n                let scrollYDelta = 0;\n                if (rect.bottom > screenBottom && rect.top > screenTop) {\n                    if (rect.height() > height) {\n                        scrollYDelta += (rect.top - screenTop);\n                    }\n                    else {\n                        scrollYDelta += (rect.bottom - screenBottom);\n                    }\n                    let bottom = this.getChildAt(0).getBottom();\n                    let distanceToBottom = bottom - screenBottom;\n                    scrollYDelta = Math.min(scrollYDelta, distanceToBottom);\n                }\n                else if (rect.top < screenTop && rect.bottom < screenBottom) {\n                    if (rect.height() > height) {\n                        scrollYDelta -= (screenBottom - rect.bottom);\n                    }\n                    else {\n                        scrollYDelta -= (screenTop - rect.top);\n                    }\n                    scrollYDelta = Math.max(scrollYDelta, -this.getScrollY());\n                }\n                return scrollYDelta;\n            }\n            requestChildFocus(child, focused) {\n                if (!this.mIsLayoutDirty) {\n                    this.scrollToChild(focused);\n                }\n                else {\n                    this.mChildToScrollTo = focused;\n                }\n                super.requestChildFocus(child, focused);\n            }\n            onRequestFocusInDescendants(direction, previouslyFocusedRect) {\n                return false;\n            }\n            requestChildRectangleOnScreen(child, rectangle, immediate) {\n                rectangle.offset(child.getLeft() - child.getScrollX(), child.getTop() - child.getScrollY());\n                return this.scrollToChildRect(rectangle, immediate);\n            }\n            requestLayout() {\n                this.mIsLayoutDirty = true;\n                super.requestLayout();\n            }\n            onLayout(changed, l, t, r, b) {\n                super.onLayout(changed, l, t, r, b);\n                this.mIsLayoutDirty = false;\n                if (this.mChildToScrollTo != null && ScrollView.isViewDescendantOf(this.mChildToScrollTo, this)) {\n                    this.scrollToChild(this.mChildToScrollTo);\n                }\n                this.mChildToScrollTo = null;\n                if (!this.isLaidOut()) {\n                    const childHeight = (this.getChildCount() > 0) ? this.getChildAt(0).getMeasuredHeight() : 0;\n                    const scrollRange = Math.max(0, childHeight - (b - t - this.mPaddingBottom - this.mPaddingTop));\n                    if (this.mScrollY > scrollRange) {\n                        this.mScrollY = scrollRange;\n                    }\n                    else if (this.mScrollY < 0) {\n                        this.mScrollY = 0;\n                    }\n                }\n                scrollTo(this.mScrollX, this.mScrollY);\n            }\n            onSizeChanged(w, h, oldw, oldh) {\n                super.onSizeChanged(w, h, oldw, oldh);\n                let currentFocused = this.findFocus();\n                if (null == currentFocused || this == currentFocused)\n                    return;\n                if (this.isWithinDeltaOfScreen(currentFocused, 0, oldh)) {\n                    currentFocused.getDrawingRect(this.mTempRect);\n                    this.offsetDescendantRectToMyCoords(currentFocused, this.mTempRect);\n                    let scrollDelta = this.computeScrollDeltaToGetChildRectOnScreen(this.mTempRect);\n                    this.doScrollY(scrollDelta);\n                }\n            }\n            static isViewDescendantOf(child, parent) {\n                if (child == parent) {\n                    return true;\n                }\n                const theParent = child.getParent();\n                return (theParent instanceof ViewGroup) && ScrollView.isViewDescendantOf(theParent, parent);\n            }\n            fling(velocityY) {\n                if (this.getChildCount() > 0) {\n                    let height = this.getHeight() - this.mPaddingBottom - this.mPaddingTop;\n                    let bottom = this.getChildAt(0).getHeight();\n                    this.mScroller.fling(this.mScrollX, this.mScrollY, 0, velocityY, 0, 0, 0, Math.max(0, bottom - height), 0, height / 2);\n                    this.postInvalidateOnAnimation();\n                }\n            }\n            endDrag() {\n                this.mIsBeingDragged = false;\n                this.recycleVelocityTracker();\n            }\n            scrollTo(x, y) {\n                if (this.getChildCount() > 0) {\n                    let child = this.getChildAt(0);\n                    x = ScrollView.clamp(x, this.getWidth() - this.mPaddingRight - this.mPaddingLeft, child.getWidth());\n                    y = ScrollView.clamp(y, this.getHeight() - this.mPaddingBottom - this.mPaddingTop, child.getHeight());\n                    if (x != this.mScrollX || y != this.mScrollY) {\n                        super.scrollTo(x, y);\n                    }\n                }\n            }\n            static clamp(n, my, child) {\n                if (my >= child || n < 0) {\n                    return 0;\n                }\n                if ((my + n) > child) {\n                    return child - my;\n                }\n                return n;\n            }\n        }\n        ScrollView.ANIMATED_SCROLL_GAP = 250;\n        ScrollView.MAX_SCROLL_FACTOR = 0.5;\n        ScrollView.TAG = \"ScrollView\";\n        ScrollView.INVALID_POINTER = -1;\n        widget.ScrollView = ScrollView;\n    })(widget = android.widget || (android.widget = {}));\n})(android || (android = {}));\n///<reference path=\"../view/Gravity.ts\"/>\n///<reference path=\"../view/View.ts\"/>\n///<reference path=\"../view/ViewGroup.ts\"/>\n///<reference path=\"../graphics/drawable/Drawable.ts\"/>\n///<reference path=\"../graphics/Rect.ts\"/>\nvar android;\n(function (android) {\n    var widget;\n    (function (widget) {\n        var Gravity = android.view.Gravity;\n        var View = android.view.View;\n        var MeasureSpec = View.MeasureSpec;\n        var ViewGroup = android.view.ViewGroup;\n        class LinearLayout extends ViewGroup {\n            constructor(...args) {\n                super(...args);\n                this.mBaselineAligned = true;\n                this.mBaselineAlignedChildIndex = -1;\n                this.mBaselineChildTop = 0;\n                this.mOrientation = 0;\n                this.mGravity = Gravity.LEFT | Gravity.TOP;\n                this.mTotalLength = 0;\n                this.mWeightSum = -1;\n                this.mUseLargestChild = false;\n                this.mDividerWidth = 0;\n                this.mDividerHeight = 0;\n                this.mShowDividers = LinearLayout.SHOW_DIVIDER_NONE;\n                this.mDividerPadding = 0;\n            }\n            setShowDividers(showDividers) {\n                if (showDividers != this.mShowDividers) {\n                    this.requestLayout();\n                }\n                this.mShowDividers = showDividers;\n            }\n            shouldDelayChildPressedState() {\n                return false;\n            }\n            getShowDividers() {\n                return this.mShowDividers;\n            }\n            getDividerDrawable() {\n                return this.mDivider;\n            }\n            setDividerDrawable(divider) {\n                if (divider == this.mDivider) {\n                    return;\n                }\n                this.mDivider = divider;\n                if (divider != null) {\n                    this.mDividerWidth = divider.getIntrinsicWidth();\n                    this.mDividerHeight = divider.getIntrinsicHeight();\n                }\n                else {\n                    this.mDividerWidth = 0;\n                    this.mDividerHeight = 0;\n                }\n                this.setWillNotDraw(divider == null);\n                this.requestLayout();\n            }\n            setDividerPadding(padding) {\n                this.mDividerPadding = padding;\n            }\n            getDividerPadding() {\n                return this.mDividerPadding;\n            }\n            getDividerWidth() {\n                return this.mDividerWidth;\n            }\n            onDraw(canvas) {\n                if (this.mDivider == null) {\n                    return;\n                }\n                if (this.mOrientation == LinearLayout.VERTICAL) {\n                    this.drawDividersVertical(canvas);\n                }\n                else {\n                    this.drawDividersHorizontal(canvas);\n                }\n            }\n            drawDividersVertical(canvas) {\n                const count = this.getVirtualChildCount();\n                for (let i = 0; i < count; i++) {\n                    const child = this.getVirtualChildAt(i);\n                    if (child != null && child.getVisibility() != View.GONE) {\n                        if (this.hasDividerBeforeChildAt(i)) {\n                            const lp = child.getLayoutParams();\n                            const top = child.getTop() - lp.topMargin - this.mDividerHeight;\n                            this.drawHorizontalDivider(canvas, top);\n                        }\n                    }\n                }\n                if (this.hasDividerBeforeChildAt(count)) {\n                    const child = this.getVirtualChildAt(count - 1);\n                    let bottom = 0;\n                    if (child == null) {\n                        bottom = this.getHeight() - this.getPaddingBottom() - this.mDividerHeight;\n                    }\n                    else {\n                        const lp = child.getLayoutParams();\n                        bottom = child.getBottom() + lp.bottomMargin;\n                    }\n                    this.drawHorizontalDivider(canvas, bottom);\n                }\n            }\n            drawDividersHorizontal(canvas) {\n                const count = this.getVirtualChildCount();\n                const isLayoutRtl = this.isLayoutRtl();\n                for (let i = 0; i < count; i++) {\n                    const child = this.getVirtualChildAt(i);\n                    if (child != null && child.getVisibility() != View.GONE) {\n                        if (this.hasDividerBeforeChildAt(i)) {\n                            const lp = child.getLayoutParams();\n                            let position;\n                            if (isLayoutRtl) {\n                                position = child.getRight() + lp.rightMargin;\n                            }\n                            else {\n                                position = child.getLeft() - lp.leftMargin - this.mDividerWidth;\n                            }\n                            this.drawVerticalDivider(canvas, position);\n                        }\n                    }\n                }\n                if (this.hasDividerBeforeChildAt(count)) {\n                    const child = this.getVirtualChildAt(count - 1);\n                    let position;\n                    if (child == null) {\n                        if (isLayoutRtl) {\n                            position = this.getPaddingLeft();\n                        }\n                        else {\n                            position = this.getWidth() - this.getPaddingRight() - this.mDividerWidth;\n                        }\n                    }\n                    else {\n                        const lp = child.getLayoutParams();\n                        if (isLayoutRtl) {\n                            position = child.getLeft() - lp.leftMargin - this.mDividerWidth;\n                        }\n                        else {\n                            position = child.getRight() + lp.rightMargin;\n                        }\n                    }\n                    this.drawVerticalDivider(canvas, position);\n                }\n            }\n            drawHorizontalDivider(canvas, top) {\n                this.mDivider.setBounds(this.getPaddingLeft() + this.mDividerPadding, top, this.getWidth() - this.getPaddingRight() - this.mDividerPadding, top + this.mDividerHeight);\n                this.mDivider.draw(canvas);\n            }\n            drawVerticalDivider(canvas, left) {\n                this.mDivider.setBounds(left, this.getPaddingTop() + this.mDividerPadding, left + this.mDividerWidth, this.getHeight() - this.getPaddingBottom() - this.mDividerPadding);\n                this.mDivider.draw(canvas);\n            }\n            isBaselineAligned() {\n                return this.mBaselineAligned;\n            }\n            setBaselineAligned(baselineAligned) {\n                this.mBaselineAligned = baselineAligned;\n            }\n            isMeasureWithLargestChildEnabled() {\n                return this.mUseLargestChild;\n            }\n            setMeasureWithLargestChildEnabled(enabled) {\n                this.mUseLargestChild = enabled;\n            }\n            getBaseline() {\n                if (this.mBaselineAlignedChildIndex < 0) {\n                    return super.getBaseline();\n                }\n                if (this.getChildCount() <= this.mBaselineAlignedChildIndex) {\n                    throw new Error(\"mBaselineAlignedChildIndex of LinearLayout \"\n                        + \"set to an index that is out of bounds.\");\n                }\n                const child = this.getChildAt(this.mBaselineAlignedChildIndex);\n                const childBaseline = child.getBaseline();\n                if (childBaseline == -1) {\n                    if (this.mBaselineAlignedChildIndex == 0) {\n                        return -1;\n                    }\n                    throw new Error(\"mBaselineAlignedChildIndex of LinearLayout \"\n                        + \"points to a View that doesn't know how to get its baseline.\");\n                }\n                let childTop = this.mBaselineChildTop;\n                if (this.mOrientation == LinearLayout.VERTICAL) {\n                    const majorGravity = this.mGravity & Gravity.VERTICAL_GRAVITY_MASK;\n                    if (majorGravity != Gravity.TOP) {\n                        switch (majorGravity) {\n                            case Gravity.BOTTOM:\n                                childTop = this.mBottom - this.mTop - this.mPaddingBottom - this.mTotalLength;\n                                break;\n                            case Gravity.CENTER_VERTICAL:\n                                childTop += ((this.mBottom - this.mTop - this.mPaddingTop - this.mPaddingBottom) -\n                                    this.mTotalLength) / 2;\n                                break;\n                        }\n                    }\n                }\n                let lp = child.getLayoutParams();\n                return childTop + lp.topMargin + childBaseline;\n            }\n            getBaselineAlignedChildIndex() {\n                return this.mBaselineAlignedChildIndex;\n            }\n            setBaselineAlignedChildIndex(i) {\n                if ((i < 0) || (i >= this.getChildCount())) {\n                    throw new Error(\"base aligned child index out \"\n                        + \"of range (0, \" + this.getChildCount() + \")\");\n                }\n                this.mBaselineAlignedChildIndex = i;\n            }\n            getVirtualChildAt(index) {\n                return this.getChildAt(index);\n            }\n            getVirtualChildCount() {\n                return this.getChildCount();\n            }\n            getWeightSum() {\n                return this.mWeightSum;\n            }\n            setWeightSum(weightSum) {\n                this.mWeightSum = Math.max(0, weightSum);\n            }\n            onMeasure(widthMeasureSpec, heightMeasureSpec) {\n                if (this.mOrientation == LinearLayout.VERTICAL) {\n                    this.measureVertical(widthMeasureSpec, heightMeasureSpec);\n                }\n                else {\n                    this.measureHorizontal(widthMeasureSpec, heightMeasureSpec);\n                }\n            }\n            hasDividerBeforeChildAt(childIndex) {\n                if (childIndex == 0) {\n                    return (this.mShowDividers & LinearLayout.SHOW_DIVIDER_BEGINNING) != 0;\n                }\n                else if (childIndex == this.getChildCount()) {\n                    return (this.mShowDividers & LinearLayout.SHOW_DIVIDER_END) != 0;\n                }\n                else if ((this.mShowDividers & LinearLayout.SHOW_DIVIDER_MIDDLE) != 0) {\n                    let hasVisibleViewBefore = false;\n                    for (let i = childIndex - 1; i >= 0; i--) {\n                        if (this.getChildAt(i).getVisibility() != LinearLayout.GONE) {\n                            hasVisibleViewBefore = true;\n                            break;\n                        }\n                    }\n                    return hasVisibleViewBefore;\n                }\n                return false;\n            }\n            measureVertical(widthMeasureSpec, heightMeasureSpec) {\n                this.mTotalLength = 0;\n                let maxWidth = 0;\n                let childState = 0;\n                let alternativeMaxWidth = 0;\n                let weightedMaxWidth = 0;\n                let allFillParent = true;\n                let totalWeight = 0;\n                const count = this.getVirtualChildCount();\n                const widthMode = MeasureSpec.getMode(widthMeasureSpec);\n                const heightMode = MeasureSpec.getMode(heightMeasureSpec);\n                let matchWidth = false;\n                const baselineChildIndex = this.mBaselineAlignedChildIndex;\n                const useLargestChild = this.mUseLargestChild;\n                let largestChildHeight = Number.MIN_SAFE_INTEGER;\n                for (let i = 0; i < count; ++i) {\n                    const child = this.getVirtualChildAt(i);\n                    if (child == null) {\n                        this.mTotalLength += this.measureNullChild(i);\n                        continue;\n                    }\n                    if (child.getVisibility() == View.GONE) {\n                        i += this.getChildrenSkipCount(child, i);\n                        continue;\n                    }\n                    if (this.hasDividerBeforeChildAt(i)) {\n                        this.mTotalLength += this.mDividerHeight;\n                    }\n                    let lp = child.getLayoutParams();\n                    totalWeight += lp.weight;\n                    if (heightMode == MeasureSpec.EXACTLY && lp.height == 0 && lp.weight > 0) {\n                        const totalLength = this.mTotalLength;\n                        this.mTotalLength = Math.max(totalLength, totalLength + lp.topMargin + lp.bottomMargin);\n                    }\n                    else {\n                        let oldHeight = Number.MIN_SAFE_INTEGER;\n                        if (lp.height == 0 && lp.weight > 0) {\n                            oldHeight = 0;\n                            lp.height = LinearLayout.LayoutParams.WRAP_CONTENT;\n                        }\n                        this.measureChildBeforeLayout(child, i, widthMeasureSpec, 0, heightMeasureSpec, totalWeight == 0 ? this.mTotalLength : 0);\n                        if (oldHeight != Number.MIN_SAFE_INTEGER) {\n                            lp.height = oldHeight;\n                        }\n                        const childHeight = child.getMeasuredHeight();\n                        const totalLength = this.mTotalLength;\n                        this.mTotalLength = Math.max(totalLength, totalLength + childHeight + lp.topMargin +\n                            lp.bottomMargin + this.getNextLocationOffset(child));\n                        if (useLargestChild) {\n                            largestChildHeight = Math.max(childHeight, largestChildHeight);\n                        }\n                    }\n                    if ((baselineChildIndex >= 0) && (baselineChildIndex == i + 1)) {\n                        this.mBaselineChildTop = this.mTotalLength;\n                    }\n                    if (i < baselineChildIndex && lp.weight > 0) {\n                        throw new Error(\"A child of LinearLayout with index \"\n                            + \"less than mBaselineAlignedChildIndex has weight > 0, which \"\n                            + \"won't work.  Either remove the weight, or don't set \"\n                            + \"mBaselineAlignedChildIndex.\");\n                    }\n                    let matchWidthLocally = false;\n                    if (widthMode != MeasureSpec.EXACTLY && lp.width == LinearLayout.LayoutParams.MATCH_PARENT) {\n                        matchWidth = true;\n                        matchWidthLocally = true;\n                    }\n                    const margin = lp.leftMargin + lp.rightMargin;\n                    const measuredWidth = child.getMeasuredWidth() + margin;\n                    maxWidth = Math.max(maxWidth, measuredWidth);\n                    childState = LinearLayout.combineMeasuredStates(childState, child.getMeasuredState());\n                    allFillParent = allFillParent && lp.width == LinearLayout.LayoutParams.MATCH_PARENT;\n                    if (lp.weight > 0) {\n                        weightedMaxWidth = Math.max(weightedMaxWidth, matchWidthLocally ? margin : measuredWidth);\n                    }\n                    else {\n                        alternativeMaxWidth = Math.max(alternativeMaxWidth, matchWidthLocally ? margin : measuredWidth);\n                    }\n                    i += this.getChildrenSkipCount(child, i);\n                }\n                if (this.mTotalLength > 0 && this.hasDividerBeforeChildAt(count)) {\n                    this.mTotalLength += this.mDividerHeight;\n                }\n                if (useLargestChild &&\n                    (heightMode == MeasureSpec.AT_MOST || heightMode == MeasureSpec.UNSPECIFIED)) {\n                    this.mTotalLength = 0;\n                    for (let i = 0; i < count; ++i) {\n                        const child = this.getVirtualChildAt(i);\n                        if (child == null) {\n                            this.mTotalLength += this.measureNullChild(i);\n                            continue;\n                        }\n                        if (child.getVisibility() == View.GONE) {\n                            i += this.getChildrenSkipCount(child, i);\n                            continue;\n                        }\n                        const lp = child.getLayoutParams();\n                        const totalLength = this.mTotalLength;\n                        this.mTotalLength = Math.max(totalLength, totalLength + largestChildHeight +\n                            lp.topMargin + lp.bottomMargin + this.getNextLocationOffset(child));\n                    }\n                }\n                this.mTotalLength += this.mPaddingTop + this.mPaddingBottom;\n                let heightSize = this.mTotalLength;\n                heightSize = Math.max(heightSize, this.getSuggestedMinimumHeight());\n                let heightSizeAndState = LinearLayout.resolveSizeAndState(heightSize, heightMeasureSpec, 0);\n                heightSize = heightSizeAndState & View.MEASURED_SIZE_MASK;\n                let delta = heightSize - this.mTotalLength;\n                if (delta != 0 && totalWeight > 0) {\n                    let weightSum = this.mWeightSum > 0 ? this.mWeightSum : totalWeight;\n                    this.mTotalLength = 0;\n                    for (let i = 0; i < count; ++i) {\n                        const child = this.getVirtualChildAt(i);\n                        if (child.getVisibility() == View.GONE) {\n                            continue;\n                        }\n                        let lp = child.getLayoutParams();\n                        let childExtra = lp.weight;\n                        if (childExtra > 0) {\n                            let share = (childExtra * delta / weightSum);\n                            weightSum -= childExtra;\n                            delta -= share;\n                            const childWidthMeasureSpec = LinearLayout.getChildMeasureSpec(widthMeasureSpec, this.mPaddingLeft + this.mPaddingRight +\n                                lp.leftMargin + lp.rightMargin, lp.width);\n                            if ((lp.height != 0) || (heightMode != MeasureSpec.EXACTLY)) {\n                                let childHeight = child.getMeasuredHeight() + share;\n                                if (childHeight < 0) {\n                                    childHeight = 0;\n                                }\n                                child.measure(childWidthMeasureSpec, MeasureSpec.makeMeasureSpec(childHeight, MeasureSpec.EXACTLY));\n                            }\n                            else {\n                                child.measure(childWidthMeasureSpec, MeasureSpec.makeMeasureSpec(share > 0 ? share : 0, MeasureSpec.EXACTLY));\n                            }\n                            childState = LinearLayout.combineMeasuredStates(childState, child.getMeasuredState()\n                                & (View.MEASURED_STATE_MASK >> View.MEASURED_HEIGHT_STATE_SHIFT));\n                        }\n                        const margin = lp.leftMargin + lp.rightMargin;\n                        const measuredWidth = child.getMeasuredWidth() + margin;\n                        maxWidth = Math.max(maxWidth, measuredWidth);\n                        let matchWidthLocally = widthMode != MeasureSpec.EXACTLY &&\n                            lp.width == LinearLayout.LayoutParams.MATCH_PARENT;\n                        alternativeMaxWidth = Math.max(alternativeMaxWidth, matchWidthLocally ? margin : measuredWidth);\n                        allFillParent = allFillParent && lp.width == LinearLayout.LayoutParams.MATCH_PARENT;\n                        const totalLength = this.mTotalLength;\n                        this.mTotalLength = Math.max(totalLength, totalLength + child.getMeasuredHeight() +\n                            lp.topMargin + lp.bottomMargin + this.getNextLocationOffset(child));\n                    }\n                    this.mTotalLength += this.mPaddingTop + this.mPaddingBottom;\n                }\n                else {\n                    alternativeMaxWidth = Math.max(alternativeMaxWidth, weightedMaxWidth);\n                    if (useLargestChild && heightMode != MeasureSpec.EXACTLY) {\n                        for (let i = 0; i < count; i++) {\n                            const child = this.getVirtualChildAt(i);\n                            if (child == null || child.getVisibility() == View.GONE) {\n                                continue;\n                            }\n                            const lp = child.getLayoutParams();\n                            let childExtra = lp.weight;\n                            if (childExtra > 0) {\n                                child.measure(MeasureSpec.makeMeasureSpec(child.getMeasuredWidth(), MeasureSpec.EXACTLY), MeasureSpec.makeMeasureSpec(largestChildHeight, MeasureSpec.EXACTLY));\n                            }\n                        }\n                    }\n                }\n                if (!allFillParent && widthMode != MeasureSpec.EXACTLY) {\n                    maxWidth = alternativeMaxWidth;\n                }\n                maxWidth += this.mPaddingLeft + this.mPaddingRight;\n                maxWidth = Math.max(maxWidth, this.getSuggestedMinimumWidth());\n                this.setMeasuredDimension(LinearLayout.resolveSizeAndState(maxWidth, widthMeasureSpec, childState), heightSizeAndState);\n                if (matchWidth) {\n                    this.forceUniformWidth(count, heightMeasureSpec);\n                }\n            }\n            forceUniformWidth(count, heightMeasureSpec) {\n                let uniformMeasureSpec = MeasureSpec.makeMeasureSpec(this.getMeasuredWidth(), MeasureSpec.EXACTLY);\n                for (let i = 0; i < count; ++i) {\n                    const child = this.getVirtualChildAt(i);\n                    if (child.getVisibility() != View.GONE) {\n                        let lp = child.getLayoutParams();\n                        if (lp.width == LinearLayout.LayoutParams.MATCH_PARENT) {\n                            let oldHeight = lp.height;\n                            lp.height = child.getMeasuredHeight();\n                            this.measureChildWithMargins(child, uniformMeasureSpec, 0, heightMeasureSpec, 0);\n                            lp.height = oldHeight;\n                        }\n                    }\n                }\n            }\n            measureHorizontal(widthMeasureSpec, heightMeasureSpec) {\n                this.mTotalLength = 0;\n                let maxHeight = 0;\n                let childState = 0;\n                let alternativeMaxHeight = 0;\n                let weightedMaxHeight = 0;\n                let allFillParent = true;\n                let totalWeight = 0;\n                const count = this.getVirtualChildCount();\n                const widthMode = MeasureSpec.getMode(widthMeasureSpec);\n                const heightMode = MeasureSpec.getMode(heightMeasureSpec);\n                let matchHeight = false;\n                if (this.mMaxAscent == null || this.mMaxDescent == null) {\n                    this.mMaxAscent = new Array(LinearLayout.VERTICAL_GRAVITY_COUNT);\n                    this.mMaxDescent = new Array(LinearLayout.VERTICAL_GRAVITY_COUNT);\n                }\n                let maxAscent = this.mMaxAscent;\n                let maxDescent = this.mMaxDescent;\n                maxAscent[0] = maxAscent[1] = maxAscent[2] = maxAscent[3] = -1;\n                maxDescent[0] = maxDescent[1] = maxDescent[2] = maxDescent[3] = -1;\n                const baselineAligned = this.mBaselineAligned;\n                const useLargestChild = this.mUseLargestChild;\n                const isExactly = widthMode == MeasureSpec.EXACTLY;\n                let largestChildWidth = Number.MAX_SAFE_INTEGER;\n                for (let i = 0; i < count; ++i) {\n                    const child = this.getVirtualChildAt(i);\n                    if (child == null) {\n                        this.mTotalLength += this.measureNullChild(i);\n                        continue;\n                    }\n                    if (child.getVisibility() == View.GONE) {\n                        i += this.getChildrenSkipCount(child, i);\n                        continue;\n                    }\n                    if (this.hasDividerBeforeChildAt(i)) {\n                        this.mTotalLength += this.mDividerWidth;\n                    }\n                    const lp = child.getLayoutParams();\n                    totalWeight += lp.weight;\n                    if (widthMode == MeasureSpec.EXACTLY && lp.width == 0 && lp.weight > 0) {\n                        if (isExactly) {\n                            this.mTotalLength += lp.leftMargin + lp.rightMargin;\n                        }\n                        else {\n                            const totalLength = this.mTotalLength;\n                            this.mTotalLength = Math.max(totalLength, totalLength +\n                                lp.leftMargin + lp.rightMargin);\n                        }\n                        if (baselineAligned) {\n                            const freeSpec = MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED);\n                            child.measure(freeSpec, freeSpec);\n                        }\n                    }\n                    else {\n                        let oldWidth = Number.MIN_SAFE_INTEGER;\n                        if (lp.width == 0 && lp.weight > 0) {\n                            oldWidth = 0;\n                            lp.width = LinearLayout.LayoutParams.WRAP_CONTENT;\n                        }\n                        this.measureChildBeforeLayout(child, i, widthMeasureSpec, totalWeight == 0 ? this.mTotalLength : 0, heightMeasureSpec, 0);\n                        if (oldWidth != Number.MIN_SAFE_INTEGER) {\n                            lp.width = oldWidth;\n                        }\n                        const childWidth = child.getMeasuredWidth();\n                        if (isExactly) {\n                            this.mTotalLength += childWidth + lp.leftMargin + lp.rightMargin +\n                                this.getNextLocationOffset(child);\n                        }\n                        else {\n                            const totalLength = this.mTotalLength;\n                            this.mTotalLength = Math.max(totalLength, totalLength + childWidth + lp.leftMargin +\n                                lp.rightMargin + this.getNextLocationOffset(child));\n                        }\n                        if (useLargestChild) {\n                            largestChildWidth = Math.max(childWidth, largestChildWidth);\n                        }\n                    }\n                    let matchHeightLocally = false;\n                    if (heightMode != MeasureSpec.EXACTLY && lp.height == LinearLayout.LayoutParams.MATCH_PARENT) {\n                        matchHeight = true;\n                        matchHeightLocally = true;\n                    }\n                    const margin = lp.topMargin + lp.bottomMargin;\n                    const childHeight = child.getMeasuredHeight() + margin;\n                    childState = LinearLayout.combineMeasuredStates(childState, child.getMeasuredState());\n                    if (baselineAligned) {\n                        const childBaseline = child.getBaseline();\n                        if (childBaseline != -1) {\n                            const gravity = (lp.gravity < 0 ? this.mGravity : lp.gravity)\n                                & Gravity.VERTICAL_GRAVITY_MASK;\n                            const index = ((gravity >> Gravity.AXIS_Y_SHIFT)\n                                & ~Gravity.AXIS_SPECIFIED) >> 1;\n                            maxAscent[index] = Math.max(maxAscent[index], childBaseline);\n                            maxDescent[index] = Math.max(maxDescent[index], childHeight - childBaseline);\n                        }\n                    }\n                    maxHeight = Math.max(maxHeight, childHeight);\n                    allFillParent = allFillParent && lp.height == LinearLayout.LayoutParams.MATCH_PARENT;\n                    if (lp.weight > 0) {\n                        weightedMaxHeight = Math.max(weightedMaxHeight, matchHeightLocally ? margin : childHeight);\n                    }\n                    else {\n                        alternativeMaxHeight = Math.max(alternativeMaxHeight, matchHeightLocally ? margin : childHeight);\n                    }\n                    i += this.getChildrenSkipCount(child, i);\n                }\n                if (this.mTotalLength > 0 && this.hasDividerBeforeChildAt(count)) {\n                    this.mTotalLength += this.mDividerWidth;\n                }\n                if (maxAscent[LinearLayout.INDEX_TOP] != -1 ||\n                    maxAscent[LinearLayout.INDEX_CENTER_VERTICAL] != -1 ||\n                    maxAscent[LinearLayout.INDEX_BOTTOM] != -1 ||\n                    maxAscent[LinearLayout.INDEX_FILL] != -1) {\n                    const ascent = Math.max(maxAscent[LinearLayout.INDEX_FILL], Math.max(maxAscent[LinearLayout.INDEX_CENTER_VERTICAL], Math.max(maxAscent[LinearLayout.INDEX_TOP], maxAscent[LinearLayout.INDEX_BOTTOM])));\n                    const descent = Math.max(maxDescent[LinearLayout.INDEX_FILL], Math.max(maxDescent[LinearLayout.INDEX_CENTER_VERTICAL], Math.max(maxDescent[LinearLayout.INDEX_TOP], maxDescent[LinearLayout.INDEX_BOTTOM])));\n                    maxHeight = Math.max(maxHeight, ascent + descent);\n                }\n                if (useLargestChild &&\n                    (widthMode == MeasureSpec.AT_MOST || widthMode == MeasureSpec.UNSPECIFIED)) {\n                    this.mTotalLength = 0;\n                    for (let i = 0; i < count; ++i) {\n                        const child = this.getVirtualChildAt(i);\n                        if (child == null) {\n                            this.mTotalLength += this.measureNullChild(i);\n                            continue;\n                        }\n                        if (child.getVisibility() == View.GONE) {\n                            i += this.getChildrenSkipCount(child, i);\n                            continue;\n                        }\n                        const lp = child.getLayoutParams();\n                        if (isExactly) {\n                            this.mTotalLength += largestChildWidth + lp.leftMargin + lp.rightMargin +\n                                this.getNextLocationOffset(child);\n                        }\n                        else {\n                            const totalLength = this.mTotalLength;\n                            this.mTotalLength = Math.max(totalLength, totalLength + largestChildWidth +\n                                lp.leftMargin + lp.rightMargin + this.getNextLocationOffset(child));\n                        }\n                    }\n                }\n                this.mTotalLength += this.mPaddingLeft + this.mPaddingRight;\n                let widthSize = this.mTotalLength;\n                widthSize = Math.max(widthSize, this.getSuggestedMinimumWidth());\n                let widthSizeAndState = LinearLayout.resolveSizeAndState(widthSize, widthMeasureSpec, 0);\n                widthSize = widthSizeAndState & View.MEASURED_SIZE_MASK;\n                let delta = widthSize - this.mTotalLength;\n                if (delta != 0 && totalWeight > 0) {\n                    let weightSum = this.mWeightSum > 0 ? this.mWeightSum : totalWeight;\n                    maxAscent[0] = maxAscent[1] = maxAscent[2] = maxAscent[3] = -1;\n                    maxDescent[0] = maxDescent[1] = maxDescent[2] = maxDescent[3] = -1;\n                    maxHeight = -1;\n                    this.mTotalLength = 0;\n                    for (let i = 0; i < count; ++i) {\n                        const child = this.getVirtualChildAt(i);\n                        if (child == null || child.getVisibility() == View.GONE) {\n                            continue;\n                        }\n                        const lp = child.getLayoutParams();\n                        let childExtra = lp.weight;\n                        if (childExtra > 0) {\n                            let share = (childExtra * delta / weightSum);\n                            weightSum -= childExtra;\n                            delta -= share;\n                            const childHeightMeasureSpec = LinearLayout.getChildMeasureSpec(heightMeasureSpec, this.mPaddingTop + this.mPaddingBottom + lp.topMargin + lp.bottomMargin, lp.height);\n                            if ((lp.width != 0) || (widthMode != MeasureSpec.EXACTLY)) {\n                                let childWidth = child.getMeasuredWidth() + share;\n                                if (childWidth < 0) {\n                                    childWidth = 0;\n                                }\n                                child.measure(MeasureSpec.makeMeasureSpec(childWidth, MeasureSpec.EXACTLY), childHeightMeasureSpec);\n                            }\n                            else {\n                                child.measure(MeasureSpec.makeMeasureSpec(share > 0 ? share : 0, MeasureSpec.EXACTLY), childHeightMeasureSpec);\n                            }\n                            childState = LinearLayout.combineMeasuredStates(childState, child.getMeasuredState() & View.MEASURED_STATE_MASK);\n                        }\n                        if (isExactly) {\n                            this.mTotalLength += child.getMeasuredWidth() + lp.leftMargin + lp.rightMargin +\n                                this.getNextLocationOffset(child);\n                        }\n                        else {\n                            const totalLength = this.mTotalLength;\n                            this.mTotalLength = Math.max(totalLength, totalLength + child.getMeasuredWidth() +\n                                lp.leftMargin + lp.rightMargin + this.getNextLocationOffset(child));\n                        }\n                        let matchHeightLocally = heightMode != MeasureSpec.EXACTLY &&\n                            lp.height == LinearLayout.LayoutParams.MATCH_PARENT;\n                        const margin = lp.topMargin + lp.bottomMargin;\n                        let childHeight = child.getMeasuredHeight() + margin;\n                        maxHeight = Math.max(maxHeight, childHeight);\n                        alternativeMaxHeight = Math.max(alternativeMaxHeight, matchHeightLocally ? margin : childHeight);\n                        allFillParent = allFillParent && lp.height == LinearLayout.LayoutParams.MATCH_PARENT;\n                        if (baselineAligned) {\n                            const childBaseline = child.getBaseline();\n                            if (childBaseline != -1) {\n                                const gravity = (lp.gravity < 0 ? this.mGravity : lp.gravity)\n                                    & Gravity.VERTICAL_GRAVITY_MASK;\n                                const index = ((gravity >> Gravity.AXIS_Y_SHIFT)\n                                    & ~Gravity.AXIS_SPECIFIED) >> 1;\n                                maxAscent[index] = Math.max(maxAscent[index], childBaseline);\n                                maxDescent[index] = Math.max(maxDescent[index], childHeight - childBaseline);\n                            }\n                        }\n                    }\n                    this.mTotalLength += this.mPaddingLeft + this.mPaddingRight;\n                    if (maxAscent[LinearLayout.INDEX_TOP] != -1 ||\n                        maxAscent[LinearLayout.INDEX_CENTER_VERTICAL] != -1 ||\n                        maxAscent[LinearLayout.INDEX_BOTTOM] != -1 ||\n                        maxAscent[LinearLayout.INDEX_FILL] != -1) {\n                        const ascent = Math.max(maxAscent[LinearLayout.INDEX_FILL], Math.max(maxAscent[LinearLayout.INDEX_CENTER_VERTICAL], Math.max(maxAscent[LinearLayout.INDEX_TOP], maxAscent[LinearLayout.INDEX_BOTTOM])));\n                        const descent = Math.max(maxDescent[LinearLayout.INDEX_FILL], Math.max(maxDescent[LinearLayout.INDEX_CENTER_VERTICAL], Math.max(maxDescent[LinearLayout.INDEX_TOP], maxDescent[LinearLayout.INDEX_BOTTOM])));\n                        maxHeight = Math.max(maxHeight, ascent + descent);\n                    }\n                }\n                else {\n                    alternativeMaxHeight = Math.max(alternativeMaxHeight, weightedMaxHeight);\n                    if (useLargestChild && widthMode != MeasureSpec.EXACTLY) {\n                        for (let i = 0; i < count; i++) {\n                            const child = this.getVirtualChildAt(i);\n                            if (child == null || child.getVisibility() == View.GONE) {\n                                continue;\n                            }\n                            const lp = child.getLayoutParams();\n                            let childExtra = lp.weight;\n                            if (childExtra > 0) {\n                                child.measure(MeasureSpec.makeMeasureSpec(largestChildWidth, MeasureSpec.EXACTLY), MeasureSpec.makeMeasureSpec(child.getMeasuredHeight(), MeasureSpec.EXACTLY));\n                            }\n                        }\n                    }\n                }\n                if (!allFillParent && heightMode != MeasureSpec.EXACTLY) {\n                    maxHeight = alternativeMaxHeight;\n                }\n                maxHeight += this.mPaddingTop + this.mPaddingBottom;\n                maxHeight = Math.max(maxHeight, this.getSuggestedMinimumHeight());\n                this.setMeasuredDimension(widthSizeAndState | (childState & View.MEASURED_STATE_MASK), LinearLayout.resolveSizeAndState(maxHeight, heightMeasureSpec, (childState << View.MEASURED_HEIGHT_STATE_SHIFT)));\n                if (matchHeight) {\n                    this.forceUniformHeight(count, widthMeasureSpec);\n                }\n            }\n            forceUniformHeight(count, widthMeasureSpec) {\n                let uniformMeasureSpec = MeasureSpec.makeMeasureSpec(this.getMeasuredHeight(), MeasureSpec.EXACTLY);\n                for (let i = 0; i < count; ++i) {\n                    const child = this.getVirtualChildAt(i);\n                    if (child.getVisibility() != View.GONE) {\n                        let lp = child.getLayoutParams();\n                        if (lp.height == LinearLayout.LayoutParams.MATCH_PARENT) {\n                            let oldWidth = lp.width;\n                            lp.width = child.getMeasuredWidth();\n                            this.measureChildWithMargins(child, widthMeasureSpec, 0, uniformMeasureSpec, 0);\n                            lp.width = oldWidth;\n                        }\n                    }\n                }\n            }\n            getChildrenSkipCount(child, index) {\n                return 0;\n            }\n            measureNullChild(childIndex) {\n                return 0;\n            }\n            measureChildBeforeLayout(child, childIndex, widthMeasureSpec, totalWidth, heightMeasureSpec, totalHeight) {\n                this.measureChildWithMargins(child, widthMeasureSpec, totalWidth, heightMeasureSpec, totalHeight);\n            }\n            getLocationOffset(child) {\n                return 0;\n            }\n            getNextLocationOffset(child) {\n                return 0;\n            }\n            onLayout(changed, l, t, r, b) {\n                if (this.mOrientation == LinearLayout.VERTICAL) {\n                    this.layoutVertical(l, t, r, b);\n                }\n                else {\n                    this.layoutHorizontal(l, t, r, b);\n                }\n            }\n            layoutVertical(left, top, right, bottom) {\n                const paddingLeft = this.mPaddingLeft;\n                let childTop;\n                let childLeft;\n                const width = right - left;\n                let childRight = width - this.mPaddingRight;\n                let childSpace = width - paddingLeft - this.mPaddingRight;\n                const count = this.getVirtualChildCount();\n                const majorGravity = this.mGravity & Gravity.VERTICAL_GRAVITY_MASK;\n                const minorGravity = this.mGravity & Gravity.HORIZONTAL_GRAVITY_MASK;\n                switch (majorGravity) {\n                    case Gravity.BOTTOM:\n                        childTop = this.mPaddingTop + bottom - top - this.mTotalLength;\n                        break;\n                    case Gravity.CENTER_VERTICAL:\n                        childTop = this.mPaddingTop + (bottom - top - this.mTotalLength) / 2;\n                        break;\n                    case Gravity.TOP:\n                    default:\n                        childTop = this.mPaddingTop;\n                        break;\n                }\n                for (let i = 0; i < count; i++) {\n                    const child = this.getVirtualChildAt(i);\n                    if (child == null) {\n                        childTop += this.measureNullChild(i);\n                    }\n                    else if (child.getVisibility() != View.GONE) {\n                        const childWidth = child.getMeasuredWidth();\n                        const childHeight = child.getMeasuredHeight();\n                        const lp = child.getLayoutParams();\n                        let gravity = lp.gravity;\n                        if (gravity < 0) {\n                            gravity = minorGravity;\n                        }\n                        const absoluteGravity = gravity;\n                        switch (absoluteGravity & Gravity.HORIZONTAL_GRAVITY_MASK) {\n                            case Gravity.CENTER_HORIZONTAL:\n                                childLeft = paddingLeft + ((childSpace - childWidth) / 2)\n                                    + lp.leftMargin - lp.rightMargin;\n                                break;\n                            case Gravity.RIGHT:\n                                childLeft = childRight - childWidth - lp.rightMargin;\n                                break;\n                            case Gravity.LEFT:\n                            default:\n                                childLeft = paddingLeft + lp.leftMargin;\n                                break;\n                        }\n                        if (this.hasDividerBeforeChildAt(i)) {\n                            childTop += this.mDividerHeight;\n                        }\n                        childTop += lp.topMargin;\n                        this.setChildFrame(child, childLeft, childTop + this.getLocationOffset(child), childWidth, childHeight);\n                        childTop += childHeight + lp.bottomMargin + this.getNextLocationOffset(child);\n                        i += this.getChildrenSkipCount(child, i);\n                    }\n                }\n            }\n            layoutHorizontal(left, top, right, bottom) {\n                const isLayoutRtl = this.isLayoutRtl();\n                const paddingTop = this.mPaddingTop;\n                let childTop;\n                let childLeft;\n                const height = bottom - top;\n                let childBottom = height - this.mPaddingBottom;\n                let childSpace = height - paddingTop - this.mPaddingBottom;\n                const count = this.getVirtualChildCount();\n                const majorGravity = this.mGravity & Gravity.HORIZONTAL_GRAVITY_MASK;\n                const minorGravity = this.mGravity & Gravity.VERTICAL_GRAVITY_MASK;\n                const baselineAligned = this.mBaselineAligned;\n                const maxAscent = this.mMaxAscent;\n                const maxDescent = this.mMaxDescent;\n                let absoluteGravity = majorGravity;\n                switch (absoluteGravity) {\n                    case Gravity.RIGHT:\n                        childLeft = this.mPaddingLeft + right - left - this.mTotalLength;\n                        break;\n                    case Gravity.CENTER_HORIZONTAL:\n                        childLeft = this.mPaddingLeft + (right - left - this.mTotalLength) / 2;\n                        break;\n                    case Gravity.LEFT:\n                    default:\n                        childLeft = this.mPaddingLeft;\n                        break;\n                }\n                let start = 0;\n                let dir = 1;\n                if (isLayoutRtl) {\n                    start = count - 1;\n                    dir = -1;\n                }\n                for (let i = 0; i < count; i++) {\n                    let childIndex = start + dir * i;\n                    const child = this.getVirtualChildAt(childIndex);\n                    if (child == null) {\n                        childLeft += this.measureNullChild(childIndex);\n                    }\n                    else if (child.getVisibility() != View.GONE) {\n                        const childWidth = child.getMeasuredWidth();\n                        const childHeight = child.getMeasuredHeight();\n                        let childBaseline = -1;\n                        const lp = child.getLayoutParams();\n                        if (baselineAligned && lp.height != LinearLayout.LayoutParams.MATCH_PARENT) {\n                            childBaseline = child.getBaseline();\n                        }\n                        let gravity = lp.gravity;\n                        if (gravity < 0) {\n                            gravity = minorGravity;\n                        }\n                        switch (gravity & Gravity.VERTICAL_GRAVITY_MASK) {\n                            case Gravity.TOP:\n                                childTop = paddingTop + lp.topMargin;\n                                if (childBaseline != -1) {\n                                    childTop += maxAscent[LinearLayout.INDEX_TOP] - childBaseline;\n                                }\n                                break;\n                            case Gravity.CENTER_VERTICAL:\n                                childTop = paddingTop + ((childSpace - childHeight) / 2)\n                                    + lp.topMargin - lp.bottomMargin;\n                                break;\n                            case Gravity.BOTTOM:\n                                childTop = childBottom - childHeight - lp.bottomMargin;\n                                if (childBaseline != -1) {\n                                    let descent = child.getMeasuredHeight() - childBaseline;\n                                    childTop -= (maxDescent[LinearLayout.INDEX_BOTTOM] - descent);\n                                }\n                                break;\n                            default:\n                                childTop = paddingTop;\n                                break;\n                        }\n                        if (this.hasDividerBeforeChildAt(childIndex)) {\n                            childLeft += this.mDividerWidth;\n                        }\n                        childLeft += lp.leftMargin;\n                        this.setChildFrame(child, childLeft + this.getLocationOffset(child), childTop, childWidth, childHeight);\n                        childLeft += childWidth + lp.rightMargin +\n                            this.getNextLocationOffset(child);\n                        i += this.getChildrenSkipCount(child, childIndex);\n                    }\n                }\n            }\n            setChildFrame(child, left, top, width, height) {\n                child.layout(left, top, left + width, top + height);\n            }\n            setOrientation(orientation) {\n                if (this.mOrientation != orientation) {\n                    this.mOrientation = orientation;\n                    this.requestLayout();\n                }\n            }\n            getOrientation() {\n                return this.mOrientation;\n            }\n            setGravity(gravity) {\n                if (this.mGravity != gravity) {\n                    if ((gravity & Gravity.HORIZONTAL_GRAVITY_MASK) == 0) {\n                        gravity |= Gravity.LEFT;\n                    }\n                    if ((gravity & Gravity.VERTICAL_GRAVITY_MASK) == 0) {\n                        gravity |= Gravity.TOP;\n                    }\n                    this.mGravity = gravity;\n                    this.requestLayout();\n                }\n            }\n            setHorizontalGravity(horizontalGravity) {\n                const gravity = horizontalGravity & Gravity.HORIZONTAL_GRAVITY_MASK;\n                if ((this.mGravity & Gravity.HORIZONTAL_GRAVITY_MASK) != gravity) {\n                    this.mGravity = (this.mGravity & ~Gravity.HORIZONTAL_GRAVITY_MASK) | gravity;\n                    this.requestLayout();\n                }\n            }\n            setVerticalGravity(verticalGravity) {\n                const gravity = verticalGravity & Gravity.VERTICAL_GRAVITY_MASK;\n                if ((this.mGravity & Gravity.VERTICAL_GRAVITY_MASK) != gravity) {\n                    this.mGravity = (this.mGravity & ~Gravity.VERTICAL_GRAVITY_MASK) | gravity;\n                    this.requestLayout();\n                }\n            }\n            generateDefaultLayoutParams() {\n                let LayoutParams = LinearLayout.LayoutParams;\n                if (this.mOrientation == LinearLayout.HORIZONTAL) {\n                    return new LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);\n                }\n                else if (this.mOrientation == LinearLayout.VERTICAL) {\n                    return new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT);\n                }\n                return super.generateDefaultLayoutParams();\n            }\n            generateLayoutParams(p) {\n                return new LinearLayout.LayoutParams(p);\n            }\n            checkLayoutParams(p) {\n                return p instanceof LinearLayout.LayoutParams;\n            }\n        }\n        LinearLayout.HORIZONTAL = 0;\n        LinearLayout.VERTICAL = 1;\n        LinearLayout.SHOW_DIVIDER_NONE = 0;\n        LinearLayout.SHOW_DIVIDER_BEGINNING = 1;\n        LinearLayout.SHOW_DIVIDER_MIDDLE = 2;\n        LinearLayout.SHOW_DIVIDER_END = 4;\n        LinearLayout.VERTICAL_GRAVITY_COUNT = 4;\n        LinearLayout.INDEX_CENTER_VERTICAL = 0;\n        LinearLayout.INDEX_TOP = 1;\n        LinearLayout.INDEX_BOTTOM = 2;\n        LinearLayout.INDEX_FILL = 3;\n        widget.LinearLayout = LinearLayout;\n        (function (LinearLayout) {\n            class LayoutParams extends android.view.ViewGroup.MarginLayoutParams {\n                constructor(...args) {\n                    super();\n                    this.weight = 0;\n                    this.gravity = -1;\n                    if (args.length === 1 && args[0] instanceof LayoutParams) {\n                        this.gravity = args[0].gravity;\n                    }\n                    else {\n                        let [width, height, weight = 0] = args;\n                        super(width, height);\n                        this.weight = weight;\n                    }\n                }\n            }\n            LinearLayout.LayoutParams = LayoutParams;\n        })(LinearLayout = widget.LinearLayout || (widget.LinearLayout = {}));\n    })(widget = android.widget || (android.widget = {}));\n})(android || (android = {}));\n/**\n * Created by linfaxin on 15/10/26.\n */\n///<reference path=\"../view/View.ts\"/>\n///<reference path=\"../view/Gravity.ts\"/>\n///<reference path=\"../content/res/Resources.ts\"/>\n///<reference path=\"../graphics/Color.ts\"/>\nvar android;\n(function (android) {\n    var widget;\n    (function (widget) {\n        var View = android.view.View;\n        var Gravity = android.view.Gravity;\n        var Resources = android.content.res.Resources;\n        var Color = android.graphics.Color;\n        var MeasureSpec = View.MeasureSpec;\n        class TextView extends View {\n            constructor() {\n                super();\n                this.mSingleLine = false;\n                this.mTextColor = Color.BLACK;\n                this.mHintColor = Color.LTGRAY;\n                this.mSpacingMult = 1.2;\n                this.mSpacingAdd = 0;\n                this.mMaxWidth = Number.MAX_SAFE_INTEGER;\n                this.mMaxHeight = Number.MAX_SAFE_INTEGER;\n                this.mMaxLineCount = Number.MAX_SAFE_INTEGER;\n                this.mMinLineCount = 0;\n                this.initTextElement();\n                this.setTextSize(TextView.Default_TextSize);\n                this.setGravity(Gravity.TOP | Gravity.LEFT);\n            }\n            initTextElement() {\n                this.mTextElement = document.createElement('div');\n                this.mTextElement.style.position = \"absolute\";\n                this.mTextElement.style.boxSizing = \"border-box\";\n                this.mTextElement.style.overflow = \"hidden\";\n                this.mTextElement.style.opacity = \"0\";\n            }\n            onLayout(changed, left, top, right, bottom) {\n                super.onLayout(changed, left, top, right, bottom);\n                this.mTextElement.style.opacity = \"\";\n            }\n            onFinishInflate() {\n                super.onFinishInflate();\n                Array.from(this.bindElement.childNodes).forEach((item) => {\n                    this.bindElement.removeChild(item);\n                    this.mTextElement.appendChild(item);\n                });\n                this.bindElement.appendChild(this.mTextElement);\n            }\n            onMeasure(widthMeasureSpec, heightMeasureSpec) {\n                let widthMode = MeasureSpec.getMode(widthMeasureSpec);\n                let heightMode = MeasureSpec.getMode(heightMeasureSpec);\n                let widthSize = MeasureSpec.getSize(widthMeasureSpec);\n                let heightSize = MeasureSpec.getSize(heightMeasureSpec);\n                let width, height;\n                let padLeft = this.getCompoundPaddingLeft();\n                let padTop = this.getCompoundPaddingTop();\n                let padRight = this.getCompoundPaddingRight();\n                let padBottom = this.getCompoundPaddingBottom();\n                this.mTextElement.style.height = \"\";\n                this.mTextElement.style.width = \"\";\n                if (widthMode == MeasureSpec.EXACTLY) {\n                    width = widthSize;\n                }\n                else {\n                    width = this.mTextElement.offsetWidth;\n                    width += padLeft + padRight;\n                    width = Math.min(width, this.mMaxWidth);\n                    width = Math.max(width, this.getSuggestedMinimumWidth());\n                    if (widthMode == MeasureSpec.AT_MOST) {\n                        width = Math.min(widthSize, width);\n                    }\n                }\n                let unpaddedWidth = width - padLeft - padRight;\n                this.mTextElement.style.width = unpaddedWidth + \"px\";\n                this.mTextElement.style.left = padLeft + \"px\";\n                if (heightMode == MeasureSpec.EXACTLY) {\n                    height = heightSize;\n                    let pad = this.getCompoundPaddingTop() + this.getCompoundPaddingBottom();\n                    if (this.mMaxLineCount < Number.MAX_SAFE_INTEGER) {\n                        let maxHeightWithLineCount = pad + this.mMaxLineCount * this.getLineHeight();\n                        height = Math.min(maxHeightWithLineCount, height);\n                    }\n                }\n                else {\n                    let desired = this.getDesiredHeight();\n                    height = desired;\n                    if (heightMode == MeasureSpec.AT_MOST) {\n                        height = Math.min(desired, heightSize);\n                    }\n                }\n                let contextHeight = height - padTop - padBottom;\n                let textHeight = this.mTextElement.offsetHeight;\n                let finalTop = padTop;\n                if (textHeight < contextHeight) {\n                    const verticalGravity = this.mGravity & Gravity.VERTICAL_GRAVITY_MASK;\n                    switch (verticalGravity) {\n                        case Gravity.CENTER_VERTICAL:\n                            finalTop += (contextHeight - textHeight) / 2;\n                            break;\n                        case Gravity.BOTTOM:\n                            finalTop += (contextHeight - textHeight);\n                            break;\n                        case Gravity.TOP:\n                            break;\n                    }\n                    contextHeight = textHeight;\n                }\n                this.mTextElement.style.height = contextHeight + \"px\";\n                this.mTextElement.style.top = finalTop + \"px\";\n                this.setMeasuredDimension(width, height);\n            }\n            getDesiredHeight() {\n                let desired = this.mTextElement.offsetHeight;\n                let pad = this.getCompoundPaddingTop() + this.getCompoundPaddingBottom();\n                desired += pad;\n                desired = Math.min(this.mMaxHeight, desired);\n                if (this.mMaxLineCount < Number.MAX_SAFE_INTEGER) {\n                    let maxHeightWithLineCount = pad + this.mMaxLineCount * this.getLineHeight();\n                    desired = Math.min(maxHeightWithLineCount, desired);\n                }\n                if (this.mMinLineCount > 0) {\n                    let minHeightWithLineCount = pad + this.mMinLineCount * this.getLineHeight();\n                    desired = Math.max(minHeightWithLineCount, desired);\n                }\n                desired = Math.max(desired, this.getSuggestedMinimumHeight());\n                return desired;\n            }\n            getCompoundPaddingTop() {\n                return this.mPaddingTop;\n            }\n            getCompoundPaddingBottom() {\n                return this.mPaddingBottom;\n            }\n            getCompoundPaddingLeft() {\n                return this.mPaddingLeft;\n            }\n            getCompoundPaddingRight() {\n                return this.mPaddingRight;\n            }\n            setGravity(gravity) {\n                switch (gravity & Gravity.HORIZONTAL_GRAVITY_MASK) {\n                    case Gravity.CENTER_HORIZONTAL:\n                        this.mTextElement.style.textAlign = \"center\";\n                        break;\n                    case Gravity.RIGHT:\n                        this.mTextElement.style.textAlign = \"right\";\n                        break;\n                    case Gravity.LEFT:\n                        this.mTextElement.style.textAlign = \"left\";\n                        break;\n                }\n                if ((gravity & Gravity.VERTICAL_GRAVITY_MASK) !=\n                    (this.mGravity & Gravity.VERTICAL_GRAVITY_MASK)) {\n                    this.requestLayout();\n                }\n                this.mGravity = gravity;\n            }\n            setLineSpacing(add, mult) {\n                if (this.mSpacingAdd != add || this.mSpacingMult != mult) {\n                    this.mSpacingAdd = add;\n                    this.mSpacingMult = mult;\n                    this.setTextSize(this.mTextSize);\n                }\n            }\n            setTextSize(size) {\n                let sizeInPx = size * Resources.getDisplayMetrics().density;\n                this.mTextSize = sizeInPx;\n                this.mTextElement.style.fontSize = sizeInPx + \"px\";\n                this.mTextElement.style.lineHeight = this.getLineHeight() + \"px\";\n            }\n            getLineHeight() {\n                return Math.ceil(this.mTextSize * this.mSpacingMult + this.mSpacingAdd);\n            }\n            setMaxLines(max) {\n                this.mMaxLineCount = max;\n                this.requestLayout();\n                this.invalidate();\n            }\n            getMaxLines() {\n                return this.mMaxLineCount;\n            }\n            setMinLines(min) {\n                this.mMinLineCount = min;\n                this.requestLayout();\n                this.invalidate();\n            }\n            getMinLines() {\n                return this.mMinLineCount;\n            }\n            setSingleLine(singleLine = true) {\n                if (singleLine)\n                    this.setLines(1);\n                else {\n                    this.mMaxLineCount = Number.MAX_SAFE_INTEGER;\n                    this.mMinLineCount = 0;\n                    this.requestLayout();\n                    this.invalidate();\n                }\n            }\n            setLines(lines) {\n                this.mMaxLineCount = this.mMinLineCount = lines;\n                this.requestLayout();\n                this.invalidate();\n            }\n            setText(text) {\n                this.mTextElement.innerText = text;\n                this.requestLayout();\n            }\n            setHtml(html) {\n                this.mTextElement.innerHTML = html;\n                this.requestLayout();\n            }\n        }\n        TextView.Default_TextSize = 14;\n        widget.TextView = TextView;\n    })(widget = android.widget || (android.widget = {}));\n})(android || (android = {}));\n/**\n * Created by linfaxin on 15/10/6.\n */\n//use the deepest sub class as enter\n///<reference path=\"android/view/ViewOverlay.ts\"/>\n///<reference path=\"android/app/Activity.ts\"/>\n///<reference path=\"android/widget/FrameLayout.ts\"/>\n///<reference path=\"android/widget/ScrollView.ts\"/>\n///<reference path=\"android/widget/LinearLayout.ts\"/>\n///<reference path=\"android/widget/TextView.ts\"/>\n///<reference path=\"runtime/AndroidUI.ts\"/>\nwindow[`android`] = android;\nwindow[`java`] = java;\nwindow[`runtime`] = runtime;\n"]}