"use strict";var _slicedToArray=(function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n = (_s = _i.next()).done);_n = true) {_arr.push(_s.value);if(i && _arr.length === i)break;}}catch(err) {_d = true;_e = err;}finally {try{if(!_n && _i["return"])_i["return"]();}finally {if(_d)throw _e;}}return _arr;}return function(arr,i){if(Array.isArray(arr)){return arr;}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i);}else {throw new TypeError("Invalid attempt to destructure non-iterable instance");}};})();var _get=function get(_x74,_x75,_x76){var _again=true;_function: while(_again) {var object=_x74,property=_x75,receiver=_x76;desc = parent = getter = undefined;_again = false;if(object === null)object = Function.prototype;var desc=Object.getOwnPropertyDescriptor(object,property);if(desc === undefined){var parent=Object.getPrototypeOf(object);if(parent === null){return undefined;}else {_x74 = parent;_x75 = property;_x76 = receiver;_again = true;continue _function;}}else if("value" in desc){return desc.value;}else {var getter=desc.get;if(getter === undefined){return undefined;}return getter.call(receiver);}}};var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if("value" in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _toArray(arr){return Array.isArray(arr)?arr:Array.from(arr);}function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i < arr.length;i++) arr2[i] = arr[i];return arr2;}else {return Array.from(arr);}}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else {obj[key] = value;}return obj;}function _inherits(subClass,superClass){if(typeof superClass !== "function" && superClass !== null){throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__ = superClass;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var android;(function(android){var util;(function(util){var SparseArray=(function(){function SparseArray(initialCapacity){_classCallCheck(this,SparseArray);this.map = new Map();}_createClass(SparseArray,[{key:"clone",value:function clone(){var clone=new SparseArray();clone.map = new Map(this.map);return clone;}},{key:"get",value:function get(key){var valueIfKeyNotFound=arguments.length <= 1 || arguments[1] === undefined?null:arguments[1];var value=this.map.get(key);if(value === undefined)return valueIfKeyNotFound;return value;}},{key:"delete",value:function _delete(key){this.map["delete"](key);}},{key:"remove",value:function remove(key){this["delete"](key);}},{key:"removeAt",value:function removeAt(index){this.removeAtRange(index);}},{key:"removeAtRange",value:function removeAtRange(index){var size=arguments.length <= 1 || arguments[1] === undefined?1:arguments[1];var keys=[].concat(_toConsumableArray(this.map.keys()));var end=Math.min(this.map.size,index + size);for(var i=index;i < end;i++) {this.map["delete"](keys[i]);}}},{key:"put",value:function put(key,value){this.map.set(key,value);}},{key:"size",value:function size(){return this.map.size;}},{key:"keyAt",value:function keyAt(index){return [].concat(_toConsumableArray(this.map.keys()))[index];}},{key:"valueAt",value:function valueAt(index){return [].concat(_toConsumableArray(this.map.values()))[index];}},{key:"setValueAt",value:function setValueAt(index,value){var key=this.keyAt(index);this.map.set(key,value);}},{key:"indexOfKey",value:function indexOfKey(key){return [].concat(_toConsumableArray(this.map.keys())).indexOf(key);}},{key:"indexOfValue",value:function indexOfValue(value){return [].concat(_toConsumableArray(this.map.values())).indexOf(value);}},{key:"clear",value:function clear(){this.map.clear();}},{key:"append",value:function append(key,value){this.put(key,value);}}]);return SparseArray;})();util.SparseArray = SparseArray;})(util = android.util || (android.util = {}));})(android || (android = {}));var android;(function(android){var util;(function(util){var Log=(function(){function Log(){_classCallCheck(this,Log);}_createClass(Log,null,[{key:"getPriorityString",value:function getPriorityString(priority){if(priority > Log.PriorityString.length)return "";return Log.PriorityString[priority - 2];}},{key:"v",value:function v(tag,msg,tr){console.log(Log.getLogMsg(Log.VERBOSE,tag,msg));if(tr)console.log(tr);}},{key:"d",value:function d(tag,msg){console.debug(Log.getLogMsg(Log.DEBUG,tag,msg));}},{key:"i",value:function i(tag,msg,tr){console.info(Log.getLogMsg(Log.INFO,tag,msg));if(tr)console.info(tr);}},{key:"w",value:function w(tag,msg,tr){console.warn(Log.getLogMsg(Log.WARN,tag,msg));if(tr)console.warn(tr);}},{key:"e",value:function e(tag,msg,tr){console.error(Log.getLogMsg(Log.ERROR,tag,msg));if(tr)console.error(tr);}},{key:"getLogMsg",value:function getLogMsg(priority,tag,msg){var d=new Date();var dateFormat=d.toLocaleTimeString() + '.' + d.getUTCMilliseconds();return "[" + Log.getPriorityString(priority) + "] " + dateFormat + " \t " + tag + " \t " + msg;}}]);return Log;})();Log.View_DBG = false;Log.VelocityTracker_DBG = false;Log.DBG_DrawableContainer = false;Log.DBG_StateListDrawable = false;Log.VERBOSE = 2;Log.DEBUG = 3;Log.INFO = 4;Log.WARN = 5;Log.ERROR = 6;Log.ASSERT = 7;Log.PriorityString = ["VERBOSE","DEBUG","INFO","WARN","ERROR","ASSERT"];util.Log = Log;})(util = android.util || (android.util = {}));})(android || (android = {}));var java;(function(java){var lang;(function(lang){var StringBuilder=(function(){function StringBuilder(arg){_classCallCheck(this,StringBuilder);this.array = [];if(!Number.isInteger(arg) && arg){this.append(arg);}}_createClass(StringBuilder,[{key:"length",value:function length(){return this.array.length;}},{key:"append",value:function append(str){var _array;str = str + "";(_array = this.array).push.apply(_array,_toConsumableArray(str.split('')));return this;}},{key:"setLength",value:function setLength(length){var arrayLength=this.array.length;if(length === arrayLength)return;if(length < arrayLength){this.array = this.array.splice(length,arrayLength - length);}else {for(var i=0;i < arrayLength - length;i++) {this.array.push(' ');}}}},{key:"toString",value:function toString(){return this.array.join("");}}]);return StringBuilder;})();lang.StringBuilder = StringBuilder;})(lang = java.lang || (java.lang = {}));})(java || (java = {})); ///<reference path="../../java/lang/StringBuilder.ts"/>
var android;(function(android){var graphics;(function(graphics){var StringBuilder=java.lang.StringBuilder;var Rect=(function(){function Rect(){_classCallCheck(this,Rect);this.left = 0;this.top = 0;this.right = 0;this.bottom = 0;for(var _len=arguments.length,args=Array(_len),_key=0;_key < _len;_key++) {args[_key] = arguments[_key];}if(args.length === 1){var rect=args[0];this.left = rect.left;this.top = rect.top;this.right = rect.right;this.bottom = rect.bottom;}else if(args.length === 4 || args.length === 0){var _args$0=args[0];var left=_args$0 === undefined?0:_args$0;var _args$1=args[1];var _top=_args$1 === undefined?0:_args$1;var _args$2=args[2];var right=_args$2 === undefined?0:_args$2;var _args$3=args[3];var bottom=_args$3 === undefined?0:_args$3;this.left = left;this.top = _top;this.right = right;this.bottom = bottom;}}_createClass(Rect,[{key:"equals",value:function equals(r){if(this === r)return true;if(!r || !(r instanceof Rect))return false;return this.left === r.left && this.top === r.top && this.right === r.right && this.bottom === r.bottom;}},{key:"toString",value:function toString(){var sb=new StringBuilder();sb.append("Rect(");sb.append(this.left);sb.append(", ");sb.append(this.top);sb.append(" - ");sb.append(this.right);sb.append(", ");sb.append(this.bottom);sb.append(")");return sb.toString();}},{key:"toShortString",value:function toShortString(){var sb=arguments.length <= 0 || arguments[0] === undefined?new StringBuilder():arguments[0];sb.setLength(0);sb.append('[');sb.append(this.left);sb.append(',');sb.append(this.top);sb.append("][");sb.append(this.right);sb.append(',');sb.append(this.bottom);sb.append(']');return sb.toString();}},{key:"flattenToString",value:function flattenToString(){var sb=new StringBuilder(32);sb.append(this.left);sb.append(' ');sb.append(this.top);sb.append(' ');sb.append(this.right);sb.append(' ');sb.append(this.bottom);return sb.toString();}},{key:"isEmpty",value:function isEmpty(){return this.left >= this.right || this.top >= this.bottom;}},{key:"width",value:function width(){return this.right - this.left;}},{key:"height",value:function height(){return this.bottom - this.top;}},{key:"centerX",value:function centerX(){return this.left + this.right >> 1;}},{key:"centerY",value:function centerY(){return this.top + this.bottom >> 1;}},{key:"exactCenterX",value:function exactCenterX(){return (this.left + this.right) * 0.5;}},{key:"exactCenterY",value:function exactCenterY(){return (this.top + this.bottom) * 0.5;}},{key:"setEmpty",value:function setEmpty(){this.left = this.right = this.top = this.bottom = 0;}},{key:"set",value:function set(){for(var _len2=arguments.length,args=Array(_len2),_key2=0;_key2 < _len2;_key2++) {args[_key2] = arguments[_key2];}if(args.length === 1){var rect=args[0];var _ref=[rect.left,rect.top,rect.right,rect.bottom];this.left = _ref[0];this.top = _ref[1];this.right = _ref[2];this.bottom = _ref[3];}else {var _args$02=args[0];var left=_args$02 === undefined?0:_args$02;var _args$12=args[1];var _top2=_args$12 === undefined?0:_args$12;var _args$22=args[2];var right=_args$22 === undefined?0:_args$22;var _args$32=args[3];var bottom=_args$32 === undefined?0:_args$32;this.left = left;this.top = _top2;this.right = right;this.bottom = bottom;}}},{key:"offset",value:function offset(dx,dy){this.left += dx;this.top += dy;this.right += dx;this.bottom += dy;}},{key:"offsetTo",value:function offsetTo(newLeft,newTop){this.right += newLeft - this.left;this.bottom += newTop - this.top;this.left = newLeft;this.top = newTop;}},{key:"inset",value:function inset(dx,dy){this.left += dx;this.top += dy;this.right -= dx;this.bottom -= dy;}},{key:"contains",value:function contains(){for(var _len3=arguments.length,args=Array(_len3),_key3=0;_key3 < _len3;_key3++) {args[_key3] = arguments[_key3];}if(args.length === 1){var r=args[0];return this.left < this.right && this.top < this.bottom && this.left <= r.left && this.top <= r.top && this.right >= r.right && this.bottom >= r.bottom;}else if(args.length === 2){var x=args[0];var y=args[1];return this.left < this.right && this.top < this.bottom && x >= this.left && x < this.right && y >= this.top && y < this.bottom;}else {var _args$03=args[0];var left=_args$03 === undefined?0:_args$03;var _args$13=args[1];var _top3=_args$13 === undefined?0:_args$13;var _args$23=args[2];var right=_args$23 === undefined?0:_args$23;var _args$33=args[3];var bottom=_args$33 === undefined?0:_args$33;return this.left < this.right && this.top < this.bottom && this.left <= left && this.top <= _top3 && this.right >= right && this.bottom >= bottom;}}},{key:"intersect",value:function intersect(){for(var _len4=arguments.length,args=Array(_len4),_key4=0;_key4 < _len4;_key4++) {args[_key4] = arguments[_key4];}if(args.length === 1){var rect=args[0];return this.intersect(rect.left,rect.top,rect.right,rect.bottom);}else {var _args$04=args[0];var left=_args$04 === undefined?0:_args$04;var _args$14=args[1];var t=_args$14 === undefined?0:_args$14;var _args$24=args[2];var right=_args$24 === undefined?0:_args$24;var _args$34=args[3];var bottom=_args$34 === undefined?0:_args$34;if(this.left < right && left < this.right && this.top < bottom && t < this.bottom){if(this.left < left)this.left = left;if(this.top < t)this.top = t;if(this.right > right)this.right = right;if(this.bottom > bottom)this.bottom = bottom;return true;}return false;}}},{key:"intersects",value:function intersects(){for(var _len5=arguments.length,args=Array(_len5),_key5=0;_key5 < _len5;_key5++) {args[_key5] = arguments[_key5];}if(args.length === 1){var rect=args[0];return this.intersects(rect.left,rect.top,rect.right,rect.bottom);}else {var _args$05=args[0];var left=_args$05 === undefined?0:_args$05;var _args$15=args[1];var t=_args$15 === undefined?0:_args$15;var _args$25=args[2];var right=_args$25 === undefined?0:_args$25;var _args$35=args[3];var bottom=_args$35 === undefined?0:_args$35;return this.left < right && left < this.right && this.top < bottom && t < this.bottom;}}},{key:"union",value:function union(){for(var _len6=arguments.length,args=Array(_len6),_key6=0;_key6 < _len6;_key6++) {args[_key6] = arguments[_key6];}if(arguments.length === 1){var rect=args[0];this.union(rect.left,rect.top,rect.right,rect.bottom);}else if(arguments.length === 2){var _args$06=args[0];var x=_args$06 === undefined?0:_args$06;var _args$16=args[1];var y=_args$16 === undefined?0:_args$16;if(x < this.left){this.left = x;}else if(x > this.right){this.right = x;}if(y < this.top){this.top = y;}else if(y > this.bottom){this.bottom = y;}}else {var _args$07=args[0];var left=_args$07 === undefined?0:_args$07;var _args$17=args[1];var _top4=_args$17 === undefined?0:_args$17;var _args$26=args[2];var right=_args$26 === undefined?0:_args$26;var _args$36=args[3];var bottom=_args$36 === undefined?0:_args$36;if(left < right && _top4 < bottom){if(this.left < this.right && this.top < this.bottom){if(this.left > left)this.left = left;if(this.top > _top4)this.top = _top4;if(this.right < right)this.right = right;if(this.bottom < bottom)this.bottom = bottom;}else {this.left = left;this.top = _top4;this.right = right;this.bottom = bottom;}}}}},{key:"sort",value:function sort(){if(this.left > this.right){var _ref2=[this.right,this.left];this.left = _ref2[0];this.right = _ref2[1];}if(this.top > this.bottom){var _ref3=[this.bottom,this.top];this.top = _ref3[0];this.bottom = _ref3[1];}}},{key:"scale",value:function scale(_scale){if(_scale != 1){this.left = this.left * _scale;this.top = this.top * _scale;this.right = this.right * _scale;this.bottom = this.bottom * _scale;}}}],[{key:"unflattenFromString",value:function unflattenFromString(str){var parts=str.split(" ");return new Rect(Number.parseInt(parts[0]),Number.parseInt(parts[1]),Number.parseInt(parts[2]),Number.parseInt(parts[3]));}}]);return Rect;})();graphics.Rect = Rect;})(graphics = android.graphics || (android.graphics = {}));})(android || (android = {}));var android;(function(android){var graphics;(function(graphics){var PixelFormat=function PixelFormat(){_classCallCheck(this,PixelFormat);};PixelFormat.UNKNOWN = 0;PixelFormat.TRANSLUCENT = -3;PixelFormat.TRANSPARENT = -2;PixelFormat.OPAQUE = -1;PixelFormat.RGBA_8888 = 1;PixelFormat.RGBX_8888 = 2;PixelFormat.RGB_888 = 3;PixelFormat.RGB_565 = 4;graphics.PixelFormat = PixelFormat;})(graphics = android.graphics || (android.graphics = {}));})(android || (android = {}));var java;(function(java){var lang;(function(lang){var ref;(function(ref){var WeakReference=(function(){function WeakReference(referent){_classCallCheck(this,WeakReference);this.weakMap = new WeakMap();this.weakMap.set(this,referent);}_createClass(WeakReference,[{key:"get",value:function get(){return this.weakMap.get(this);}},{key:"set",value:function set(value){this.weakMap.set(this,value);}},{key:"clear",value:function clear(){this.weakMap["delete"](this);}}]);return WeakReference;})();ref.WeakReference = WeakReference;})(ref = lang.ref || (lang.ref = {}));})(lang = java.lang || (java.lang = {}));})(java || (java = {}));var java;(function(java){var lang;(function(lang){var System=(function(){function System(){_classCallCheck(this,System);}_createClass(System,null,[{key:"currentTimeMillis",value:function currentTimeMillis(){return new Date().getTime();}},{key:"arraycopy",value:function arraycopy(src,srcPos,dest,destPos,length){var srcLength=src.length;var destLength=dest.length;for(var i=0;i < length;i++) {var srcIndex=i + srcPos;if(srcIndex >= srcLength)return;var destIndex=i + destPos;if(destIndex >= destLength)return;dest[destIndex] = src[srcIndex];}}}]);return System;})();System.out = {println:function println(any){console.log('\n');console.log(any);},print:function print(any){console.log(any);}};lang.System = System;})(lang = java.lang || (java.lang = {}));})(java || (java = {})); /**
 * Created by linfaxin on 15/10/29.
 */ ///<reference path="../../java/lang/System.ts"/>
var android;(function(android){var util;(function(util){var System=java.lang.System;var StateSet=(function(){function StateSet(){_classCallCheck(this,StateSet);}_createClass(StateSet,null,[{key:"isWildCard",value:function isWildCard(stateSetOrSpec){return stateSetOrSpec.length == 0 || stateSetOrSpec[0] == 0;}},{key:"stateSetMatches",value:function stateSetMatches(stateSpec,stateSetOrState){if(Number.isInteger(stateSetOrState)){return StateSet._stateSetMatches_single(stateSpec,stateSetOrState);}var stateSet=stateSetOrState;if(stateSet == null){return stateSpec == null || this.isWildCard(stateSpec);}var stateSpecSize=stateSpec.length;var stateSetSize=stateSet.length;for(var i=0;i < stateSpecSize;i++) {var stateSpecState=stateSpec[i];if(stateSpecState == 0){return true;}var mustMatch=undefined;if(stateSpecState > 0){mustMatch = true;}else {mustMatch = false;stateSpecState = -stateSpecState;}var found=false;for(var j=0;j < stateSetSize;j++) {var state=stateSet[j];if(state == 0){if(mustMatch){return false;}else {break;}}if(state == stateSpecState){if(mustMatch){found = true;break;}else {return false;}}}if(mustMatch && !found){return false;}}return true;}},{key:"_stateSetMatches_single",value:function _stateSetMatches_single(stateSpec,state){var stateSpecSize=stateSpec.length;for(var i=0;i < stateSpecSize;i++) {var stateSpecState=stateSpec[i];if(stateSpecState == 0){return true;}if(stateSpecState > 0){if(state != stateSpecState){return false;}}else {if(state == -stateSpecState){return false;}}}return true;}},{key:"trimStateSet",value:function trimStateSet(states,newSize){if(states.length == newSize){return states;}var trimmedStates=new Array(newSize);System.arraycopy(states,0,trimmedStates,0,newSize);return trimmedStates;}}]);return StateSet;})();StateSet.WILD_CARD = [];StateSet.NOTHING = [0];util.StateSet = StateSet;})(util = android.util || (android.util = {}));})(android || (android = {})); /**
 * Created by linfaxin on 15/10/3.
 */ ///<reference path="../Rect.ts"/>
///<reference path="../PixelFormat.ts"/>
///<reference path="../../../java/lang/ref/WeakReference.ts"/>
///<reference path="../../../java/lang/Runnable.ts"/>
///<reference path="../../util/StateSet.ts"/>
var android;(function(android){var graphics;(function(graphics){var drawable;(function(drawable){var Rect=android.graphics.Rect;var PixelFormat=android.graphics.PixelFormat;var WeakReference=java.lang.ref.WeakReference;var StateSet=android.util.StateSet;var Drawable=(function(){function Drawable(){_classCallCheck(this,Drawable);this.mBounds = Drawable.ZERO_BOUNDS_RECT;this.mStateSet = StateSet.WILD_CARD;this.mLevel = 0;this.mVisible = true;}_createClass(Drawable,[{key:"draw",value:function draw(canvas){}},{key:"setBounds",value:function setBounds(){for(var _len7=arguments.length,args=Array(_len7),_key7=0;_key7 < _len7;_key7++) {args[_key7] = arguments[_key7];}if(args.length === 1){var rect=args[0];return this.setBounds(rect.left,rect.top,rect.right,rect.bottom);}else {var _args$08=args[0];var left=_args$08 === undefined?0:_args$08;var _args$18=args[1];var _top5=_args$18 === undefined?0:_args$18;var _args$27=args[2];var right=_args$27 === undefined?0:_args$27;var _args$37=args[3];var bottom=_args$37 === undefined?0:_args$37;var oldBounds=this.mBounds;if(oldBounds == Drawable.ZERO_BOUNDS_RECT){oldBounds = this.mBounds = new Rect();}if(oldBounds.left != left || oldBounds.top != _top5 || oldBounds.right != right || oldBounds.bottom != bottom){if(!oldBounds.isEmpty()){this.invalidateSelf();}this.mBounds.set(left,_top5,right,bottom);this.onBoundsChange(this.mBounds);}}}},{key:"copyBounds",value:function copyBounds(){var bounds=arguments.length <= 0 || arguments[0] === undefined?new Rect():arguments[0];bounds.set(this.mBounds);return bounds;}},{key:"getBounds",value:function getBounds(){if(this.mBounds == Drawable.ZERO_BOUNDS_RECT){this.mBounds = new Rect();}return this.mBounds;}},{key:"setDither",value:function setDither(dither){}},{key:"setCallback",value:function setCallback(cb){this.mCallback = new WeakReference(cb);}},{key:"getCallback",value:function getCallback(){if(this.mCallback != null){return this.mCallback.get();}return null;}},{key:"invalidateSelf",value:function invalidateSelf(){var callback=this.getCallback();if(callback != null){callback.invalidateDrawable(this);}}},{key:"scheduleSelf",value:function scheduleSelf(what,when){var callback=this.getCallback();if(callback != null){callback.scheduleDrawable(this,what,when);}}},{key:"unscheduleSelf",value:function unscheduleSelf(what){var callback=this.getCallback();if(callback != null){callback.unscheduleDrawable(this,what);}}},{key:"setAlpha",value:function setAlpha(alpha){}},{key:"getAlpha",value:function getAlpha(){return 0xFF;}},{key:"isStateful",value:function isStateful(){return false;}},{key:"setState",value:function setState(stateSet){if(this.mStateSet + '' !== stateSet + ''){this.mStateSet = stateSet;return this.onStateChange(stateSet);}return false;}},{key:"getState",value:function getState(){return this.mStateSet;}},{key:"jumpToCurrentState",value:function jumpToCurrentState(){}},{key:"getCurrent",value:function getCurrent(){return this;}},{key:"setLevel",value:function setLevel(level){if(this.mLevel != level){this.mLevel = level;return this.onLevelChange(level);}return false;}},{key:"getLevel",value:function getLevel(){return this.mLevel;}},{key:"setVisible",value:function setVisible(visible,restart){var changed=this.mVisible != visible;if(changed){this.mVisible = visible;this.invalidateSelf();}return changed;}},{key:"isVisible",value:function isVisible(){return this.mVisible;}},{key:"setAutoMirrored",value:function setAutoMirrored(mirrored){}},{key:"isAutoMirrored",value:function isAutoMirrored(){return false;}},{key:"getOpacity",value:function getOpacity(){return PixelFormat.TRANSLUCENT;}},{key:"onStateChange",value:function onStateChange(state){return false;}},{key:"onLevelChange",value:function onLevelChange(level){return false;}},{key:"onBoundsChange",value:function onBoundsChange(bounds){}},{key:"getIntrinsicWidth",value:function getIntrinsicWidth(){return -1;}},{key:"getIntrinsicHeight",value:function getIntrinsicHeight(){return -1;}},{key:"getMinimumWidth",value:function getMinimumWidth(){var intrinsicWidth=this.getIntrinsicWidth();return intrinsicWidth > 0?intrinsicWidth:0;}},{key:"getMinimumHeight",value:function getMinimumHeight(){var intrinsicHeight=this.getIntrinsicHeight();return intrinsicHeight > 0?intrinsicHeight:0;}},{key:"getPadding",value:function getPadding(padding){padding.set(0,0,0,0);return false;}},{key:"mutate",value:function mutate(){return this;}},{key:"getConstantState",value:function getConstantState(){return null;}}],[{key:"resolveOpacity",value:function resolveOpacity(op1,op2){if(op1 == op2){return op1;}if(op1 == PixelFormat.UNKNOWN || op2 == PixelFormat.UNKNOWN){return PixelFormat.UNKNOWN;}if(op1 == PixelFormat.TRANSLUCENT || op2 == PixelFormat.TRANSLUCENT){return PixelFormat.TRANSLUCENT;}if(op1 == PixelFormat.TRANSPARENT || op2 == PixelFormat.TRANSPARENT){return PixelFormat.TRANSPARENT;}return PixelFormat.OPAQUE;}}]);return Drawable;})();Drawable.ZERO_BOUNDS_RECT = new Rect();drawable.Drawable = Drawable;})(drawable = graphics.drawable || (graphics.drawable = {}));})(graphics = android.graphics || (android.graphics = {}));})(android || (android = {}));var android;(function(android){var util;(function(util){var Pools=function Pools(){_classCallCheck(this,Pools);};util.Pools = Pools;(function(Pools){var SimplePool=(function(){function SimplePool(maxPoolSize){_classCallCheck(this,SimplePool);this.mPoolSize = 0;if(maxPoolSize <= 0){throw new Error("The max pool size must be > 0");}this.mPool = new Array(maxPoolSize);}_createClass(SimplePool,[{key:"acquire",value:function acquire(){if(this.mPoolSize > 0){var lastPooledIndex=this.mPoolSize - 1;var instance=this.mPool[lastPooledIndex];this.mPool[lastPooledIndex] = null;this.mPoolSize--;return instance;}return null;}},{key:"release",value:function release(instance){if(this.isInPool(instance)){throw new Error("Already in the pool!");}if(this.mPoolSize < this.mPool.length){this.mPool[this.mPoolSize] = instance;this.mPoolSize++;return true;}return false;}},{key:"isInPool",value:function isInPool(instance){for(var i=0;i < this.mPoolSize;i++) {if(this.mPool[i] == instance){return true;}}return false;}}]);return SimplePool;})();Pools.SimplePool = SimplePool;var SynchronizedPool=(function(_SimplePool){_inherits(SynchronizedPool,_SimplePool);function SynchronizedPool(){_classCallCheck(this,SynchronizedPool);_get(Object.getPrototypeOf(SynchronizedPool.prototype),"constructor",this).apply(this,arguments);}return SynchronizedPool;})(SimplePool);Pools.SynchronizedPool = SynchronizedPool;})(Pools = util.Pools || (util.Pools = {}));})(util = android.util || (android.util = {}));})(android || (android = {}));var android;(function(android){var graphics;(function(graphics){var Color=(function(){function Color(){_classCallCheck(this,Color);}_createClass(Color,null,[{key:"alpha",value:function alpha(color){return color >>> 24;}},{key:"red",value:function red(color){return color >> 16 & 0xFF;}},{key:"green",value:function green(color){return color >> 8 & 0xFF;}},{key:"blue",value:function blue(color){return color & 0xFF;}},{key:"rgb",value:function rgb(red,green,blue){return 0xFF << 24 | red << 16 | green << 8 | blue;}},{key:"argb",value:function argb(alpha,red,green,blue){return alpha << 24 | red << 16 | green << 8 | blue;}},{key:"rgba",value:function rgba(red,green,blue,alpha){return alpha << 24 | red << 16 | green << 8 | blue;}},{key:"parseColor",value:function parseColor(colorString){if(colorString.charAt(0) == '#'){var color=parseInt(colorString.substring(1),16);if(colorString.length == 7){color |= 0x00000000ff000000;}else if(colorString.length != 9){throw new Error("Unknown color");}return color;}else {var color=Color.sColorNameMap.get(colorString.toLowerCase());if(color != null){return color;}}throw new Error("Unknown color");}},{key:"toARGBHex",value:function toARGBHex(color){var r=Color.red(color);var g=Color.green(color);var b=Color.blue(color);var a=Color.alpha(color);var hR=r < 16?'0' + r.toString(16):r.toString(16);var hG=g < 16?'0' + g.toString(16):g.toString(16);var hB=b < 16?'0' + b.toString(16):b.toString(16);var hA=a < 16?'0' + a.toString(16):a.toString(16);return "#" + hA + hR + hG + hB;}},{key:"toRGBAFunc",value:function toRGBAFunc(color){var r=Color.red(color);var g=Color.green(color);var b=Color.blue(color);var a=Color.alpha(color);return "rgba(" + r + "," + g + "," + b + "," + a / 255 + ")";}},{key:"getHtmlColor",value:function getHtmlColor(color){var i=Color.sColorNameMap.get(color.toLowerCase());return i;}}]);return Color;})();Color.BLACK = 0xFF000000;Color.DKGRAY = 0xFF444444;Color.GRAY = 0xFF888888;Color.LTGRAY = 0xFFCCCCCC;Color.WHITE = 0xFFFFFFFF;Color.RED = 0xFFFF0000;Color.GREEN = 0xFF00FF00;Color.BLUE = 0xFF0000FF;Color.YELLOW = 0xFFFFFF00;Color.CYAN = 0xFF00FFFF;Color.MAGENTA = 0xFFFF00FF;Color.TRANSPARENT = 0;Color.sColorNameMap = new Map();graphics.Color = Color;Color.sColorNameMap = new Map();Color.sColorNameMap.set("black",Color.BLACK);Color.sColorNameMap.set("darkgray",Color.DKGRAY);Color.sColorNameMap.set("gray",Color.GRAY);Color.sColorNameMap.set("lightgray",Color.LTGRAY);Color.sColorNameMap.set("white",Color.WHITE);Color.sColorNameMap.set("red",Color.RED);Color.sColorNameMap.set("green",Color.GREEN);Color.sColorNameMap.set("blue",Color.BLUE);Color.sColorNameMap.set("yellow",Color.YELLOW);Color.sColorNameMap.set("cyan",Color.CYAN);Color.sColorNameMap.set("magenta",Color.MAGENTA);Color.sColorNameMap.set("aqua",0xFF00FFFF);Color.sColorNameMap.set("fuchsia",0xFFFF00FF);Color.sColorNameMap.set("darkgrey",Color.DKGRAY);Color.sColorNameMap.set("grey",Color.GRAY);Color.sColorNameMap.set("lightgrey",Color.LTGRAY);Color.sColorNameMap.set("lime",0xFF00FF00);Color.sColorNameMap.set("maroon",0xFF800000);Color.sColorNameMap.set("navy",0xFF000080);Color.sColorNameMap.set("olive",0xFF808000);Color.sColorNameMap.set("purple",0xFF800080);Color.sColorNameMap.set("silver",0xFFC0C0C0);Color.sColorNameMap.set("teal",0xFF008080);Color.sColorNameMap.set("transparent",Color.TRANSPARENT);})(graphics = android.graphics || (android.graphics = {}));})(android || (android = {})); /**
 * Created by linfaxin on 15/10/29.
 */ ///<reference path="Canvas.ts"/>
var android;(function(android){var graphics;(function(graphics){var Paint=(function(){function Paint(){_classCallCheck(this,Paint);this.shadowDx = 0;this.shadowDy = 0;this.shadowRadius = 0;this.shadowColor = 0;}_createClass(Paint,[{key:"getStyle",value:function getStyle(){return this.mTextStyle;}},{key:"setStyle",value:function setStyle(style){this.mTextStyle = style;}},{key:"getColor",value:function getColor(){return this.mColor;}},{key:"setColor",value:function setColor(color){this.mColor = color;}},{key:"setARGB",value:function setARGB(a,r,g,b){this.setColor(a << 24 | r << 16 | g << 8 | b);}},{key:"getAlpha",value:function getAlpha(){return this.mAlpha;}},{key:"setAlpha",value:function setAlpha(alpha){this.mAlpha = alpha;}},{key:"getStrokeWidth",value:function getStrokeWidth(){return this.mStrokeWidth;}},{key:"setStrokeWidth",value:function setStrokeWidth(width){this.mStrokeWidth = width;}},{key:"getStrokeCap",value:function getStrokeCap(){return this.mStrokeCap;}},{key:"setStrokeCap",value:function setStrokeCap(cap){this.mStrokeCap = cap;}},{key:"getStrokeJoin",value:function getStrokeJoin(){return this.mStrokeJoin;}},{key:"setStrokeJoin",value:function setStrokeJoin(join){this.mStrokeJoin = join;}},{key:"setAntiAlias",value:function setAntiAlias(enable){}},{key:"setShadowLayer",value:function setShadowLayer(radius,dx,dy,color){this.hasShadow = radius > 0.0;this.shadowRadius = radius;this.shadowDx = dx;this.shadowDy = dy;this.shadowColor = color;}},{key:"clearShadowLayer",value:function clearShadowLayer(){this.hasShadow = false;}},{key:"getTextAlign",value:function getTextAlign(){return this.align;}},{key:"setTextAlign",value:function setTextAlign(align){this.align = align;}},{key:"getTextSize",value:function getTextSize(){return this.textSize;}},{key:"setTextSize",value:function setTextSize(textSize){this.textSize = textSize;}},{key:"measureText",value:function measureText(text){var index=arguments.length <= 1 || arguments[1] === undefined?0:arguments[1];var count=arguments.length <= 2 || arguments[2] === undefined?text.length:arguments[2];return (function(){if(this.textSize != null){var fontParts=Paint._measureTextContext.font.split(' ');Paint._measureTextContext.font = this.textSize + ' ' + fontParts[fontParts.length - 1];}else {Paint._measureTextContext.font = '';}return Paint._measureTextContext.measureText(text.substr(index,count)).width;}).apply(this,arguments);}},{key:"getTextWidths",value:function getTextWidths(text,start,end,widths){if(text == null){throw Error("new IllegalArgumentException(\"text cannot be null\")");}if((start | end | end - start | text.length - end) < 0){throw Error("new IndexOutOfBoundsException()");}if(end - start > widths.length){throw Error("new ArrayIndexOutOfBoundsException()");}if(text.length == 0 || start == end){return 0;}for(var i=start;i < end;i++) {widths[i] = this.measureText(text[i]);}return end - start;}},{key:"getTextWidths_2",value:function getTextWidths_2(text,widths){return this.getTextWidths(text,0,text.length,widths);}},{key:"_setToCanvasContent",value:function _setToCanvasContent(context){if(Number.isInteger(this.mColor)){context.fillStyle = graphics.Color.toRGBAFunc(this.mColor);}if(this.align != null){context.textAlign = Paint.Align[this.align].toLowerCase();}if(this.mStrokeWidth != null){context.lineWidth = this.mStrokeWidth;}if(this.mStrokeCap != null){context.lineCap = Paint.Cap[this.mStrokeCap].toLowerCase();}if(this.mStrokeJoin != null){context.lineJoin = Paint.Join[this.mStrokeJoin].toLowerCase();}if(this.hasShadow){context.shadowBlur = this.shadowRadius;context.shadowOffsetX = this.shadowDx;context.shadowOffsetY = this.shadowDy;context.shadowColor = graphics.Color.toRGBAFunc(this.shadowColor);}var fontStyles=[];if(this.textSize != null){fontStyles.push(this.textSize + 'px');}if(fontStyles.length > 0){var fontParts=context.font.split(' ');fontStyles.push(fontParts[fontParts.length - 1]);context.font = fontStyles.join(' ');}}}]);return Paint;})();Paint._measureTextContext = document.createElement('canvas').getContext('2d');graphics.Paint = Paint;(function(Paint){(function(Align){Align[Align["LEFT"] = 0] = "LEFT";Align[Align["CENTER"] = 1] = "CENTER";Align[Align["RIGHT"] = 2] = "RIGHT";})(Paint.Align || (Paint.Align = {}));var Align=Paint.Align;(function(Style){Style[Style["FILL"] = 0] = "FILL";Style[Style["STROKE"] = 1] = "STROKE";Style[Style["FILL_AND_STROKE"] = 2] = "FILL_AND_STROKE";})(Paint.Style || (Paint.Style = {}));var Style=Paint.Style;(function(Cap){Cap[Cap["BUTT"] = 0] = "BUTT";Cap[Cap["ROUND"] = 1] = "ROUND";Cap[Cap["SQUARE"] = 2] = "SQUARE";})(Paint.Cap || (Paint.Cap = {}));var Cap=Paint.Cap;(function(Join){Join[Join["MITER"] = 0] = "MITER";Join[Join["ROUND"] = 1] = "ROUND";Join[Join["BEVEL"] = 2] = "BEVEL";})(Paint.Join || (Paint.Join = {}));var Join=Paint.Join;})(Paint = graphics.Paint || (graphics.Paint = {}));})(graphics = android.graphics || (android.graphics = {}));})(android || (android = {})); ///<reference path="../util/Pools.ts"/>
///<reference path="../util/Log.ts"/>
///<reference path="Rect.ts"/>
///<reference path="Color.ts"/>
///<reference path="Paint.ts"/>
var android;(function(android){var graphics;(function(graphics){var Pools=android.util.Pools;var Rect=android.graphics.Rect;var Color=android.graphics.Color;var Canvas=(function(){function Canvas(width,height){_classCallCheck(this,Canvas);this.mWidth = 0;this.mHeight = 0;this._saveCount = 0;this.shouldDoRectBeforeRestoreMap = new Map();this.mClipStateMap = new Map();this.mWidth = width;this.mHeight = height;this.init();}_createClass(Canvas,[{key:"init",value:function init(){this.mCanvasElement = document.createElement("canvas");this.mCanvasElement.width = this.mWidth;this.mCanvasElement.height = this.mHeight;this._mCanvasContent = this.mCanvasElement.getContext("2d");this.mCurrentClip = Canvas.obtainRect();this.mCurrentClip.set(0,0,this.mWidth,this.mHeight);this._saveCount = 0;this.fullRectForClip();this._mCanvasContent.clip();this.save();}},{key:"recycle",value:function recycle(){Canvas.recycleRect(this.mCurrentClip);Canvas.recycleRect.apply(Canvas,_toConsumableArray(this.mClipStateMap.values()));var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=this.shouldDoRectBeforeRestoreMap.values()[Symbol.iterator](),_step;!(_iteratorNormalCompletion = (_step = _iterator.next()).done);_iteratorNormalCompletion = true) {var rects=_step.value;Canvas.recycleRect.apply(Canvas,_toConsumableArray(rects));}}catch(err) {_didIteratorError = true;_iteratorError = err;}finally {try{if(!_iteratorNormalCompletion && _iterator["return"]){_iterator["return"]();}}finally {if(_didIteratorError){throw _iteratorError;}}}this.mCanvasElement.width = this.mCanvasElement.height = 0;}},{key:"getHeight",value:function getHeight(){return this.mHeight;}},{key:"getWidth",value:function getWidth(){return this.mWidth;}},{key:"translate",value:function translate(dx,dy){if(this.mCurrentClip)this.mCurrentClip.offset(-dx,-dy);this._mCanvasContent.translate(dx,dy);}},{key:"scale",value:function scale(sx,sy,px,py){if(px && py)this.translate(px,py);this._mCanvasContent.scale(sx,sy);if(px && py)this.translate(-px,-py);}},{key:"rotate",value:function rotate(degrees,px,py){if(px && py)this.translate(px,py);this._mCanvasContent.rotate(degrees);if(px && py)this.translate(-px,-py);}},{key:"drawRGB",value:function drawRGB(r,g,b){this._mCanvasContent.fillStyle = "rgb(" + r + "," + g + "," + b + ")";this._mCanvasContent.fillRect(this.mCurrentClip.left,this.mCurrentClip.top,this.mCurrentClip.width(),this.mCurrentClip.height());}},{key:"drawARGB",value:function drawARGB(a,r,g,b){this._mCanvasContent.fillStyle = "rgba(" + r + "," + g + "," + b + "," + a / 255 + ")";this._mCanvasContent.fillRect(this.mCurrentClip.left,this.mCurrentClip.top,this.mCurrentClip.width(),this.mCurrentClip.height());}},{key:"drawColor",value:function drawColor(color){this.drawARGB(Color.alpha(color),Color.red(color),Color.green(color),Color.blue(color));}},{key:"clearColor",value:function clearColor(){this._mCanvasContent.clearRect(this.mCurrentClip.left,this.mCurrentClip.top,this.mCurrentClip.width(),this.mCurrentClip.height());}},{key:"save",value:function save(){this._mCanvasContent.save();if(this.mCurrentClip)this.mClipStateMap.set(this._saveCount,Canvas.obtainRect(this.mCurrentClip));this._saveCount++;return this._saveCount;}},{key:"restore",value:function restore(){var _this2=this;var doRects=this.shouldDoRectBeforeRestoreMap.get(this._saveCount);if(doRects && doRects.length > 0){doRects.forEach(function(rect){_this2._mCanvasContent.rect(rect.left,rect.top,rect.width(),rect.height());});if(doRects.length % 2 == 1){this.fullRectForClip();}while(doRects.length > 0) {Canvas.recycleRect(doRects.pop());}}this._saveCount--;this._mCanvasContent.restore();var savedClip=this.mClipStateMap.get(this._saveCount);if(savedClip){this.mClipStateMap["delete"](this._saveCount);this.mCurrentClip.set(savedClip);Canvas.recycleRect(savedClip);}}},{key:"restoreToCount",value:function restoreToCount(saveCount){if(saveCount <= 0)throw Error('saveCount can\'t <= 0');while(saveCount <= this._saveCount) {this.restore();}}},{key:"getSaveCount",value:function getSaveCount(){return this._saveCount;}},{key:"fullRectForClip",value:function fullRectForClip(){this._mCanvasContent.rect(Canvas.FullRect.left,Canvas.FullRect.top,Canvas.FullRect.width(),Canvas.FullRect.height());}},{key:"clipRect",value:function clipRect(){var rect=Canvas.obtainRect();for(var _len8=arguments.length,args=Array(_len8),_key8=0;_key8 < _len8;_key8++) {args[_key8] = arguments[_key8];}if(args.length === 1){rect.set(args[0]);}else {var _args$09=args[0];var left=_args$09 === undefined?0:_args$09;var _args$19=args[1];var _top6=_args$19 === undefined?0:_args$19;var _args$28=args[2];var right=_args$28 === undefined?0:_args$28;var _args$38=args[3];var bottom=_args$38 === undefined?0:_args$38;rect.set(left,_top6,right,bottom);}this._mCanvasContent.rect(Math.floor(rect.left),Math.floor(rect.top),Math.ceil(rect.width()),Math.ceil(rect.height()));this.fullRectForClip();this._mCanvasContent.clip('evenodd');var doRects=this.shouldDoRectBeforeRestoreMap.get(this._saveCount);if(!doRects){doRects = [];this.shouldDoRectBeforeRestoreMap.set(this._saveCount,doRects);}doRects.push(rect);this.mCurrentClip.intersect(rect);return rect.isEmpty();}},{key:"getClipBounds",value:function getClipBounds(bounds){if(!this.mCurrentClip)this.mCurrentClip = Canvas.obtainRect();var rect=bounds || Canvas.obtainRect();rect.set(this.mCurrentClip);return rect;}},{key:"quickReject",value:function quickReject(){if(!this.mCurrentClip)return false;for(var _len9=arguments.length,args=Array(_len9),_key9=0;_key9 < _len9;_key9++) {args[_key9] = arguments[_key9];}if(args.length == 1){return !this.mCurrentClip.intersects(args[0]);}else {var _args$010=args[0];var left=_args$010 === undefined?0:_args$010;var _args$110=args[1];var t=_args$110 === undefined?0:_args$110;var _args$29=args[2];var right=_args$29 === undefined?0:_args$29;var _args$39=args[3];var bottom=_args$39 === undefined?0:_args$39;return !this.mCurrentClip.intersects(left,t,right,bottom);}}},{key:"drawCanvas",value:function drawCanvas(canvas,offsetX,offsetY){this._mCanvasContent.drawImage(canvas.canvasElement,offsetX,offsetY);}},{key:"drawRect",value:function drawRect(){for(var _len10=arguments.length,args=Array(_len10),_key10=0;_key10 < _len10;_key10++) {args[_key10] = arguments[_key10];}if(args.length == 2){var rect=args[0];this.drawRect(rect.left,rect.top,rect.right,rect.bottom,args[1]);}else {var left=args[0];var _top7=args[1];var right=args[2];var bottom=args[3];var paint=args[4];this._mCanvasContent.save();paint._setToCanvasContent(this._mCanvasContent);this._mCanvasContent.fillRect(left,_top7,right - left,bottom - _top7);this._mCanvasContent.restore();}}},{key:"drawText",value:function drawText(text,x,y,paint){this._mCanvasContent.save();if(paint){paint._setToCanvasContent(this._mCanvasContent);switch(paint.getStyle()){case graphics.Paint.Style.STROKE:this._mCanvasContent.strokeText(text,x,y);break;case graphics.Paint.Style.FILL_AND_STROKE:this._mCanvasContent.strokeText(text,x,y);this._mCanvasContent.fillText(text,x,y);break;case graphics.Paint.Style.FILL:default:this._mCanvasContent.fillText(text,x,y);break;}}else {this._mCanvasContent.fillText(text,x,y);}this._mCanvasContent.restore();}},{key:"canvasElement",get:function get(){return this.mCanvasElement;}}],[{key:"obtainRect",value:function obtainRect(copy){var rect=Canvas.sRectPool.acquire();if(!rect)rect = new Rect();if(copy)rect.set(copy);return rect;}},{key:"recycleRect",value:function recycleRect(){var _iteratorNormalCompletion2=true;var _didIteratorError2=false;var _iteratorError2=undefined;try{for(var _len11=arguments.length,rects=Array(_len11),_key11=0;_key11 < _len11;_key11++) {rects[_key11] = arguments[_key11];}for(var _iterator2=rects[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done);_iteratorNormalCompletion2 = true) {var rect=_step2.value;rect.setEmpty();Canvas.sRectPool.release(rect);}}catch(err) {_didIteratorError2 = true;_iteratorError2 = err;}finally {try{if(!_iteratorNormalCompletion2 && _iterator2["return"]){_iterator2["return"]();}}finally {if(_didIteratorError2){throw _iteratorError2;}}}}}]);return Canvas;})();Canvas.FullRect = new Rect(-1000000000,-1000000000,1000000000,1000000000);Canvas.sRectPool = new Pools.SynchronizedPool(100);graphics.Canvas = Canvas;})(graphics = android.graphics || (android.graphics = {}));})(android || (android = {})); /**
 * Created by linfaxin on 15/10/29.
 */ ///<reference path="Drawable.ts"/>
///<reference path="../Canvas.ts"/>
///<reference path="../Paint.ts"/>
var android;(function(android){var graphics;(function(graphics){var drawable;(function(drawable){var ColorDrawable=(function(_drawable$Drawable){_inherits(ColorDrawable,_drawable$Drawable);function ColorDrawable(color){_classCallCheck(this,ColorDrawable);_get(Object.getPrototypeOf(ColorDrawable.prototype),"constructor",this).call(this);this.mMutated = false;this.mPaint = new graphics.Paint();this.mState = new ColorState();if(color !== undefined){this.setColor(color);}}_createClass(ColorDrawable,[{key:"_setStateCopyFrom",value:function _setStateCopyFrom(state){this.mState = new ColorState(state);}},{key:"mutate",value:function mutate(){if(!this.mMutated && _get(Object.getPrototypeOf(ColorDrawable.prototype),"mutate",this).call(this) == this){this.mState = new ColorState(this.mState);this.mMutated = true;}return this;}},{key:"draw",value:function draw(canvas){if(this.mState.mUseColor >>> 24 != 0){this.mPaint.setColor(this.mState.mUseColor);canvas.drawRect(this.getBounds(),this.mPaint);}}},{key:"getColor",value:function getColor(){return this.mState.mUseColor;}},{key:"setColor",value:function setColor(color){if(this.mState.mBaseColor != color || this.mState.mUseColor != color){this.invalidateSelf();this.mState.mBaseColor = this.mState.mUseColor = color;}}},{key:"getAlpha",value:function getAlpha(){return this.mState.mUseColor >>> 24;}},{key:"setAlpha",value:function setAlpha(alpha){alpha += alpha >> 7;var baseAlpha=this.mState.mBaseColor >>> 24;var useAlpha=baseAlpha * alpha >> 8;var oldUseColor=this.mState.mUseColor;this.mState.mUseColor = this.mState.mBaseColor << 8 >>> 8 | useAlpha << 24;if(oldUseColor != this.mState.mUseColor){this.invalidateSelf();}}},{key:"getOpacity",value:function getOpacity(){switch(this.mState.mUseColor >>> 24){case 255:return graphics.PixelFormat.OPAQUE;case 0:return graphics.PixelFormat.TRANSPARENT;}return graphics.PixelFormat.TRANSLUCENT;}},{key:"getConstantState",value:function getConstantState(){return this.mState;}}]);return ColorDrawable;})(drawable.Drawable);drawable.ColorDrawable = ColorDrawable;var ColorState=(function(){function ColorState(state){_classCallCheck(this,ColorState);this.mBaseColor = 0;this.mUseColor = 0;if(state != null){this.mBaseColor = state.mBaseColor;this.mUseColor = state.mUseColor;}}_createClass(ColorState,[{key:"newDrawable",value:function newDrawable(){var c=new ColorDrawable();c._setStateCopyFrom(this);return c;}}]);return ColorState;})();})(drawable = graphics.drawable || (graphics.drawable = {}));})(graphics = android.graphics || (android.graphics = {}));})(android || (android = {})); /**
 * Created by linfaxin on 15/10/30.
 */ ///<reference path="Drawable.ts"/>
///<reference path="../Canvas.ts"/>
var android;(function(android){var graphics;(function(graphics){var drawable;(function(drawable){var Drawable=android.graphics.drawable.Drawable;var ScrollBarDrawable=(function(_Drawable){_inherits(ScrollBarDrawable,_Drawable);function ScrollBarDrawable(){_classCallCheck(this,ScrollBarDrawable);for(var _len12=arguments.length,args=Array(_len12),_key12=0;_key12 < _len12;_key12++) {args[_key12] = arguments[_key12];}_get(Object.getPrototypeOf(ScrollBarDrawable.prototype),"constructor",this).apply(this,args);this.mRange = 0;this.mOffset = 0;this.mExtent = 0;this.mVertical = false;this.mChanged = false;this.mRangeChanged = false;this.mTempBounds = new graphics.Rect();this.mAlwaysDrawHorizontalTrack = false;this.mAlwaysDrawVerticalTrack = false;}_createClass(ScrollBarDrawable,[{key:"setAlwaysDrawHorizontalTrack",value:function setAlwaysDrawHorizontalTrack(alwaysDrawTrack){this.mAlwaysDrawHorizontalTrack = alwaysDrawTrack;}},{key:"setAlwaysDrawVerticalTrack",value:function setAlwaysDrawVerticalTrack(alwaysDrawTrack){this.mAlwaysDrawVerticalTrack = alwaysDrawTrack;}},{key:"getAlwaysDrawVerticalTrack",value:function getAlwaysDrawVerticalTrack(){return this.mAlwaysDrawVerticalTrack;}},{key:"getAlwaysDrawHorizontalTrack",value:function getAlwaysDrawHorizontalTrack(){return this.mAlwaysDrawHorizontalTrack;}},{key:"setParameters",value:function setParameters(range,offset,extent,vertical){if(this.mVertical != vertical){this.mChanged = true;}if(this.mRange != range || this.mOffset != offset || this.mExtent != extent){this.mRangeChanged = true;}this.mRange = range;this.mOffset = offset;this.mExtent = extent;this.mVertical = vertical;}},{key:"draw",value:function draw(canvas){var vertical=this.mVertical;var extent=this.mExtent;var range=this.mRange;var drawTrack=true;var drawThumb=true;if(extent <= 0 || range <= extent){drawTrack = vertical?this.mAlwaysDrawVerticalTrack:this.mAlwaysDrawHorizontalTrack;drawThumb = false;}var r=this.getBounds();if(drawTrack){this.drawTrack(canvas,r,vertical);}if(drawThumb){var size=vertical?r.height():r.width();var thickness=vertical?r.width():r.height();var _length=Math.round(size * extent / range);var offset=Math.round((size - _length) * this.mOffset / (range - extent));var minLength=thickness * 2;if(_length < minLength){_length = minLength;}if(offset + _length > size){offset = size - _length;}this.drawThumb(canvas,r,offset,_length,vertical);}}},{key:"onBoundsChange",value:function onBoundsChange(bounds){_get(Object.getPrototypeOf(ScrollBarDrawable.prototype),"onBoundsChange",this).call(this,bounds);this.mChanged = true;}},{key:"drawTrack",value:function drawTrack(canvas,bounds,vertical){var track=undefined;if(vertical){track = this.mVerticalTrack;}else {track = this.mHorizontalTrack;}if(track != null){if(this.mChanged){track.setBounds(bounds);}track.draw(canvas);}}},{key:"drawThumb",value:function drawThumb(canvas,bounds,offset,length,vertical){var thumbRect=this.mTempBounds;var changed=this.mRangeChanged || this.mChanged;if(changed){if(vertical){thumbRect.set(bounds.left,bounds.top + offset,bounds.right,bounds.top + offset + length);}else {thumbRect.set(bounds.left + offset,bounds.top,bounds.left + offset + length,bounds.bottom);}}if(vertical){var thumb=this.mVerticalThumb;if(changed)thumb.setBounds(thumbRect);thumb.draw(canvas);}else {var thumb=this.mHorizontalThumb;if(changed)thumb.setBounds(thumbRect);thumb.draw(canvas);}}},{key:"setVerticalThumbDrawable",value:function setVerticalThumbDrawable(thumb){if(thumb != null){this.mVerticalThumb = thumb;}}},{key:"setVerticalTrackDrawable",value:function setVerticalTrackDrawable(track){this.mVerticalTrack = track;}},{key:"setHorizontalThumbDrawable",value:function setHorizontalThumbDrawable(thumb){if(thumb != null){this.mHorizontalThumb = thumb;}}},{key:"setHorizontalTrackDrawable",value:function setHorizontalTrackDrawable(track){this.mHorizontalTrack = track;}},{key:"getSize",value:function getSize(vertical){if(vertical){return (this.mVerticalTrack != null?this.mVerticalTrack:this.mVerticalThumb).getIntrinsicWidth();}else {return (this.mHorizontalTrack != null?this.mHorizontalTrack:this.mHorizontalThumb).getIntrinsicHeight();}}},{key:"setAlpha",value:function setAlpha(alpha){if(this.mVerticalTrack != null){this.mVerticalTrack.setAlpha(alpha);}this.mVerticalThumb.setAlpha(alpha);if(this.mHorizontalTrack != null){this.mHorizontalTrack.setAlpha(alpha);}this.mHorizontalThumb.setAlpha(alpha);}},{key:"getAlpha",value:function getAlpha(){return this.mVerticalThumb.getAlpha();}},{key:"getOpacity",value:function getOpacity(){return graphics.PixelFormat.TRANSLUCENT;}},{key:"toString",value:function toString(){return "ScrollBarDrawable: range=" + this.mRange + " offset=" + this.mOffset + " extent=" + this.mExtent + (this.mVertical?" V":" H");}}]);return ScrollBarDrawable;})(Drawable);drawable.ScrollBarDrawable = ScrollBarDrawable;})(drawable = graphics.drawable || (graphics.drawable = {}));})(graphics = android.graphics || (android.graphics = {}));})(android || (android = {})); /**
 * Created by linfaxin on 15/11/2.
 */ ///<reference path="Drawable.ts"/>
///<reference path="../Canvas.ts"/>
var android;(function(android){var graphics;(function(graphics){var drawable;(function(drawable_1){var InsetDrawable=(function(_drawable_1$Drawable){_inherits(InsetDrawable,_drawable_1$Drawable);function InsetDrawable(drawable,insetLeft){var insetTop=arguments.length <= 2 || arguments[2] === undefined?insetLeft:arguments[2];var insetRight=arguments.length <= 3 || arguments[3] === undefined?insetTop:arguments[3];var insetBottom=arguments.length <= 4 || arguments[4] === undefined?insetRight:arguments[4];return (function(){_classCallCheck(this,InsetDrawable);_get(Object.getPrototypeOf(InsetDrawable.prototype),"constructor",this).call(this);this.mTmpRect = new graphics.Rect();this.mMutated = false;this.mInsetState = new InsetState(null,this);this.mInsetState.mDrawable = drawable;this.mInsetState.mInsetLeft = insetLeft;this.mInsetState.mInsetTop = insetTop;this.mInsetState.mInsetRight = insetRight;this.mInsetState.mInsetBottom = insetBottom;if(drawable != null){drawable.setCallback(this);}}).apply(this,arguments);}_createClass(InsetDrawable,[{key:"invalidateDrawable",value:function invalidateDrawable(who){var callback=this.getCallback();if(callback != null){callback.invalidateDrawable(this);}}},{key:"scheduleDrawable",value:function scheduleDrawable(who,what,when){var callback=this.getCallback();if(callback != null){callback.scheduleDrawable(this,what,when);}}},{key:"unscheduleDrawable",value:function unscheduleDrawable(who,what){var callback=this.getCallback();if(callback != null){callback.unscheduleDrawable(this,what);}}},{key:"draw",value:function draw(canvas){this.mInsetState.mDrawable.draw(canvas);}},{key:"getPadding",value:function getPadding(padding){var pad=this.mInsetState.mDrawable.getPadding(padding);padding.left += this.mInsetState.mInsetLeft;padding.right += this.mInsetState.mInsetRight;padding.top += this.mInsetState.mInsetTop;padding.bottom += this.mInsetState.mInsetBottom;if(pad || (this.mInsetState.mInsetLeft | this.mInsetState.mInsetRight | this.mInsetState.mInsetTop | this.mInsetState.mInsetBottom) != 0){return true;}else {return false;}}},{key:"setVisible",value:function setVisible(visible,restart){this.mInsetState.mDrawable.setVisible(visible,restart);return _get(Object.getPrototypeOf(InsetDrawable.prototype),"setVisible",this).call(this,visible,restart);}},{key:"setAlpha",value:function setAlpha(alpha){this.mInsetState.mDrawable.setAlpha(alpha);}},{key:"getAlpha",value:function getAlpha(){return this.mInsetState.mDrawable.getAlpha();}},{key:"getOpacity",value:function getOpacity(){return this.mInsetState.mDrawable.getOpacity();}},{key:"isStateful",value:function isStateful(){return this.mInsetState.mDrawable.isStateful();}},{key:"onStateChange",value:function onStateChange(state){var changed=this.mInsetState.mDrawable.setState(state);this.onBoundsChange(this.getBounds());return changed;}},{key:"onBoundsChange",value:function onBoundsChange(bounds){var r=this.mTmpRect;r.set(bounds);r.left += this.mInsetState.mInsetLeft;r.top += this.mInsetState.mInsetTop;r.right -= this.mInsetState.mInsetRight;r.bottom -= this.mInsetState.mInsetBottom;this.mInsetState.mDrawable.setBounds(r.left,r.top,r.right,r.bottom);}},{key:"getIntrinsicWidth",value:function getIntrinsicWidth(){return this.mInsetState.mDrawable.getIntrinsicWidth();}},{key:"getIntrinsicHeight",value:function getIntrinsicHeight(){return this.mInsetState.mDrawable.getIntrinsicHeight();}},{key:"getConstantState",value:function getConstantState(){if(this.mInsetState.canConstantState()){return this.mInsetState;}return null;}},{key:"mutate",value:function mutate(){if(!this.mMutated && _get(Object.getPrototypeOf(InsetDrawable.prototype),"mutate",this).call(this) == this){this.mInsetState.mDrawable.mutate();this.mMutated = true;}return this;}},{key:"getDrawable",value:function getDrawable(){return this.mInsetState.mDrawable;}}]);return InsetDrawable;})(drawable_1.Drawable);drawable_1.InsetDrawable = InsetDrawable;var InsetState=(function(){function InsetState(orig,owner){_classCallCheck(this,InsetState);this.mInsetLeft = 0;this.mInsetTop = 0;this.mInsetRight = 0;this.mInsetBottom = 0;if(orig != null){this.mDrawable = orig.mDrawable.getConstantState().newDrawable();this.mDrawable.setCallback(owner);this.mInsetLeft = orig.mInsetLeft;this.mInsetTop = orig.mInsetTop;this.mInsetRight = orig.mInsetRight;this.mInsetBottom = orig.mInsetBottom;this.mCheckedConstantState = this.mCanConstantState = true;}}_createClass(InsetState,[{key:"newDrawable",value:function newDrawable(){var drawable=new InsetDrawable(null,0);drawable.mInsetState = new InsetState(this,drawable);return drawable;}},{key:"canConstantState",value:function canConstantState(){if(!this.mCheckedConstantState){this.mCanConstantState = this.mDrawable.getConstantState() != null;this.mCheckedConstantState = true;}return this.mCanConstantState;}}]);return InsetState;})();})(drawable = graphics.drawable || (graphics.drawable = {}));})(graphics = android.graphics || (android.graphics = {}));})(android || (android = {})); /**
 * Created by linfaxin on 15/10/18.
 */ ///<reference path="Rect.ts"/>
var android;(function(android){var graphics;(function(graphics){var Matrix=(function(){function Matrix(){_classCallCheck(this,Matrix);}_createClass(Matrix,[{key:"isIdentity",value:function isIdentity(){return true;}},{key:"mapRect",value:function mapRect(boundingRect){return false;}}]);return Matrix;})();Matrix.IDENTITY_MATRIX = new Matrix();graphics.Matrix = Matrix;})(graphics = android.graphics || (android.graphics = {}));})(android || (android = {}));var java;(function(java){var lang;(function(lang){var hashCodeGenerator=0;var JavaObject=(function(){function JavaObject(){_classCallCheck(this,JavaObject);this.hash = hashCodeGenerator++;this._class = new Class(this.constructor.name);}_createClass(JavaObject,[{key:"hashCode",value:function hashCode(){return this.hash;}},{key:"getClass",value:function getClass(){return this._class;}},{key:"equals",value:function equals(o){return this === o;}}],[{key:"class",get:function get(){return new Class(this.name);}}]);return JavaObject;})();lang.JavaObject = JavaObject;var Class=(function(){function Class(name){_classCallCheck(this,Class);this.name = name;}_createClass(Class,[{key:"getName",value:function getName(){return this.name;}}]);return Class;})();lang.Class = Class;})(lang = java.lang || (java.lang = {}));})(java || (java = {}));var java;(function(java){var lang;(function(lang){var util;(function(util){var concurrent;(function(concurrent){var CopyOnWriteArrayList=(function(){function CopyOnWriteArrayList(){_classCallCheck(this,CopyOnWriteArrayList);this.mData = [];this.isDataNew = true;}_createClass(CopyOnWriteArrayList,[{key:"iterator",value:function iterator(){this.isDataNew = false;return this.mData;}},{key:Symbol.iterator,value:function value(){this.isDataNew = false;return this.mData[Symbol.iterator]();}},{key:"checkNewData",value:function checkNewData(){if(!this.isDataNew){this.isDataNew = true;this.mData = [].concat(_toConsumableArray(this.mData));}}},{key:"size",value:function size(){return this.mData.length;}},{key:"add",value:function add(){var _mData;this.checkNewData();(_mData = this.mData).push.apply(_mData,arguments);}},{key:"addAll",value:function addAll(array){var _mData2;this.checkNewData();(_mData2 = this.mData).push.apply(_mData2,_toConsumableArray(array.mData));}},{key:"remove",value:function remove(item){this.checkNewData();this.mData.splice(this.mData.indexOf(item),1);}}]);return CopyOnWriteArrayList;})();concurrent.CopyOnWriteArrayList = CopyOnWriteArrayList;})(concurrent = util.concurrent || (util.concurrent = {}));})(util = lang.util || (lang.util = {}));})(lang = java.lang || (java.lang = {}));})(java || (java = {})); /**
 * Created by linfaxin on 15/10/28.
 */ ///<reference path="List.ts"/>
var java;(function(java){var util;(function(util){var ArrayList=(function(){function ArrayList(){var initialCapacity=arguments.length <= 0 || arguments[0] === undefined?0:arguments[0];_classCallCheck(this,ArrayList);this.array = [];}_createClass(ArrayList,[{key:"size",value:function size(){return this.array.length;}},{key:"isEmpty",value:function isEmpty(){return this.size() === 0;}},{key:"contains",value:function contains(o){return this.indexOf(o) >= 0;}},{key:"indexOf",value:function indexOf(o){return this.array.indexOf(o);}},{key:"lastIndexOf",value:function lastIndexOf(o){return this.array.lastIndexOf(o);}},{key:"clone",value:function clone(){var _arrayList$array;var arrayList=new ArrayList();(_arrayList$array = arrayList.array).push.apply(_arrayList$array,_toConsumableArray(this.array));return arrayList;}},{key:"toArray",value:function toArray(){var a=arguments.length <= 0 || arguments[0] === undefined?new Array(this.size()):arguments[0];var size=this.size();for(var i=0;i < size;i++) {a[i] = this.array[i];}return a;}},{key:"getArray",value:function getArray(){return this.array;}},{key:"get",value:function get(index){return this.array[index];}},{key:"set",value:function set(index,element){var old=this.array[index];this.array[index] = element;return old;}},{key:"add",value:function add(){var index=undefined,t=undefined;for(var _len13=arguments.length,args=Array(_len13),_key13=0;_key13 < _len13;_key13++) {args[_key13] = arguments[_key13];}if(args.length === 1)t = args[0];else if(args.length === 2){index = args[0];t = args[1];}if(index === undefined)this.array.push(t);else this.array.splice(index,0,t);}},{key:"remove",value:function remove(o){var index=undefined;if(Number.isInteger(o)){index = o;}else {index = this.array.indexOf(o);}var old=this.array[index];this.array.splice(index,1);return old;}},{key:"clear",value:function clear(){this.array = [];}},{key:"addAll",value:function addAll(){var index=undefined,list=undefined;for(var _len14=arguments.length,args=Array(_len14),_key14=0;_key14 < _len14;_key14++) {args[_key14] = arguments[_key14];}if(args.length === 1){list = args[0];}else if(args.length === 2){index = args[0];list = args[1];}if(index === undefined){var _array2;(_array2 = this.array).push.apply(_array2,_toConsumableArray(list.array));}else {var _array3;(_array3 = this.array).splice.apply(_array3,[index,0].concat(_toConsumableArray(list.array)));}}},{key:"removeAll",value:function removeAll(list){var _this3=this;var oldSize=this.size();list.array.forEach(function(item){var index=_this3.array.indexOf(item);_this3.array.splice(index,1);});return this.size() === oldSize;}},{key:Symbol.iterator,value:function value(){return this.array[Symbol.iterator];}},{key:"subList",value:function subList(fromIndex,toIndex){var list=new ArrayList();for(var i=fromIndex;i < toIndex;i++) {list.array.push(this.array[i]);}return list;}},{key:"toString",value:function toString(){return this.array.toString();}},{key:"sort",value:function sort(compareFn){this.array.sort(compareFn);}}]);return ArrayList;})();util.ArrayList = ArrayList;})(util = java.util || (java.util = {}));})(java || (java = {}));var android;(function(android){var util;(function(util){var Access=(function(){function Access(){_classCallCheck(this,Access);}_createClass(Access,[{key:"get",value:function get(index){return this.mData[index];}},{key:"size",value:function size(){return this.mSize;}}]);return Access;})();var CopyOnWriteArray=(function(){function CopyOnWriteArray(){_classCallCheck(this,CopyOnWriteArray);this.mData = [];this.mAccess = new Access();}_createClass(CopyOnWriteArray,[{key:"getArray",value:function getArray(){if(this.mStart){if(this.mDataCopy == null)this.mDataCopy = [].concat(_toConsumableArray(this.mData));return this.mDataCopy;}return this.mData;}},{key:"start",value:function start(){if(this.mStart)throw new Error("Iteration already started");this.mStart = true;this.mDataCopy = null;this.mAccess.mData = this.mData;this.mAccess.mSize = this.mData.length;return this.mAccess.mData;}},{key:"end",value:function end(){if(!this.mStart)throw new Error("Iteration not started");this.mStart = false;if(this.mDataCopy != null){this.mData = this.mDataCopy;this.mAccess.mData = [];this.mAccess.mSize = 0;}this.mDataCopy = null;}},{key:"size",value:function size(){return this.getArray().length;}},{key:"add",value:function add(){var _getArray;(_getArray = this.getArray()).push.apply(_getArray,arguments);}},{key:"addAll",value:function addAll(array){var _getArray2;(_getArray2 = this.getArray()).push.apply(_getArray2,_toConsumableArray(array.mData));}},{key:"remove",value:function remove(item){this.getArray().splice(this.getArray().indexOf(item),1);}}]);return CopyOnWriteArray;})();util.CopyOnWriteArray = CopyOnWriteArray;})(util = android.util || (android.util = {}));})(android || (android = {})); /**
 * Created by linfaxin on 15/10/8.
 */ ///<reference path="../../java/lang/util/concurrent/CopyOnWriteArrayList.ts"/>
///<reference path="../util/CopyOnWriteArray.ts"/>
///<reference path="../view/View.ts"/>
var android;(function(android){var view;(function(view){var CopyOnWriteArrayList=java.lang.util.concurrent.CopyOnWriteArrayList;var CopyOnWriteArray=android.util.CopyOnWriteArray;var ViewTreeObserver=(function(){function ViewTreeObserver(){_classCallCheck(this,ViewTreeObserver);this.mAlive = true;}_createClass(ViewTreeObserver,[{key:"addOnWindowAttachListener",value:function addOnWindowAttachListener(listener){this.checkIsAlive();if(this.mOnWindowAttachListeners == null){this.mOnWindowAttachListeners = new CopyOnWriteArrayList();}this.mOnWindowAttachListeners.add(listener);}},{key:"removeOnWindowAttachListener",value:function removeOnWindowAttachListener(victim){this.checkIsAlive();if(this.mOnWindowAttachListeners == null){return;}this.mOnWindowAttachListeners.remove(victim);}},{key:"dispatchOnWindowAttachedChange",value:function dispatchOnWindowAttachedChange(attached){var listeners=this.mOnWindowAttachListeners;if(listeners != null && listeners.size() > 0){var _iteratorNormalCompletion3=true;var _didIteratorError3=false;var _iteratorError3=undefined;try{for(var _iterator3=listeners[Symbol.iterator](),_step3;!(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done);_iteratorNormalCompletion3 = true) {var listener=_step3.value;if(attached)listener.onWindowAttached();else listener.onWindowDetached();}}catch(err) {_didIteratorError3 = true;_iteratorError3 = err;}finally {try{if(!_iteratorNormalCompletion3 && _iterator3["return"]){_iterator3["return"]();}}finally {if(_didIteratorError3){throw _iteratorError3;}}}}}},{key:"addOnGlobalLayoutListener",value:function addOnGlobalLayoutListener(listener){this.checkIsAlive();if(this.mOnGlobalLayoutListeners == null){this.mOnGlobalLayoutListeners = new CopyOnWriteArray();}this.mOnGlobalLayoutListeners.add(listener);}},{key:"removeGlobalOnLayoutListener",value:function removeGlobalOnLayoutListener(victim){this.removeOnGlobalLayoutListener(victim);}},{key:"removeOnGlobalLayoutListener",value:function removeOnGlobalLayoutListener(victim){this.checkIsAlive();if(this.mOnGlobalLayoutListeners == null){return;}this.mOnGlobalLayoutListeners.remove(victim);}},{key:"dispatchOnGlobalLayout",value:function dispatchOnGlobalLayout(){var listeners=this.mOnGlobalLayoutListeners;if(listeners != null && listeners.size() > 0){var access=listeners.start();try{var count=access.length;for(var i=0;i < count;i++) {access[i].onGlobalLayout();}}finally {listeners.end();}}}},{key:"addOnGlobalFocusChangeListener",value:function addOnGlobalFocusChangeListener(listener){this.checkIsAlive();if(this.mOnGlobalFocusListeners == null){this.mOnGlobalFocusListeners = new CopyOnWriteArrayList();}this.mOnGlobalFocusListeners.add(listener);}},{key:"removeOnGlobalFocusChangeListener",value:function removeOnGlobalFocusChangeListener(victim){this.checkIsAlive();if(this.mOnGlobalFocusListeners == null){return;}this.mOnGlobalFocusListeners.remove(victim);}},{key:"dispatchOnGlobalFocusChange",value:function dispatchOnGlobalFocusChange(oldFocus,newFocus){var listeners=this.mOnGlobalFocusListeners;if(listeners != null && listeners.size() > 0){var _iteratorNormalCompletion4=true;var _didIteratorError4=false;var _iteratorError4=undefined;try{for(var _iterator4=listeners[Symbol.iterator](),_step4;!(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done);_iteratorNormalCompletion4 = true) {var listener=_step4.value;listener.onGlobalFocusChanged(oldFocus,newFocus);}}catch(err) {_didIteratorError4 = true;_iteratorError4 = err;}finally {try{if(!_iteratorNormalCompletion4 && _iterator4["return"]){_iterator4["return"]();}}finally {if(_didIteratorError4){throw _iteratorError4;}}}}}},{key:"addOnPreDrawListener",value:function addOnPreDrawListener(listener){this.checkIsAlive();if(this.mOnPreDrawListeners == null){this.mOnPreDrawListeners = new CopyOnWriteArray();}this.mOnPreDrawListeners.add(listener);}},{key:"removeOnPreDrawListener",value:function removeOnPreDrawListener(victim){this.checkIsAlive();if(this.mOnPreDrawListeners == null){return;}this.mOnPreDrawListeners.remove(victim);}},{key:"dispatchOnPreDraw",value:function dispatchOnPreDraw(){var cancelDraw=false;var listeners=this.mOnPreDrawListeners;if(listeners != null && listeners.size() > 0){var access=listeners.start();try{var count=access.length;for(var i=0;i < count;i++) {cancelDraw = cancelDraw || !access[i].onPreDraw();}}finally {listeners.end();}}return cancelDraw;}},{key:"addOnTouchModeChangeListener",value:function addOnTouchModeChangeListener(listener){this.checkIsAlive();if(this.mOnTouchModeChangeListeners == null){this.mOnTouchModeChangeListeners = new CopyOnWriteArrayList();}this.mOnTouchModeChangeListeners.add(listener);}},{key:"removeOnTouchModeChangeListener",value:function removeOnTouchModeChangeListener(victim){this.checkIsAlive();if(this.mOnTouchModeChangeListeners == null){return;}this.mOnTouchModeChangeListeners.remove(victim);}},{key:"dispatchOnTouchModeChanged",value:function dispatchOnTouchModeChanged(inTouchMode){var listeners=this.mOnTouchModeChangeListeners;if(listeners != null && listeners.size() > 0){var _iteratorNormalCompletion5=true;var _didIteratorError5=false;var _iteratorError5=undefined;try{for(var _iterator5=listeners[Symbol.iterator](),_step5;!(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done);_iteratorNormalCompletion5 = true) {var listener=_step5.value;listener.onTouchModeChanged(inTouchMode);}}catch(err) {_didIteratorError5 = true;_iteratorError5 = err;}finally {try{if(!_iteratorNormalCompletion5 && _iterator5["return"]){_iterator5["return"]();}}finally {if(_didIteratorError5){throw _iteratorError5;}}}}}},{key:"addOnScrollChangedListener",value:function addOnScrollChangedListener(listener){this.checkIsAlive();if(this.mOnScrollChangedListeners == null){this.mOnScrollChangedListeners = new CopyOnWriteArray();}this.mOnScrollChangedListeners.add(listener);}},{key:"removeOnScrollChangedListener",value:function removeOnScrollChangedListener(victim){this.checkIsAlive();if(this.mOnScrollChangedListeners == null){return;}this.mOnScrollChangedListeners.remove(victim);}},{key:"dispatchOnScrollChanged",value:function dispatchOnScrollChanged(){var listeners=this.mOnScrollChangedListeners;if(listeners != null && listeners.size() > 0){var access=listeners.start();try{var count=access.length;for(var i=0;i < count;i++) {access[i].onScrollChanged();}}finally {listeners.end();}}}},{key:"addOnDrawListener",value:function addOnDrawListener(listener){this.checkIsAlive();if(this.mOnDrawListeners == null){this.mOnDrawListeners = new CopyOnWriteArrayList();}this.mOnDrawListeners.add(listener);}},{key:"removeOnDrawListener",value:function removeOnDrawListener(victim){this.checkIsAlive();if(this.mOnDrawListeners == null){return;}this.mOnDrawListeners.remove(victim);}},{key:"dispatchOnDraw",value:function dispatchOnDraw(){if(this.mOnDrawListeners != null){var _iteratorNormalCompletion6=true;var _didIteratorError6=false;var _iteratorError6=undefined;try{for(var _iterator6=this.mOnDrawListeners[Symbol.iterator](),_step6;!(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done);_iteratorNormalCompletion6 = true) {var listener=_step6.value;listener.onDraw();}}catch(err) {_didIteratorError6 = true;_iteratorError6 = err;}finally {try{if(!_iteratorNormalCompletion6 && _iterator6["return"]){_iterator6["return"]();}}finally {if(_didIteratorError6){throw _iteratorError6;}}}}}},{key:"merge",value:function merge(observer){if(observer.mOnWindowAttachListeners != null){if(this.mOnWindowAttachListeners != null){this.mOnWindowAttachListeners.addAll(observer.mOnWindowAttachListeners);}else {this.mOnWindowAttachListeners = observer.mOnWindowAttachListeners;}}if(observer.mOnGlobalLayoutListeners != null){if(this.mOnGlobalLayoutListeners != null){this.mOnGlobalLayoutListeners.addAll(observer.mOnGlobalLayoutListeners);}else {this.mOnGlobalLayoutListeners = observer.mOnGlobalLayoutListeners;}}if(observer.mOnPreDrawListeners != null){if(this.mOnPreDrawListeners != null){this.mOnPreDrawListeners.addAll(observer.mOnPreDrawListeners);}else {this.mOnPreDrawListeners = observer.mOnPreDrawListeners;}}if(observer.mOnScrollChangedListeners != null){if(this.mOnScrollChangedListeners != null){this.mOnScrollChangedListeners.addAll(observer.mOnScrollChangedListeners);}else {this.mOnScrollChangedListeners = observer.mOnScrollChangedListeners;}}observer.kill();}},{key:"checkIsAlive",value:function checkIsAlive(){if(!this.mAlive){throw new Error("This ViewTreeObserver is not alive, call " + "getViewTreeObserver() again");}}},{key:"isAlive",value:function isAlive(){return this.mAlive;}},{key:"kill",value:function kill(){this.mAlive = false;}}]);return ViewTreeObserver;})();view.ViewTreeObserver = ViewTreeObserver;})(view = android.view || (android.view = {}));})(android || (android = {}));var android;(function(android){var util;(function(util){var DisplayMetrics=function DisplayMetrics(){_classCallCheck(this,DisplayMetrics);};DisplayMetrics.DENSITY_LOW = 120;DisplayMetrics.DENSITY_MEDIUM = 160;DisplayMetrics.DENSITY_HIGH = 240;DisplayMetrics.DENSITY_XHIGH = 320;DisplayMetrics.DENSITY_XXHIGH = 480;DisplayMetrics.DENSITY_XXXHIGH = 640;DisplayMetrics.DENSITY_DEFAULT = DisplayMetrics.DENSITY_MEDIUM;util.DisplayMetrics = DisplayMetrics;})(util = android.util || (android.util = {}));})(android || (android = {})); ///<reference path="../../util/DisplayMetrics.ts"/>
var android;(function(android){var content;(function(content){var res;(function(res){var DisplayMetrics=android.util.DisplayMetrics;var Resources=(function(){function Resources(){_classCallCheck(this,Resources);}_createClass(Resources,[{key:"getDisplayMetrics",value:function getDisplayMetrics(){if(this.displayMetrics)return this.displayMetrics;this.displayMetrics = new DisplayMetrics();var displayMetrics=this.displayMetrics;var density=Resources.globalDensity;displayMetrics.xdpi = window.screen.deviceXDPI || DisplayMetrics.DENSITY_DEFAULT;displayMetrics.ydpi = window.screen.deviceYDPI || DisplayMetrics.DENSITY_DEFAULT;displayMetrics.density = density;displayMetrics.densityDpi = density * DisplayMetrics.DENSITY_DEFAULT;displayMetrics.scaledDensity = density;displayMetrics.widthPixels = window.innerWidth * density;displayMetrics.heightPixels = window.innerHeight * density;return displayMetrics;}}],[{key:"from",value:function from(any){return Resources.instance;}},{key:"getDisplayMetrics",value:function getDisplayMetrics(){return Resources.instance.getDisplayMetrics();}}]);return Resources;})();Resources.instance = new Resources();Resources.globalDensity = 1;res.Resources = Resources;})(res = content.res || (content.res = {}));})(content = android.content || (android.content = {}));})(android || (android = {})); /**
 * Created by linfaxin on 15/10/5.
 */ ///<reference path="../util/SparseArray.ts"/>
///<reference path="../content/res/Resources.ts"/>
var android;(function(android){var view;(function(view){var Resources=android.content.res.Resources;var ViewConfiguration=(function(){function ViewConfiguration(){_classCallCheck(this,ViewConfiguration);this.density = Resources.getDisplayMetrics().density;this.sizeAndDensity = this.density;this.mEdgeSlop = this.sizeAndDensity * ViewConfiguration.EDGE_SLOP;this.mFadingEdgeLength = this.sizeAndDensity * ViewConfiguration.FADING_EDGE_LENGTH;this.mMinimumFlingVelocity = this.density * ViewConfiguration.MINIMUM_FLING_VELOCITY;this.mMaximumFlingVelocity = this.density * ViewConfiguration.MAXIMUM_FLING_VELOCITY;this.mScrollbarSize = this.density * ViewConfiguration.SCROLL_BAR_SIZE;this.mTouchSlop = this.density * ViewConfiguration.TOUCH_SLOP;this.mDoubleTapTouchSlop = this.sizeAndDensity * ViewConfiguration.DOUBLE_TAP_TOUCH_SLOP;this.mPagingTouchSlop = this.density * ViewConfiguration.PAGING_TOUCH_SLOP;this.mDoubleTapSlop = this.density * ViewConfiguration.DOUBLE_TAP_SLOP;this.mWindowTouchSlop = this.sizeAndDensity * ViewConfiguration.WINDOW_TOUCH_SLOP;this.mOverscrollDistance = this.sizeAndDensity * ViewConfiguration.OVERSCROLL_DISTANCE;this.mOverflingDistance = this.sizeAndDensity * ViewConfiguration.OVERFLING_DISTANCE;this.mMaximumDrawingCacheSize = ViewConfiguration.MAXIMUM_DRAWING_CACHE_SIZE;}_createClass(ViewConfiguration,[{key:"getScaledScrollBarSize",value:function getScaledScrollBarSize(){return this.mScrollbarSize;}},{key:"getScaledFadingEdgeLength",value:function getScaledFadingEdgeLength(){return this.mFadingEdgeLength;}},{key:"getScaledEdgeSlop",value:function getScaledEdgeSlop(){return this.mEdgeSlop;}},{key:"getScaledTouchSlop",value:function getScaledTouchSlop(){return this.mTouchSlop;}},{key:"getScaledDoubleTapTouchSlop",value:function getScaledDoubleTapTouchSlop(){return this.mDoubleTapTouchSlop;}},{key:"getScaledPagingTouchSlop",value:function getScaledPagingTouchSlop(){return this.mPagingTouchSlop;}},{key:"getScaledDoubleTapSlop",value:function getScaledDoubleTapSlop(){return this.mDoubleTapSlop;}},{key:"getScaledWindowTouchSlop",value:function getScaledWindowTouchSlop(){return this.mWindowTouchSlop;}},{key:"getScaledMinimumFlingVelocity",value:function getScaledMinimumFlingVelocity(){return this.mMinimumFlingVelocity;}},{key:"getScaledMaximumFlingVelocity",value:function getScaledMaximumFlingVelocity(){return this.mMaximumFlingVelocity;}},{key:"getScaledMaximumDrawingCacheSize",value:function getScaledMaximumDrawingCacheSize(){return this.mMaximumDrawingCacheSize;}},{key:"getScaledOverscrollDistance",value:function getScaledOverscrollDistance(){return this.mOverscrollDistance;}},{key:"getScaledOverflingDistance",value:function getScaledOverflingDistance(){return this.mOverflingDistance;}}],[{key:"get",value:function get(arg){if(!ViewConfiguration.instance){ViewConfiguration.instance = new ViewConfiguration();}return ViewConfiguration.instance;}},{key:"getScrollBarFadeDuration",value:function getScrollBarFadeDuration(){return ViewConfiguration.SCROLL_BAR_FADE_DURATION;}},{key:"getScrollDefaultDelay",value:function getScrollDefaultDelay(){return ViewConfiguration.SCROLL_BAR_DEFAULT_DELAY;}},{key:"getPressedStateDuration",value:function getPressedStateDuration(){return ViewConfiguration.PRESSED_STATE_DURATION;}},{key:"getLongPressTimeout",value:function getLongPressTimeout(){return ViewConfiguration.DEFAULT_LONG_PRESS_TIMEOUT;}},{key:"getKeyRepeatDelay",value:function getKeyRepeatDelay(){return ViewConfiguration.KEY_REPEAT_DELAY;}},{key:"getTapTimeout",value:function getTapTimeout(){return ViewConfiguration.TAP_TIMEOUT;}},{key:"getJumpTapTimeout",value:function getJumpTapTimeout(){return ViewConfiguration.JUMP_TAP_TIMEOUT;}},{key:"getDoubleTapTimeout",value:function getDoubleTapTimeout(){return ViewConfiguration.DOUBLE_TAP_TIMEOUT;}},{key:"getDoubleTapMinTime",value:function getDoubleTapMinTime(){return ViewConfiguration.DOUBLE_TAP_MIN_TIME;}},{key:"getScrollFriction",value:function getScrollFriction(){return ViewConfiguration.SCROLL_FRICTION;}}]);return ViewConfiguration;})();ViewConfiguration.SCROLL_BAR_SIZE = 8;ViewConfiguration.SCROLL_BAR_FADE_DURATION = 250;ViewConfiguration.SCROLL_BAR_DEFAULT_DELAY = 300;ViewConfiguration.FADING_EDGE_LENGTH = 12;ViewConfiguration.PRESSED_STATE_DURATION = 64;ViewConfiguration.DEFAULT_LONG_PRESS_TIMEOUT = 500;ViewConfiguration.KEY_REPEAT_DELAY = 50;ViewConfiguration.GLOBAL_ACTIONS_KEY_TIMEOUT = 500;ViewConfiguration.TAP_TIMEOUT = 180;ViewConfiguration.JUMP_TAP_TIMEOUT = 500;ViewConfiguration.DOUBLE_TAP_TIMEOUT = 300;ViewConfiguration.DOUBLE_TAP_MIN_TIME = 40;ViewConfiguration.HOVER_TAP_TIMEOUT = 150;ViewConfiguration.HOVER_TAP_SLOP = 20;ViewConfiguration.ZOOM_CONTROLS_TIMEOUT = 3000;ViewConfiguration.EDGE_SLOP = 12;ViewConfiguration.TOUCH_SLOP = 8;ViewConfiguration.DOUBLE_TAP_TOUCH_SLOP = ViewConfiguration.TOUCH_SLOP;ViewConfiguration.PAGING_TOUCH_SLOP = ViewConfiguration.TOUCH_SLOP * 2;ViewConfiguration.DOUBLE_TAP_SLOP = 100;ViewConfiguration.WINDOW_TOUCH_SLOP = 16;ViewConfiguration.MINIMUM_FLING_VELOCITY = 50;ViewConfiguration.MAXIMUM_FLING_VELOCITY = 8000;ViewConfiguration.MAXIMUM_DRAWING_CACHE_SIZE = 480 * 800 * 4;ViewConfiguration.SCROLL_FRICTION = 0.015;ViewConfiguration.OVERSCROLL_DISTANCE = 800;ViewConfiguration.OVERFLING_DISTANCE = 100;view.ViewConfiguration = ViewConfiguration;})(view = android.view || (android.view = {}));})(android || (android = {})); /**
 * Created by linfaxin on 15/10/6.
 */ ///<reference path="../content/res/Resources.ts"/>
///<reference path="../graphics/Rect.ts"/>
///<reference path="../view/ViewConfiguration.ts"/>
var android;(function(android){var view;(function(view){var Resources=android.content.res.Resources;var Rect=android.graphics.Rect;var ViewConfiguration=android.view.ViewConfiguration;var MotionEvent=(function(){function MotionEvent(){_classCallCheck(this,MotionEvent);this.mAction = 0;this.mEdgeFlags = 0;this.mDownTime = 0;this.mEventTime = 0;this.mActivePointerId = 0;this.mXOffset = 0;this.mYOffset = 0;this._axisValues = new Map();}_createClass(MotionEvent,[{key:"initWithTouch",value:function initWithTouch(event,baseAction){var windowBound=arguments.length <= 2 || arguments[2] === undefined?new Rect():arguments[2];var e=event;var action=baseAction;var actionIndex=-1;var activeTouch=e.changedTouches[0];this._activeTouch = activeTouch;var activePointerId=activeTouch.identifier;for(var i=0,_length2=e.touches.length;i < _length2;i++) {if(e.touches[i].identifier === activePointerId){actionIndex = i;MotionEvent.IdIndexCache.set(activePointerId,i);break;}}if(actionIndex < 0 && (baseAction === MotionEvent.ACTION_UP || baseAction === MotionEvent.ACTION_CANCEL)){actionIndex = MotionEvent.IdIndexCache.get(activePointerId);}if(actionIndex < 0)throw Error('not find action index');switch(baseAction){case MotionEvent.ACTION_DOWN:case MotionEvent.ACTION_UP:MotionEvent.TouchMoveRecord.set(activePointerId,[]);break;case MotionEvent.ACTION_MOVE:var moveHistory=MotionEvent.TouchMoveRecord.get(activePointerId);if(moveHistory){activeTouch.mEventTime = e.timeStamp;moveHistory.push(activeTouch);if(moveHistory.length > MotionEvent.HistoryMaxSize)moveHistory.shift();}break;}this.mTouchingPointers = Array.from(e.touches);if(baseAction === MotionEvent.ACTION_UP){this.mTouchingPointers.splice(actionIndex,0,activeTouch);}if(this.mTouchingPointers.length > 1){switch(action){case MotionEvent.ACTION_DOWN:action = MotionEvent.ACTION_POINTER_DOWN;break;case MotionEvent.ACTION_UP:action = MotionEvent.ACTION_POINTER_UP;break;}}this.mAction = actionIndex << MotionEvent.ACTION_POINTER_INDEX_SHIFT | action;this.mActivePointerId = activePointerId;if(activePointerId === 0 && action == MotionEvent.ACTION_DOWN){this.mDownTime = e.timeStamp;}this.mEventTime = e.timeStamp;this.mXOffset = this.mYOffset = 0;var edgeFlag=0;var unScaledX=activeTouch.clientX;var unScaledY=activeTouch.clientY;var edgeSlop=ViewConfiguration.EDGE_SLOP;var tempBound=new Rect();tempBound.set(windowBound);tempBound.right = tempBound.left + edgeSlop;if(tempBound.contains(unScaledX,unScaledY)){edgeFlag |= MotionEvent.EDGE_LEFT;}tempBound.set(windowBound);tempBound.bottom = tempBound.top + edgeSlop;if(tempBound.contains(unScaledX,unScaledY)){edgeFlag |= MotionEvent.EDGE_TOP;}tempBound.set(windowBound);tempBound.left = tempBound.right - edgeSlop;if(tempBound.contains(unScaledX,unScaledY)){edgeFlag |= MotionEvent.EDGE_RIGHT;}tempBound.set(windowBound);tempBound.top = tempBound.bottom - edgeSlop;if(tempBound.contains(unScaledX,unScaledY)){edgeFlag |= MotionEvent.EDGE_BOTTOM;}this.mEdgeFlags = edgeFlag;}},{key:"initWithMouseWheel",value:function initWithMouseWheel(e){this.mAction = MotionEvent.ACTION_SCROLL;this.mActivePointerId = 0;var touch={identifier:0,target:null,screenX:e.screenX,screenY:e.screenY,clientX:e.clientX,clientY:e.clientY,pageX:e.pageX,pageY:e.pageY};this.mTouchingPointers = [touch];this.mDownTime = e.timeStamp;this.mEventTime = e.timeStamp;this.mXOffset = this.mYOffset = 0;this._axisValues.clear();this._axisValues.set(MotionEvent.AXIS_VSCROLL,-e.deltaY);this._axisValues.set(MotionEvent.AXIS_HSCROLL,-e.deltaX);}},{key:"recycle",value:function recycle(){}},{key:"getAction",value:function getAction(){return this.mAction;}},{key:"getActionMasked",value:function getActionMasked(){return this.mAction & MotionEvent.ACTION_MASK;}},{key:"getActionIndex",value:function getActionIndex(){return (this.mAction & MotionEvent.ACTION_POINTER_INDEX_MASK) >> MotionEvent.ACTION_POINTER_INDEX_SHIFT;}},{key:"getDownTime",value:function getDownTime(){return this.mDownTime;}},{key:"getEventTime",value:function getEventTime(){return this.mEventTime;}},{key:"getX",value:function getX(){var pointerIndex=arguments.length <= 0 || arguments[0] === undefined?0:arguments[0];var density=Resources.getDisplayMetrics().density;return this.mTouchingPointers[pointerIndex].clientX * density + this.mXOffset;}},{key:"getY",value:function getY(){var pointerIndex=arguments.length <= 0 || arguments[0] === undefined?0:arguments[0];var density=Resources.getDisplayMetrics().density;return this.mTouchingPointers[pointerIndex].clientY * density + this.mYOffset;}},{key:"getPointerCount",value:function getPointerCount(){return this.mTouchingPointers.length;}},{key:"getPointerId",value:function getPointerId(pointerIndex){return this.mTouchingPointers[pointerIndex].identifier;}},{key:"findPointerIndex",value:function findPointerIndex(pointerId){for(var i=0,_length3=this.mTouchingPointers.length;i < _length3;i++) {if(this.mTouchingPointers[i].identifier === pointerId){return i;}}return -1;}},{key:"getRawX",value:function getRawX(){var density=Resources.getDisplayMetrics().density;return this.mTouchingPointers[0].clientX * density;}},{key:"getRawY",value:function getRawY(){var density=Resources.getDisplayMetrics().density;return this.mTouchingPointers[0].clientY * density;}},{key:"getHistorySize",value:function getHistorySize(){var id=arguments.length <= 0 || arguments[0] === undefined?this.mActivePointerId:arguments[0];var moveHistory=MotionEvent.TouchMoveRecord.get(id);return moveHistory?moveHistory.length:0;}},{key:"getHistoricalX",value:function getHistoricalX(pointerIndex,pos){var density=Resources.getDisplayMetrics().density;var moveHistory=MotionEvent.TouchMoveRecord.get(this.mTouchingPointers[pointerIndex].identifier);return moveHistory[pos].clientX * density + this.mXOffset;}},{key:"getHistoricalY",value:function getHistoricalY(pointerIndex,pos){var density=Resources.getDisplayMetrics().density;var moveHistory=MotionEvent.TouchMoveRecord.get(this.mTouchingPointers[pointerIndex].identifier);return moveHistory[pos].clientY * density + this.mYOffset;}},{key:"getHistoricalEventTime",value:function getHistoricalEventTime(){var pos=undefined,activePointerId=undefined;for(var _len15=arguments.length,args=Array(_len15),_key15=0;_key15 < _len15;_key15++) {args[_key15] = arguments[_key15];}if(args.length === 1){pos = args[0];activePointerId = this.mActivePointerId;}else {pos = args[1];activePointerId = this.getPointerId(args[0]);}var moveHistory=MotionEvent.TouchMoveRecord.get(activePointerId);return moveHistory[pos].mEventTime;}},{key:"getEdgeFlags",value:function getEdgeFlags(){return this.mEdgeFlags;}},{key:"setEdgeFlags",value:function setEdgeFlags(flags){this.mEdgeFlags = flags;}},{key:"setAction",value:function setAction(action){this.mAction = action;}},{key:"isTouchEvent",value:function isTouchEvent(){var action=this.getActionMasked();switch(action){case MotionEvent.ACTION_DOWN:case MotionEvent.ACTION_UP:case MotionEvent.ACTION_MOVE:case MotionEvent.ACTION_CANCEL:case MotionEvent.ACTION_OUTSIDE:case MotionEvent.ACTION_POINTER_DOWN:case MotionEvent.ACTION_POINTER_UP:return true;}return false;}},{key:"isPointerEvent",value:function isPointerEvent(){return true;}},{key:"offsetLocation",value:function offsetLocation(deltaX,deltaY){this.mXOffset += deltaX;this.mYOffset += deltaY;}},{key:"setLocation",value:function setLocation(x,y){this.mXOffset = x - this.getRawX();this.mYOffset = y - this.getRawY();}},{key:"getPointerIdBits",value:function getPointerIdBits(){var idBits=0;var pointerCount=this.getPointerCount();for(var i=0;i < pointerCount;i++) {idBits |= 1 << this.getPointerId(i);}return idBits;}},{key:"split",value:function split(idBits){var ev=MotionEvent.obtain(this);var oldPointerCount=this.getPointerCount();var oldAction=this.getAction();var oldActionMasked=oldAction & MotionEvent.ACTION_MASK;var newPointerIds=[];for(var i=0;i < oldPointerCount;i++) {var pointerId=this.getPointerId(i);var idBit=1 << pointerId;if((idBit & idBits) != 0){newPointerIds.push(pointerId);}}var newActionPointerIndex=newPointerIds.indexOf(this.mActivePointerId);var newPointerCount=newPointerIds.length;var newAction=undefined;if(oldActionMasked == MotionEvent.ACTION_POINTER_DOWN || oldActionMasked == MotionEvent.ACTION_POINTER_UP){if(newActionPointerIndex < 0){newAction = MotionEvent.ACTION_MOVE;}else if(newPointerCount == 1){newAction = oldActionMasked == MotionEvent.ACTION_POINTER_DOWN?MotionEvent.ACTION_DOWN:MotionEvent.ACTION_UP;}else {newAction = oldActionMasked | newActionPointerIndex << MotionEvent.ACTION_POINTER_INDEX_SHIFT;}}else {newAction = oldAction;}ev.mAction = newAction;ev.mTouchingPointers = this.mTouchingPointers.filter(function(item){return newPointerIds.indexOf(item.identifier) >= 0;});return ev;}},{key:"getAxisValue",value:function getAxisValue(axis){var value=this._axisValues.get(axis);return value?value:0;}},{key:"toString",value:function toString(){return "MotionEvent{action=" + this.getAction() + " x=" + this.getX() + " y=" + this.getY() + "}";}}],[{key:"obtainWithTouchEvent",value:function obtainWithTouchEvent(e,action){var event=new MotionEvent();event.initWithTouch(e,action);return event;}},{key:"obtain",value:function obtain(event){var newEv=new MotionEvent();Object.assign(newEv,event);return newEv;}},{key:"obtainWithAction",value:function obtainWithAction(downTime,eventTime,action,x,y){var metaState=arguments.length <= 5 || arguments[5] === undefined?0:arguments[5];var newEv=new MotionEvent();newEv.mAction = action;newEv.mDownTime = downTime;newEv.mEventTime = eventTime;var touch={identifier:0,target:null,screenX:x,screenY:y,clientX:x,clientY:y,pageX:x,pageY:y};newEv.mTouchingPointers = [touch];return newEv;}}]);return MotionEvent;})();MotionEvent.ACTION_MASK = 0xff;MotionEvent.ACTION_DOWN = 0;MotionEvent.ACTION_UP = 1;MotionEvent.ACTION_MOVE = 2;MotionEvent.ACTION_CANCEL = 3;MotionEvent.ACTION_OUTSIDE = 4;MotionEvent.ACTION_POINTER_DOWN = 5;MotionEvent.ACTION_POINTER_UP = 6;MotionEvent.ACTION_HOVER_MOVE = 7;MotionEvent.ACTION_SCROLL = 8;MotionEvent.ACTION_HOVER_ENTER = 9;MotionEvent.ACTION_HOVER_EXIT = 10;MotionEvent.EDGE_TOP = 0x00000001;MotionEvent.EDGE_BOTTOM = 0x00000002;MotionEvent.EDGE_LEFT = 0x00000004;MotionEvent.EDGE_RIGHT = 0x00000008;MotionEvent.ACTION_POINTER_INDEX_MASK = 0xff00;MotionEvent.ACTION_POINTER_INDEX_SHIFT = 8;MotionEvent.AXIS_VSCROLL = 9;MotionEvent.AXIS_HSCROLL = 10;MotionEvent.HistoryMaxSize = 10;MotionEvent.TouchMoveRecord = new Map();MotionEvent.IdIndexCache = new Map();view.MotionEvent = MotionEvent;})(view = android.view || (android.view = {}));})(android || (android = {})); /**
 * Created by linfaxin on 15/10/16.
 */ ///<reference path="View.ts"/>
///<reference path="../graphics/Rect.ts"/>
///<reference path="ViewConfiguration.ts"/>
var android;(function(android){var view;(function(view){var Rect=android.graphics.Rect;var TouchDelegate=(function(){function TouchDelegate(bounds,delegateView){_classCallCheck(this,TouchDelegate);this.mDelegateTargeted = false;this.mSlop = 0;this.mBounds = bounds;this.mSlop = view.ViewConfiguration.get().getScaledTouchSlop();this.mSlopBounds = new Rect(bounds);this.mSlopBounds.inset(-this.mSlop,-this.mSlop);this.mDelegateView = delegateView;}_createClass(TouchDelegate,[{key:"onTouchEvent",value:function onTouchEvent(event){var x=event.getX();var y=event.getY();var sendToDelegate=false;var hit=true;var handled=false;switch(event.getAction()){case view.MotionEvent.ACTION_DOWN:var bounds=this.mBounds;if(bounds.contains(x,y)){this.mDelegateTargeted = true;sendToDelegate = true;}break;case view.MotionEvent.ACTION_UP:case view.MotionEvent.ACTION_MOVE:sendToDelegate = this.mDelegateTargeted;if(sendToDelegate){var slopBounds=this.mSlopBounds;if(!slopBounds.contains(x,y)){hit = false;}}break;case view.MotionEvent.ACTION_CANCEL:sendToDelegate = this.mDelegateTargeted;this.mDelegateTargeted = false;break;}if(sendToDelegate){var delegateView=this.mDelegateView;if(hit){event.setLocation(delegateView.getWidth() / 2,delegateView.getHeight() / 2);}else {var slop=this.mSlop;event.setLocation(-(slop * 2),-(slop * 2));}handled = delegateView.dispatchTouchEvent(event);}return handled;}}]);return TouchDelegate;})();view.TouchDelegate = TouchDelegate;})(view = android.view || (android.view = {}));})(android || (android = {}));var android;(function(android){var os;(function(os){var SystemClock=(function(){function SystemClock(){_classCallCheck(this,SystemClock);}_createClass(SystemClock,null,[{key:"uptimeMillis",value:function uptimeMillis(){return new Date().getTime();}}]);return SystemClock;})();os.SystemClock = SystemClock;})(os = android.os || (android.os = {}));})(android || (android = {})); /**
 * Created by linfaxin on 15/10/5.
 */ ///<reference path="Handler.ts"/>
///<reference path="../../java/lang/Runnable.ts"/>
///<reference path="../../java/lang/StringBuilder.ts"/>
///<reference path="../util/Pools.ts"/>
///<reference path="SystemClock.ts"/>
var android;(function(android){var os;(function(os){var StringBuilder=java.lang.StringBuilder;var Pools=android.util.Pools;var Message=(function(){function Message(){_classCallCheck(this,Message);this.what = 0;this.arg1 = 0;this.arg2 = 0;this.when = 0;}_createClass(Message,[{key:"recycle",value:function recycle(){this.clearForRecycle();Message.sPool.release(this);}},{key:"copyFrom",value:function copyFrom(o){this.what = o.what;this.arg1 = o.arg1;this.arg2 = o.arg2;this.obj = o.obj;}},{key:"sendToTarget",value:function sendToTarget(){this.target.sendMessage(this);}},{key:"clearForRecycle",value:function clearForRecycle(){this.what = 0;this.arg1 = 0;this.arg2 = 0;this.obj = null;this.when = 0;this.target = null;this.callback = null;}},{key:"toString",value:function toString(){var now=arguments.length <= 0 || arguments[0] === undefined?os.SystemClock.uptimeMillis():arguments[0];var b=new StringBuilder();b.append("{ what=");b.append(this.what);b.append(" when=");b.append(this.when - now).append("ms");if(this.arg1 != 0){b.append(" arg1=");b.append(this.arg1);}if(this.arg2 != 0){b.append(" arg2=");b.append(this.arg2);}if(this.obj != null){b.append(" obj=");b.append(this.obj);}b.append(" }");return b.toString();}}],[{key:"obtain",value:function obtain(){var m=Message.sPool.acquire();m = m || new Message();for(var _len16=arguments.length,args=Array(_len16),_key16=0;_key16 < _len16;_key16++) {args[_key16] = arguments[_key16];}if(args.length === 1 && args[0] instanceof Message){var orig=args[0];var _ref4=[orig.target,orig.what,orig.arg1,orig.arg2,orig.obj,orig.callback];m.target = _ref4[0];m.what = _ref4[1];m.arg1 = _ref4[2];m.arg2 = _ref4[3];m.obj = _ref4[4];m.callback = _ref4[5];}else if(args.length === 2){var _args$011=args[0];m.what = _args$011 === undefined?0:_args$011;m.callback = args[1];}else if(args.length === 3){var _args$012=args[0];m.what = _args$012 === undefined?0:_args$012;var _args$111=args[1];m.arg1 = _args$111 === undefined?0:_args$111;m.obj = args[2];}else {m.target = args[0];var _args$112=args[1];m.what = _args$112 === undefined?0:_args$112;var _args$210=args[2];m.arg1 = _args$210 === undefined?0:_args$210;var _args$310=args[3];m.arg2 = _args$310 === undefined?0:_args$310;m.obj = args[4];m.callback = args[5];}return m;}}]);return Message;})();Message.sPool = new Pools.SynchronizedPool(10);os.Message = Message;})(os = android.os || (android.os = {}));})(android || (android = {})); /**
 * Created by linfaxin on 15/10/5.
 */ ///<reference path="Message.ts"/>
///<reference path="Handler.ts"/>
///<reference path="../../java/lang/Runnable.ts"/>
var android;(function(android){var os;(function(os){var requestAnimationFrame=window["requestAnimationFrame"] || window["webkitRequestAnimationFrame"] || window["mozRequestAnimationFrame"] || window["oRequestAnimationFrame"] || window["msRequestAnimationFrame"];if(!requestAnimationFrame){requestAnimationFrame = function(callback){return window.setTimeout(callback,1000 / 60);};}var MessageQueue=(function(){function MessageQueue(){_classCallCheck(this,MessageQueue);}_createClass(MessageQueue,null,[{key:"getMessages",value:function getMessages(h,args,object){var msgs=[];if(h == null){return msgs;}if(typeof args === "number"){var what=args;var _iteratorNormalCompletion7=true;var _didIteratorError7=false;var _iteratorError7=undefined;try{for(var _iterator7=MessageQueue.messages[Symbol.iterator](),_step7;!(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done);_iteratorNormalCompletion7 = true) {var p=_step7.value;if(p.target == h && p.what == what && (object == null || p.obj == object)){msgs.push(p);}}}catch(err) {_didIteratorError7 = true;_iteratorError7 = err;}finally {try{if(!_iteratorNormalCompletion7 && _iterator7["return"]){_iterator7["return"]();}}finally {if(_didIteratorError7){throw _iteratorError7;}}}}else {var r=args;var _iteratorNormalCompletion8=true;var _didIteratorError8=false;var _iteratorError8=undefined;try{for(var _iterator8=MessageQueue.messages[Symbol.iterator](),_step8;!(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done);_iteratorNormalCompletion8 = true) {var p=_step8.value;if(p.target == h && p.callback == r && (object == null || p.obj == object)){msgs.push(p);}}}catch(err) {_didIteratorError8 = true;_iteratorError8 = err;}finally {try{if(!_iteratorNormalCompletion8 && _iterator8["return"]){_iterator8["return"]();}}finally {if(_didIteratorError8){throw _iteratorError8;}}}}return msgs;}},{key:"hasMessages",value:function hasMessages(h,args,object){return MessageQueue.getMessages(h,args,object).length > 0;}},{key:"enqueueMessage",value:function enqueueMessage(msg,when){if(msg.target == null){throw new Error("Message must have a target.");}msg.when = when;MessageQueue.messages.add(msg);MessageQueue.checkLoop();return true;}},{key:"recycleMessage",value:function recycleMessage(handler,message){message.recycle();MessageQueue.messages["delete"](message);}},{key:"removeMessages",value:function removeMessages(h,args,object){var p=MessageQueue.getMessages(h,args,object);if(p && p.length > 0){p.forEach(function(item){return MessageQueue.recycleMessage(h,item);});}}},{key:"removeCallbacksAndMessages",value:function removeCallbacksAndMessages(h,object){if(h == null){return;}var _iteratorNormalCompletion9=true;var _didIteratorError9=false;var _iteratorError9=undefined;try{for(var _iterator9=MessageQueue.messages[Symbol.iterator](),_step9;!(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done);_iteratorNormalCompletion9 = true) {var p=_step9.value;if(p != null && p.target == h && (object == null || p.obj == object)){MessageQueue.recycleMessage(h,p);}}}catch(err) {_didIteratorError9 = true;_iteratorError9 = err;}finally {try{if(!_iteratorNormalCompletion9 && _iterator9["return"]){_iterator9["return"]();}}finally {if(_didIteratorError9){throw _iteratorError9;}}}}},{key:"checkLoop",value:function checkLoop(){if(!MessageQueue._loopActive){MessageQueue._loopActive = true;requestAnimationFrame(MessageQueue.loop);}}},{key:"loop",value:function loop(){var dispatchMessages=[];var now=os.SystemClock.uptimeMillis();var _iteratorNormalCompletion10=true;var _didIteratorError10=false;var _iteratorError10=undefined;try{for(var _iterator10=MessageQueue.messages[Symbol.iterator](),_step10;!(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done);_iteratorNormalCompletion10 = true) {var msg=_step10.value;if(msg.when <= now)dispatchMessages.push(msg);}}catch(err) {_didIteratorError10 = true;_iteratorError10 = err;}finally {try{if(!_iteratorNormalCompletion10 && _iterator10["return"]){_iterator10["return"]();}}finally {if(_didIteratorError10){throw _iteratorError10;}}}var _iteratorNormalCompletion11=true;var _didIteratorError11=false;var _iteratorError11=undefined;try{for(var _iterator11=dispatchMessages[Symbol.iterator](),_step11;!(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done);_iteratorNormalCompletion11 = true) {var msg=_step11.value;if(MessageQueue.messages.has(msg)){MessageQueue.messages["delete"](msg);msg.target.dispatchMessage(msg);MessageQueue.recycleMessage(msg.target,msg);}}}catch(err) {_didIteratorError11 = true;_iteratorError11 = err;}finally {try{if(!_iteratorNormalCompletion11 && _iterator11["return"]){_iterator11["return"]();}}finally {if(_didIteratorError11){throw _iteratorError11;}}}if(MessageQueue.messages.size > 0)requestAnimationFrame(MessageQueue.loop);else MessageQueue._loopActive = false;}}]);return MessageQueue;})();MessageQueue.messages = new Set();MessageQueue._loopActive = false;os.MessageQueue = MessageQueue;})(os = android.os || (android.os = {}));})(android || (android = {})); /**
 * Created by linfaxin on 15/10/5.
 */ ///<reference path="Message.ts"/>
///<reference path="MessageQueue.ts"/>
///<reference path="../../java/lang/Runnable.ts"/>
///<reference path="SystemClock.ts"/>
var android;(function(android){var os;(function(os){var Handler=(function(){function Handler(mCallback){_classCallCheck(this,Handler);this.mCallback = mCallback;}_createClass(Handler,[{key:"handleMessage",value:function handleMessage(msg){}},{key:"dispatchMessage",value:function dispatchMessage(msg){if(msg.callback != null){msg.callback.run.call(msg.callback);}else {if(this.mCallback != null){if(this.mCallback.handleMessage(msg)){return;}}this.handleMessage(msg);}}},{key:"obtainMessage",value:function obtainMessage(){for(var _len17=arguments.length,args=Array(_len17),_key17=0;_key17 < _len17;_key17++) {args[_key17] = arguments[_key17];}if(args.length === 2){var what=args[0];var obj=args[1];return os.Message.obtain(this,what,obj);}else {var what=args[0];var arg1=args[1];var arg2=args[2];var obj=args[3];return os.Message.obtain(this,what,arg1,arg2,obj);}}},{key:"post",value:function post(r){return this.sendMessageDelayed(Handler.getPostMessage(r),0);}},{key:"postAtTime",value:function postAtTime(){for(var _len18=arguments.length,args=Array(_len18),_key18=0;_key18 < _len18;_key18++) {args[_key18] = arguments[_key18];}if(args.length === 2){var r=args[0];var uptimeMillis=args[1];return this.sendMessageAtTime(Handler.getPostMessage(r),uptimeMillis);}else {var r=args[0];var token=args[1];var uptimeMillis=args[2];return this.sendMessageAtTime(Handler.getPostMessage(r,token),uptimeMillis);}}},{key:"postDelayed",value:function postDelayed(r,delayMillis){return this.sendMessageDelayed(Handler.getPostMessage(r),delayMillis);}},{key:"postAtFrontOfQueue",value:function postAtFrontOfQueue(r){return this.post(r);}},{key:"removeCallbacks",value:function removeCallbacks(r,token){os.MessageQueue.removeMessages(this,r,token);}},{key:"sendMessage",value:function sendMessage(msg){return this.sendMessageDelayed(msg,0);}},{key:"sendEmptyMessage",value:function sendEmptyMessage(what){return this.sendEmptyMessageDelayed(what,0);}},{key:"sendEmptyMessageDelayed",value:function sendEmptyMessageDelayed(what,delayMillis){var msg=os.Message.obtain();msg.what = what;return this.sendMessageDelayed(msg,delayMillis);}},{key:"sendEmptyMessageAtTime",value:function sendEmptyMessageAtTime(what,uptimeMillis){var msg=os.Message.obtain();msg.what = what;return this.sendMessageAtTime(msg,uptimeMillis);}},{key:"sendMessageDelayed",value:function sendMessageDelayed(msg,delayMillis){if(delayMillis < 0){delayMillis = 0;}return this.sendMessageAtTime(msg,os.SystemClock.uptimeMillis() + delayMillis);}},{key:"sendMessageAtTime",value:function sendMessageAtTime(msg,uptimeMillis){msg.target = this;return os.MessageQueue.enqueueMessage(msg,uptimeMillis);}},{key:"sendMessageAtFrontOfQueue",value:function sendMessageAtFrontOfQueue(msg){return this.sendMessage(msg);}},{key:"removeMessages",value:function removeMessages(what,object){os.MessageQueue.removeMessages(this,what,object);}},{key:"removeCallbacksAndMessages",value:function removeCallbacksAndMessages(token){os.MessageQueue.removeCallbacksAndMessages(this,token);}},{key:"hasMessages",value:function hasMessages(what,object){return os.MessageQueue.hasMessages(this,what,object);}}],[{key:"getPostMessage",value:function getPostMessage(r,token){var m=os.Message.obtain();m.obj = token;m.callback = r;return m;}}]);return Handler;})();os.Handler = Handler;})(os = android.os || (android.os = {}));})(android || (android = {})); /**
 * Created by linfaxin on 15/10/29.
 */ ///<reference path="../../util/SparseArray.ts"/>
///<reference path="../../../java/lang/ref/WeakReference.ts"/>
///<reference path="../../util/StateSet.ts"/>
var android;(function(android){var content;(function(content){var res;(function(res){var SparseArray=android.util.SparseArray;var StateSet=android.util.StateSet;var WeakReference=java.lang.ref.WeakReference;var ColorStateList=(function(){function ColorStateList(states,colors){_classCallCheck(this,ColorStateList);this.mDefaultColor = 0xffff0000;this.mStateSpecs = states;this.mColors = colors;if(states.length > 0){this.mDefaultColor = colors[0];for(var i=0;i < states.length;i++) {if(states[i].length == 0){this.mDefaultColor = colors[i];}}}}_createClass(ColorStateList,[{key:"withAlpha",value:function withAlpha(alpha){var colors=new Array(this.mColors.length);var len=colors.length;for(var i=0;i < len;i++) {colors[i] = this.mColors[i] & 0xFFFFFF | alpha << 24;}return new ColorStateList(this.mStateSpecs,colors);}},{key:"isStateful",value:function isStateful(){return this.mStateSpecs.length > 1;}},{key:"getColorForState",value:function getColorForState(stateSet,defaultColor){var setLength=this.mStateSpecs.length;for(var i=0;i < setLength;i++) {var stateSpec=this.mStateSpecs[i];if(StateSet.stateSetMatches(stateSpec,stateSet)){return this.mColors[i];}}return defaultColor;}},{key:"getDefaultColor",value:function getDefaultColor(){return this.mDefaultColor;}},{key:"toString",value:function toString(){return "ColorStateList{" + "mStateSpecs=" + JSON.stringify(this.mStateSpecs) + "mColors=" + JSON.stringify(this.mColors) + "mDefaultColor=" + this.mDefaultColor + '}';}}],[{key:"valueOf",value:function valueOf(color){var ref=ColorStateList.sCache.get(color);var csl=ref != null?ref.get():null;if(csl != null){return csl;}csl = new ColorStateList(ColorStateList.EMPTY,[color]);ColorStateList.sCache.put(color,new WeakReference(csl));return csl;}}]);return ColorStateList;})();ColorStateList.EMPTY = [[]];ColorStateList.sCache = new SparseArray();res.ColorStateList = ColorStateList;})(res = content.res || (content.res = {}));})(content = android.content || (android.content = {}));})(android || (android = {})); /**
 * Created by linfaxin on 15/10/27.
 */ ///<reference path="DisplayMetrics.ts"/>
///<reference path="../content/res/Resources.ts"/>
var android;(function(android){var util;(function(util){var Resources=android.content.res.Resources;var TypedValue=(function(){function TypedValue(){_classCallCheck(this,TypedValue);}_createClass(TypedValue,null,[{key:"initUnit",value:function initUnit(){this.initUnit = null;var temp=document.createElement('div');document.body.appendChild(temp);temp.style.height = 100 + TypedValue.COMPLEX_UNIT_PT;TypedValue.UNIT_SCALE_PT = temp.offsetHeight / 100;temp.style.height = 1 + TypedValue.COMPLEX_UNIT_IN;TypedValue.UNIT_SCALE_IN = temp.offsetHeight;temp.style.height = 100 + TypedValue.COMPLEX_UNIT_MM;TypedValue.UNIT_SCALE_MM = temp.offsetHeight / 100;temp.style.height = 10 + TypedValue.COMPLEX_UNIT_EM;TypedValue.UNIT_SCALE_EM = temp.offsetHeight / 10;temp.style.height = 10 + TypedValue.COMPLEX_UNIT_REM;TypedValue.UNIT_SCALE_REM = temp.offsetHeight / 10;document.body.removeChild(temp);}},{key:"complexToDimensionPixelSize",value:function complexToDimensionPixelSize(valueWithUnit){var baseValue=arguments.length <= 1 || arguments[1] === undefined?0:arguments[1];var metrics=arguments.length <= 2 || arguments[2] === undefined?Resources.getDisplayMetrics():arguments[2];if(this.initUnit)this.initUnit();if(valueWithUnit === undefined || valueWithUnit === null){throw Error('complexToDimensionPixelSize error: valueWithUnit is ' + valueWithUnit);}if(valueWithUnit === '' + Number.parseInt(valueWithUnit))return Number.parseInt(valueWithUnit);if(typeof valueWithUnit !== 'string')valueWithUnit = valueWithUnit + "";var scale=1;if(valueWithUnit.endsWith(TypedValue.COMPLEX_UNIT_PX)){valueWithUnit = valueWithUnit.replace(TypedValue.COMPLEX_UNIT_PX,"");}else if(valueWithUnit.endsWith(TypedValue.COMPLEX_UNIT_DP)){valueWithUnit = valueWithUnit.replace(TypedValue.COMPLEX_UNIT_DP,"");scale = metrics.density;}else if(valueWithUnit.endsWith(TypedValue.COMPLEX_UNIT_DIP)){valueWithUnit = valueWithUnit.replace(TypedValue.COMPLEX_UNIT_DIP,"");scale = metrics.density;}else if(valueWithUnit.endsWith(TypedValue.COMPLEX_UNIT_SP)){valueWithUnit = valueWithUnit.replace(TypedValue.COMPLEX_UNIT_SP,"");scale = metrics.density * TypedValue.UNIT_SCALE_SP;}else if(valueWithUnit.endsWith(TypedValue.COMPLEX_UNIT_PT)){valueWithUnit = valueWithUnit.replace(TypedValue.COMPLEX_UNIT_PT,"");scale = TypedValue.UNIT_SCALE_PT;}else if(valueWithUnit.endsWith(TypedValue.COMPLEX_UNIT_IN)){valueWithUnit = valueWithUnit.replace(TypedValue.COMPLEX_UNIT_IN,"");scale = TypedValue.UNIT_SCALE_IN;}else if(valueWithUnit.endsWith(TypedValue.COMPLEX_UNIT_MM)){valueWithUnit = valueWithUnit.replace(TypedValue.COMPLEX_UNIT_MM,"");scale = TypedValue.UNIT_SCALE_MM;}else if(valueWithUnit.endsWith(TypedValue.COMPLEX_UNIT_EM)){valueWithUnit = valueWithUnit.replace(TypedValue.COMPLEX_UNIT_EM,"");scale = TypedValue.UNIT_SCALE_EM;}else if(valueWithUnit.endsWith(TypedValue.COMPLEX_UNIT_REM)){valueWithUnit = valueWithUnit.replace(TypedValue.COMPLEX_UNIT_REM,"");scale = TypedValue.UNIT_SCALE_REM;}else if(valueWithUnit.endsWith(TypedValue.COMPLEX_UNIT_VH)){valueWithUnit = valueWithUnit.replace(TypedValue.COMPLEX_UNIT_VH,"");scale = metrics.heightPixels / 100;}else if(valueWithUnit.endsWith(TypedValue.COMPLEX_UNIT_VW)){valueWithUnit = valueWithUnit.replace(TypedValue.COMPLEX_UNIT_VW,"");scale = metrics.widthPixels / 100;}else if(valueWithUnit.endsWith(TypedValue.COMPLEX_UNIT_FRACTION)){valueWithUnit = valueWithUnit.replace(TypedValue.COMPLEX_UNIT_FRACTION,"");scale = Number.parseInt(valueWithUnit) / 100;if(Number.isNaN(scale))return 0;valueWithUnit = baseValue;}var value=Number.parseInt(valueWithUnit);if(Number.isNaN(value))throw Error('complexToDimensionPixelSize error: ' + valueWithUnit);return value * scale;}}]);return TypedValue;})();TypedValue.COMPLEX_UNIT_PX = 'px';TypedValue.COMPLEX_UNIT_DP = 'dp';TypedValue.COMPLEX_UNIT_DIP = 'dip';TypedValue.COMPLEX_UNIT_SP = 'sp';TypedValue.COMPLEX_UNIT_PT = 'pt';TypedValue.COMPLEX_UNIT_IN = 'in';TypedValue.COMPLEX_UNIT_MM = 'mm';TypedValue.COMPLEX_UNIT_EM = 'em';TypedValue.COMPLEX_UNIT_REM = 'rem';TypedValue.COMPLEX_UNIT_VH = 'vh';TypedValue.COMPLEX_UNIT_VW = 'vw';TypedValue.COMPLEX_UNIT_FRACTION = '%';TypedValue.UNIT_SCALE_SP = 1;util.TypedValue = TypedValue;})(util = android.util || (android.util = {}));})(android || (android = {})); /**
 * Created by linfaxin on 15/10/9.
 */ ///<reference path="../graphics/Rect.ts"/>
var android;(function(android){var view;(function(view){var Gravity=(function(){function Gravity(){_classCallCheck(this,Gravity);}_createClass(Gravity,null,[{key:"apply",value:function apply(gravity,w,h,container,outRect){var xAdj=0,yAdj=0;switch(gravity & (Gravity.AXIS_PULL_BEFORE | Gravity.AXIS_PULL_AFTER) << Gravity.AXIS_X_SHIFT){case 0:outRect.left = container.left + (container.right - container.left - w) / 2 + xAdj;outRect.right = outRect.left + w;if((gravity & Gravity.AXIS_CLIP << Gravity.AXIS_X_SHIFT) == Gravity.AXIS_CLIP << Gravity.AXIS_X_SHIFT){if(outRect.left < container.left){outRect.left = container.left;}if(outRect.right > container.right){outRect.right = container.right;}}break;case Gravity.AXIS_PULL_BEFORE << Gravity.AXIS_X_SHIFT:outRect.left = container.left + xAdj;outRect.right = outRect.left + w;if((gravity & Gravity.AXIS_CLIP << Gravity.AXIS_X_SHIFT) == Gravity.AXIS_CLIP << Gravity.AXIS_X_SHIFT){if(outRect.right > container.right){outRect.right = container.right;}}break;case Gravity.AXIS_PULL_AFTER << Gravity.AXIS_X_SHIFT:outRect.right = container.right - xAdj;outRect.left = outRect.right - w;if((gravity & Gravity.AXIS_CLIP << Gravity.AXIS_X_SHIFT) == Gravity.AXIS_CLIP << Gravity.AXIS_X_SHIFT){if(outRect.left < container.left){outRect.left = container.left;}}break;default:outRect.left = container.left + xAdj;outRect.right = container.right + xAdj;break;}switch(gravity & (Gravity.AXIS_PULL_BEFORE | Gravity.AXIS_PULL_AFTER) << Gravity.AXIS_Y_SHIFT){case 0:outRect.top = container.top + (container.bottom - container.top - h) / 2 + yAdj;outRect.bottom = outRect.top + h;if((gravity & Gravity.AXIS_CLIP << Gravity.AXIS_Y_SHIFT) == Gravity.AXIS_CLIP << Gravity.AXIS_Y_SHIFT){if(outRect.top < container.top){outRect.top = container.top;}if(outRect.bottom > container.bottom){outRect.bottom = container.bottom;}}break;case Gravity.AXIS_PULL_BEFORE << Gravity.AXIS_Y_SHIFT:outRect.top = container.top + yAdj;outRect.bottom = outRect.top + h;if((gravity & Gravity.AXIS_CLIP << Gravity.AXIS_Y_SHIFT) == Gravity.AXIS_CLIP << Gravity.AXIS_Y_SHIFT){if(outRect.bottom > container.bottom){outRect.bottom = container.bottom;}}break;case Gravity.AXIS_PULL_AFTER << Gravity.AXIS_Y_SHIFT:outRect.bottom = container.bottom - yAdj;outRect.top = outRect.bottom - h;if((gravity & Gravity.AXIS_CLIP << Gravity.AXIS_Y_SHIFT) == Gravity.AXIS_CLIP << Gravity.AXIS_Y_SHIFT){if(outRect.top < container.top){outRect.top = container.top;}}break;default:outRect.top = container.top + yAdj;outRect.bottom = container.bottom + yAdj;break;}}}]);return Gravity;})();Gravity.NO_GRAVITY = 0x0000;Gravity.AXIS_SPECIFIED = 0x0001;Gravity.AXIS_PULL_BEFORE = 0x0002;Gravity.AXIS_PULL_AFTER = 0x0004;Gravity.AXIS_CLIP = 0x0008;Gravity.AXIS_X_SHIFT = 0;Gravity.AXIS_Y_SHIFT = 4;Gravity.TOP = (Gravity.AXIS_PULL_BEFORE | Gravity.AXIS_SPECIFIED) << Gravity.AXIS_Y_SHIFT;Gravity.BOTTOM = (Gravity.AXIS_PULL_AFTER | Gravity.AXIS_SPECIFIED) << Gravity.AXIS_Y_SHIFT;Gravity.LEFT = (Gravity.AXIS_PULL_BEFORE | Gravity.AXIS_SPECIFIED) << Gravity.AXIS_X_SHIFT;Gravity.RIGHT = (Gravity.AXIS_PULL_AFTER | Gravity.AXIS_SPECIFIED) << Gravity.AXIS_X_SHIFT;Gravity.CENTER_VERTICAL = Gravity.AXIS_SPECIFIED << Gravity.AXIS_Y_SHIFT;Gravity.FILL_VERTICAL = Gravity.TOP | Gravity.BOTTOM;Gravity.CENTER_HORIZONTAL = Gravity.AXIS_SPECIFIED << Gravity.AXIS_X_SHIFT;Gravity.FILL_HORIZONTAL = Gravity.LEFT | Gravity.RIGHT;Gravity.CENTER = Gravity.CENTER_VERTICAL | Gravity.CENTER_HORIZONTAL;Gravity.FILL = Gravity.FILL_VERTICAL | Gravity.FILL_HORIZONTAL;Gravity.CLIP_VERTICAL = Gravity.AXIS_CLIP << Gravity.AXIS_Y_SHIFT;Gravity.CLIP_HORIZONTAL = Gravity.AXIS_CLIP << Gravity.AXIS_X_SHIFT;Gravity.HORIZONTAL_GRAVITY_MASK = (Gravity.AXIS_SPECIFIED | Gravity.AXIS_PULL_BEFORE | Gravity.AXIS_PULL_AFTER) << Gravity.AXIS_X_SHIFT;Gravity.VERTICAL_GRAVITY_MASK = (Gravity.AXIS_SPECIFIED | Gravity.AXIS_PULL_BEFORE | Gravity.AXIS_PULL_AFTER) << Gravity.AXIS_Y_SHIFT;Gravity.DISPLAY_CLIP_VERTICAL = 0x10000000;Gravity.DISPLAY_CLIP_HORIZONTAL = 0x01000000;view.Gravity = Gravity;})(view = android.view || (android.view = {}));})(android || (android = {})); /**
 * Created by linfaxin on 15/11/1.
 */ ///<reference path="Interpolator.ts"/>
var android;(function(android){var view;(function(view){var animation;(function(animation){var LinearInterpolator=(function(){function LinearInterpolator(){_classCallCheck(this,LinearInterpolator);}_createClass(LinearInterpolator,[{key:"getInterpolation",value:function getInterpolation(input){return input;}}]);return LinearInterpolator;})();animation.LinearInterpolator = LinearInterpolator;})(animation = view.animation || (view.animation = {}));})(view = android.view || (android.view = {}));})(android || (android = {})); /**
 * Created by linfaxin on 15/11/1.
 */ ///<reference path="../../os/SystemClock.ts"/>
var android;(function(android){var view;(function(view){var animation;(function(animation){var SystemClock=android.os.SystemClock;var AnimationUtils=(function(){function AnimationUtils(){_classCallCheck(this,AnimationUtils);}_createClass(AnimationUtils,null,[{key:"currentAnimationTimeMillis",value:function currentAnimationTimeMillis(){return SystemClock.uptimeMillis();}}]);return AnimationUtils;})();animation.AnimationUtils = AnimationUtils;})(animation = view.animation || (view.animation = {}));})(view = android.view || (android.view = {}));})(android || (android = {})); /**
 * Created by linfaxin on 15/11/3.
 */ ///<reference path="../../android/view/View.ts"/>
///<reference path="../../android/util/StateSet.ts"/>
var androidui;(function(androidui){var attr;(function(attr){var StateAttr=(function(){function StateAttr(state){_classCallCheck(this,StateAttr);this.attributes = new Map();this.stateSpec = state.sort();}_createClass(StateAttr,[{key:"setAttr",value:function setAttr(name,value){this.attributes.set(name,value);}},{key:"hasAttr",value:function hasAttr(name){return this.attributes.has(name);}},{key:"getAttrMap",value:function getAttrMap(){return this.attributes;}},{key:"putAll",value:function putAll(stateAttr){var _iteratorNormalCompletion12=true;var _didIteratorError12=false;var _iteratorError12=undefined;try{for(var _iterator12=stateAttr.attributes.entries()[Symbol.iterator](),_step12;!(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done);_iteratorNormalCompletion12 = true) {var _step12$value=_slicedToArray(_step12.value,2);var key=_step12$value[0];var value=_step12$value[1];this.attributes.set(key,value);}}catch(err) {_didIteratorError12 = true;_iteratorError12 = err;}finally {try{if(!_iteratorNormalCompletion12 && _iterator12["return"]){_iterator12["return"]();}}finally {if(_didIteratorError12){throw _iteratorError12;}}}}},{key:"isStateEquals",value:function isStateEquals(state){if(!state)return false;return this.stateSpec + '' === state.sort() + '';}},{key:"isStateMatch",value:function isStateMatch(state){return android.util.StateSet.stateSetMatches(this.stateSpec,state);}},{key:"mergeRemovedFrom",value:function mergeRemovedFrom(another){if(!another)return this.attributes;var removed=new Map(another.attributes);var _iteratorNormalCompletion13=true;var _didIteratorError13=false;var _iteratorError13=undefined;try{for(var _iterator13=this.attributes.keys()[Symbol.iterator](),_step13;!(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done);_iteratorNormalCompletion13 = true) {var key=_step13.value;removed["delete"](key);}}catch(err) {_didIteratorError13 = true;_iteratorError13 = err;}finally {try{if(!_iteratorNormalCompletion13 && _iterator13["return"]){_iterator13["return"]();}}finally {if(_didIteratorError13){throw _iteratorError13;}}}var merge=new Map(this.attributes);var _iteratorNormalCompletion14=true;var _didIteratorError14=false;var _iteratorError14=undefined;try{for(var _iterator14=removed.keys()[Symbol.iterator](),_step14;!(_iteratorNormalCompletion14 = (_step14 = _iterator14.next()).done);_iteratorNormalCompletion14 = true) {var key=_step14.value;merge.set(key,null);}}catch(err) {_didIteratorError14 = true;_iteratorError14 = err;}finally {try{if(!_iteratorNormalCompletion14 && _iterator14["return"]){_iterator14["return"]();}}finally {if(_didIteratorError14){throw _iteratorError14;}}}return merge;}}],[{key:"parseStateAttrName",value:function parseStateAttrName(stateDesc){if(stateDesc.startsWith('android:'))stateDesc = stateDesc.substring('android:'.length);if(stateDesc.startsWith('state_'))stateDesc = stateDesc.substring('state_'.length);var stateSet=new Set();var stateParts=stateDesc.split('&');var _iteratorNormalCompletion15=true;var _didIteratorError15=false;var _iteratorError15=undefined;try{for(var _iterator15=stateParts[Symbol.iterator](),_step15;!(_iteratorNormalCompletion15 = (_step15 = _iterator15.next()).done);_iteratorNormalCompletion15 = true) {var part=_step15.value;var sign=1;while(part.startsWith('!')) {sign *= -1;part = part.substring(1);}var stateValue=android.view.View['VIEW_STATE_' + part.toUpperCase()];if(stateValue !== undefined){stateSet.add(stateValue * sign);}}}catch(err) {_didIteratorError15 = true;_iteratorError15 = err;}finally {try{if(!_iteratorNormalCompletion15 && _iterator15["return"]){_iterator15["return"]();}}finally {if(_didIteratorError15){throw _iteratorError15;}}}return stateSet;}}]);return StateAttr;})();attr.StateAttr = StateAttr;})(attr = androidui.attr || (androidui.attr = {}));})(androidui || (androidui = {})); /**
 * Created by linfaxin on 15/11/3.
 */ ///<reference path="StateAttr.ts"/>
///<reference path="../../android/view/View.ts"/>
///<reference path="../../android/util/StateSet.ts"/>
var androidui;(function(androidui){var attr;(function(attr_1){var StateAttrList=(function(){function StateAttrList(ele,rootElement){_classCallCheck(this,StateAttrList);this.list = new Array(0);this.match_list = new Array(0);this.list.push(new attr_1.StateAttr([]));this._initStyleAttributes(ele,[],rootElement);}_createClass(StateAttrList,[{key:"_initStyleAttributes",value:function _initStyleAttributes(ele,inParseState,rootElement){var _this4=this;var attributes=Array.from(ele.attributes);attributes.forEach(function(attr){if(attr.name === 'style' || attr.name === 'android:style'){_this4._initStyleAttr(attr,ele,inParseState,rootElement);}});attributes.forEach(function(attr){if(attr.name === 'style' || attr.name === 'android:style'){return;}if(attr.name.startsWith('android:state_') || attr.name.startsWith('state_')){return;}_this4._initStyleAttr(attr,ele,inParseState,rootElement);});attributes.forEach(function(attr){if(attr.name.startsWith('android:state_') || attr.name.startsWith('state_')){_this4._initStyleAttr(attr,ele,inParseState,rootElement);}});this.list_reverse = this.list.concat().reverse();}},{key:"_initStyleAttr",value:function _initStyleAttr(attr,ele,inParseState,rootElement){var attrName=attr.name;if(!attrName.startsWith('android:'))return;attrName = attrName.substring('android:'.length);if(attrName === 'id')return;var attrValue=attr.value;if(attrName.startsWith('state_')){var newStateSet=attr_1.StateAttr.parseStateAttrName(attrName);inParseState = inParseState.concat(Array.from(newStateSet));inParseState = Array.from(new Set(inParseState)).sort();}var _stateAttr=this.optStateAttr(inParseState);if(attrName.startsWith('state_') || attrName === 'style'){if(attrValue.startsWith('@')){var reference=android.view.View.findReference(attrValue,ele,rootElement,false);if(reference)this._initStyleAttributes(reference,inParseState,rootElement);}else {var _iteratorNormalCompletion16=true;var _didIteratorError16=false;var _iteratorError16=undefined;try{for(var _iterator16=attrValue.split(';')[Symbol.iterator](),_step16;!(_iteratorNormalCompletion16 = (_step16 = _iterator16.next()).done);_iteratorNormalCompletion16 = true) {var part=_step16.value;var _part$split=part.split(':');var _part$split2=_slicedToArray(_part$split,2);var _name=_part$split2[0];var value=_part$split2[1];value = value?android.view.View.optReferenceString(value.trim(),ele,rootElement):'';if(_name)_stateAttr.setAttr(_name.trim().toLowerCase(),value);}}catch(err) {_didIteratorError16 = true;_iteratorError16 = err;}finally {try{if(!_iteratorNormalCompletion16 && _iterator16["return"]){_iterator16["return"]();}}finally {if(_didIteratorError16){throw _iteratorError16;}}}}}else {attrValue = android.view.View.optReferenceString(attrValue,ele,rootElement);_stateAttr.setAttr(attrName,attrValue);}}},{key:"getDefaultStateAttr",value:function getDefaultStateAttr(){return this.getStateAttr(StateAttrList.EmptyArray);}},{key:"getStateAttr",value:function getStateAttr(state){var _iteratorNormalCompletion17=true;var _didIteratorError17=false;var _iteratorError17=undefined;try{for(var _iterator17=this.list[Symbol.iterator](),_step17;!(_iteratorNormalCompletion17 = (_step17 = _iterator17.next()).done);_iteratorNormalCompletion17 = true) {var stateAttr=_step17.value;if(stateAttr.isStateEquals(state))return stateAttr;}}catch(err) {_didIteratorError17 = true;_iteratorError17 = err;}finally {try{if(!_iteratorNormalCompletion17 && _iterator17["return"]){_iterator17["return"]();}}finally {if(_didIteratorError17){throw _iteratorError17;}}}}},{key:"optStateAttr",value:function optStateAttr(state){var stateAttr=this.getStateAttr(state);if(!stateAttr){stateAttr = new attr_1.StateAttr(state);this.list.splice(0,0,stateAttr);}return stateAttr;}},{key:"getMatchedAttr",value:function getMatchedAttr(state){var _iteratorNormalCompletion18=true;var _didIteratorError18=false;var _iteratorError18=undefined;try{for(var _iterator18=this.match_list[Symbol.iterator](),_step18;!(_iteratorNormalCompletion18 = (_step18 = _iterator18.next()).done);_iteratorNormalCompletion18 = true) {var stateAttr=_step18.value;if(stateAttr.isStateEquals(state))return stateAttr;}}catch(err) {_didIteratorError18 = true;_iteratorError18 = err;}finally {try{if(!_iteratorNormalCompletion18 && _iterator18["return"]){_iterator18["return"]();}}finally {if(_didIteratorError18){throw _iteratorError18;}}}var matchedAttr=new attr_1.StateAttr(state);var _iteratorNormalCompletion19=true;var _didIteratorError19=false;var _iteratorError19=undefined;try{for(var _iterator19=this.list_reverse[Symbol.iterator](),_step19;!(_iteratorNormalCompletion19 = (_step19 = _iterator19.next()).done);_iteratorNormalCompletion19 = true) {var stateAttr=_step19.value;if(stateAttr.isStateMatch(state))matchedAttr.putAll(stateAttr);}}catch(err) {_didIteratorError19 = true;_iteratorError19 = err;}finally {try{if(!_iteratorNormalCompletion19 && _iterator19["return"]){_iterator19["return"]();}}finally {if(_didIteratorError19){throw _iteratorError19;}}}this.match_list.push(matchedAttr);return matchedAttr;}}]);return StateAttrList;})();StateAttrList.EmptyArray = [];attr_1.StateAttrList = StateAttrList;})(attr = androidui.attr || (androidui.attr = {}));})(androidui || (androidui = {})); /**
 * Created by linfaxin on 15/11/26.
 */ ///<reference path="../../android/view/View.ts"/>
///<reference path="../../android/view/Gravity.ts"/>
///<reference path="../../android/graphics/drawable/Drawable.ts"/>
///<reference path="../../android/graphics/drawable/ColorDrawable.ts"/>
///<reference path="../../android/content/res/ColorStateList.ts"/>
var androidui;(function(androidui){var attr;(function(attr){var Gravity=android.view.Gravity;var Drawable=android.graphics.drawable.Drawable;var ColorDrawable=android.graphics.drawable.ColorDrawable;var Color=android.graphics.Color;var ColorStateList=android.content.res.ColorStateList;var TypedValue=android.util.TypedValue;var AttrBinder=(function(){function AttrBinder(host){_classCallCheck(this,AttrBinder);this.attrChangeMap = new Map();this.attrStashMap = new Map();this.objectRefs = [];this.host = host;}_createClass(AttrBinder,[{key:"addAttr",value:function addAttr(attrName,onAttrChange,stashAttrValueWhenStateChange){if(!attrName)return;attrName = attrName.toLowerCase();if(onAttrChange)this.attrChangeMap.set(attrName,onAttrChange);if(stashAttrValueWhenStateChange)this.attrStashMap.set(attrName,stashAttrValueWhenStateChange);}},{key:"onAttrChange",value:function onAttrChange(attrName,attrValue,rootElement){this.rootElement = rootElement;if(!attrName)return;attrName = attrName.toLowerCase();var onAttrChangeCall=this.attrChangeMap.get(attrName);if(onAttrChangeCall)onAttrChangeCall.call(this.host,attrValue);}},{key:"getAttrValue",value:function getAttrValue(attrName){if(!attrName)return null;attrName = attrName.toLowerCase();var getAttrCall=this.attrStashMap.get(attrName);if(getAttrCall){var value=getAttrCall.call(this.host);if(value == null)return null;if(typeof value === "number")return value + '';if(typeof value === "boolean")return value + '';if(typeof value === "string")return value;return this.setRefObject(value);}return null;}},{key:"getRefObject",value:function getRefObject(ref){var recycel=arguments.length <= 1 || arguments[1] === undefined?true:arguments[1];if(ref && ref.startsWith('@ref/')){ref = ref.substring(5);var index=Number.parseInt(ref);if(Number.isInteger(index)){var obj=this.objectRefs[index];if(recycel)this.objectRefs[index] = null;return obj;}}}},{key:"setRefObject",value:function setRefObject(obj){var length=this.objectRefs.length;for(var i=0;i < length;i++) {if(this.objectRefs[i] == null){this.objectRefs[i] = obj;return '@ref/' + i;}}this.objectRefs.push(obj);return '@ref/' + length;}},{key:"parsePaddingMarginLTRB",value:function parsePaddingMarginLTRB(value){value = value + '';var parts=[];var _iteratorNormalCompletion20=true;var _didIteratorError20=false;var _iteratorError20=undefined;try{for(var _iterator20=value.split(' ')[Symbol.iterator](),_step20;!(_iteratorNormalCompletion20 = (_step20 = _iterator20.next()).done);_iteratorNormalCompletion20 = true) {var part=_step20.value;if(part)parts.push(part);}}catch(err) {_didIteratorError20 = true;_iteratorError20 = err;}finally {try{if(!_iteratorNormalCompletion20 && _iterator20["return"]){_iterator20["return"]();}}finally {if(_didIteratorError20){throw _iteratorError20;}}}switch(parts.length){case 1:return [parts[0],parts[0],parts[0],parts[0]];case 2:return [parts[1],parts[0],parts[1],parts[0]];case 3:return [parts[1],parts[0],parts[1],parts[2]];case 4:return [parts[3],parts[0],parts[1],parts[2]];}throw Error('not a padding or margin value : ' + value);}},{key:"parseBoolean",value:function parseBoolean(value){var defaultValue=arguments.length <= 1 || arguments[1] === undefined?true:arguments[1];if(value === false || value === 'fales' || value === '0')return false;else if(value === true || value === 'true' || value === '1' || value === '')return true;return defaultValue;}},{key:"parseGravity",value:function parseGravity(s){var defaultValue=arguments.length <= 1 || arguments[1] === undefined?Gravity.NO_GRAVITY:arguments[1];var gravity=Number.parseInt(s);if(Number.isInteger(gravity))return gravity;gravity = Gravity.NO_GRAVITY;try{var parts=s.split("|");parts.forEach(function(part){var g=Gravity[part.toUpperCase()];if(Number.isInteger(g))gravity |= g;});}catch(e) {console.error(e);}if(Number.isNaN(gravity) || gravity === Gravity.NO_GRAVITY)gravity = defaultValue;return gravity;}},{key:"parseDrawable",value:function parseDrawable(s){if(!s)return null;if(s instanceof Drawable)return s;if(s.startsWith('@')){var refObj=this.getRefObject(s);if(refObj)return refObj;}else {var color=this.parseColor(s);return new ColorDrawable(color);}}},{key:"parseColor",value:function parseColor(value,defaultValue){var color=Number.parseInt(value);if(Number.isInteger(color))return color;try{if(value.startsWith('rgb(')){value = value.replace('rgb(','').replace(')','');var parts=value.split(',');return Color.rgb(Number.parseInt(parts[0]),Number.parseInt(parts[1]),Number.parseInt(parts[2]));}else if(value.startsWith('rgba(')){value = value.replace('rgba(','').replace(')','');var parts=value.split(',');return Color.rgba(Number.parseInt(parts[0]),Number.parseInt(parts[1]),Number.parseInt(parts[2]),Number.parseInt(parts[3]) * 255);}else {if(value.startsWith('#') && value.length === 4){value = '#' + value[1] + value[1] + value[2] + value[2] + value[2] + value[2];}return Color.parseColor(value);}}catch(e) {if(defaultValue == null)throw e;return defaultValue;}}},{key:"parseColorList",value:function parseColorList(value){if(!value)return null;if(value instanceof ColorStateList)return value;if(value.startsWith('@')){var refObj=this.getRefObject(value);if(refObj)return refObj;}else {var color=this.parseColor(value);return ColorStateList.valueOf(color);}return null;}},{key:"parseNumber",value:function parseNumber(value){var defaultValue=arguments.length <= 1 || arguments[1] === undefined?0:arguments[1];var baseValue=arguments.length <= 2 || arguments[2] === undefined?0:arguments[2];try{return TypedValue.complexToDimensionPixelSize(value,baseValue);}catch(e) {return defaultValue;}}}]);return AttrBinder;})();attr.AttrBinder = AttrBinder;})(attr = androidui.attr || (androidui.attr = {}));})(androidui || (androidui = {}));var androidui;(function(androidui){var util;(function(util){var ClassFinder=(function(){function ClassFinder(){_classCallCheck(this,ClassFinder);}_createClass(ClassFinder,null,[{key:"findClass",value:function findClass(classFullName){var findInRoot=arguments.length <= 1 || arguments[1] === undefined?window:arguments[1];var nameParts=classFullName.split('.');var finding=findInRoot;var _iteratorNormalCompletion21=true;var _didIteratorError21=false;var _iteratorError21=undefined;try{for(var _iterator21=nameParts[Symbol.iterator](),_step21;!(_iteratorNormalCompletion21 = (_step21 = _iterator21.next()).done);_iteratorNormalCompletion21 = true) {var part=_step21.value;var quickFind=finding[part.toLowerCase()];if(quickFind){finding = quickFind;continue;}var found=false;for(var key in finding) {if(key.toUpperCase() === part.toUpperCase()){finding = finding[key];found = true;break;}}if(!found)return null;}}catch(err) {_didIteratorError21 = true;_iteratorError21 = err;}finally {try{if(!_iteratorNormalCompletion21 && _iterator21["return"]){_iterator21["return"]();}}finally {if(_didIteratorError21){throw _iteratorError21;}}}if(finding === findInRoot){return null;}return finding;}}]);return ClassFinder;})();util.ClassFinder = ClassFinder;})(util = androidui.util || (androidui.util = {}));})(androidui || (androidui = {})); /**
 * Created by linfaxin on 15/11/16.
 */ ///<reference path="../../android/view/View.ts"/>
///<reference path="../../android/view/ViewGroup.ts"/>
///<reference path="../content/res/Resources.ts"/>
///<reference path="../graphics/Rect.ts"/>
///<reference path="../view/ViewConfiguration.ts"/>
///<reference path="../os/SystemClock.ts"/>
///<reference path="../util/Log.ts"/>
var android;(function(android){var view;(function(view){var SystemClock=android.os.SystemClock;var Log=android.util.Log;var DEBUG=false;var TAG="KeyEvent";var KeyEvent=(function(){function KeyEvent(){_classCallCheck(this,KeyEvent);this._downingKeyEventMap = new Map();}_createClass(KeyEvent,[{key:"appendKeyEvent",value:function appendKeyEvent(keyEvent,action){this._activeKeyEvent = keyEvent;if(action === KeyEvent.ACTION_DOWN){this.mDownTime = SystemClock.uptimeMillis();var keyEvents=this._downingKeyEventMap.get(keyEvent.keyCode);if(keyEvents == null){keyEvents = [];this._downingKeyEventMap.set(keyEvent.keyCode,keyEvents);}keyEvents.push(keyEvent);}else if(action === KeyEvent.ACTION_UP){this._downingKeyEventMap["delete"](keyEvent.keyCode);}this.mAction = action;}},{key:"isAltPressed",value:function isAltPressed(){return this._activeKeyEvent.altKey;}},{key:"isShiftPressed",value:function isShiftPressed(){return this._activeKeyEvent.shiftKey;}},{key:"isCtrlPressed",value:function isCtrlPressed(){return this._activeKeyEvent.ctrlKey;}},{key:"isMetaPressed",value:function isMetaPressed(){return this._activeKeyEvent.metaKey;}},{key:"getAction",value:function getAction(){return this.mAction;}},{key:"startTracking",value:function startTracking(){this.mFlags |= KeyEvent.FLAG_START_TRACKING;}},{key:"isTracking",value:function isTracking(){return (this.mFlags & KeyEvent.FLAG_TRACKING) != 0;}},{key:"isLongPress",value:function isLongPress(){return this.getRepeatCount() === 1;}},{key:"getKeyCode",value:function getKeyCode(){return this._activeKeyEvent.keyCode;}},{key:"getRepeatCount",value:function getRepeatCount(){var downArray=this._downingKeyEventMap.get(this._activeKeyEvent.keyCode);return downArray?downArray.length - 1:0;}},{key:"getDownTime",value:function getDownTime(){return this.mDownTime;}},{key:"getEventTime",value:function getEventTime(){return this._activeKeyEvent.timeStamp;}},{key:"dispatch",value:function dispatch(receiver,state,target){switch(this.mAction){case KeyEvent.ACTION_DOWN:{this.mFlags &= ~KeyEvent.FLAG_START_TRACKING;if(DEBUG)Log.v(TAG,"Key down to " + target + " in " + state + ": " + this);var res=receiver.onKeyDown(this.getKeyCode(),this);if(state != null){if(res && this.getRepeatCount() == 0 && (this.mFlags & KeyEvent.FLAG_START_TRACKING) != 0){if(DEBUG)Log.v(TAG,"  Start tracking!");state.startTracking(this,target);}else if(this.isLongPress() && state.isTracking(this)){if(receiver.onKeyLongPress(this.getKeyCode(),this)){if(DEBUG)Log.v(TAG,"  Clear from long press!");state.performedLongPress(this);res = true;}}}return res;}case KeyEvent.ACTION_UP:if(DEBUG)Log.v(TAG,"Key up to " + target + " in " + state + ": " + this);if(state != null){state.handleUpEvent(this);}return receiver.onKeyUp(this.getKeyCode(),this);}return false;}},{key:"hasNoModifiers",value:function hasNoModifiers(){if(this.isAltPressed())return false;if(this.isShiftPressed())return false;if(this.isCtrlPressed())return false;if(this.isMetaPressed())return false;return true;}},{key:"hasModifiers",value:function hasModifiers(modifiers){if((modifiers & KeyEvent.META_ALT_ON) === KeyEvent.META_ALT_ON && this.isAltPressed())return true;if((modifiers & KeyEvent.META_SHIFT_ON) === KeyEvent.META_SHIFT_ON && this.isShiftPressed())return true;if((modifiers & KeyEvent.META_META_ON) === KeyEvent.META_META_ON && this.isMetaPressed())return true;if((modifiers & KeyEvent.META_CTRL_ON) === KeyEvent.META_CTRL_ON && this.isCtrlPressed())return true;}},{key:"getMetaState",value:function getMetaState(){var meta=0;if(this.isAltPressed())meta |= KeyEvent.META_ALT_ON;if(this.isShiftPressed())meta |= KeyEvent.META_SHIFT_ON;if(this.isCtrlPressed())meta |= KeyEvent.META_CTRL_ON;if(this.isMetaPressed())meta |= KeyEvent.META_META_ON;return meta;}},{key:"toString",value:function toString(){return JSON.stringify(this._activeKeyEvent);}}],[{key:"isConfirmKey",value:function isConfirmKey(keyCode){switch(keyCode){case KeyEvent.KEYCODE_DPAD_CENTER:case KeyEvent.KEYCODE_ENTER:return true;default:return false;}}},{key:"actionToString",value:function actionToString(action){switch(action){case KeyEvent.ACTION_DOWN:return "ACTION_DOWN";case KeyEvent.ACTION_UP:return "ACTION_UP";default:return '' + action;}}},{key:"keyCodeToString",value:function keyCodeToString(keyCode){return String.fromCharCode(keyCode);}}]);return KeyEvent;})();KeyEvent.KEYCODE_DPAD_UP = 38;KeyEvent.KEYCODE_DPAD_DOWN = 40;KeyEvent.KEYCODE_DPAD_LEFT = 37;KeyEvent.KEYCODE_DPAD_RIGHT = 39;KeyEvent.KEYCODE_DPAD_CENTER = 13;KeyEvent.KEYCODE_ENTER = 13;KeyEvent.KEYCODE_TAB = 9;KeyEvent.KEYCODE_SPACE = 32;KeyEvent.KEYCODE_ESCAPE = 27;KeyEvent.KEYCODE_PAGE_UP = 33;KeyEvent.KEYCODE_PAGE_DOWN = 34;KeyEvent.KEYCODE_MOVE_HOME = 36;KeyEvent.KEYCODE_MOVE_END = 35;KeyEvent.ACTION_DOWN = 0;KeyEvent.ACTION_UP = 1;KeyEvent.META_ALT_ON = 0x02;KeyEvent.META_SHIFT_ON = 0x1;KeyEvent.META_CTRL_ON = 0x1000;KeyEvent.META_META_ON = 0x10000;KeyEvent.FLAG_CANCELED = 0x20;KeyEvent.FLAG_CANCELED_LONG_PRESS = 0x100;KeyEvent.FLAG_LONG_PRESS = 0x80;KeyEvent.FLAG_TRACKING = 0x200;KeyEvent.FLAG_START_TRACKING = 0x40000000;view.KeyEvent = KeyEvent;(function(KeyEvent){var DispatcherState=(function(){function DispatcherState(){_classCallCheck(this,DispatcherState);this.mActiveLongPresses = new android.util.SparseArray();}_createClass(DispatcherState,[{key:"reset",value:function reset(target){if(target == null){if(DEBUG)Log.v(TAG,"Reset: " + this);this.mDownKeyCode = 0;this.mDownTarget = null;this.mActiveLongPresses.clear();}else {if(this.mDownTarget == target){if(DEBUG)Log.v(TAG,"Reset in " + target + ": " + this);this.mDownKeyCode = 0;this.mDownTarget = null;}}}},{key:"startTracking",value:function startTracking(event,target){if(event.getAction() != KeyEvent.ACTION_DOWN){throw new Error("Can only start tracking on a down event");}if(DEBUG)Log.v(TAG,"Start trackingt in " + target + ": " + this);this.mDownKeyCode = event.getKeyCode();this.mDownTarget = target;}},{key:"isTracking",value:function isTracking(event){return this.mDownKeyCode == event.getKeyCode();}},{key:"performedLongPress",value:function performedLongPress(event){this.mActiveLongPresses.put(event.getKeyCode(),1);}},{key:"handleUpEvent",value:function handleUpEvent(event){var keyCode=event.getKeyCode();if(DEBUG)Log.v(TAG,"Handle key up " + event + ": " + this);var index=this.mActiveLongPresses.indexOfKey(keyCode);if(index >= 0){if(DEBUG)Log.v(TAG,"  Index: " + index);event.mFlags |= KeyEvent.FLAG_CANCELED | KeyEvent.FLAG_CANCELED_LONG_PRESS;this.mActiveLongPresses.removeAt(index);}if(this.mDownKeyCode == keyCode){if(DEBUG)Log.v(TAG,"  Tracking!");event.mFlags |= KeyEvent.FLAG_TRACKING;this.mDownKeyCode = 0;this.mDownTarget = null;}}}]);return DispatcherState;})();KeyEvent.DispatcherState = DispatcherState;})(KeyEvent = view.KeyEvent || (view.KeyEvent = {}));})(view = android.view || (android.view = {}));})(android || (android = {})); /**
 * Created by linfaxin on 15/9/27.
 */ ///<reference path="../util/SparseArray.ts"/>
///<reference path="../util/Log.ts"/>
///<reference path="../graphics/drawable/Drawable.ts"/>
///<reference path="../graphics/drawable/ColorDrawable.ts"/>
///<reference path="../graphics/drawable/ScrollBarDrawable.ts"/>
///<reference path="../graphics/drawable/InsetDrawable.ts"/>
///<reference path="../graphics/PixelFormat.ts"/>
///<reference path="../graphics/Matrix.ts"/>
///<reference path="../graphics/Color.ts"/>
///<reference path="../graphics/Paint.ts"/>
///<reference path="../../java/lang/StringBuilder.ts"/>
///<reference path="../../java/lang/Runnable.ts"/>
///<reference path="../../java/lang/Object.ts"/>
///<reference path="../../java/lang/util/concurrent/CopyOnWriteArrayList.ts"/>
///<reference path="../../java/util/ArrayList.ts"/>
///<reference path="ViewRootImpl.ts"/>
///<reference path="ViewParent.ts"/>
///<reference path="ViewGroup.ts"/>
///<reference path="ViewOverlay.ts"/>
///<reference path="ViewTreeObserver.ts"/>
///<reference path="MotionEvent.ts"/>
///<reference path="TouchDelegate.ts"/>
///<reference path="../os/Handler.ts"/>
///<reference path="../os/SystemClock.ts"/>
///<reference path="../content/res/Resources.ts"/>
///<reference path="../content/res/ColorStateList.ts"/>
///<reference path="../graphics/Rect.ts"/>
///<reference path="../graphics/Canvas.ts"/>
///<reference path="../util/Pools.ts"/>
///<reference path="../util/TypedValue.ts"/>
///<reference path="Gravity.ts"/>
///<reference path="../view/animation/LinearInterpolator.ts"/>
///<reference path="../view/animation/AnimationUtils.ts"/>
///<reference path="../../java/lang/System.ts"/>
///<reference path="../../androidui/attr/StateAttrList.ts"/>
///<reference path="../../androidui/attr/StateAttr.ts"/>
///<reference path="../../androidui/attr/AttrBinder.ts"/>
///<reference path="../../androidui/util/ClassFinder.ts"/>
///<reference path="../../androidui/widget/HtmlDataAdapter.ts"/>
///<reference path="KeyEvent.ts"/>
var android;(function(android){var view;(function(view_1){var ColorDrawable=android.graphics.drawable.ColorDrawable;var ScrollBarDrawable=android.graphics.drawable.ScrollBarDrawable;var InsetDrawable=android.graphics.drawable.InsetDrawable;var PixelFormat=android.graphics.PixelFormat;var Matrix=android.graphics.Matrix;var Color=android.graphics.Color;var StringBuilder=java.lang.StringBuilder;var JavaObject=java.lang.JavaObject;var System=java.lang.System;var SystemClock=android.os.SystemClock;var Log=android.util.Log;var Rect=android.graphics.Rect;var Canvas=android.graphics.Canvas;var CopyOnWriteArrayList=java.lang.util.concurrent.CopyOnWriteArrayList;var ArrayList=java.util.ArrayList;var Resources=android.content.res.Resources;var Pools=android.util.Pools;var TypedValue=android.util.TypedValue;var LinearInterpolator=android.view.animation.LinearInterpolator;var AnimationUtils=android.view.animation.AnimationUtils;var StateAttrList=androidui.attr.StateAttrList;var AttrBinder=androidui.attr.AttrBinder;var ClassFinder=androidui.util.ClassFinder;var KeyEvent=android.view.KeyEvent;var View=(function(_JavaObject){_inherits(View,_JavaObject);function View(bindElement,rootElement){var _this5=this;_classCallCheck(this,View);_get(Object.getPrototypeOf(View.prototype),"constructor",this).call(this);this.mPrivateFlags = 0;this.mPrivateFlags2 = 0;this.mPrivateFlags3 = 0;this.mOldWidthMeasureSpec = Number.MIN_SAFE_INTEGER;this.mOldHeightMeasureSpec = Number.MIN_SAFE_INTEGER;this.mMeasuredWidth = 0;this.mMeasuredHeight = 0;this.mBackgroundSizeChanged = false;this.mHasPerformedLongPress = false;this.mMinWidth = 0;this.mMinHeight = 0;this.mDrawingCacheBackgroundColor = 0;this.mTouchSlop = 0;this.mVerticalScrollFactor = 0;this.mOverScrollMode = 0;this.mViewFlags = 0;this.mLayerType = View.LAYER_TYPE_NONE;this.mCachingFailed = false;this.mWindowAttachCount = 0;this.mTransientStateCount = 0;this.mLastIsOpaque = false;this._mLeft = 0;this._mRight = 0;this._mTop = 0;this._mBottom = 0;this._mScrollX = 0;this._mScrollY = 0;this.mPaddingLeft = 0;this.mPaddingRight = 0;this.mPaddingTop = 0;this.mPaddingBottom = 0;this._attrBinder = new AttrBinder(this);this.mSyncAttrToStyle = [];this._syncBoundToElementLock = false;this.syncBoundToElementRun = function(){_this5._syncBoundToElement();};this._lastSyncScrollX = 0;this._lastSyncScrollY = 0;this.mTouchSlop = view_1.ViewConfiguration.get().getScaledTouchSlop();this.setOverScrollMode(View.OVER_SCROLL_ALWAYS);this._attrBinder.addAttr('background',function(value){_this5.setBackground(_this5._attrBinder.parseDrawable(value));},function(){if(_this5.mBackground instanceof ColorDrawable){return Color.toRGBAFunc(_this5.mBackground.getColor());}return _this5.mBackground;});this._attrBinder.addAttr('padding',function(value){var _attrBinder$parsePaddingMarginLTRB=_this5._attrBinder.parsePaddingMarginLTRB(value);var _attrBinder$parsePaddingMarginLTRB2=_slicedToArray(_attrBinder$parsePaddingMarginLTRB,4);var left=_attrBinder$parsePaddingMarginLTRB2[0];var top=_attrBinder$parsePaddingMarginLTRB2[1];var right=_attrBinder$parsePaddingMarginLTRB2[2];var bottom=_attrBinder$parsePaddingMarginLTRB2[3];_this5._setPaddingWithUnit(left,top,right,bottom);},function(){return _this5.mPaddingTop + ' ' + _this5.mPaddingRight + ' ' + _this5.mPaddingBottom + ' ' + _this5.mPaddingLeft;}),this._attrBinder.addAttr('paddingLeft',function(value){_this5._setPaddingWithUnit(value,_this5.mPaddingTop,_this5.mPaddingRight,_this5.mPaddingBottom);},function(){return _this5.mPaddingLeft;}),this._attrBinder.addAttr('paddingTop',function(value){_this5._setPaddingWithUnit(_this5.mPaddingLeft,value,_this5.mPaddingRight,_this5.mPaddingBottom);},function(){return _this5.mPaddingTop;}),this._attrBinder.addAttr('paddingRight',function(value){_this5._setPaddingWithUnit(_this5.mPaddingLeft,_this5.mPaddingTop,value,_this5.mPaddingBottom);},function(){return _this5.mPaddingRight;}),this._attrBinder.addAttr('paddingBottom',function(value){_this5._setPaddingWithUnit(_this5.mPaddingLeft,_this5.mPaddingTop,_this5.mPaddingRight,value);},function(){return _this5.mPaddingBottom;}),this._attrBinder.addAttr('scrollX',function(value){value = Number.parseInt(value);if(Number.isInteger(value))_this5.scrollTo(value,_this5.mScrollY);}),this._attrBinder.addAttr('scrollY',function(value){value = Number.parseInt(value);if(Number.isInteger(value))_this5.scrollTo(_this5.mScrollX,value);}),this._attrBinder.addAttr('alpha',function(value){value = Number.parseInt(value);if(Number.isInteger(value)){};}),this._attrBinder.addAttr('transformPivotX',function(value){value = Number.parseInt(value);if(Number.isInteger(value)){};}),this._attrBinder.addAttr('transformPivotY',function(value){value = Number.parseInt(value);if(Number.isInteger(value)){};}),this._attrBinder.addAttr('translationX',function(value){value = Number.parseInt(value);if(Number.isInteger(value)){};}),this._attrBinder.addAttr('translationY',function(value){value = Number.parseInt(value);if(Number.isInteger(value)){};}),this._attrBinder.addAttr('rotation',function(value){value = Number.parseInt(value);if(Number.isInteger(value)){};}),this._attrBinder.addAttr('rotationX',function(value){value = Number.parseInt(value);if(Number.isInteger(value)){};}),this._attrBinder.addAttr('rotationY',function(value){value = Number.parseInt(value);if(Number.isInteger(value)){};}),this._attrBinder.addAttr('scaleX',function(value){value = Number.parseInt(value);if(Number.isInteger(value)){};}),this._attrBinder.addAttr('scaleY',function(value){value = Number.parseInt(value);if(Number.isInteger(value)){};}),this._attrBinder.addAttr('tag',function(value){}),this._attrBinder.addAttr('id',function(value){_this5.setId(value);}),this._attrBinder.addAttr('focusable',function(value){if(_this5._attrBinder.parseBoolean(value,false)){_this5.setFlags(View.FOCUSABLE,View.FOCUSABLE_MASK);}}),this._attrBinder.addAttr('focusableInTouchMode',function(value){if(_this5._attrBinder.parseBoolean(value,false)){_this5.setFlags(View.FOCUSABLE_IN_TOUCH_MODE | View.FOCUSABLE,View.FOCUSABLE_IN_TOUCH_MODE | View.FOCUSABLE_MASK);}}),this._attrBinder.addAttr('clickable',function(value){if(_this5._attrBinder.parseBoolean(value,false)){_this5.setFlags(View.CLICKABLE,View.CLICKABLE);}}),this._attrBinder.addAttr('longClickable',function(value){if(_this5._attrBinder.parseBoolean(value,false)){_this5.setFlags(View.LONG_CLICKABLE,View.LONG_CLICKABLE);}}),this._attrBinder.addAttr('saveEnabled',function(value){if(_this5._attrBinder.parseBoolean(value,false)){}}),this._attrBinder.addAttr('duplicateParentState',function(value){if(_this5._attrBinder.parseBoolean(value,false)){_this5.setFlags(View.DUPLICATE_PARENT_STATE,View.DUPLICATE_PARENT_STATE);}}),this._attrBinder.addAttr('visibility',function(value){if(value === 'gone')_this5.setVisibility(View.GONE);else if(value === 'invisible')_this5.setVisibility(View.INVISIBLE);else if(value === 'visible')_this5.setVisibility(View.VISIBLE);}),this._attrBinder.addAttr('scrollbars',function(value){if(value === 'none'){_this5.setHorizontalScrollBarEnabled(false);_this5.setVerticalScrollBarEnabled(false);}}),this._attrBinder.addAttr('isScrollContainer',function(value){if(_this5._attrBinder.parseBoolean(value,false)){_this5.setScrollContainer(true);}}),this._attrBinder.addAttr('minWidth',function(value){_this5.setMinimumWidth(_this5._attrBinder.parseNumber(value,0));},function(){return _this5.mMinWidth;}),this._attrBinder.addAttr('minHeight',function(value){_this5.setMinimumHeight(_this5._attrBinder.parseNumber(value,0));},function(){return _this5.mMinHeight;}),this._attrBinder.addAttr('onClick',function(value){if(_this5._attrBinder.parseBoolean(value))_this5.setClickable(true);}),this._attrBinder.addAttr('overScrollMode',function(value){var scrollMode=View[('OVER_SCROLL_' + value).toUpperCase()];if(scrollMode === undefined)scrollMode = View.OVER_SCROLL_IF_CONTENT_SCROLLS;_this5.setOverScrollMode(scrollMode);}),this._attrBinder.addAttr('layerType',function(value){});this._attrBinder.addAttr('syncAttr',function(value){_this5.mSyncAttrToStyle = value?value.toLowerCase().split(';'):[];var _iteratorNormalCompletion22=true;var _didIteratorError22=false;var _iteratorError22=undefined;try{for(var _iterator22=_this5.mSyncAttrToStyle[Symbol.iterator](),_step22;!(_iteratorNormalCompletion22 = (_step22 = _iterator22.next()).done);_iteratorNormalCompletion22 = true) {var attrName=_step22.value;_this5.bindElement.style[attrName] = _this5.getAttributeIgnoreCase(attrName);}}catch(err) {_didIteratorError22 = true;_iteratorError22 = err;}finally {try{if(!_iteratorNormalCompletion22 && _iterator22["return"]){_iterator22["return"]();}}finally {if(_didIteratorError22){throw _iteratorError22;}}}});this.initBindElement(bindElement,rootElement);}_createClass(View,[{key:"getWidth",value:function getWidth(){return this.mRight - this.mLeft;}},{key:"getHeight",value:function getHeight(){return this.mBottom - this.mTop;}},{key:"getTop",value:function getTop(){return this.mTop;}},{key:"setTop",value:function setTop(top){if(top != this.mTop){if(this.mAttachInfo != null){var minTop=undefined;var yLoc=undefined;if(top < this.mTop){minTop = top;yLoc = top - this.mTop;}else {minTop = this.mTop;yLoc = 0;}this.invalidate(0,yLoc,this.mRight - this.mLeft,this.mBottom - minTop);}var width=this.mRight - this.mLeft;var oldHeight=this.mBottom - this.mTop;this.mTop = top;this.sizeChange(width,this.mBottom - this.mTop,width,oldHeight);this.mBackgroundSizeChanged = true;}}},{key:"getBottom",value:function getBottom(){return this.mBottom;}},{key:"setBottom",value:function setBottom(bottom){if(bottom != this.mBottom){if(this.mAttachInfo != null){var maxBottom=undefined;if(bottom < this.mBottom){maxBottom = this.mBottom;}else {maxBottom = bottom;}this.invalidate(0,0,this.mRight - this.mLeft,maxBottom - this.mTop);}var width=this.mRight - this.mLeft;var oldHeight=this.mBottom - this.mTop;this.mBottom = bottom;this.sizeChange(width,this.mBottom - this.mTop,width,oldHeight);this.mBackgroundSizeChanged = true;}}},{key:"getLeft",value:function getLeft(){return this.mLeft;}},{key:"setLeft",value:function setLeft(left){if(left != this.mLeft){if(this.mAttachInfo != null){var minLeft=undefined;var xLoc=undefined;if(left < this.mLeft){minLeft = left;xLoc = left - this.mLeft;}else {minLeft = this.mLeft;xLoc = 0;}this.invalidate(xLoc,0,this.mRight - minLeft,this.mBottom - this.mTop);}var oldWidth=this.mRight - this.mLeft;var height=this.mBottom - this.mTop;this.mLeft = left;this.sizeChange(this.mRight - this.mLeft,height,oldWidth,height);this.mBackgroundSizeChanged = true;}}},{key:"getRight",value:function getRight(){return this.mRight;}},{key:"setRight",value:function setRight(right){if(right != this.mRight){if(this.mAttachInfo != null){var maxRight=undefined;if(right < this.mRight){maxRight = this.mRight;}else {maxRight = right;}this.invalidate(0,0,maxRight - this.mLeft,this.mBottom - this.mTop);}var oldWidth=this.mRight - this.mLeft;var height=this.mBottom - this.mTop;this.mRight = right;this.sizeChange(this.mRight - this.mLeft,height,oldWidth,height);this.mBackgroundSizeChanged = true;}}},{key:"getPaddingLeft",value:function getPaddingLeft(){return this.mPaddingLeft;}},{key:"getPaddingTop",value:function getPaddingTop(){return this.mPaddingTop;}},{key:"getPaddingRight",value:function getPaddingRight(){return this.mPaddingRight;}},{key:"getPaddingBottom",value:function getPaddingBottom(){return this.mPaddingBottom;}},{key:"setPaddingLeft",value:function setPaddingLeft(left){if(this.mPaddingLeft != left){this.mPaddingLeft = left;this.requestLayout();}}},{key:"setPaddingTop",value:function setPaddingTop(top){if(this.mPaddingTop != top){this.mPaddingTop = top;this.requestLayout();}}},{key:"setPaddingRight",value:function setPaddingRight(right){if(this.mPaddingRight != right){this.mPaddingRight = right;this.requestLayout();}}},{key:"setPaddingBottom",value:function setPaddingBottom(bottom){if(this.mPaddingBottom != bottom){this.mPaddingBottom = bottom;this.requestLayout();}}},{key:"setPadding",value:function setPadding(left,top,right,bottom){var changed=false;if(this.mPaddingLeft != left){changed = true;this.mPaddingLeft = left;}if(this.mPaddingTop != top){changed = true;this.mPaddingTop = top;}if(this.mPaddingRight != right){changed = true;this.mPaddingRight = right;}if(this.mPaddingBottom != bottom){changed = true;this.mPaddingBottom = bottom;}if(changed){this.requestLayout();}}},{key:"_setPaddingWithUnit",value:function _setPaddingWithUnit(left,top,right,bottom){var view=this;var dm=Resources.getDisplayMetrics();var width=view.getWidth();var height=view.getHeight();var padLeft=TypedValue.complexToDimensionPixelSize(left,width,dm);var padTop=TypedValue.complexToDimensionPixelSize(top,height,dm);var padRight=TypedValue.complexToDimensionPixelSize(right,width,dm);var padBottom=TypedValue.complexToDimensionPixelSize(bottom,height,dm);view.setPadding(padLeft,padTop,padRight,padBottom);var unit=TypedValue.COMPLEX_UNIT_FRACTION;if(typeof left === 'string' && left.endsWith(unit) || typeof top === 'string' && top.endsWith(unit) || typeof right === 'string' && right.endsWith(unit) || typeof bottom === 'string' && bottom.endsWith(unit)){view.post({run:function run(){var width=view.getWidth();var height=view.getHeight();var padLeftN=TypedValue.complexToDimensionPixelSize(left,width,dm);var padTopN=TypedValue.complexToDimensionPixelSize(top,height,dm);var padRightN=TypedValue.complexToDimensionPixelSize(right,width,dm);var padBottomN=TypedValue.complexToDimensionPixelSize(bottom,height,dm);view.setPadding(padLeftN,padTopN,padRightN,padBottomN);}});}}},{key:"setScrollX",value:function setScrollX(value){this.scrollTo(value,this.mScrollY);}},{key:"setScrollY",value:function setScrollY(value){this.scrollTo(this.mScrollX,value);}},{key:"getScrollX",value:function getScrollX(){return this.mScrollX;}},{key:"getScrollY",value:function getScrollY(){return this.mScrollY;}},{key:"getFinalAlpha",value:function getFinalAlpha(){return 1;}},{key:"offsetTopAndBottom",value:function offsetTopAndBottom(offset){if(offset != 0){this.updateMatrix();var matrixIsIdentity=true;if(matrixIsIdentity){var p=this.mParent;if(p != null && this.mAttachInfo != null){var r=this.mAttachInfo.mTmpInvalRect;var minTop=undefined;var maxBottom=undefined;var yLoc=undefined;if(offset < 0){minTop = this.mTop + offset;maxBottom = this.mBottom;yLoc = offset;}else {minTop = this.mTop;maxBottom = this.mBottom + offset;yLoc = 0;}r.set(0,yLoc,this.mRight - this.mLeft,maxBottom - minTop);p.invalidateChild(this,r);}}else {this.invalidateViewProperty(false,false);}this.mTop += offset;this.mBottom += offset;if(!matrixIsIdentity){this.invalidateViewProperty(false,true);}this.invalidateParentIfNeeded();}}},{key:"offsetLeftAndRight",value:function offsetLeftAndRight(offset){if(offset != 0){this.updateMatrix();var matrixIsIdentity=true;if(matrixIsIdentity){var p=this.mParent;if(p != null && this.mAttachInfo != null){var r=this.mAttachInfo.mTmpInvalRect;var minLeft=undefined;var maxRight=undefined;if(offset < 0){minLeft = this.mLeft + offset;maxRight = this.mRight;}else {minLeft = this.mLeft;maxRight = this.mRight + offset;}r.set(0,0,maxRight - minLeft,this.mBottom - this.mTop);p.invalidateChild(this,r);}}else {this.invalidateViewProperty(false,false);}this.mLeft += offset;this.mRight += offset;if(!matrixIsIdentity){this.invalidateViewProperty(false,true);}this.invalidateParentIfNeeded();}}},{key:"setAlpha",value:function setAlpha(alpha){alpha &= 0xFF;this.bindElement.style.opacity = alpha / 255 + '';}},{key:"updateMatrix",value:function updateMatrix(){}},{key:"getMatrix",value:function getMatrix(){return Matrix.IDENTITY_MATRIX;}},{key:"hasIdentityMatrix",value:function hasIdentityMatrix(){return true;}},{key:"transformRect",value:function transformRect(rect){if(!this.getMatrix().isIdentity()){var boundingRect=this.mAttachInfo.mTmpTransformRect;boundingRect.set(rect);this.getMatrix().mapRect(boundingRect);rect.set(boundingRect);}}},{key:"pointInView",value:function pointInView(localX,localY){var slop=arguments.length <= 2 || arguments[2] === undefined?0:arguments[2];return localX >= -slop && localY >= -slop && localX < this.mRight - this.mLeft + slop && localY < this.mBottom - this.mTop + slop;}},{key:"getHandler",value:function getHandler(){var attachInfo=this.mAttachInfo;if(attachInfo != null){return attachInfo.mHandler;}return null;}},{key:"getViewRootImpl",value:function getViewRootImpl(){if(this.mAttachInfo != null){return this.mAttachInfo.mViewRootImpl;}return null;}},{key:"post",value:function post(action){var attachInfo=this.mAttachInfo;if(attachInfo != null){return attachInfo.mHandler.post(action);}view_1.ViewRootImpl.getRunQueue().post(action);return true;}},{key:"postDelayed",value:function postDelayed(action,delayMillis){var attachInfo=this.mAttachInfo;if(attachInfo != null){return attachInfo.mHandler.postDelayed(action,delayMillis);}view_1.ViewRootImpl.getRunQueue().postDelayed(action,delayMillis);return true;}},{key:"postOnAnimation",value:function postOnAnimation(action){return this.post(action);}},{key:"postOnAnimationDelayed",value:function postOnAnimationDelayed(action,delayMillis){return this.postDelayed(action,delayMillis);}},{key:"removeCallbacks",value:function removeCallbacks(action){if(action != null){var attachInfo=this.mAttachInfo;if(attachInfo != null){attachInfo.mHandler.removeCallbacks(action);}else {view_1.ViewRootImpl.getRunQueue().removeCallbacks(action);}}return true;}},{key:"getParent",value:function getParent(){return this.mParent;}},{key:"setFlags",value:function setFlags(flags,mask){var old=this.mViewFlags;this.mViewFlags = this.mViewFlags & ~mask | flags & mask;var changed=this.mViewFlags ^ old;if(changed == 0){return;}var privateFlags=this.mPrivateFlags;if((changed & View.FOCUSABLE_MASK) != 0 && (privateFlags & View.PFLAG_HAS_BOUNDS) != 0){if((old & View.FOCUSABLE_MASK) == View.FOCUSABLE && (privateFlags & View.PFLAG_FOCUSED) != 0){this.clearFocus();}else if((old & View.FOCUSABLE_MASK) == View.NOT_FOCUSABLE && (privateFlags & View.PFLAG_FOCUSED) == 0){if(this.mParent != null)this.mParent.focusableViewAvailable(this);}}var newVisibility=flags & View.VISIBILITY_MASK;if(newVisibility == View.VISIBLE){if((changed & View.VISIBILITY_MASK) != 0){this.mPrivateFlags |= View.PFLAG_DRAWN;this.invalidate(true);if(this.mParent != null && this.mBottom > this.mTop && this.mRight > this.mLeft){this.mParent.focusableViewAvailable(this);}}}if((changed & View.GONE) != 0){this.requestLayout();if((this.mViewFlags & View.VISIBILITY_MASK) == View.GONE){if(this.hasFocus())this.clearFocus();this.destroyDrawingCache();if(this.mParent instanceof View){this.mParent.invalidate(true);}this.mPrivateFlags |= View.PFLAG_DRAWN;}if(this.mAttachInfo != null){this.mAttachInfo.mViewVisibilityChanged = true;}}if((changed & View.INVISIBLE) != 0){this.mPrivateFlags |= View.PFLAG_DRAWN;if((this.mViewFlags & View.VISIBILITY_MASK) == View.INVISIBLE){if(this.getRootView() != this){if(this.hasFocus())this.clearFocus();}}if(this.mAttachInfo != null){this.mAttachInfo.mViewVisibilityChanged = true;}}if((changed & View.VISIBILITY_MASK) != 0){if(newVisibility != View.VISIBLE){this.cleanupDraw();}if(this.mParent instanceof view_1.ViewGroup){this.mParent.onChildVisibilityChanged(this,changed & View.VISIBILITY_MASK,newVisibility);this.mParent.invalidate(true);}else if(this.mParent != null){this.mParent.invalidateChild(this,null);}this.dispatchVisibilityChanged(this,newVisibility);this.syncVisibleToElement();}if((changed & View.WILL_NOT_CACHE_DRAWING) != 0){this.destroyDrawingCache();}if((changed & View.DRAWING_CACHE_ENABLED) != 0){this.destroyDrawingCache();this.mPrivateFlags &= ~View.PFLAG_DRAWING_CACHE_VALID;this.invalidateParentCaches();}if((changed & View.DRAW_MASK) != 0){if((this.mViewFlags & View.WILL_NOT_DRAW) != 0){if(this.mBackground != null){this.mPrivateFlags &= ~View.PFLAG_SKIP_DRAW;this.mPrivateFlags |= View.PFLAG_ONLY_DRAWS_BACKGROUND;}else {this.mPrivateFlags |= View.PFLAG_SKIP_DRAW;}}else {this.mPrivateFlags &= ~View.PFLAG_SKIP_DRAW;}this.requestLayout();this.invalidate(true);}}},{key:"bringToFront",value:function bringToFront(){if(this.mParent != null){this.mParent.bringChildToFront(this);}}},{key:"onScrollChanged",value:function onScrollChanged(l,t,oldl,oldt){this.mBackgroundSizeChanged = true;var ai=this.mAttachInfo;if(ai != null){ai.mViewScrollChanged = true;}}},{key:"onSizeChanged",value:function onSizeChanged(w,h,oldw,oldh){}},{key:"getTouchables",value:function getTouchables(){var result=new ArrayList();this.addTouchables(result);return result;}},{key:"addTouchables",value:function addTouchables(views){var viewFlags=this.mViewFlags;if(((viewFlags & View.CLICKABLE) == View.CLICKABLE || (viewFlags & View.LONG_CLICKABLE) == View.LONG_CLICKABLE) && (viewFlags & View.ENABLED_MASK) == View.ENABLED){views.add(this);}}},{key:"onFocusLost",value:function onFocusLost(){this.resetPressedState();}},{key:"resetPressedState",value:function resetPressedState(){if((this.mViewFlags & View.ENABLED_MASK) == View.DISABLED){return;}if(this.isPressed()){this.setPressed(false);if(!this.mHasPerformedLongPress){this.removeLongPressCallback();}}}},{key:"isFocused",value:function isFocused(){return (this.mPrivateFlags & View.PFLAG_FOCUSED) != 0;}},{key:"findFocus",value:function findFocus(){return (this.mPrivateFlags & View.PFLAG_FOCUSED) != 0?this:null;}},{key:"getNextFocusLeftId",value:function getNextFocusLeftId(){return this.mNextFocusLeftId;}},{key:"setNextFocusLeftId",value:function setNextFocusLeftId(nextFocusLeftId){this.mNextFocusLeftId = nextFocusLeftId;}},{key:"getNextFocusRightId",value:function getNextFocusRightId(){return this.mNextFocusRightId;}},{key:"setNextFocusRightId",value:function setNextFocusRightId(nextFocusRightId){this.mNextFocusRightId = nextFocusRightId;}},{key:"getNextFocusUpId",value:function getNextFocusUpId(){return this.mNextFocusUpId;}},{key:"setNextFocusUpId",value:function setNextFocusUpId(nextFocusUpId){this.mNextFocusUpId = nextFocusUpId;}},{key:"getNextFocusDownId",value:function getNextFocusDownId(){return this.mNextFocusDownId;}},{key:"setNextFocusDownId",value:function setNextFocusDownId(nextFocusDownId){this.mNextFocusDownId = nextFocusDownId;}},{key:"getNextFocusForwardId",value:function getNextFocusForwardId(){return this.mNextFocusForwardId;}},{key:"setNextFocusForwardId",value:function setNextFocusForwardId(nextFocusForwardId){this.mNextFocusForwardId = nextFocusForwardId;}},{key:"setFocusable",value:function setFocusable(focusable){if(!focusable){this.setFlags(0,View.FOCUSABLE_IN_TOUCH_MODE);}this.setFlags(focusable?View.FOCUSABLE:View.NOT_FOCUSABLE,View.FOCUSABLE_MASK);}},{key:"isFocusable",value:function isFocusable(){return View.FOCUSABLE == (this.mViewFlags & View.FOCUSABLE_MASK);}},{key:"setFocusableInTouchMode",value:function setFocusableInTouchMode(focusableInTouchMode){this.setFlags(focusableInTouchMode?View.FOCUSABLE_IN_TOUCH_MODE:0,View.FOCUSABLE_IN_TOUCH_MODE);if(focusableInTouchMode){this.setFlags(View.FOCUSABLE,View.FOCUSABLE_MASK);}}},{key:"isFocusableInTouchMode",value:function isFocusableInTouchMode(){return View.FOCUSABLE_IN_TOUCH_MODE == (this.mViewFlags & View.FOCUSABLE_IN_TOUCH_MODE);}},{key:"hasFocusable",value:function hasFocusable(){return (this.mViewFlags & View.VISIBILITY_MASK) == View.VISIBLE && this.isFocusable();}},{key:"clearFocus",value:function clearFocus(){if(View.DBG){System.out.println(this + " clearFocus()");}this.clearFocusInternal(true,true);}},{key:"clearFocusInternal",value:function clearFocusInternal(propagate,refocus){if((this.mPrivateFlags & View.PFLAG_FOCUSED) != 0){this.mPrivateFlags &= ~View.PFLAG_FOCUSED;if(propagate && this.mParent != null){this.mParent.clearChildFocus(this);}this.onFocusChanged(false,0,null);this.refreshDrawableState();if(propagate && (!refocus || !this.rootViewRequestFocus())){this.notifyGlobalFocusCleared(this);}}}},{key:"notifyGlobalFocusCleared",value:function notifyGlobalFocusCleared(oldFocus){if(oldFocus != null && this.mAttachInfo != null){this.mAttachInfo.mTreeObserver.dispatchOnGlobalFocusChange(oldFocus,null);}}},{key:"rootViewRequestFocus",value:function rootViewRequestFocus(){var root=this.getRootView();return root != null && root.requestFocus();}},{key:"unFocus",value:function unFocus(){if(View.DBG){System.out.println(this + " unFocus()");}this.clearFocusInternal(false,false);}},{key:"hasFocus",value:function hasFocus(){return (this.mPrivateFlags & View.PFLAG_FOCUSED) != 0;}},{key:"onFocusChanged",value:function onFocusChanged(gainFocus,direction,previouslyFocusedRect){if(!gainFocus){if(this.isPressed()){this.setPressed(false);}this.onFocusLost();}this.invalidate(true);var li=this.mListenerInfo;if(li != null && li.mOnFocusChangeListener != null){li.mOnFocusChangeListener.onFocusChange(this,gainFocus);}if(this.mAttachInfo != null){this.mAttachInfo.mKeyDispatchState.reset(this);}}},{key:"focusSearch",value:function focusSearch(direction){if(this.mParent != null){return this.mParent.focusSearch(this,direction);}else {return null;}}},{key:"dispatchUnhandledMove",value:function dispatchUnhandledMove(focused,direction){return false;}},{key:"findUserSetNextFocus",value:function findUserSetNextFocus(root,direction){var _this6=this;switch(direction){case View.FOCUS_LEFT:if(!this.mNextFocusLeftId)return null;return this.findViewInsideOutShouldExist(root,this.mNextFocusLeftId);case View.FOCUS_RIGHT:if(!this.mNextFocusRightId)return null;return this.findViewInsideOutShouldExist(root,this.mNextFocusRightId);case View.FOCUS_UP:if(!this.mNextFocusUpId)return null;return this.findViewInsideOutShouldExist(root,this.mNextFocusUpId);case View.FOCUS_DOWN:if(!this.mNextFocusDownId)return null;return this.findViewInsideOutShouldExist(root,this.mNextFocusDownId);case View.FOCUS_FORWARD:if(!this.mNextFocusForwardId)return null;return this.findViewInsideOutShouldExist(root,this.mNextFocusForwardId);case View.FOCUS_BACKWARD:{var _ret=(function(){if(!_this6.mID)return {v:null};var id=_this6.mID;return {v:root.findViewByPredicateInsideOut(_this6,{apply:function apply(t){return t.mNextFocusForwardId == id;}})};})();if(typeof _ret === "object")return _ret.v;}}return null;}},{key:"findViewInsideOutShouldExist",value:function findViewInsideOutShouldExist(root,id){if(this.mMatchIdPredicate == null){this.mMatchIdPredicate = new MatchIdPredicate();}this.mMatchIdPredicate.mId = id;var result=root.findViewByPredicateInsideOut(this,this.mMatchIdPredicate);if(result == null){Log.w(View.VIEW_LOG_TAG,"couldn't find view with id " + id);}return result;}},{key:"getFocusables",value:function getFocusables(direction){var result=new ArrayList(24);this.addFocusables(result,direction);return result;}},{key:"addFocusables",value:function addFocusables(views,direction){var focusableMode=arguments.length <= 2 || arguments[2] === undefined?View.FOCUSABLES_TOUCH_MODE:arguments[2];if(views == null){return;}if(!this.isFocusable()){return;}if((focusableMode & View.FOCUSABLES_TOUCH_MODE) == View.FOCUSABLES_TOUCH_MODE && this.isInTouchMode() && !this.isFocusableInTouchMode()){return;}views.add(this);}},{key:"setOnFocusChangeListener",value:function setOnFocusChangeListener(l){this.getListenerInfo().mOnFocusChangeListener = l;}},{key:"getOnFocusChangeListener",value:function getOnFocusChangeListener(){var li=this.mListenerInfo;return li != null?li.mOnFocusChangeListener:null;}},{key:"requestFocus",value:function requestFocus(){var direction=arguments.length <= 0 || arguments[0] === undefined?View.FOCUS_DOWN:arguments[0];var previouslyFocusedRect=arguments.length <= 1 || arguments[1] === undefined?null:arguments[1];return this.requestFocusNoSearch(direction,previouslyFocusedRect);}},{key:"requestFocusNoSearch",value:function requestFocusNoSearch(direction,previouslyFocusedRect){if((this.mViewFlags & View.FOCUSABLE_MASK) != View.FOCUSABLE || (this.mViewFlags & View.VISIBILITY_MASK) != View.VISIBLE){return false;}if(this.isInTouchMode() && View.FOCUSABLE_IN_TOUCH_MODE != (this.mViewFlags & View.FOCUSABLE_IN_TOUCH_MODE)){return false;}if(this.hasAncestorThatBlocksDescendantFocus()){return false;}this.handleFocusGainInternal(direction,previouslyFocusedRect);return true;}},{key:"requestFocusFromTouch",value:function requestFocusFromTouch(){if(this.isInTouchMode()){var viewRoot=this.getViewRootImpl();if(viewRoot != null){viewRoot.ensureTouchMode(false);}}return this.requestFocus(View.FOCUS_DOWN);}},{key:"hasAncestorThatBlocksDescendantFocus",value:function hasAncestorThatBlocksDescendantFocus(){var ancestor=this.mParent;while(ancestor instanceof view_1.ViewGroup) {var vgAncestor=ancestor;if(vgAncestor.getDescendantFocusability() == view_1.ViewGroup.FOCUS_BLOCK_DESCENDANTS){return true;}else {ancestor = vgAncestor.getParent();}}return false;}},{key:"handleFocusGainInternal",value:function handleFocusGainInternal(direction,previouslyFocusedRect){if(View.DBG){System.out.println(this + " requestFocus()");}if((this.mPrivateFlags & View.PFLAG_FOCUSED) == 0){this.mPrivateFlags |= View.PFLAG_FOCUSED;var oldFocus=this.mAttachInfo != null?this.getRootView().findFocus():null;if(this.mParent != null){this.mParent.requestChildFocus(this,this);}if(this.mAttachInfo != null){this.mAttachInfo.mTreeObserver.dispatchOnGlobalFocusChange(oldFocus,this);}this.onFocusChanged(true,direction,previouslyFocusedRect);this.refreshDrawableState();}}},{key:"hasTransientState",value:function hasTransientState(){return (this.mPrivateFlags2 & View.PFLAG2_HAS_TRANSIENT_STATE) == View.PFLAG2_HAS_TRANSIENT_STATE;}},{key:"setHasTransientState",value:function setHasTransientState(hasTransientState){this.mTransientStateCount = hasTransientState?this.mTransientStateCount + 1:this.mTransientStateCount - 1;if(this.mTransientStateCount < 0){this.mTransientStateCount = 0;Log.e(View.VIEW_LOG_TAG,"hasTransientState decremented below 0: " + "unmatched pair of setHasTransientState calls");}else if(hasTransientState && this.mTransientStateCount == 1 || !hasTransientState && this.mTransientStateCount == 0){this.mPrivateFlags2 = this.mPrivateFlags2 & ~View.PFLAG2_HAS_TRANSIENT_STATE | (hasTransientState?View.PFLAG2_HAS_TRANSIENT_STATE:0);if(this.mParent != null){this.mParent.childHasTransientStateChanged(this,hasTransientState);}}}},{key:"isScrollContainer",value:function isScrollContainer(){return (this.mPrivateFlags & View.PFLAG_SCROLL_CONTAINER_ADDED) != 0;}},{key:"setScrollContainer",value:function setScrollContainer(isScrollContainer){if(isScrollContainer){if(this.mAttachInfo != null && (this.mPrivateFlags & View.PFLAG_SCROLL_CONTAINER_ADDED) == 0){this.mAttachInfo.mScrollContainers.add(this);this.mPrivateFlags |= View.PFLAG_SCROLL_CONTAINER_ADDED;}this.mPrivateFlags |= View.PFLAG_SCROLL_CONTAINER;}else {if((this.mPrivateFlags & View.PFLAG_SCROLL_CONTAINER_ADDED) != 0){this.mAttachInfo.mScrollContainers["delete"](this);}this.mPrivateFlags &= ~(View.PFLAG_SCROLL_CONTAINER | View.PFLAG_SCROLL_CONTAINER_ADDED);}}},{key:"isInTouchMode",value:function isInTouchMode(){if(this.mAttachInfo != null){return this.mAttachInfo.mInTouchMode;}else {return false;}}},{key:"isShown",value:function isShown(){var current=this;do {if((current.mViewFlags & View.VISIBILITY_MASK) != View.VISIBLE){return false;}var _parent=current.mParent;if(_parent == null){return false;}if(!(_parent instanceof View)){return true;}current = _parent;}while(current != null);return false;}},{key:"getVisibility",value:function getVisibility(){return this.mViewFlags & View.VISIBILITY_MASK;}},{key:"setVisibility",value:function setVisibility(visibility){this.setFlags(visibility,View.VISIBILITY_MASK);if(this.mBackground != null)this.mBackground.setVisible(visibility == View.VISIBLE,false);}},{key:"dispatchVisibilityChanged",value:function dispatchVisibilityChanged(changedView,visibility){this.onVisibilityChanged(changedView,visibility);}},{key:"onVisibilityChanged",value:function onVisibilityChanged(changedView,visibility){if(visibility == View.VISIBLE){if(this.mAttachInfo != null){this.initialAwakenScrollBars();}else {this.mPrivateFlags |= View.PFLAG_AWAKEN_SCROLL_BARS_ON_ATTACH;}}}},{key:"dispatchDisplayHint",value:function dispatchDisplayHint(hint){this.onDisplayHint(hint);}},{key:"onDisplayHint",value:function onDisplayHint(hint){}},{key:"dispatchWindowVisibilityChanged",value:function dispatchWindowVisibilityChanged(visibility){this.onWindowVisibilityChanged(visibility);}},{key:"onWindowVisibilityChanged",value:function onWindowVisibilityChanged(visibility){if(visibility == View.VISIBLE){this.initialAwakenScrollBars();}}},{key:"getWindowVisibility",value:function getWindowVisibility(){return this.mAttachInfo != null?this.mAttachInfo.mWindowVisibility:View.GONE;}},{key:"isEnabled",value:function isEnabled(){return (this.mViewFlags & View.ENABLED_MASK) == View.ENABLED;}},{key:"setEnabled",value:function setEnabled(enabled){if(enabled == this.isEnabled())return;this.setFlags(enabled?View.ENABLED:View.DISABLED,View.ENABLED_MASK);this.refreshDrawableState();this.invalidate(true);}},{key:"dispatchGenericMotionEvent",value:function dispatchGenericMotionEvent(event){if(event.isPointerEvent()){var action=event.getAction();if(action == view_1.MotionEvent.ACTION_HOVER_ENTER || action == view_1.MotionEvent.ACTION_HOVER_MOVE || action == view_1.MotionEvent.ACTION_HOVER_EXIT){}else if(this.dispatchGenericPointerEvent(event)){return true;}}if(this.dispatchGenericMotionEventInternal(event)){return true;}return false;}},{key:"dispatchGenericMotionEventInternal",value:function dispatchGenericMotionEventInternal(event){var li=this.mListenerInfo;if(li != null && li.mOnGenericMotionListener != null && (this.mViewFlags & View.ENABLED_MASK) == View.ENABLED && li.mOnGenericMotionListener.onGenericMotion(this,event)){return true;}if(this.onGenericMotionEvent(event)){return true;}return false;}},{key:"onGenericMotionEvent",value:function onGenericMotionEvent(event){return false;}},{key:"dispatchGenericPointerEvent",value:function dispatchGenericPointerEvent(event){return false;}},{key:"dispatchKeyEvent",value:function dispatchKeyEvent(event){var li=this.mListenerInfo;if(li != null && li.mOnKeyListener != null && (this.mViewFlags & View.ENABLED_MASK) == View.ENABLED && li.mOnKeyListener.onKey(this,event.getKeyCode(),event)){return true;}if(event.dispatch(this,this.mAttachInfo != null?this.mAttachInfo.mKeyDispatchState:null,this)){return true;}return false;}},{key:"setOnKeyListener",value:function setOnKeyListener(l){this.getListenerInfo().mOnKeyListener = l;}},{key:"getKeyDispatcherState",value:function getKeyDispatcherState(){return this.mAttachInfo != null?this.mAttachInfo.mKeyDispatchState:null;}},{key:"onKeyDown",value:function onKeyDown(keyCode,event){var result=false;if(KeyEvent.isConfirmKey(keyCode)){if((this.mViewFlags & View.ENABLED_MASK) == View.DISABLED){return true;}if(((this.mViewFlags & View.CLICKABLE) == View.CLICKABLE || (this.mViewFlags & View.LONG_CLICKABLE) == View.LONG_CLICKABLE) && event.getRepeatCount() == 0){this.setPressed(true);this.checkForLongClick(0);return true;}}return result;}},{key:"onKeyLongPress",value:function onKeyLongPress(keyCode,event){return false;}},{key:"onKeyUp",value:function onKeyUp(keyCode,event){if(KeyEvent.isConfirmKey(keyCode)){if((this.mViewFlags & View.ENABLED_MASK) == View.DISABLED){return true;}if((this.mViewFlags & View.CLICKABLE) == View.CLICKABLE && this.isPressed()){this.setPressed(false);if(!this.mHasPerformedLongPress){this.removeLongPressCallback();return this.performClick();}}}return false;}},{key:"dispatchTouchEvent",value:function dispatchTouchEvent(event){if(this.onFilterTouchEventForSecurity(event)){var li=this.mListenerInfo;if(li != null && li.mOnTouchListener != null && (this.mViewFlags & View.ENABLED_MASK) == View.ENABLED && li.mOnTouchListener.onTouch(this,event)){return true;}if(this.onTouchEvent(event)){return true;}}return false;}},{key:"onFilterTouchEventForSecurity",value:function onFilterTouchEventForSecurity(event){return true;}},{key:"onTouchEvent",value:function onTouchEvent(event){var viewFlags=this.mViewFlags;if((viewFlags & View.ENABLED_MASK) == View.DISABLED){if(event.getAction() == view_1.MotionEvent.ACTION_UP && (this.mPrivateFlags & View.PFLAG_PRESSED) != 0){this.setPressed(false);}return (viewFlags & View.CLICKABLE) == View.CLICKABLE || (viewFlags & View.LONG_CLICKABLE) == View.LONG_CLICKABLE;}if(this.mTouchDelegate != null){if(this.mTouchDelegate.onTouchEvent(event)){return true;}}if((viewFlags & View.CLICKABLE) == View.CLICKABLE || (viewFlags & View.LONG_CLICKABLE) == View.LONG_CLICKABLE){switch(event.getAction()){case view_1.MotionEvent.ACTION_UP:var prepressed=(this.mPrivateFlags & View.PFLAG_PREPRESSED) != 0;if((this.mPrivateFlags & View.PFLAG_PRESSED) != 0 || prepressed){var focusTaken=false;if(prepressed){this.setPressed(true);}if(!this.mHasPerformedLongPress){this.removeLongPressCallback();if(!focusTaken){if(this.mPerformClick == null){this.mPerformClick = new PerformClick(this);}if(!this.post(this.mPerformClick)){this.performClick(event);}}}if(this.mUnsetPressedState == null){this.mUnsetPressedState = new UnsetPressedState(this);}if(prepressed){this.postDelayed(this.mUnsetPressedState,view_1.ViewConfiguration.getPressedStateDuration());}else if(!this.post(this.mUnsetPressedState)){this.mUnsetPressedState.run();}this.removeTapCallback();}break;case view_1.MotionEvent.ACTION_DOWN:this.mHasPerformedLongPress = false;var isInScrollingContainer=this.isInScrollingContainer();if(isInScrollingContainer){this.mPrivateFlags |= View.PFLAG_PREPRESSED;if(this.mPendingCheckForTap == null){this.mPendingCheckForTap = new CheckForTap(this);}this.postDelayed(this.mPendingCheckForTap,view_1.ViewConfiguration.getTapTimeout());}else {this.setPressed(true);this.checkForLongClick(0);}break;case view_1.MotionEvent.ACTION_CANCEL:this.setPressed(false);this.removeTapCallback();this.removeLongPressCallback();break;case view_1.MotionEvent.ACTION_MOVE:var x=event.getX();var y=event.getY();if(!this.pointInView(x,y,this.mTouchSlop)){this.removeTapCallback();if((this.mPrivateFlags & View.PFLAG_PRESSED) != 0){this.removeLongPressCallback();this.setPressed(false);}}break;}return true;}return false;}},{key:"isInScrollingContainer",value:function isInScrollingContainer(){var p=this.getParent();while(p != null && p instanceof view_1.ViewGroup) {if(p.shouldDelayChildPressedState()){return true;}p = p.getParent();}return false;}},{key:"cancelPendingInputEvents",value:function cancelPendingInputEvents(){this.dispatchCancelPendingInputEvents();}},{key:"dispatchCancelPendingInputEvents",value:function dispatchCancelPendingInputEvents(){this.mPrivateFlags3 &= ~View.PFLAG3_CALLED_SUPER;this.onCancelPendingInputEvents();if((this.mPrivateFlags3 & View.PFLAG3_CALLED_SUPER) != View.PFLAG3_CALLED_SUPER){throw Error("new SuperNotCalledException(\"View \" + this.getClass().getSimpleName() + \" did not call through to super.onCancelPendingInputEvents()\")");}}},{key:"onCancelPendingInputEvents",value:function onCancelPendingInputEvents(){this.removePerformClickCallback();this.cancelLongPress();this.mPrivateFlags3 |= View.PFLAG3_CALLED_SUPER;}},{key:"removeLongPressCallback",value:function removeLongPressCallback(){if(this.mPendingCheckForLongPress != null){this.removeCallbacks(this.mPendingCheckForLongPress);}}},{key:"removePerformClickCallback",value:function removePerformClickCallback(){if(this.mPerformClick != null){this.removeCallbacks(this.mPerformClick);}}},{key:"removeUnsetPressCallback",value:function removeUnsetPressCallback(){if((this.mPrivateFlags & View.PFLAG_PRESSED) != 0 && this.mUnsetPressedState != null){this.setPressed(false);this.removeCallbacks(this.mUnsetPressedState);}}},{key:"removeTapCallback",value:function removeTapCallback(){if(this.mPendingCheckForTap != null){this.mPrivateFlags &= ~View.PFLAG_PREPRESSED;this.removeCallbacks(this.mPendingCheckForTap);}}},{key:"cancelLongPress",value:function cancelLongPress(){this.removeLongPressCallback();this.removeTapCallback();}},{key:"setTouchDelegate",value:function setTouchDelegate(delegate){this.mTouchDelegate = delegate;}},{key:"getTouchDelegate",value:function getTouchDelegate(){return this.mTouchDelegate;}},{key:"getListenerInfo",value:function getListenerInfo(){if(this.mListenerInfo != null){return this.mListenerInfo;}this.mListenerInfo = new View.ListenerInfo();return this.mListenerInfo;}},{key:"addOnLayoutChangeListener",value:function addOnLayoutChangeListener(listener){var li=this.getListenerInfo();if(li.mOnLayoutChangeListeners == null){li.mOnLayoutChangeListeners = new ArrayList();}if(!li.mOnLayoutChangeListeners.contains(listener)){li.mOnLayoutChangeListeners.add(listener);}}},{key:"removeOnLayoutChangeListener",value:function removeOnLayoutChangeListener(listener){var li=this.mListenerInfo;if(li == null || li.mOnLayoutChangeListeners == null){return;}li.mOnLayoutChangeListeners.remove(listener);}},{key:"addOnAttachStateChangeListener",value:function addOnAttachStateChangeListener(listener){var li=this.getListenerInfo();if(li.mOnAttachStateChangeListeners == null){li.mOnAttachStateChangeListeners = new CopyOnWriteArrayList();}li.mOnAttachStateChangeListeners.add(listener);}},{key:"removeOnAttachStateChangeListener",value:function removeOnAttachStateChangeListener(listener){var li=this.mListenerInfo;if(li == null || li.mOnAttachStateChangeListeners == null){return;}li.mOnAttachStateChangeListeners.remove(listener);}},{key:"setOnClickListener",value:function setOnClickListener(l){if(!this.isClickable()){this.setClickable(true);}this.getListenerInfo().mOnClickListener = l;}},{key:"hasOnClickListeners",value:function hasOnClickListeners(){var li=this.mListenerInfo;return li != null && li.mOnClickListener != null;}},{key:"setOnLongClickListener",value:function setOnLongClickListener(l){if(!this.isLongClickable()){this.setLongClickable(true);}this.getListenerInfo().mOnLongClickListener = l;}},{key:"playSoundEffect",value:function playSoundEffect(soundConstant){}},{key:"performHapticFeedback",value:function performHapticFeedback(feedbackConstant){return false;}},{key:"performClick",value:function performClick(event){this._sendClickToBindElement(event);var li=this.mListenerInfo;if(li != null && li.mOnClickListener != null){li.mOnClickListener.onClick(this);return true;}return false;}},{key:"_sendClickToBindElement",value:function _sendClickToBindElement(event){var touch=event?event._activeTouch:null;var screenX=touch?touch.screenX:0;var screenY=touch?touch.screenY:0;var clientX=touch?touch.clientX:0;var clientY=touch?touch.clientY:0;var clickEvent=document.createEvent('MouseEvents');clickEvent.initMouseEvent('click',false,true,window,1,screenX,screenY,clientX,clientY,false,false,false,false,0,null);clickEvent.forwardedTouchEvent = true;this.bindElement.dispatchEvent(clickEvent);}},{key:"callOnClick",value:function callOnClick(){var li=this.mListenerInfo;if(li != null && li.mOnClickListener != null){li.mOnClickListener.onClick(this);return true;}return false;}},{key:"performLongClick",value:function performLongClick(){var handled=false;var li=this.mListenerInfo;if(li != null && li.mOnLongClickListener != null){handled = li.mOnLongClickListener.onLongClick(this);}return handled;}},{key:"performButtonActionOnTouchDown",value:function performButtonActionOnTouchDown(event){return false;}},{key:"checkForLongClick",value:function checkForLongClick(){var delayOffset=arguments.length <= 0 || arguments[0] === undefined?0:arguments[0];if((this.mViewFlags & View.LONG_CLICKABLE) == View.LONG_CLICKABLE){this.mHasPerformedLongPress = false;if(this.mPendingCheckForLongPress == null){this.mPendingCheckForLongPress = new CheckForLongPress(this);}this.mPendingCheckForLongPress.rememberWindowAttachCount();this.postDelayed(this.mPendingCheckForLongPress,view_1.ViewConfiguration.getLongPressTimeout() - delayOffset);}}},{key:"setOnTouchListener",value:function setOnTouchListener(l){this.getListenerInfo().mOnTouchListener = l;}},{key:"isClickable",value:function isClickable(){return (this.mViewFlags & View.CLICKABLE) == View.CLICKABLE;}},{key:"setClickable",value:function setClickable(clickable){this.setFlags(clickable?View.CLICKABLE:0,View.CLICKABLE);}},{key:"isLongClickable",value:function isLongClickable(){return (this.mViewFlags & View.LONG_CLICKABLE) == View.LONG_CLICKABLE;}},{key:"setLongClickable",value:function setLongClickable(longClickable){this.setFlags(longClickable?View.LONG_CLICKABLE:0,View.LONG_CLICKABLE);}},{key:"setPressed",value:function setPressed(pressed){var needsRefresh=pressed != ((this.mPrivateFlags & View.PFLAG_PRESSED) == View.PFLAG_PRESSED);if(pressed){this.mPrivateFlags |= View.PFLAG_PRESSED;}else {this.mPrivateFlags &= ~View.PFLAG_PRESSED;}if(needsRefresh){this.refreshDrawableState();}this.dispatchSetPressed(pressed);}},{key:"dispatchSetPressed",value:function dispatchSetPressed(pressed){}},{key:"isPressed",value:function isPressed(){return (this.mPrivateFlags & View.PFLAG_PRESSED) == View.PFLAG_PRESSED;}},{key:"setSelected",value:function setSelected(selected){if((this.mPrivateFlags & View.PFLAG_SELECTED) != 0 != selected){this.mPrivateFlags = this.mPrivateFlags & ~View.PFLAG_SELECTED | (selected?View.PFLAG_SELECTED:0);if(!selected)this.resetPressedState();this.invalidate(true);this.refreshDrawableState();this.dispatchSetSelected(selected);}}},{key:"dispatchSetSelected",value:function dispatchSetSelected(selected){}},{key:"isSelected",value:function isSelected(){return (this.mPrivateFlags & View.PFLAG_SELECTED) != 0;}},{key:"setActivated",value:function setActivated(activated){if((this.mPrivateFlags & View.PFLAG_ACTIVATED) != 0 != activated){this.mPrivateFlags = this.mPrivateFlags & ~View.PFLAG_ACTIVATED | (activated?View.PFLAG_ACTIVATED:0);this.invalidate(true);this.refreshDrawableState();this.dispatchSetActivated(activated);}}},{key:"dispatchSetActivated",value:function dispatchSetActivated(activated){}},{key:"isActivated",value:function isActivated(){return (this.mPrivateFlags & View.PFLAG_ACTIVATED) != 0;}},{key:"getViewTreeObserver",value:function getViewTreeObserver(){if(this.mAttachInfo != null){return this.mAttachInfo.mTreeObserver;}if(this.mFloatingTreeObserver == null){this.mFloatingTreeObserver = new view_1.ViewTreeObserver();}return this.mFloatingTreeObserver;}},{key:"isLayoutRtl",value:function isLayoutRtl(){return false;}},{key:"getBaseline",value:function getBaseline(){return -1;}},{key:"isLayoutRequested",value:function isLayoutRequested(){return (this.mPrivateFlags & View.PFLAG_FORCE_LAYOUT) == View.PFLAG_FORCE_LAYOUT;}},{key:"getLayoutParams",value:function getLayoutParams(){return this.mLayoutParams;}},{key:"setLayoutParams",value:function setLayoutParams(params){if(params == null){throw new Error("Layout parameters cannot be null");}this.mLayoutParams = params;var p=this.mParent;if(p instanceof view_1.ViewGroup){p.onSetLayoutParams(this,params);}this.requestLayout();}},{key:"requestLayout",value:function requestLayout(){if(this.mMeasureCache != null)this.mMeasureCache.clear();if(this.mAttachInfo != null && this.mAttachInfo.mViewRequestingLayout == null){var viewRoot=this.getViewRootImpl();if(viewRoot != null && viewRoot.isInLayout()){if(!viewRoot.requestLayoutDuringLayout(this)){return;}}this.mAttachInfo.mViewRequestingLayout = this;}this.mPrivateFlags |= View.PFLAG_FORCE_LAYOUT;this.mPrivateFlags |= View.PFLAG_INVALIDATED;if(this.mParent != null && !this.mParent.isLayoutRequested()){this.mParent.requestLayout();}}},{key:"forceLayout",value:function forceLayout(){if(this.mMeasureCache != null)this.mMeasureCache.clear();this.mPrivateFlags |= View.PFLAG_FORCE_LAYOUT;this.mPrivateFlags |= View.PFLAG_INVALIDATED;}},{key:"isLaidOut",value:function isLaidOut(){return (this.mPrivateFlags3 & View.PFLAG3_IS_LAID_OUT) == View.PFLAG3_IS_LAID_OUT;}},{key:"layout",value:function layout(l,t,r,b){if((this.mPrivateFlags3 & View.PFLAG3_MEASURE_NEEDED_BEFORE_LAYOUT) != 0){this.onMeasure(this.mOldWidthMeasureSpec,this.mOldHeightMeasureSpec);this.mPrivateFlags3 &= ~View.PFLAG3_MEASURE_NEEDED_BEFORE_LAYOUT;}var oldL=this.mLeft;var oldT=this.mTop;var oldB=this.mBottom;var oldR=this.mRight;var changed=this.setFrame(l,t,r,b);if(changed || (this.mPrivateFlags & View.PFLAG_LAYOUT_REQUIRED) == View.PFLAG_LAYOUT_REQUIRED){this.onLayout(changed,l,t,r,b);this.mPrivateFlags &= ~View.PFLAG_LAYOUT_REQUIRED;var li=this.mListenerInfo;if(li != null && li.mOnLayoutChangeListeners != null){var listenersCopy=li.mOnLayoutChangeListeners.clone();var numListeners=listenersCopy.size();for(var i=0;i < numListeners;++i) {listenersCopy.get(i).onLayoutChange(this,l,t,r,b,oldL,oldT,oldR,oldB);}}}this.mPrivateFlags &= ~View.PFLAG_FORCE_LAYOUT;this.mPrivateFlags3 |= View.PFLAG3_IS_LAID_OUT;}},{key:"onLayout",value:function onLayout(changed,left,top,right,bottom){}},{key:"setFrame",value:function setFrame(left,top,right,bottom){var changed=false;if(View.DBG){Log.i("View",this + " View.setFrame(" + left + "," + top + "," + right + "," + bottom + ")");}if(this.mLeft != left || this.mRight != right || this.mTop != top || this.mBottom != bottom){changed = true;var drawn=this.mPrivateFlags & View.PFLAG_DRAWN;var oldWidth=this.mRight - this.mLeft;var oldHeight=this.mBottom - this.mTop;var newWidth=right - left;var newHeight=bottom - top;var sizeChanged=newWidth != oldWidth || newHeight != oldHeight;this.invalidate(sizeChanged);this.mLeft = left;this.mTop = top;this.mRight = right;this.mBottom = bottom;this.mPrivateFlags |= View.PFLAG_HAS_BOUNDS;if(sizeChanged){if((this.mPrivateFlags & View.PFLAG_PIVOT_EXPLICITLY_SET) == 0){}this.sizeChange(newWidth,newHeight,oldWidth,oldHeight);}if((this.mViewFlags & View.VISIBILITY_MASK) == View.VISIBLE){this.mPrivateFlags |= View.PFLAG_DRAWN;this.invalidate(sizeChanged);}this.mPrivateFlags |= drawn;this.mBackgroundSizeChanged = true;}return changed;}},{key:"sizeChange",value:function sizeChange(newWidth,newHeight,oldWidth,oldHeight){this.onSizeChanged(newWidth,newHeight,oldWidth,oldHeight);if(this.mOverlay != null){this.mOverlay.getOverlayView().setRight(newWidth);this.mOverlay.getOverlayView().setBottom(newHeight);}}},{key:"getHitRect",value:function getHitRect(outRect){outRect.set(this.mLeft,this.mTop,this.mRight,this.mBottom);}},{key:"getFocusedRect",value:function getFocusedRect(r){this.getDrawingRect(r);}},{key:"getDrawingRect",value:function getDrawingRect(outRect){outRect.left = this.mScrollX;outRect.top = this.mScrollY;outRect.right = this.mScrollX + (this.mRight - this.mLeft);outRect.bottom = this.mScrollY + (this.mBottom - this.mTop);}},{key:"getGlobalVisibleRect",value:function getGlobalVisibleRect(r){var globalOffset=arguments.length <= 1 || arguments[1] === undefined?null:arguments[1];var width=this.mRight - this.mLeft;var height=this.mBottom - this.mTop;if(width > 0 && height > 0){r.set(0,0,width,height);if(globalOffset != null){globalOffset.set(-this.mScrollX,-this.mScrollY);}return this.mParent == null || this.mParent.getChildVisibleRect(this,r,globalOffset);}return false;}},{key:"getMeasuredWidth",value:function getMeasuredWidth(){return this.mMeasuredWidth & View.MEASURED_SIZE_MASK;}},{key:"getMeasuredWidthAndState",value:function getMeasuredWidthAndState(){return this.mMeasuredWidth;}},{key:"getMeasuredHeight",value:function getMeasuredHeight(){return this.mMeasuredHeight & View.MEASURED_SIZE_MASK;}},{key:"getMeasuredHeightAndState",value:function getMeasuredHeightAndState(){return this.mMeasuredHeight;}},{key:"getMeasuredState",value:function getMeasuredState(){return this.mMeasuredWidth & View.MEASURED_STATE_MASK | this.mMeasuredHeight >> View.MEASURED_HEIGHT_STATE_SHIFT & View.MEASURED_STATE_MASK >> View.MEASURED_HEIGHT_STATE_SHIFT;}},{key:"measure",value:function measure(widthMeasureSpec,heightMeasureSpec){var key=widthMeasureSpec + ',' + heightMeasureSpec;if(this.mMeasureCache == null)this.mMeasureCache = new Map();if((this.mPrivateFlags & View.PFLAG_FORCE_LAYOUT) == View.PFLAG_FORCE_LAYOUT || widthMeasureSpec != this.mOldWidthMeasureSpec || heightMeasureSpec != this.mOldHeightMeasureSpec){this.mPrivateFlags &= ~View.PFLAG_MEASURED_DIMENSION_SET;var cacheValue=(this.mPrivateFlags & View.PFLAG_FORCE_LAYOUT) == View.PFLAG_FORCE_LAYOUT?null:this.mMeasureCache.get(key);if(cacheValue == null){this.onMeasure(widthMeasureSpec,heightMeasureSpec);this.mPrivateFlags3 &= ~View.PFLAG3_MEASURE_NEEDED_BEFORE_LAYOUT;}else {this.setMeasuredDimension(cacheValue[0],cacheValue[1]);this.mPrivateFlags3 |= View.PFLAG3_MEASURE_NEEDED_BEFORE_LAYOUT;}if((this.mPrivateFlags & View.PFLAG_MEASURED_DIMENSION_SET) != View.PFLAG_MEASURED_DIMENSION_SET){throw new Error("onMeasure() did not set the" + " measured dimension by calling" + " setMeasuredDimension()");}this.mPrivateFlags |= View.PFLAG_LAYOUT_REQUIRED;}this.mOldWidthMeasureSpec = widthMeasureSpec;this.mOldHeightMeasureSpec = heightMeasureSpec;this.mMeasureCache.set(key,[this.mMeasuredWidth,this.mMeasuredHeight]);}},{key:"onMeasure",value:function onMeasure(widthMeasureSpec,heightMeasureSpec){this.setMeasuredDimension(View.getDefaultSize(this.getSuggestedMinimumWidth(),widthMeasureSpec),View.getDefaultSize(this.getSuggestedMinimumHeight(),heightMeasureSpec));}},{key:"setMeasuredDimension",value:function setMeasuredDimension(measuredWidth,measuredHeight){this.mMeasuredWidth = measuredWidth;this.mMeasuredHeight = measuredHeight;this.mPrivateFlags |= View.PFLAG_MEASURED_DIMENSION_SET;}},{key:"getSuggestedMinimumHeight",value:function getSuggestedMinimumHeight(){return this.mBackground == null?this.mMinHeight:Math.max(this.mMinHeight,this.mBackground.getMinimumHeight());}},{key:"getSuggestedMinimumWidth",value:function getSuggestedMinimumWidth(){return this.mBackground == null?this.mMinWidth:Math.max(this.mMinWidth,this.mBackground.getMinimumWidth());}},{key:"getMinimumHeight",value:function getMinimumHeight(){return this.mMinHeight;}},{key:"setMinimumHeight",value:function setMinimumHeight(minHeight){this.mMinHeight = minHeight;this.requestLayout();}},{key:"getMinimumWidth",value:function getMinimumWidth(){return this.mMinWidth;}},{key:"setMinimumWidth",value:function setMinimumWidth(minWidth){this.mMinWidth = minWidth;this.requestLayout();}},{key:"_invalidateRect",value:function _invalidateRect(l,t,r,b){if(this.skipInvalidate()){return;}if((this.mPrivateFlags & (View.PFLAG_DRAWN | View.PFLAG_HAS_BOUNDS)) == (View.PFLAG_DRAWN | View.PFLAG_HAS_BOUNDS) || (this.mPrivateFlags & View.PFLAG_DRAWING_CACHE_VALID) == View.PFLAG_DRAWING_CACHE_VALID || (this.mPrivateFlags & View.PFLAG_INVALIDATED) != View.PFLAG_INVALIDATED){this.mPrivateFlags &= ~View.PFLAG_DRAWING_CACHE_VALID;this.mPrivateFlags |= View.PFLAG_INVALIDATED;this.mPrivateFlags |= View.PFLAG_DIRTY;var p=this.mParent;var ai=this.mAttachInfo;if(p != null && ai != null && l < r && t < b){var _scrollX=this.mScrollX;var _scrollY=this.mScrollY;var tmpr=ai.mTmpInvalRect;tmpr.set(l - _scrollX,t - _scrollY,r - _scrollX,b - _scrollY);p.invalidateChild(this,tmpr);}}}},{key:"_invalidateCache",value:function _invalidateCache(){var invalidateCache=arguments.length <= 0 || arguments[0] === undefined?true:arguments[0];if(this.skipInvalidate()){return;}if((this.mPrivateFlags & (View.PFLAG_DRAWN | View.PFLAG_HAS_BOUNDS)) == (View.PFLAG_DRAWN | View.PFLAG_HAS_BOUNDS) || invalidateCache && (this.mPrivateFlags & View.PFLAG_DRAWING_CACHE_VALID) == View.PFLAG_DRAWING_CACHE_VALID || (this.mPrivateFlags & View.PFLAG_INVALIDATED) != View.PFLAG_INVALIDATED || this.isOpaque() != this.mLastIsOpaque){this.mLastIsOpaque = this.isOpaque();this.mPrivateFlags &= ~View.PFLAG_DRAWN;this.mPrivateFlags |= View.PFLAG_DIRTY;if(invalidateCache){this.mPrivateFlags |= View.PFLAG_INVALIDATED;this.mPrivateFlags &= ~View.PFLAG_DRAWING_CACHE_VALID;}var ai=this.mAttachInfo;var p=this.mParent;if(p != null && ai != null){var r=ai.mTmpInvalRect;r.set(0,0,this.mRight - this.mLeft,this.mBottom - this.mTop);p.invalidateChild(this,r);}}}},{key:"invalidate",value:function invalidate(){for(var _len19=arguments.length,args=Array(_len19),_key19=0;_key19 < _len19;_key19++) {args[_key19] = arguments[_key19];}if(args.length === 0 || args.length === 1 && typeof args[0] === 'boolean'){this._invalidateCache(args[0]);}else if(args.length === 1 && args[0] instanceof Rect){var rect=args[0];this._invalidateRect(rect.left,rect.top,rect.right,rect.bottom);}else if(args.length === 4){this._invalidateRect.apply(this,args);}}},{key:"invalidateViewProperty",value:function invalidateViewProperty(invalidateParent,forceRedraw){if((this.mPrivateFlags & View.PFLAG_DRAW_ANIMATION) == View.PFLAG_DRAW_ANIMATION){if(invalidateParent){this.invalidateParentCaches();}if(forceRedraw){this.mPrivateFlags |= View.PFLAG_DRAWN;}this.invalidate(false);}else {var ai=this.mAttachInfo;var p=this.mParent;if(p != null && ai != null){var r=ai.mTmpInvalRect;r.set(0,0,this.mRight - this.mLeft,this.mBottom - this.mTop);if(this.mParent instanceof view_1.ViewGroup){this.mParent.invalidateChildFast(this,r);}else {this.mParent.invalidateChild(this,r);}}}}},{key:"invalidateParentCaches",value:function invalidateParentCaches(){if(this.mParent instanceof View){this.mParent.mPrivateFlags |= View.PFLAG_INVALIDATED;}}},{key:"invalidateParentIfNeeded",value:function invalidateParentIfNeeded(){}},{key:"postInvalidate",value:function postInvalidate(l,t,r,b){this.postInvalidateDelayed(0,l,t,r,b);}},{key:"postInvalidateDelayed",value:function postInvalidateDelayed(delayMilliseconds,left,top,right,bottom){var attachInfo=this.mAttachInfo;if(attachInfo != null){if(!Number.isInteger(left) || !Number.isInteger(top) || !Number.isInteger(right) || !Number.isInteger(bottom)){attachInfo.mViewRootImpl.dispatchInvalidateDelayed(this,delayMilliseconds);}else {var info=View.AttachInfo.InvalidateInfo.obtain();info.target = this;info.left = left;info.top = top;info.right = right;info.bottom = bottom;attachInfo.mViewRootImpl.dispatchInvalidateRectDelayed(info,delayMilliseconds);}}}},{key:"postInvalidateOnAnimation",value:function postInvalidateOnAnimation(left,top,right,bottom){var attachInfo=this.mAttachInfo;if(attachInfo != null){if(!Number.isInteger(left) || !Number.isInteger(top) || !Number.isInteger(right) || !Number.isInteger(bottom)){attachInfo.mViewRootImpl.dispatchInvalidateOnAnimation(this);}else {var info=View.AttachInfo.InvalidateInfo.obtain();info.target = this;info.left = left;info.top = top;info.right = right;info.bottom = bottom;attachInfo.mViewRootImpl.dispatchInvalidateRectOnAnimation(info);}}}},{key:"skipInvalidate",value:function skipInvalidate(){return (this.mViewFlags & View.VISIBILITY_MASK) != View.VISIBLE;}},{key:"isOpaque",value:function isOpaque(){return (this.mPrivateFlags & View.PFLAG_OPAQUE_MASK) == View.PFLAG_OPAQUE_MASK && this.getFinalAlpha() >= 1;}},{key:"computeOpaqueFlags",value:function computeOpaqueFlags(){ // Opaque if:
//   - Has a background
//   - Background is opaque
//   - Doesn't have scrollbars or scrollbars overlay
if(this.mBackground != null && this.mBackground.getOpacity() == PixelFormat.OPAQUE){this.mPrivateFlags |= View.PFLAG_OPAQUE_BACKGROUND;}else {this.mPrivateFlags &= ~View.PFLAG_OPAQUE_BACKGROUND;}var flags=this.mViewFlags;if((flags & View.SCROLLBARS_VERTICAL) == 0 && (flags & View.SCROLLBARS_HORIZONTAL) == 0){this.mPrivateFlags |= View.PFLAG_OPAQUE_SCROLLBARS;}else {this.mPrivateFlags &= ~View.PFLAG_OPAQUE_SCROLLBARS;}}},{key:"getLayerType",value:function getLayerType(){return this.mLayerType;}},{key:"setClipBounds",value:function setClipBounds(clipBounds){if(clipBounds != null){if(clipBounds.equals(this.mClipBounds)){return;}if(this.mClipBounds == null){this.invalidate();this.mClipBounds = new Rect(clipBounds);}else {this.invalidate(Math.min(this.mClipBounds.left,clipBounds.left),Math.min(this.mClipBounds.top,clipBounds.top),Math.max(this.mClipBounds.right,clipBounds.right),Math.max(this.mClipBounds.bottom,clipBounds.bottom));this.mClipBounds.set(clipBounds);}}else {if(this.mClipBounds != null){this.invalidate();this.mClipBounds = null;}}}},{key:"getClipBounds",value:function getClipBounds(){return this.mClipBounds != null?new Rect(this.mClipBounds):null;}},{key:"getDrawingTime",value:function getDrawingTime(){return this.mAttachInfo != null?this.mAttachInfo.mDrawingTime:0;}},{key:"drawFromParent",value:function drawFromParent(canvas,parent,drawingTime){var useDisplayListProperties=false;var more=false;var childHasIdentityMatrix=true;var flags=parent.mGroupFlags;var scalingRequired=false;var concatMatrix=false;var caching=false;var layerType=this.getLayerType();if((flags & view_1.ViewGroup.FLAG_CHILDREN_DRAWN_WITH_CACHE) != 0 || (flags & view_1.ViewGroup.FLAG_ALWAYS_DRAWN_WITH_CACHE) != 0){caching = true;}else {caching = layerType != View.LAYER_TYPE_NONE;}concatMatrix == concatMatrix || !childHasIdentityMatrix;this.mPrivateFlags |= View.PFLAG_DRAWN;if(!concatMatrix && (flags & (view_1.ViewGroup.FLAG_SUPPORT_STATIC_TRANSFORMATIONS | view_1.ViewGroup.FLAG_CLIP_CHILDREN)) == view_1.ViewGroup.FLAG_CLIP_CHILDREN && canvas.quickReject(this.mLeft,this.mTop,this.mRight,this.mBottom) && (this.mPrivateFlags & View.PFLAG_DRAW_ANIMATION) == 0){this.mPrivateFlags2 |= View.PFLAG2_VIEW_QUICK_REJECTED;return more;}this.mPrivateFlags2 &= ~View.PFLAG2_VIEW_QUICK_REJECTED;var cache=null;if(caching){if(layerType != View.LAYER_TYPE_NONE){layerType = View.LAYER_TYPE_SOFTWARE;this.buildDrawingCache(true);}cache = this.getDrawingCache(true);}this.computeScroll();var sx=this.mScrollX;var sy=this.mScrollY;this.postSyncScrollToElement();var hasNoCache=cache == null;var offsetForScroll=cache == null;var restoreTo=canvas.save();if(offsetForScroll){canvas.translate(this.mLeft - sx,this.mTop - sy);}else {canvas.translate(this.mLeft,this.mTop);}var alpha=1;if((flags & view_1.ViewGroup.FLAG_CLIP_CHILDREN) == view_1.ViewGroup.FLAG_CLIP_CHILDREN && !useDisplayListProperties && cache == null){if(offsetForScroll){canvas.clipRect(sx,sy,sx + (this.mRight - this.mLeft),sy + (this.mBottom - this.mTop));}else {if(!scalingRequired || cache == null){canvas.clipRect(0,0,this.mRight - this.mLeft,this.mBottom - this.mTop);}else {canvas.clipRect(0,0,cache.getWidth(),cache.getHeight());}}}if(hasNoCache){if((this.mPrivateFlags & View.PFLAG_SKIP_DRAW) == View.PFLAG_SKIP_DRAW){this.mPrivateFlags &= ~View.PFLAG_DIRTY_MASK;this.dispatchDraw(canvas);}else {this.draw(canvas);}}else if(cache != null){this.mPrivateFlags &= ~View.PFLAG_DIRTY_MASK;if(alpha < 1){parent.mGroupFlags |= view_1.ViewGroup.FLAG_ALPHA_LOWER_THAN_ONE;}else if((flags & view_1.ViewGroup.FLAG_ALPHA_LOWER_THAN_ONE) != 0){parent.mGroupFlags &= ~view_1.ViewGroup.FLAG_ALPHA_LOWER_THAN_ONE;}canvas.drawCanvas(cache,0,0);}if(restoreTo >= 0){canvas.restoreToCount(restoreTo);}return more;}},{key:"draw",value:function draw(canvas){if(this.mClipBounds != null){canvas.clipRect(this.mClipBounds);}var privateFlags=this.mPrivateFlags;var dirtyOpaque=(privateFlags & View.PFLAG_DIRTY_MASK) == View.PFLAG_DIRTY_OPAQUE && (this.mAttachInfo == null || !this.mAttachInfo.mIgnoreDirtyState);this.mPrivateFlags = privateFlags & ~View.PFLAG_DIRTY_MASK | View.PFLAG_DRAWN;if(!dirtyOpaque){var background=this.mBackground;if(background != null){var _scrollX2=this.mScrollX;var _scrollY2=this.mScrollY;if(this.mBackgroundSizeChanged){background.setBounds(0,0,this.mRight - this.mLeft,this.mBottom - this.mTop);this.mBackgroundSizeChanged = false;}if((_scrollX2 | _scrollY2) == 0){background.draw(canvas);}else {canvas.translate(_scrollX2,_scrollY2);background.draw(canvas);canvas.translate(-_scrollX2,-_scrollY2);}}}if(!dirtyOpaque)this.onDraw(canvas);this.dispatchDraw(canvas);this.onDrawScrollBars(canvas);if(this.mOverlay != null && !this.mOverlay.isEmpty()){this.mOverlay.getOverlayView().dispatchDraw(canvas);}}},{key:"onDraw",value:function onDraw(canvas){}},{key:"dispatchDraw",value:function dispatchDraw(canvas){}},{key:"onDrawScrollBars",value:function onDrawScrollBars(canvas){var cache=this.mScrollCache;if(cache != null){var state=cache.state;if(state == ScrollabilityCache.OFF){return;}var invalidate=false;if(state == ScrollabilityCache.FADING){cache._computeAlphaToScrollBar();invalidate = true;}else {cache.scrollBar.setAlpha(255);}var viewFlags=this.mViewFlags;var drawHorizontalScrollBar=(viewFlags & View.SCROLLBARS_HORIZONTAL) == View.SCROLLBARS_HORIZONTAL;var drawVerticalScrollBar=(viewFlags & View.SCROLLBARS_VERTICAL) == View.SCROLLBARS_VERTICAL && !this.isVerticalScrollBarHidden();if(drawVerticalScrollBar || drawHorizontalScrollBar){var width=this.mRight - this.mLeft;var height=this.mBottom - this.mTop;var scrollBar=cache.scrollBar;var _scrollX3=this.mScrollX;var _scrollY3=this.mScrollY;var inside=true;var left=undefined;var _top8=undefined;var right=undefined;var bottom=undefined;if(drawHorizontalScrollBar){var size=scrollBar.getSize(false);if(size <= 0){size = cache.scrollBarSize;}scrollBar.setParameters(this.computeHorizontalScrollRange(),this.computeHorizontalScrollOffset(),this.computeHorizontalScrollExtent(),false);var verticalScrollBarGap=drawVerticalScrollBar?this.getVerticalScrollbarWidth():0;_top8 = _scrollY3 + height - size;left = _scrollX3 + this.mPaddingLeft;right = _scrollX3 + width - -verticalScrollBarGap;bottom = _top8 + size;this.onDrawHorizontalScrollBar(canvas,scrollBar,left,_top8,right,bottom);if(invalidate){this.invalidate(left,_top8,right,bottom);}}if(drawVerticalScrollBar){var size=scrollBar.getSize(true);if(size <= 0){size = cache.scrollBarSize;}scrollBar.setParameters(this.computeVerticalScrollRange(),this.computeVerticalScrollOffset(),this.computeVerticalScrollExtent(),true);left = _scrollX3 + width - size;_top8 = _scrollY3 + this.mPaddingTop;right = left + size;bottom = _scrollY3 + height;this.onDrawVerticalScrollBar(canvas,scrollBar,left,_top8,right,bottom);if(invalidate){this.invalidate(left,_top8,right,bottom);}}}}}},{key:"isVerticalScrollBarHidden",value:function isVerticalScrollBarHidden(){return false;}},{key:"onDrawHorizontalScrollBar",value:function onDrawHorizontalScrollBar(canvas,scrollBar,l,t,r,b){scrollBar.setBounds(l,t,r,b);scrollBar.draw(canvas);}},{key:"onDrawVerticalScrollBar",value:function onDrawVerticalScrollBar(canvas,scrollBar,l,t,r,b){scrollBar.setBounds(l,t,r,b);scrollBar.draw(canvas);}},{key:"isHardwareAccelerated",value:function isHardwareAccelerated(){return false;}},{key:"setDrawingCacheEnabled",value:function setDrawingCacheEnabled(enabled){this.mCachingFailed = false;this.setFlags(enabled?View.DRAWING_CACHE_ENABLED:0,View.DRAWING_CACHE_ENABLED);}},{key:"isDrawingCacheEnabled",value:function isDrawingCacheEnabled(){return (this.mViewFlags & View.DRAWING_CACHE_ENABLED) == View.DRAWING_CACHE_ENABLED;}},{key:"getDrawingCache",value:function getDrawingCache(){var autoScale=arguments.length <= 0 || arguments[0] === undefined?false:arguments[0];if((this.mViewFlags & View.WILL_NOT_CACHE_DRAWING) == View.WILL_NOT_CACHE_DRAWING){return null;}if((this.mViewFlags & View.DRAWING_CACHE_ENABLED) == View.DRAWING_CACHE_ENABLED){this.buildDrawingCache(autoScale);}return this.mUnscaledDrawingCache;}},{key:"setDrawingCacheBackgroundColor",value:function setDrawingCacheBackgroundColor(color){if(color != this.mDrawingCacheBackgroundColor){this.mDrawingCacheBackgroundColor = color;this.mPrivateFlags &= ~View.PFLAG_DRAWING_CACHE_VALID;}}},{key:"getDrawingCacheBackgroundColor",value:function getDrawingCacheBackgroundColor(){return this.mDrawingCacheBackgroundColor;}},{key:"destroyDrawingCache",value:function destroyDrawingCache(){if(this.mUnscaledDrawingCache != null){this.mUnscaledDrawingCache.recycle();this.mUnscaledDrawingCache = null;}}},{key:"buildDrawingCache",value:function buildDrawingCache(){var autoScale=arguments.length <= 0 || arguments[0] === undefined?false:arguments[0];if((this.mPrivateFlags & View.PFLAG_DRAWING_CACHE_VALID) == 0 || this.mUnscaledDrawingCache == null){this.mCachingFailed = false;var width=this.mRight - this.mLeft;var height=this.mBottom - this.mTop;var attachInfo=this.mAttachInfo;var drawingCacheBackgroundColor=this.mDrawingCacheBackgroundColor;var opaque=drawingCacheBackgroundColor != 0 || this.isOpaque();var use32BitCache=true;var projectedBitmapSize=width * height * (opaque && !use32BitCache?2:4);var drawingCacheSize=view_1.ViewConfiguration.get().getScaledMaximumDrawingCacheSize();if(width <= 0 || height <= 0 || projectedBitmapSize > drawingCacheSize){if(width > 0 && height > 0){Log.w(View.VIEW_LOG_TAG,"View too large to fit into drawing cache, needs " + projectedBitmapSize + " bytes, only " + drawingCacheSize + " available");}this.destroyDrawingCache();this.mCachingFailed = true;return;}if(this.mUnscaledDrawingCache && (this.mUnscaledDrawingCache.getWidth() !== width || this.mUnscaledDrawingCache.getHeight() !== height)){this.mUnscaledDrawingCache.recycle();this.mUnscaledDrawingCache = null;}if(this.mUnscaledDrawingCache){this.mUnscaledDrawingCache.clearColor();}else {this.mUnscaledDrawingCache = new Canvas(width,height);}var canvas=this.mUnscaledDrawingCache;this.computeScroll();var restoreCount=canvas.save();canvas.translate(-this.mScrollX,-this.mScrollY);this.mPrivateFlags |= View.PFLAG_DRAWN;this.mPrivateFlags |= View.PFLAG_DRAWING_CACHE_VALID;if((this.mPrivateFlags & View.PFLAG_SKIP_DRAW) == View.PFLAG_SKIP_DRAW){this.mPrivateFlags &= ~View.PFLAG_DIRTY_MASK;this.dispatchDraw(canvas);if(this.mOverlay != null && !this.mOverlay.isEmpty()){this.mOverlay.getOverlayView().draw(canvas);}}else {this.draw(canvas);}canvas.restoreToCount(restoreCount);}}},{key:"setWillNotDraw",value:function setWillNotDraw(willNotDraw){this.setFlags(willNotDraw?View.WILL_NOT_DRAW:0,View.DRAW_MASK);}},{key:"willNotDraw",value:function willNotDraw(){return (this.mViewFlags & View.DRAW_MASK) == View.WILL_NOT_DRAW;}},{key:"setWillNotCacheDrawing",value:function setWillNotCacheDrawing(willNotCacheDrawing){this.setFlags(willNotCacheDrawing?View.WILL_NOT_CACHE_DRAWING:0,View.WILL_NOT_CACHE_DRAWING);}},{key:"willNotCacheDrawing",value:function willNotCacheDrawing(){return (this.mViewFlags & View.WILL_NOT_CACHE_DRAWING) == View.WILL_NOT_CACHE_DRAWING;}},{key:"invalidateDrawable",value:function invalidateDrawable(drawable){if(this.verifyDrawable(drawable)){var dirty=drawable.getBounds();var _scrollX4=this.mScrollX;var _scrollY4=this.mScrollY;this.invalidate(dirty.left + _scrollX4,dirty.top + _scrollY4,dirty.right + _scrollX4,dirty.bottom + _scrollY4);}}},{key:"scheduleDrawable",value:function scheduleDrawable(who,what,when){if(this.verifyDrawable(who) && what != null){var delay=when - SystemClock.uptimeMillis();if(this.mAttachInfo != null){this.mAttachInfo.mHandler.postAtTime(what,who,when);}else {view_1.ViewRootImpl.getRunQueue().postDelayed(what,delay);}}}},{key:"unscheduleDrawable",value:function unscheduleDrawable(who,what){if(this.verifyDrawable(who) && what != null){if(this.mAttachInfo != null){this.mAttachInfo.mHandler.removeCallbacks(what,who);}else {view_1.ViewRootImpl.getRunQueue().removeCallbacks(what);}}else if(what === null){if(this.mAttachInfo != null && who != null){this.mAttachInfo.mHandler.removeCallbacksAndMessages(who);}}}},{key:"verifyDrawable",value:function verifyDrawable(who){return who == this.mBackground;}},{key:"drawableStateChanged",value:function drawableStateChanged(){this.getDrawableState();var d=this.mBackground;if(d != null && d.isStateful()){d.setState(this.getDrawableState());}}},{key:"refreshDrawableState",value:function refreshDrawableState(){this.mPrivateFlags |= View.PFLAG_DRAWABLE_STATE_DIRTY;this.drawableStateChanged();var parent=this.mParent;if(parent != null){parent.childDrawableStateChanged(this);}}},{key:"getDrawableState",value:function getDrawableState(){if(this.mDrawableState != null && (this.mPrivateFlags & View.PFLAG_DRAWABLE_STATE_DIRTY) == 0){return this.mDrawableState;}else {var oldDrawableState=this.mDrawableState;this.mDrawableState = this.onCreateDrawableState(0);this.mPrivateFlags &= ~View.PFLAG_DRAWABLE_STATE_DIRTY;this._fireStateChangeToAttribute(oldDrawableState,this.mDrawableState);this.syncDrawStateToElement();return this.mDrawableState;}}},{key:"onCreateDrawableState",value:function onCreateDrawableState(extraSpace){if((this.mViewFlags & View.DUPLICATE_PARENT_STATE) == View.DUPLICATE_PARENT_STATE && this.mParent instanceof View){return this.mParent.onCreateDrawableState(extraSpace);}var drawableState=undefined;var privateFlags=this.mPrivateFlags;var viewStateIndex=0;if((privateFlags & View.PFLAG_PRESSED) != 0)viewStateIndex |= View.VIEW_STATE_PRESSED;if((this.mViewFlags & View.ENABLED_MASK) == View.ENABLED)viewStateIndex |= View.VIEW_STATE_ENABLED;if(this.isFocused())viewStateIndex |= View.VIEW_STATE_FOCUSED;if((privateFlags & View.PFLAG_SELECTED) != 0)viewStateIndex |= View.VIEW_STATE_SELECTED;if((privateFlags & View.PFLAG_ACTIVATED) != 0)viewStateIndex |= View.VIEW_STATE_ACTIVATED;var privateFlags2=this.mPrivateFlags2;drawableState = View.VIEW_STATE_SETS[viewStateIndex];if(extraSpace == 0){return drawableState;}var fullState=undefined;if(drawableState != null){fullState = new Array(drawableState.length + extraSpace);System.arraycopy(drawableState,0,fullState,0,drawableState.length);}else {fullState = new Array(extraSpace);}return fullState;}},{key:"jumpDrawablesToCurrentState",value:function jumpDrawablesToCurrentState(){if(this.mBackground != null){this.mBackground.jumpToCurrentState();}}},{key:"setBackgroundColor",value:function setBackgroundColor(color){if(this.mBackground instanceof ColorDrawable){this.mBackground.mutate().setColor(color);this.computeOpaqueFlags();}else {this.setBackground(new ColorDrawable(color));}}},{key:"setBackground",value:function setBackground(background){this.setBackgroundDrawable(background);}},{key:"setBackgroundDrawable",value:function setBackgroundDrawable(background){this.computeOpaqueFlags();if(background == this.mBackground){return;}var requestLayout=false;if(this.mBackground != null){this.mBackground.setCallback(null);this.unscheduleDrawable(this.mBackground);}if(background != null){var padding=new Rect();if(background.getPadding(padding)){this.setPadding(padding.left,padding.top,padding.right,padding.bottom);}if(this.mBackground == null || this.mBackground.getMinimumHeight() != background.getMinimumHeight() || this.mBackground.getMinimumWidth() != background.getMinimumWidth()){requestLayout = true;}background.setCallback(this);if(background.isStateful()){background.setState(this.getDrawableState());}background.setVisible(this.getVisibility() == View.VISIBLE,false);this.mBackground = background;if((this.mPrivateFlags & View.PFLAG_SKIP_DRAW) != 0){this.mPrivateFlags &= ~View.PFLAG_SKIP_DRAW;this.mPrivateFlags |= View.PFLAG_ONLY_DRAWS_BACKGROUND;requestLayout = true;}}else {this.mBackground = null;if((this.mPrivateFlags & View.PFLAG_ONLY_DRAWS_BACKGROUND) != 0){this.mPrivateFlags &= ~View.PFLAG_ONLY_DRAWS_BACKGROUND;this.mPrivateFlags |= View.PFLAG_SKIP_DRAW;}requestLayout = true;}this.computeOpaqueFlags();if(requestLayout){this.requestLayout();}this.mBackgroundSizeChanged = true;this.invalidate(true);}},{key:"getAnimation",value:function getAnimation(){return null;}},{key:"computeHorizontalScrollRange",value:function computeHorizontalScrollRange(){return this.getWidth();}},{key:"computeHorizontalScrollOffset",value:function computeHorizontalScrollOffset(){return this.mScrollX;}},{key:"computeHorizontalScrollExtent",value:function computeHorizontalScrollExtent(){return this.getWidth();}},{key:"computeVerticalScrollRange",value:function computeVerticalScrollRange(){return this.getHeight();}},{key:"computeVerticalScrollOffset",value:function computeVerticalScrollOffset(){return this.mScrollY;}},{key:"computeVerticalScrollExtent",value:function computeVerticalScrollExtent(){return this.getHeight();}},{key:"canScrollHorizontally",value:function canScrollHorizontally(direction){var offset=this.computeHorizontalScrollOffset();var range=this.computeHorizontalScrollRange() - this.computeHorizontalScrollExtent();if(range == 0)return false;if(direction < 0){return offset > 0;}else {return offset < range - 1;}}},{key:"canScrollVertically",value:function canScrollVertically(direction){var offset=this.computeVerticalScrollOffset();var range=this.computeVerticalScrollRange() - this.computeVerticalScrollExtent();if(range == 0)return false;if(direction < 0){return offset > 0;}else {return offset < range - 1;}}},{key:"overScrollBy",value:function overScrollBy(deltaX,deltaY,scrollX,scrollY,scrollRangeX,scrollRangeY,maxOverScrollX,maxOverScrollY,isTouchEvent){var overScrollMode=this.mOverScrollMode;var canScrollHorizontal=this.computeHorizontalScrollRange() > this.computeHorizontalScrollExtent();var canScrollVertical=this.computeVerticalScrollRange() > this.computeVerticalScrollExtent();var overScrollHorizontal=overScrollMode == View.OVER_SCROLL_ALWAYS || overScrollMode == View.OVER_SCROLL_IF_CONTENT_SCROLLS && canScrollHorizontal;var overScrollVertical=overScrollMode == View.OVER_SCROLL_ALWAYS || overScrollMode == View.OVER_SCROLL_IF_CONTENT_SCROLLS && canScrollVertical;if(isTouchEvent){if(deltaX < 0 && scrollX <= 0 || deltaX > 0 && scrollX >= scrollRangeX){deltaX /= 2;}if(deltaY < 0 && scrollY <= 0 || deltaY > 0 && scrollY >= scrollRangeY){deltaY /= 2;}}var newScrollX=scrollX + deltaX;if(!overScrollHorizontal){maxOverScrollX = 0;}var newScrollY=scrollY + deltaY;if(!overScrollVertical){maxOverScrollY = 0;}var left=-maxOverScrollX;var right=maxOverScrollX + scrollRangeX;var top=-maxOverScrollY;var bottom=maxOverScrollY + scrollRangeY;var clampedX=false;if(newScrollX > right){newScrollX = right;clampedX = true;}else if(newScrollX < left){newScrollX = left;clampedX = true;}var clampedY=false;if(newScrollY > bottom){newScrollY = bottom;clampedY = true;}else if(newScrollY < top){newScrollY = top;clampedY = true;}this.onOverScrolled(newScrollX,newScrollY,clampedX,clampedY);return clampedX || clampedY;}},{key:"onOverScrolled",value:function onOverScrolled(scrollX,scrollY,clampedX,clampedY){}},{key:"getOverScrollMode",value:function getOverScrollMode(){return this.mOverScrollMode;}},{key:"setOverScrollMode",value:function setOverScrollMode(overScrollMode){if(overScrollMode != View.OVER_SCROLL_ALWAYS && overScrollMode != View.OVER_SCROLL_IF_CONTENT_SCROLLS && overScrollMode != View.OVER_SCROLL_NEVER){throw new Error("Invalid overscroll mode " + overScrollMode);}this.mOverScrollMode = overScrollMode;}},{key:"getVerticalScrollFactor",value:function getVerticalScrollFactor(){if(this.mVerticalScrollFactor == 0){this.mVerticalScrollFactor = Resources.getDisplayMetrics().density * 1;}return this.mVerticalScrollFactor;}},{key:"getHorizontalScrollFactor",value:function getHorizontalScrollFactor(){return this.getVerticalScrollFactor();}},{key:"computeScroll",value:function computeScroll(){}},{key:"scrollTo",value:function scrollTo(x,y){if(this.mScrollX != x || this.mScrollY != y){var oldX=this.mScrollX;var oldY=this.mScrollY;this.mScrollX = x;this.mScrollY = y;this.invalidateParentCaches();this.onScrollChanged(this.mScrollX,this.mScrollY,oldX,oldY);if(!this.awakenScrollBars()){this.postInvalidateOnAnimation();}}}},{key:"scrollBy",value:function scrollBy(x,y){this.scrollTo(this.mScrollX + x,this.mScrollY + y);}},{key:"initialAwakenScrollBars",value:function initialAwakenScrollBars(){return this.mScrollCache != null && this.awakenScrollBars(this.mScrollCache.scrollBarDefaultDelayBeforeFade * 4,true);}},{key:"awakenScrollBars",value:function awakenScrollBars(startDelay){var invalidate=arguments.length <= 1 || arguments[1] === undefined?true:arguments[1];var scrollCache=this.mScrollCache;if(scrollCache == null)return false;startDelay = startDelay || scrollCache.scrollBarDefaultDelayBeforeFade;if(scrollCache == null || !scrollCache.fadeScrollBars){return false;}if(scrollCache.scrollBar == null){scrollCache.scrollBar = new ScrollBarDrawable();}if(this.isHorizontalScrollBarEnabled() || this.isVerticalScrollBarEnabled()){if(invalidate){this.postInvalidateOnAnimation();}if(scrollCache.state == ScrollabilityCache.OFF){var KEY_REPEAT_FIRST_DELAY=750;startDelay = Math.max(KEY_REPEAT_FIRST_DELAY,startDelay);}var fadeStartTime=AnimationUtils.currentAnimationTimeMillis() + startDelay;scrollCache.fadeStartTime = fadeStartTime;scrollCache.state = ScrollabilityCache.ON;if(this.mAttachInfo != null){this.mAttachInfo.mHandler.removeCallbacks(scrollCache);this.mAttachInfo.mHandler.postAtTime(scrollCache,fadeStartTime);}return true;}return false;}},{key:"getVerticalFadingEdgeLength",value:function getVerticalFadingEdgeLength(){return 0;}},{key:"setVerticalFadingEdgeEnabled",value:function setVerticalFadingEdgeEnabled(enable){}},{key:"setHorizontalFadingEdgeEnabled",value:function setHorizontalFadingEdgeEnabled(enable){}},{key:"setFadingEdgeLength",value:function setFadingEdgeLength(length){}},{key:"getHorizontalFadingEdgeLength",value:function getHorizontalFadingEdgeLength(){return 0;}},{key:"getVerticalScrollbarWidth",value:function getVerticalScrollbarWidth(){var cache=this.mScrollCache;if(cache != null){var scrollBar=cache.scrollBar;if(scrollBar != null){var size=scrollBar.getSize(true);if(size <= 0){size = cache.scrollBarSize;}return size;}return 0;}return 0;}},{key:"getHorizontalScrollbarHeight",value:function getHorizontalScrollbarHeight(){var cache=this.mScrollCache;if(cache != null){var scrollBar=cache.scrollBar;if(scrollBar != null){var size=scrollBar.getSize(false);if(size <= 0){size = cache.scrollBarSize;}return size;}return 0;}return 0;}},{key:"initializeScrollbars",value:function initializeScrollbars(a){this.initScrollCache();}},{key:"initScrollCache",value:function initScrollCache(){if(this.mScrollCache == null){this.mScrollCache = new ScrollabilityCache(this);}}},{key:"getScrollCache",value:function getScrollCache(){this.initScrollCache();return this.mScrollCache;}},{key:"isHorizontalScrollBarEnabled",value:function isHorizontalScrollBarEnabled(){return (this.mViewFlags & View.SCROLLBARS_HORIZONTAL) == View.SCROLLBARS_HORIZONTAL;}},{key:"setHorizontalScrollBarEnabled",value:function setHorizontalScrollBarEnabled(horizontalScrollBarEnabled){if(this.isHorizontalScrollBarEnabled() != horizontalScrollBarEnabled){this.mViewFlags ^= View.SCROLLBARS_HORIZONTAL;this.computeOpaqueFlags();}}},{key:"isVerticalScrollBarEnabled",value:function isVerticalScrollBarEnabled(){return (this.mViewFlags & View.SCROLLBARS_VERTICAL) == View.SCROLLBARS_VERTICAL;}},{key:"setVerticalScrollBarEnabled",value:function setVerticalScrollBarEnabled(verticalScrollBarEnabled){if(this.isVerticalScrollBarEnabled() != verticalScrollBarEnabled){this.mViewFlags ^= View.SCROLLBARS_VERTICAL;this.computeOpaqueFlags();}}},{key:"setScrollbarFadingEnabled",value:function setScrollbarFadingEnabled(fadeScrollbars){this.initScrollCache();var scrollabilityCache=this.mScrollCache;scrollabilityCache.fadeScrollBars = fadeScrollbars;if(fadeScrollbars){scrollabilityCache.state = ScrollabilityCache.OFF;}else {scrollabilityCache.state = ScrollabilityCache.ON;}}},{key:"setVerticalScrollbarPosition",value:function setVerticalScrollbarPosition(position){}},{key:"setHorizontalScrollbarPosition",value:function setHorizontalScrollbarPosition(position){}},{key:"setScrollBarStyle",value:function setScrollBarStyle(position){}},{key:"getTopFadingEdgeStrength",value:function getTopFadingEdgeStrength(){return 0;}},{key:"getBottomFadingEdgeStrength",value:function getBottomFadingEdgeStrength(){return 0;}},{key:"getLeftFadingEdgeStrength",value:function getLeftFadingEdgeStrength(){return 0;}},{key:"getRightFadingEdgeStrength",value:function getRightFadingEdgeStrength(){return 0;}},{key:"isScrollbarFadingEnabled",value:function isScrollbarFadingEnabled(){return this.mScrollCache != null && this.mScrollCache.fadeScrollBars;}},{key:"getScrollBarDefaultDelayBeforeFade",value:function getScrollBarDefaultDelayBeforeFade(){return this.mScrollCache == null?view_1.ViewConfiguration.getScrollDefaultDelay():this.mScrollCache.scrollBarDefaultDelayBeforeFade;}},{key:"setScrollBarDefaultDelayBeforeFade",value:function setScrollBarDefaultDelayBeforeFade(scrollBarDefaultDelayBeforeFade){this.getScrollCache().scrollBarDefaultDelayBeforeFade = scrollBarDefaultDelayBeforeFade;}},{key:"getScrollBarFadeDuration",value:function getScrollBarFadeDuration(){return this.mScrollCache == null?view_1.ViewConfiguration.getScrollBarFadeDuration():this.mScrollCache.scrollBarFadeDuration;}},{key:"setScrollBarFadeDuration",value:function setScrollBarFadeDuration(scrollBarFadeDuration){this.getScrollCache().scrollBarFadeDuration = scrollBarFadeDuration;}},{key:"getScrollBarSize",value:function getScrollBarSize(){return this.mScrollCache == null?view_1.ViewConfiguration.get().getScaledScrollBarSize():this.mScrollCache.scrollBarSize;}},{key:"setScrollBarSize",value:function setScrollBarSize(scrollBarSize){this.getScrollCache().scrollBarSize = scrollBarSize;}},{key:"hasOpaqueScrollbars",value:function hasOpaqueScrollbars(){return true;}},{key:"assignParent",value:function assignParent(parent){if(this.mParent == null){this.mParent = parent;}else if(parent == null){this.mParent = null;}else {throw new Error("view " + this + " being added, but" + " it already has a parent");}}},{key:"onFinishInflate",value:function onFinishInflate(){}},{key:"dispatchStartTemporaryDetach",value:function dispatchStartTemporaryDetach(){this.onStartTemporaryDetach();}},{key:"onStartTemporaryDetach",value:function onStartTemporaryDetach(){this.removeUnsetPressCallback();this.mPrivateFlags |= View.PFLAG_CANCEL_NEXT_UP_EVENT;}},{key:"dispatchFinishTemporaryDetach",value:function dispatchFinishTemporaryDetach(){this.onFinishTemporaryDetach();}},{key:"onFinishTemporaryDetach",value:function onFinishTemporaryDetach(){}},{key:"dispatchWindowFocusChanged",value:function dispatchWindowFocusChanged(hasFocus){this.onWindowFocusChanged(hasFocus);}},{key:"onWindowFocusChanged",value:function onWindowFocusChanged(hasWindowFocus){if(!hasWindowFocus){if(this.isPressed()){this.setPressed(false);}this.removeLongPressCallback();this.removeTapCallback();this.onFocusLost();}this.refreshDrawableState();}},{key:"hasWindowFocus",value:function hasWindowFocus(){return this.mAttachInfo != null && this.mAttachInfo.mHasWindowFocus;}},{key:"getWindowAttachCount",value:function getWindowAttachCount(){return this.mWindowAttachCount;}},{key:"isAttachedToWindow",value:function isAttachedToWindow(){return this.mAttachInfo != null;}},{key:"dispatchAttachedToWindow",value:function dispatchAttachedToWindow(info,visibility){this.mAttachInfo = info;if(this.mOverlay != null){this.mOverlay.getOverlayView().dispatchAttachedToWindow(info,visibility);}this.mWindowAttachCount++;this.mPrivateFlags |= View.PFLAG_DRAWABLE_STATE_DIRTY;if(this.mFloatingTreeObserver != null){info.mTreeObserver.merge(this.mFloatingTreeObserver);this.mFloatingTreeObserver = null;}if((this.mPrivateFlags & View.PFLAG_SCROLL_CONTAINER) != 0){this.mAttachInfo.mScrollContainers.add(this);this.mPrivateFlags |= View.PFLAG_SCROLL_CONTAINER_ADDED;}this.onAttachedToWindow();var li=this.mListenerInfo;var listeners=li != null?li.mOnAttachStateChangeListeners:null;if(listeners != null && listeners.size() > 0){var _iteratorNormalCompletion23=true;var _didIteratorError23=false;var _iteratorError23=undefined;try{for(var _iterator23=listeners[Symbol.iterator](),_step23;!(_iteratorNormalCompletion23 = (_step23 = _iterator23.next()).done);_iteratorNormalCompletion23 = true) {var listener=_step23.value;listener.onViewAttachedToWindow(this);}}catch(err) {_didIteratorError23 = true;_iteratorError23 = err;}finally {try{if(!_iteratorNormalCompletion23 && _iterator23["return"]){_iterator23["return"]();}}finally {if(_didIteratorError23){throw _iteratorError23;}}}}var vis=info.mWindowVisibility;if(vis != View.GONE){this.onWindowVisibilityChanged(vis);}if((this.mPrivateFlags & View.PFLAG_DRAWABLE_STATE_DIRTY) != 0){this.refreshDrawableState();}}},{key:"onAttachedToWindow",value:function onAttachedToWindow(){ //if ((this.mPrivateFlags & View.PFLAG_REQUEST_TRANSPARENT_REGIONS) != 0) {
//    this.mParent.requestTransparentRegion(this);
//}
if((this.mPrivateFlags & View.PFLAG_AWAKEN_SCROLL_BARS_ON_ATTACH) != 0){this.initialAwakenScrollBars();this.mPrivateFlags &= ~View.PFLAG_AWAKEN_SCROLL_BARS_ON_ATTACH;}this.mPrivateFlags3 &= ~View.PFLAG3_IS_LAID_OUT;this.jumpDrawablesToCurrentState();}},{key:"dispatchDetachedFromWindow",value:function dispatchDetachedFromWindow(){var info=this.mAttachInfo;if(info != null){var vis=info.mWindowVisibility;if(vis != View.GONE){this.onWindowVisibilityChanged(View.GONE);}}this.onDetachedFromWindow();var li=this.mListenerInfo;var listeners=li != null?li.mOnAttachStateChangeListeners:null;if(listeners != null && listeners.size() > 0){var _iteratorNormalCompletion24=true;var _didIteratorError24=false;var _iteratorError24=undefined;try{for(var _iterator24=listeners[Symbol.iterator](),_step24;!(_iteratorNormalCompletion24 = (_step24 = _iterator24.next()).done);_iteratorNormalCompletion24 = true) {var listener=_step24.value;listener.onViewDetachedFromWindow(this);}}catch(err) {_didIteratorError24 = true;_iteratorError24 = err;}finally {try{if(!_iteratorNormalCompletion24 && _iterator24["return"]){_iterator24["return"]();}}finally {if(_didIteratorError24){throw _iteratorError24;}}}}if((this.mPrivateFlags & View.PFLAG_SCROLL_CONTAINER_ADDED) != 0){this.mAttachInfo.mScrollContainers["delete"](this);this.mPrivateFlags &= ~View.PFLAG_SCROLL_CONTAINER_ADDED;}this.mAttachInfo = null;if(this.mOverlay != null){this.mOverlay.getOverlayView().dispatchDetachedFromWindow();}}},{key:"onDetachedFromWindow",value:function onDetachedFromWindow(){this.mPrivateFlags &= ~View.PFLAG_CANCEL_NEXT_UP_EVENT;this.mPrivateFlags3 &= ~View.PFLAG3_IS_LAID_OUT;this.removeUnsetPressCallback();this.removeLongPressCallback();this.removePerformClickCallback();this.destroyDrawingCache();this.cleanupDraw();}},{key:"cleanupDraw",value:function cleanupDraw(){if(this.mAttachInfo != null){this.mAttachInfo.mViewRootImpl.cancelInvalidate(this);}}},{key:"debug",value:function debug(){var depth=arguments.length <= 0 || arguments[0] === undefined?0:arguments[0];var originProto=Object.getPrototypeOf(this);console.dir(Object.assign(Object.create(originProto),this));}},{key:"toString",value:function toString(){return this.tagName();}},{key:"getRootView",value:function getRootView(){if(this.mAttachInfo != null){var v=this.mAttachInfo.mRootView;if(v != null){return v;}}var parent=this;while(parent.mParent != null && parent.mParent instanceof View) {parent = parent.mParent;}return parent;}},{key:"findViewByPredicateTraversal",value:function findViewByPredicateTraversal(predicate,childToSkip){if(predicate.apply(this)){return this;}return null;}},{key:"findViewById",value:function findViewById(id){if(!id)return null;if(id == this.bindElement.id){return this;}return this.findViewTraversal(id);}},{key:"findViewTraversal",value:function findViewTraversal(id){var bindEle=this.bindElement.querySelector('#' + id);return bindEle?bindEle[View.AndroidViewProperty]:null;}},{key:"findViewByPredicate",value:function findViewByPredicate(predicate){return this.findViewByPredicateTraversal(predicate,null);}},{key:"findViewByPredicateInsideOut",value:function findViewByPredicateInsideOut(start,predicate){var childToSkip=null;for(;;) {var _view=start.findViewByPredicateTraversal(predicate,childToSkip);if(_view != null || start == this){return _view;}var _parent2=start.getParent();if(_parent2 == null || !(_parent2 instanceof View)){return null;}childToSkip = start;start = _parent2;}}},{key:"setId",value:function setId(id){if(this.bindElement)this.bindElement.id = id;}},{key:"getId",value:function getId(){return this.mID;}},{key:"setIsRootNamespace",value:function setIsRootNamespace(isRoot){if(isRoot){this.mPrivateFlags |= View.PFLAG_IS_ROOT_NAMESPACE;}else {this.mPrivateFlags &= ~View.PFLAG_IS_ROOT_NAMESPACE;}}},{key:"isRootNamespace",value:function isRootNamespace(){return (this.mPrivateFlags & View.PFLAG_IS_ROOT_NAMESPACE) != 0;}},{key:"getResources",value:function getResources(){return Resources.from(this);}},{key:"_AttrObserverCallBack",value:function _AttrObserverCallBack(arr,observer){arr.forEach(function(record){var target=record.target;var androidView=target[View.AndroidViewProperty];if(!androidView)return;var attrName=record.attributeName;var newValue=target.getAttribute(attrName);var oldValue=record.oldValue;if(newValue === oldValue)return;androidView.onBindElementAttributeChanged(attrName,record.oldValue,newValue);});}},{key:"initBindElement",value:function initBindElement(bindElement,rootElement){if(this.bindElement){this.bindElement[View.AndroidViewProperty] = null;}this.bindElement = bindElement || document.createElement(this.tagName());this.bindElement.style.position = 'absolute';var oldBindView=this.bindElement[View.AndroidViewProperty];if(oldBindView){if(oldBindView._AttrObserver)oldBindView._AttrObserver.disconnect();}this.bindElement[View.AndroidViewProperty] = this;this._rootElement = rootElement;this._stateAttrList = new StateAttrList(this.bindElement,rootElement);this._parseInitedAttribute();this._initAttrObserver();}},{key:"postSyncBoundToElement",value:function postSyncBoundToElement(){if(!this._syncBoundToElementLock){this._syncBoundToElementLock = true;this._syncBoundToElement();}}},{key:"postSyncScrollToElement",value:function postSyncScrollToElement(){this.postSyncBoundToElement();}},{key:"_syncBoundToElement",value:function _syncBoundToElement(){this._syncBoundToElementLock = false;var change=false;var left=this.mLeft;var top=this.mTop;var width=this.getWidth();var height=this.getHeight();if(left !== this._lastSyncLeft || top !== this._lastSyncTop || width !== this._lastSyncWidth || height !== this._lastSyncHeight){this._lastSyncLeft = left;this._lastSyncTop = top;this._lastSyncWidth = width;this._lastSyncHeight = height;var bind=this.bindElement;bind.style.transform = bind.style.webkitTransform = "translate3d(" + left + "px, " + top + "px, 0px)";bind.style.width = width + 'px';bind.style.height = height + 'px';change = true;}var sx=this.mScrollX;var sy=this.mScrollY;if(this._lastSyncScrollX !== sx || this._lastSyncScrollY !== sy){this._lastSyncScrollX = sx;this._lastSyncScrollY = sy;if(this instanceof view_1.ViewGroup){var group=this;for(var i=0,count=group.getChildCount();i < count;i++) {var child=group.getChildAt(i);var item=child.bindElement;item.style.transform = item.style.webkitTransform = "translate3d(" + (child.mLeft - sx) + "px, " + (child.mTop - sy) + "px, 0px)";}}change = true;}return change;}},{key:"syncVisibleToElement",value:function syncVisibleToElement(){var visibility=this.getVisibility();if(visibility === View.VISIBLE){this.bindElement.style.display = '';this.bindElement.style.visibility = '';}else if(visibility === View.INVISIBLE){this.bindElement.style.display = '';this.bindElement.style.visibility = 'hidden';}else {this.bindElement.style.display = 'none';this.bindElement.style.visibility = '';}}},{key:"syncDrawStateToElement",value:function syncDrawStateToElement(){var bind=this.bindElement;if(this.isPressed())bind.classList.add('_pressed');else bind.classList.remove('_pressed');if(this.isEnabled())bind.classList.remove('_disabled');else bind.classList.add('_disabled');if(this.isFocused())bind.classList.add('_focused');else bind.classList.remove('_focused');if(this.isSelected())bind.classList.add('_selected');else bind.classList.remove('_selected');if(this.isActivated())bind.classList.add('_activated');else bind.classList.remove('_activated');}},{key:"_initAttrObserver",value:function _initAttrObserver(){if(!this._AttrObserver)this._AttrObserver = new MutationObserver(this._AttrObserverCallBack);else this._AttrObserver.disconnect();this._AttrObserver.observe(this.bindElement,{attributes:true,attributeOldValue:true});}},{key:"_parseInitedAttribute",value:function _parseInitedAttribute(){var _iteratorNormalCompletion25=true;var _didIteratorError25=false;var _iteratorError25=undefined;try{for(var _iterator25=this._stateAttrList.getDefaultStateAttr().getAttrMap().entries()[Symbol.iterator](),_step25;!(_iteratorNormalCompletion25 = (_step25 = _iterator25.next()).done);_iteratorNormalCompletion25 = true) {var _step25$value=_slicedToArray(_step25.value,2);var key=_step25$value[0];var value=_step25$value[1];key = 'android:' + key;if((value === null || value === undefined) && this.bindElement.hasAttribute(key)){this.bindElement.removeAttribute(key);}else {this.bindElement.setAttribute(key,value);}}}catch(err) {_didIteratorError25 = true;_iteratorError25 = err;}finally {try{if(!_iteratorNormalCompletion25 && _iterator25["return"]){_iterator25["return"]();}}finally {if(_didIteratorError25){throw _iteratorError25;}}}var id=this.bindElement.getAttribute('android:id');if(id)this.bindElement.id = id;}},{key:"_fireInitedAttributeChange",value:function _fireInitedAttributeChange(){var _iteratorNormalCompletion26=true;var _didIteratorError26=false;var _iteratorError26=undefined;try{for(var _iterator26=Array.from(this.bindElement.attributes)[Symbol.iterator](),_step26;!(_iteratorNormalCompletion26 = (_step26 = _iterator26.next()).done);_iteratorNormalCompletion26 = true) {var attr=_step26.value;this.onBindElementAttributeChanged(attr.name,null,attr.value);}}catch(err) {_didIteratorError26 = true;_iteratorError26 = err;}finally {try{if(!_iteratorNormalCompletion26 && _iterator26["return"]){_iterator26["return"]();}}finally {if(_didIteratorError26){throw _iteratorError26;}}}}},{key:"_fireStateChangeToAttribute",value:function _fireStateChangeToAttribute(oldState,newState){if(!this._stateAttrList)return;if(oldState + '' === newState + '')return;var oldMatchedAttr=oldState?this._stateAttrList.getMatchedAttr(oldState):null;var matchedAttr=this._stateAttrList.getMatchedAttr(newState);var attrMap=matchedAttr.mergeRemovedFrom(oldMatchedAttr);var _iteratorNormalCompletion27=true;var _didIteratorError27=false;var _iteratorError27=undefined;try{for(var _iterator27=attrMap.entries()[Symbol.iterator](),_step27;!(_iteratorNormalCompletion27 = (_step27 = _iterator27.next()).done);_iteratorNormalCompletion27 = true) {var _step27$value=_slicedToArray(_step27.value,2);var key=_step27$value[0];var value=_step27$value[1];if(oldMatchedAttr){var oldValue=undefined;if(key.startsWith('layout_')){var params=this.getLayoutParams();if(params){var attrName=key.substring('layout_'.length);oldValue = params._attrBinder.getAttrValue(attrName);}}else {oldValue = this._attrBinder.getAttrValue(key);}if(oldValue != null){oldMatchedAttr.setAttr(key,oldValue);}}key = 'android:' + key;if(value === null || value === undefined){if(this.bindElement.hasAttribute(key)){this.bindElement.removeAttribute(key);}else {this.onBindElementAttributeChanged(key,null,null);}}else {this.bindElement.setAttribute(key,value);}}}catch(err) {_didIteratorError27 = true;_iteratorError27 = err;}finally {try{if(!_iteratorNormalCompletion27 && _iterator27["return"]){_iterator27["return"]();}}finally {if(_didIteratorError27){throw _iteratorError27;}}}}},{key:"onBindElementAttributeChanged",value:function onBindElementAttributeChanged(attributeName,oldVal,newVal){var parts=attributeName.split(":");var attrName=parts[parts.length - 1].toLowerCase();if(newVal === 'true')newVal = true;else if(newVal === 'false')newVal = false;if(attrName.startsWith('layout_')){attrName = attrName.substring('layout_'.length);var params=this.getLayoutParams();if(params){params._attrBinder.onAttrChange(attrName,newVal,this.rootElement);}this.requestLayout();return;}this._attrBinder.onAttrChange(attrName,newVal,this.rootElement);if(this.mSyncAttrToStyle.indexOf(attrName) !== -1){this.bindElement.style[attrName] = this.getAttributeIgnoreCase(attrName);}}},{key:"hasAttributeIgnoreCase",value:function hasAttributeIgnoreCase(name){return this.getAttributeIgnoreCase(name) != null;}},{key:"getAttributeIgnoreCase",value:function getAttributeIgnoreCase(name){if(!(typeof name === 'string'))return null;name = name.toLowerCase();if(name.startsWith('android:'))name = name.substring('android:'.length);var _iteratorNormalCompletion28=true;var _didIteratorError28=false;var _iteratorError28=undefined;try{for(var _iterator28=Array.from(this.bindElement.attributes)[Symbol.iterator](),_step28;!(_iteratorNormalCompletion28 = (_step28 = _iterator28.next()).done);_iteratorNormalCompletion28 = true) {var attr=_step28.value;var attrName=attr.name.toLowerCase();if(attrName.startsWith('android:'))attrName = attrName.substring('android:'.length);if(attrName == name)return attr.value;}}catch(err) {_didIteratorError28 = true;_iteratorError28 = err;}finally {try{if(!_iteratorNormalCompletion28 && _iterator28["return"]){_iterator28["return"]();}}finally {if(_didIteratorError28){throw _iteratorError28;}}}return null;}},{key:"applyDefaultAttributes",value:function applyDefaultAttributes(attrs){for(var key in attrs) {if(!this.hasAttributeIgnoreCase(key)){this._attrBinder.onAttrChange(key,attrs[key],this.rootElement);}}}},{key:"tagName",value:function tagName(){return "ANDROID-" + this.constructor.name;}},{key:"mID",get:function get(){if(this.bindElement){var id=this.bindElement.id;return id?id:null;}return null;}},{key:"mLeft",get:function get(){return this._mLeft;},set:function set(value){this._mLeft = Math.floor(value);this.postSyncBoundToElement();}},{key:"mRight",get:function get(){return this._mRight;},set:function set(value){this._mRight = Math.floor(value);this.postSyncBoundToElement();}},{key:"mTop",get:function get(){return this._mTop;},set:function set(value){this._mTop = Math.floor(value);this.postSyncBoundToElement();}},{key:"mBottom",get:function get(){return this._mBottom;},set:function set(value){this._mBottom = Math.floor(value);this.postSyncBoundToElement();}},{key:"mScrollX",get:function get(){return this._mScrollX;},set:function set(value){this._mScrollX = Math.floor(value);}},{key:"mScrollY",get:function get(){return this._mScrollY;},set:function set(value){if(Number.isNaN(value) || value == null){console.error('set mScrollY value is ' + value);value = 0;}this._mScrollY = Math.floor(value);}},{key:"rootElement",get:function get(){if(this._rootElement)return this._rootElement;if(this.getViewRootImpl())return this.getViewRootImpl().rootElement;return null;}}],[{key:"combineMeasuredStates",value:function combineMeasuredStates(curState,newState){return curState | newState;}},{key:"resolveSize",value:function resolveSize(size,measureSpec){return View.resolveSizeAndState(size,measureSpec,0) & View.MEASURED_SIZE_MASK;}},{key:"resolveSizeAndState",value:function resolveSizeAndState(size,measureSpec,childMeasuredState){var MeasureSpec=View.MeasureSpec;var result=size;var specMode=MeasureSpec.getMode(measureSpec);var specSize=MeasureSpec.getSize(measureSpec);switch(specMode){case MeasureSpec.UNSPECIFIED:result = size;break;case MeasureSpec.AT_MOST:if(specSize < size){result = specSize | View.MEASURED_STATE_TOO_SMALL;}else {result = size;}break;case MeasureSpec.EXACTLY:result = specSize;break;}return result | childMeasuredState & View.MEASURED_STATE_MASK;}},{key:"getDefaultSize",value:function getDefaultSize(size,measureSpec){var MeasureSpec=View.MeasureSpec;var result=size;var specMode=MeasureSpec.getMode(measureSpec);var specSize=MeasureSpec.getSize(measureSpec);switch(specMode){case MeasureSpec.UNSPECIFIED:result = size;break;case MeasureSpec.AT_MOST:case MeasureSpec.EXACTLY:result = specSize;break;}return result;}},{key:"mergeDrawableStates",value:function mergeDrawableStates(baseState,additionalState){var N=baseState.length;var i=N - 1;while(i >= 0 && baseState[i] == 0) {i--;}System.arraycopy(additionalState,0,baseState,i + 1,additionalState.length);return baseState;}},{key:"inflate",value:function inflate(eleOrRef,rootElement,viewParent){var domtree=undefined;if(typeof eleOrRef === "string"){var ref=View.findReference(eleOrRef,rootElement);if(ref == null){console.warn('not find Reference :' + eleOrRef);return null;}domtree = ref.firstElementChild;}else {domtree = eleOrRef;}var className=domtree.tagName;if(className.startsWith('ANDROID-')){className = className.substring('ANDROID-'.length);}if(className === 'LAYOUT'){var child=domtree.firstElementChild;if(child)return View.inflate(child,rootElement,viewParent);return null;}else if(className === 'INCLUDE'){var refLayoutId=domtree.getAttribute('layout');var _view2=View.inflate(refLayoutId,rootElement,viewParent);if(_view2){var _iteratorNormalCompletion29=true;var _didIteratorError29=false;var _iteratorError29=undefined;try{for(var _iterator29=Array.from(domtree.attributes)[Symbol.iterator](),_step29;!(_iteratorNormalCompletion29 = (_step29 = _iterator29.next()).done);_iteratorNormalCompletion29 = true) {var attr=_step29.value;var _name2=attr.name;if(_name2 === 'layout')continue;_view2.bindElement.setAttribute(_name2,attr.value);}}catch(err) {_didIteratorError29 = true;_iteratorError29 = err;}finally {try{if(!_iteratorNormalCompletion29 && _iterator29["return"]){_iterator29["return"]();}}finally {if(_didIteratorError29){throw _iteratorError29;}}}}return _view2;}else if(className === 'MERGE'){if(!viewParent)throw Error('merge tag need ViewParent');Array.from(domtree.children).forEach(function(item){if(item instanceof HTMLElement){var _view3=View.inflate(item,rootElement,viewParent);if(_view3 instanceof View)viewParent.addView(_view3);}});return viewParent;}var rootViewClass=ClassFinder.findClass(className,android.view);if(!rootViewClass)rootViewClass = ClassFinder.findClass(className,android['widget']);if(!rootViewClass)rootViewClass = ClassFinder.findClass(className);if(!rootViewClass){if(document.createElement(className) instanceof HTMLUnknownElement){console.warn('inflate: not find class ' + className);}return null;}var children=Array.from(domtree.children);var rootView=new rootViewClass(domtree,rootElement);if(rootView['onInflateAdapter']){rootView.onInflateAdapter(domtree,rootElement,viewParent);domtree.parentNode.removeChild(domtree);}if(!(rootView instanceof View))return rootView;var params=undefined;if(viewParent)params = viewParent.generateDefaultLayoutParams();else {params = new view_1.ViewGroup.LayoutParams(view_1.ViewGroup.LayoutParams.WRAP_CONTENT,view_1.ViewGroup.LayoutParams.WRAP_CONTENT);}params.parseAttributeFrom(domtree,rootElement);rootView.setLayoutParams(params);rootView._fireInitedAttributeChange();if(rootView instanceof view_1.ViewGroup){(function(){var parent=rootView;children.forEach(function(item){if(item instanceof HTMLElement){var _view4=View.inflate(item,rootElement,parent);if(_view4 instanceof View && _view4 !== parent)parent.addView(_view4);}});})();}rootView.onFinishInflate();return rootView;}},{key:"optReferenceString",value:function optReferenceString(refString){var currentElement=arguments.length <= 1 || arguments[1] === undefined?document:arguments[1];var rootElement=arguments.length <= 2 || arguments[2] === undefined?document:arguments[2];return View.findReferenceString(refString,currentElement,rootElement) || refString;}},{key:"findReferenceString",value:function findReferenceString(refString){var currentElement=arguments.length <= 1 || arguments[1] === undefined?document:arguments[1];var rootElement=arguments.length <= 2 || arguments[2] === undefined?document:arguments[2];if(!refString.startsWith('@'))return null;var referenceArray=[];var attrValue=refString;while(attrValue && attrValue.startsWith('@')) {var reference=View.findReference(attrValue,currentElement,rootElement,false);if(referenceArray.indexOf(reference) >= 0)throw Error('findReference Error: circle reference');referenceArray.push(reference);attrValue = reference.innerText;}return attrValue;}},{key:"findReference",value:function findReference(refString){var currentElement=arguments.length <= 1 || arguments[1] === undefined?document:arguments[1];var rootElement=arguments.length <= 2 || arguments[2] === undefined?document:arguments[2];var cloneNode=arguments.length <= 3 || arguments[3] === undefined?true:arguments[3];if(refString && refString.startsWith('@')){var _refString$split=refString.split('/');var _refString$split2=_toArray(_refString$split);var tagName=_refString$split2[0];var refIds=_refString$split2.slice(1);tagName = tagName.substring(1);if(!refIds || refIds.length === 0)return null;if(!tagName.startsWith('android-'))tagName = 'android-' + tagName;var q='resources ' + tagName + '#' + refIds.join(' #');var el=currentElement.querySelector(q) || rootElement.querySelector(q) || document.querySelector(q);return cloneNode?el.cloneNode(true):el;}return null;}}]);return View;})(JavaObject);View.DBG = Log.View_DBG;View.VIEW_LOG_TAG = "View";View.PFLAG_WANTS_FOCUS = 0x00000001;View.PFLAG_FOCUSED = 0x00000002;View.PFLAG_SELECTED = 0x00000004;View.PFLAG_IS_ROOT_NAMESPACE = 0x00000008;View.PFLAG_HAS_BOUNDS = 0x00000010;View.PFLAG_DRAWN = 0x00000020;View.PFLAG_DRAW_ANIMATION = 0x00000040;View.PFLAG_SKIP_DRAW = 0x00000080;View.PFLAG_ONLY_DRAWS_BACKGROUND = 0x00000100;View.PFLAG_REQUEST_TRANSPARENT_REGIONS = 0x00000200;View.PFLAG_DRAWABLE_STATE_DIRTY = 0x00000400;View.PFLAG_MEASURED_DIMENSION_SET = 0x00000800;View.PFLAG_FORCE_LAYOUT = 0x00001000;View.PFLAG_LAYOUT_REQUIRED = 0x00002000;View.PFLAG_PRESSED = 0x00004000;View.PFLAG_DRAWING_CACHE_VALID = 0x00008000;View.PFLAG_ANIMATION_STARTED = 0x00010000;View.PFLAG_ALPHA_SET = 0x00040000;View.PFLAG_SCROLL_CONTAINER = 0x00080000;View.PFLAG_SCROLL_CONTAINER_ADDED = 0x00100000;View.PFLAG_DIRTY = 0x00200000;View.PFLAG_DIRTY_OPAQUE = 0x00400000;View.PFLAG_DIRTY_MASK = 0x00600000;View.PFLAG_OPAQUE_BACKGROUND = 0x00800000;View.PFLAG_OPAQUE_SCROLLBARS = 0x01000000;View.PFLAG_OPAQUE_MASK = 0x01800000;View.PFLAG_PREPRESSED = 0x02000000;View.PFLAG_CANCEL_NEXT_UP_EVENT = 0x04000000;View.PFLAG_AWAKEN_SCROLL_BARS_ON_ATTACH = 0x08000000;View.PFLAG_HOVERED = 0x10000000;View.PFLAG_PIVOT_EXPLICITLY_SET = 0x20000000;View.PFLAG_ACTIVATED = 0x40000000;View.PFLAG_INVALIDATED = 0x80000000;View.PFLAG2_VIEW_QUICK_REJECTED = 0x10000000;View.PFLAG2_HAS_TRANSIENT_STATE = 0x80000000;View.PFLAG3_VIEW_IS_ANIMATING_TRANSFORM = 0x1;View.PFLAG3_VIEW_IS_ANIMATING_ALPHA = 0x2;View.PFLAG3_IS_LAID_OUT = 0x4;View.PFLAG3_MEASURE_NEEDED_BEFORE_LAYOUT = 0x8;View.PFLAG3_CALLED_SUPER = 0x10;View.NOT_FOCUSABLE = 0x00000000;View.FOCUSABLE = 0x00000001;View.FOCUSABLE_MASK = 0x00000001;View.OVER_SCROLL_ALWAYS = 0;View.OVER_SCROLL_IF_CONTENT_SCROLLS = 1;View.OVER_SCROLL_NEVER = 2;View.MEASURED_SIZE_MASK = 0x00ffffff;View.MEASURED_STATE_MASK = 0xff000000;View.MEASURED_HEIGHT_STATE_SHIFT = 16;View.MEASURED_STATE_TOO_SMALL = 0x01000000;View.VISIBILITY_MASK = 0x0000000C;View.VISIBLE = 0x00000000;View.INVISIBLE = 0x00000004;View.GONE = 0x00000008;View.ENABLED = 0x00000000;View.DISABLED = 0x00000020;View.ENABLED_MASK = 0x00000020;View.WILL_NOT_DRAW = 0x00000080;View.DRAW_MASK = 0x00000080;View.SCROLLBARS_NONE = 0x00000000;View.SCROLLBARS_HORIZONTAL = 0x00000100;View.SCROLLBARS_VERTICAL = 0x00000200;View.SCROLLBARS_MASK = 0x00000300;View.FOCUSABLES_ALL = 0x00000000;View.FOCUSABLES_TOUCH_MODE = 0x00000001;View.FOCUS_BACKWARD = 0x00000001;View.FOCUS_FORWARD = 0x00000002;View.FOCUS_LEFT = 0x00000011;View.FOCUS_UP = 0x00000021;View.FOCUS_RIGHT = 0x00000042;View.FOCUS_DOWN = 0x00000082;View.VIEW_STATE_WINDOW_FOCUSED = 1;View.VIEW_STATE_SELECTED = 1 << 1;View.VIEW_STATE_FOCUSED = 1 << 2;View.VIEW_STATE_ENABLED = 1 << 3;View.VIEW_STATE_DISABLE = -View.VIEW_STATE_ENABLED;View.VIEW_STATE_PRESSED = 1 << 4;View.VIEW_STATE_ACTIVATED = 1 << 5;View.VIEW_STATE_HOVERED = 1 << 7;View.VIEW_STATE_IDS = [View.VIEW_STATE_WINDOW_FOCUSED,View.VIEW_STATE_WINDOW_FOCUSED,View.VIEW_STATE_SELECTED,View.VIEW_STATE_SELECTED,View.VIEW_STATE_FOCUSED,View.VIEW_STATE_FOCUSED,View.VIEW_STATE_ENABLED,View.VIEW_STATE_ENABLED,View.VIEW_STATE_PRESSED,View.VIEW_STATE_PRESSED,View.VIEW_STATE_ACTIVATED,View.VIEW_STATE_ACTIVATED,View.VIEW_STATE_HOVERED,View.VIEW_STATE_HOVERED];View._static = (function(){function Integer_bitCount(i){i = i - (i >>> 1 & 0x55555555);i = (i & 0x33333333) + (i >>> 2 & 0x33333333);i = i + (i >>> 4) & 0x0f0f0f0f;i = i + (i >>> 8);i = i + (i >>> 16);return i & 0x3f;}var orderedIds=View.VIEW_STATE_IDS;var NUM_BITS=View.VIEW_STATE_IDS.length / 2;View.VIEW_STATE_SETS = new Array(1 << NUM_BITS);for(var i=0;i < View.VIEW_STATE_SETS.length;i++) {var numBits=Integer_bitCount(i);var stataSet=new Array(numBits);var pos=0;for(var j=0;j < orderedIds.length;j += 2) {if((i & orderedIds[j + 1]) != 0){stataSet[pos++] = orderedIds[j];}}View.VIEW_STATE_SETS[i] = stataSet;}View.EMPTY_STATE_SET = View.VIEW_STATE_SETS[0];View.WINDOW_FOCUSED_STATE_SET = View.VIEW_STATE_SETS[View.VIEW_STATE_WINDOW_FOCUSED];View.SELECTED_STATE_SET = View.VIEW_STATE_SETS[View.VIEW_STATE_SELECTED];View.SELECTED_WINDOW_FOCUSED_STATE_SET = View.VIEW_STATE_SETS[View.VIEW_STATE_WINDOW_FOCUSED | View.VIEW_STATE_SELECTED];View.FOCUSED_STATE_SET = View.VIEW_STATE_SETS[View.VIEW_STATE_FOCUSED];View.FOCUSED_WINDOW_FOCUSED_STATE_SET = View.VIEW_STATE_SETS[View.VIEW_STATE_WINDOW_FOCUSED | View.VIEW_STATE_FOCUSED];View.FOCUSED_SELECTED_STATE_SET = View.VIEW_STATE_SETS[View.VIEW_STATE_SELECTED | View.VIEW_STATE_FOCUSED];View.FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET = View.VIEW_STATE_SETS[View.VIEW_STATE_WINDOW_FOCUSED | View.VIEW_STATE_SELECTED | View.VIEW_STATE_FOCUSED];View.ENABLED_STATE_SET = View.VIEW_STATE_SETS[View.VIEW_STATE_ENABLED];View.ENABLED_WINDOW_FOCUSED_STATE_SET = View.VIEW_STATE_SETS[View.VIEW_STATE_WINDOW_FOCUSED | View.VIEW_STATE_ENABLED];View.ENABLED_SELECTED_STATE_SET = View.VIEW_STATE_SETS[View.VIEW_STATE_SELECTED | View.VIEW_STATE_ENABLED];View.ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET = View.VIEW_STATE_SETS[View.VIEW_STATE_WINDOW_FOCUSED | View.VIEW_STATE_SELECTED | View.VIEW_STATE_ENABLED];View.ENABLED_FOCUSED_STATE_SET = View.VIEW_STATE_SETS[View.VIEW_STATE_FOCUSED | View.VIEW_STATE_ENABLED];View.ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET = View.VIEW_STATE_SETS[View.VIEW_STATE_WINDOW_FOCUSED | View.VIEW_STATE_FOCUSED | View.VIEW_STATE_ENABLED];View.ENABLED_FOCUSED_SELECTED_STATE_SET = View.VIEW_STATE_SETS[View.VIEW_STATE_SELECTED | View.VIEW_STATE_FOCUSED | View.VIEW_STATE_ENABLED];View.ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET = View.VIEW_STATE_SETS[View.VIEW_STATE_WINDOW_FOCUSED | View.VIEW_STATE_SELECTED | View.VIEW_STATE_FOCUSED | View.VIEW_STATE_ENABLED];View.PRESSED_STATE_SET = View.VIEW_STATE_SETS[View.VIEW_STATE_PRESSED];View.PRESSED_WINDOW_FOCUSED_STATE_SET = View.VIEW_STATE_SETS[View.VIEW_STATE_WINDOW_FOCUSED | View.VIEW_STATE_PRESSED];View.PRESSED_SELECTED_STATE_SET = View.VIEW_STATE_SETS[View.VIEW_STATE_SELECTED | View.VIEW_STATE_PRESSED];View.PRESSED_SELECTED_WINDOW_FOCUSED_STATE_SET = View.VIEW_STATE_SETS[View.VIEW_STATE_WINDOW_FOCUSED | View.VIEW_STATE_SELECTED | View.VIEW_STATE_PRESSED];View.PRESSED_FOCUSED_STATE_SET = View.VIEW_STATE_SETS[View.VIEW_STATE_FOCUSED | View.VIEW_STATE_PRESSED];View.PRESSED_FOCUSED_WINDOW_FOCUSED_STATE_SET = View.VIEW_STATE_SETS[View.VIEW_STATE_WINDOW_FOCUSED | View.VIEW_STATE_FOCUSED | View.VIEW_STATE_PRESSED];View.PRESSED_FOCUSED_SELECTED_STATE_SET = View.VIEW_STATE_SETS[View.VIEW_STATE_SELECTED | View.VIEW_STATE_FOCUSED | View.VIEW_STATE_PRESSED];View.PRESSED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET = View.VIEW_STATE_SETS[View.VIEW_STATE_WINDOW_FOCUSED | View.VIEW_STATE_SELECTED | View.VIEW_STATE_FOCUSED | View.VIEW_STATE_PRESSED];View.PRESSED_ENABLED_STATE_SET = View.VIEW_STATE_SETS[View.VIEW_STATE_ENABLED | View.VIEW_STATE_PRESSED];View.PRESSED_ENABLED_WINDOW_FOCUSED_STATE_SET = View.VIEW_STATE_SETS[View.VIEW_STATE_WINDOW_FOCUSED | View.VIEW_STATE_ENABLED | View.VIEW_STATE_PRESSED];View.PRESSED_ENABLED_SELECTED_STATE_SET = View.VIEW_STATE_SETS[View.VIEW_STATE_SELECTED | View.VIEW_STATE_ENABLED | View.VIEW_STATE_PRESSED];View.PRESSED_ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET = View.VIEW_STATE_SETS[View.VIEW_STATE_WINDOW_FOCUSED | View.VIEW_STATE_SELECTED | View.VIEW_STATE_ENABLED | View.VIEW_STATE_PRESSED];View.PRESSED_ENABLED_FOCUSED_STATE_SET = View.VIEW_STATE_SETS[View.VIEW_STATE_FOCUSED | View.VIEW_STATE_ENABLED | View.VIEW_STATE_PRESSED];View.PRESSED_ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET = View.VIEW_STATE_SETS[View.VIEW_STATE_WINDOW_FOCUSED | View.VIEW_STATE_FOCUSED | View.VIEW_STATE_ENABLED | View.VIEW_STATE_PRESSED];View.PRESSED_ENABLED_FOCUSED_SELECTED_STATE_SET = View.VIEW_STATE_SETS[View.VIEW_STATE_SELECTED | View.VIEW_STATE_FOCUSED | View.VIEW_STATE_ENABLED | View.VIEW_STATE_PRESSED];View.PRESSED_ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET = View.VIEW_STATE_SETS[View.VIEW_STATE_WINDOW_FOCUSED | View.VIEW_STATE_SELECTED | View.VIEW_STATE_FOCUSED | View.VIEW_STATE_ENABLED | View.VIEW_STATE_PRESSED];})();View.CLICKABLE = 0x00004000;View.DRAWING_CACHE_ENABLED = 0x00008000;View.WILL_NOT_CACHE_DRAWING = 0x000020000;View.FOCUSABLE_IN_TOUCH_MODE = 0x00040000;View.LONG_CLICKABLE = 0x00200000;View.DUPLICATE_PARENT_STATE = 0x00400000;View.LAYER_TYPE_NONE = 0;View.LAYER_TYPE_SOFTWARE = 1;View.AndroidViewProperty = 'AndroidView';view_1.View = View;(function(View){var MeasureSpec=(function(){function MeasureSpec(){_classCallCheck(this,MeasureSpec);}_createClass(MeasureSpec,null,[{key:"makeMeasureSpec",value:function makeMeasureSpec(size,mode){return size & ~MeasureSpec.MODE_MASK | mode & MeasureSpec.MODE_MASK;}},{key:"getMode",value:function getMode(measureSpec){return measureSpec & MeasureSpec.MODE_MASK;}},{key:"getSize",value:function getSize(measureSpec){return measureSpec & ~MeasureSpec.MODE_MASK;}},{key:"adjust",value:function adjust(measureSpec,delta){return MeasureSpec.makeMeasureSpec(MeasureSpec.getSize(measureSpec + delta),MeasureSpec.getMode(measureSpec));}},{key:"toString",value:function toString(measureSpec){var mode=MeasureSpec.getMode(measureSpec);var size=MeasureSpec.getSize(measureSpec);var sb=new StringBuilder("MeasureSpec: ");if(mode == MeasureSpec.UNSPECIFIED)sb.append("UNSPECIFIED ");else if(mode == MeasureSpec.EXACTLY)sb.append("EXACTLY ");else if(mode == MeasureSpec.AT_MOST)sb.append("AT_MOST ");else sb.append(mode).append(" ");sb.append(size);return sb.toString();}}]);return MeasureSpec;})();MeasureSpec.MODE_SHIFT = 30;MeasureSpec.MODE_MASK = 0x3 << MeasureSpec.MODE_SHIFT;MeasureSpec.UNSPECIFIED = 0 << MeasureSpec.MODE_SHIFT;MeasureSpec.EXACTLY = 1 << MeasureSpec.MODE_SHIFT;MeasureSpec.AT_MOST = 2 << MeasureSpec.MODE_SHIFT;View.MeasureSpec = MeasureSpec;var AttachInfo=function AttachInfo(mViewRootImpl,mHandler){_classCallCheck(this,AttachInfo);this.mWindowLeft = 0;this.mWindowTop = 0;this.mKeyDispatchState = new KeyEvent.DispatcherState();this.mDrawingTime = 0;this.mTmpInvalRect = new Rect();this.mTmpTransformRect = new Rect();this.mScrollContainers = new Set();this.mViewScrollChanged = false;this.mTreeObserver = new view_1.ViewTreeObserver();this.mViewVisibilityChanged = false;this.mInvalidateChildLocation = new Array(2);this.mIgnoreDirtyState = false;this.mSetIgnoreDirtyState = false;this.mHasWindowFocus = false;this.mWindowVisibility = 0;this.mInTouchMode = false;this.mViewRootImpl = mViewRootImpl;this.mHandler = mHandler;};View.AttachInfo = AttachInfo;var ListenerInfo=function ListenerInfo(){_classCallCheck(this,ListenerInfo);};View.ListenerInfo = ListenerInfo;})(View = view_1.View || (view_1.View = {}));(function(View){var AttachInfo;(function(AttachInfo){var InvalidateInfo=(function(){function InvalidateInfo(){_classCallCheck(this,InvalidateInfo);this.left = 0;this.top = 0;this.right = 0;this.bottom = 0;}_createClass(InvalidateInfo,[{key:"recycle",value:function recycle(){this.target = null;InvalidateInfo.sPool.release(this);}}],[{key:"obtain",value:function obtain(){var instance=InvalidateInfo.sPool.acquire();return instance != null?instance:new InvalidateInfo();}}]);return InvalidateInfo;})();InvalidateInfo.POOL_LIMIT = 10;InvalidateInfo.sPool = new Pools.SynchronizedPool(InvalidateInfo.POOL_LIMIT);AttachInfo.InvalidateInfo = InvalidateInfo;})(AttachInfo = View.AttachInfo || (View.AttachInfo = {}));})(View = view_1.View || (view_1.View = {}));var CheckForLongPress=(function(){function CheckForLongPress(View_this){_classCallCheck(this,CheckForLongPress);this.mOriginalWindowAttachCount = 0;this.View_this = View_this;}_createClass(CheckForLongPress,[{key:"run",value:function run(){if(this.View_this.isPressed() && this.View_this.mParent != null && this.mOriginalWindowAttachCount == this.View_this.mWindowAttachCount){if(this.View_this.performLongClick()){this.View_this.mHasPerformedLongPress = true;}}}},{key:"rememberWindowAttachCount",value:function rememberWindowAttachCount(){this.mOriginalWindowAttachCount = this.View_this.mWindowAttachCount;}}]);return CheckForLongPress;})();var CheckForTap=(function(){function CheckForTap(View_this){_classCallCheck(this,CheckForTap);this.View_this = View_this;}_createClass(CheckForTap,[{key:"run",value:function run(){this.View_this.mPrivateFlags &= ~View.PFLAG_PREPRESSED;this.View_this.setPressed(true);this.View_this.checkForLongClick(view_1.ViewConfiguration.getTapTimeout());}}]);return CheckForTap;})();var PerformClick=(function(){function PerformClick(View_this){_classCallCheck(this,PerformClick);this.View_this = View_this;}_createClass(PerformClick,[{key:"run",value:function run(){this.View_this.performClick();}}]);return PerformClick;})();var UnsetPressedState=(function(){function UnsetPressedState(View_this){_classCallCheck(this,UnsetPressedState);this.View_this = View_this;}_createClass(UnsetPressedState,[{key:"run",value:function run(){this.View_this.setPressed(false);}}]);return UnsetPressedState;})();var ScrollabilityCache=(function(){function ScrollabilityCache(host){_classCallCheck(this,ScrollabilityCache);this.fadeScrollBars = true;this.fadingEdgeLength = view_1.ViewConfiguration.get().getScaledFadingEdgeLength();this.scrollBarDefaultDelayBeforeFade = view_1.ViewConfiguration.getScrollDefaultDelay();this.scrollBarFadeDuration = view_1.ViewConfiguration.getScrollBarFadeDuration();this.scrollBarSize = view_1.ViewConfiguration.get().getScaledScrollBarSize();this.interpolator = new LinearInterpolator();this.state = ScrollabilityCache.OFF;this.host = host;this.scrollBar = new ScrollBarDrawable();var thumbColor=new ColorDrawable(0x44000000);var density=Resources.getDisplayMetrics().density;var thumb=new InsetDrawable(thumbColor,0,2 * density,view_1.ViewConfiguration.get().getScaledScrollBarSize() / 2,2 * density);this.scrollBar.setHorizontalThumbDrawable(thumb);this.scrollBar.setVerticalThumbDrawable(thumb);}_createClass(ScrollabilityCache,[{key:"run",value:function run(){var now=AnimationUtils.currentAnimationTimeMillis();if(now >= this.fadeStartTime){this.state = ScrollabilityCache.FADING;this.host.invalidate(true);}}},{key:"_computeAlphaToScrollBar",value:function _computeAlphaToScrollBar(){var now=AnimationUtils.currentAnimationTimeMillis();var factor=(now - this.fadeStartTime) / this.scrollBarFadeDuration;if(factor >= 1){this.state = ScrollabilityCache.OFF;factor = 1;}var alpha=1 - this.interpolator.getInterpolation(factor);this.scrollBar.setAlpha(255 * alpha);}}]);return ScrollabilityCache;})();ScrollabilityCache.OFF = 0;ScrollabilityCache.ON = 1;ScrollabilityCache.FADING = 2;var MatchIdPredicate=(function(){function MatchIdPredicate(){_classCallCheck(this,MatchIdPredicate);}_createClass(MatchIdPredicate,[{key:"apply",value:function apply(view){return view.mID === this.mId;}}]);return MatchIdPredicate;})();})(view = android.view || (android.view = {}));})(android || (android = {}));var android;(function(android){var graphics;(function(graphics){var Point=(function(){function Point(){_classCallCheck(this,Point);this.x = 0;this.y = 0;for(var _len20=arguments.length,args=Array(_len20),_key20=0;_key20 < _len20;_key20++) {args[_key20] = arguments[_key20];}if(args.length === 1){var src=args[0];this.x = src.x;this.y = src.y;}else {var _args$013=args[0];var x=_args$013 === undefined?0:_args$013;var _args$113=args[1];var y=_args$113 === undefined?0:_args$113;this.x = x;this.y = y;}}_createClass(Point,[{key:"set",value:function set(x,y){this.x = x;this.y = y;}},{key:"negate",value:function negate(){this.x = -this.x;this.y = -this.y;}},{key:"offset",value:function offset(dx,dy){this.x += dx;this.y += dy;}},{key:"equals",value:function equals(){for(var _len21=arguments.length,args=Array(_len21),_key21=0;_key21 < _len21;_key21++) {args[_key21] = arguments[_key21];}if(args.length === 2){var _args$014=args[0];var x=_args$014 === undefined?0:_args$014;var _args$114=args[1];var y=_args$114 === undefined?0:_args$114;return this.x == x && this.y == y;}else {var o=args[0];if(this === o)return true;if(!o || !(o instanceof Point))return false;var point=o;if(this.x != point.x)return false;if(this.y != point.y)return false;return true;}}},{key:"toString",value:function toString(){return "Point(" + this.x + ", " + this.y + ")";}}]);return Point;})();graphics.Point = Point;})(graphics = android.graphics || (android.graphics = {}));})(android || (android = {})); /**
 * Created by linfaxin on 15/10/5.
 */ ///<reference path="View.ts"/>
///<reference path="../graphics/Point.ts"/>
///<reference path="../graphics/Rect.ts"/>
/**
 * Created by linfaxin on 15/10/13.
 */ ///<reference path="../graphics/Rect.ts"/>
///<reference path="../graphics/Canvas.ts"/>
///<reference path="../graphics/Canvas.ts"/>
var android;(function(android){var view;(function(view){var Rect=android.graphics.Rect;var Canvas=android.graphics.Canvas;var Surface=(function(){function Surface(canvasElement){_classCallCheck(this,Surface);this.mLockedRect = new Rect();this.mCanvasElement = canvasElement;}_createClass(Surface,[{key:"lockCanvas",value:function lockCanvas(dirty){var fullWidth=this.mCanvasElement.width;var fullHeight=this.mCanvasElement.height;var rect=this.mLockedRect;if(dirty.isEmpty()){rect.set(0,0,fullWidth,fullHeight);}else {rect.set(Math.floor(dirty.left - 1),Math.floor(dirty.top - 1),Math.ceil(dirty.right + 1),Math.ceil(dirty.bottom + 1));}var width=rect.width();var height=rect.height();var canvas=new Canvas(width,height);canvas.translate(-rect.left,-rect.top);var mCanvasContent=this.mCanvasElement.getContext('2d');mCanvasContent.clearRect(rect.left,rect.top,width,height);return canvas;}},{key:"unlockCanvasAndPost",value:function unlockCanvasAndPost(canvas){var mCanvasContent=this.mCanvasElement.getContext('2d');if(canvas.canvasElement)mCanvasContent.drawImage(canvas.canvasElement,this.mLockedRect.left,this.mLockedRect.top);canvas.recycle();}}]);return Surface;})();view.Surface = Surface;})(view = android.view || (android.view = {}));})(android || (android = {})); ///<reference path="ViewParent.ts"/>
///<reference path="View.ts"/>
///<reference path="Surface.ts"/>
///<reference path="../util/Log.ts"/>
///<reference path="../util/Log.ts"/>
///<reference path="../os/Handler.ts"/>
///<reference path="../os/Message.ts"/>
///<reference path="../os/SystemClock.ts"/>
///<reference path="../content/res/Resources.ts"/>
///<reference path="../graphics/Point.ts"/>
///<reference path="../graphics/Rect.ts"/>
///<reference path="../graphics/Canvas.ts"/>
///<reference path="../../java/lang/Runnable.ts"/>
///<reference path="../../java/lang/System.ts"/>
var android;(function(android){var view;(function(view_2){var View=android.view.View;var Resources=android.content.res.Resources;var Rect=android.graphics.Rect;var Handler=android.os.Handler;var SystemClock=android.os.SystemClock;var System=java.lang.System;var Log=android.util.Log;var Surface=android.view.Surface;var ViewRootImpl=(function(){function ViewRootImpl(){_classCallCheck(this,ViewRootImpl);this.mViewVisibility = View.GONE;this.mStopped = false;this.mWidth = -1;this.mHeight = -1;this.mDirty = new Rect();this.mTempRect = new Rect();this.mVisRect = new Rect();this.mTraversalScheduled = false;this.mWillDrawSoon = false;this.mIsInTraversal = false;this.mLayoutRequested = false;this.mFirst = true;this.mFullRedrawNeeded = false;this.mIsDrawing = false;this.mAdded = false;this.mAddedTouchMode = false;this.mWinFrame = new Rect();this.mLayoutRequesters = [];this.mHandler = new ViewRootHandler();this.mFpsStartTime = -1;this.mFpsPrevTime = -1;this.mFpsNumFrames = 0;this.mInvalidateOnAnimationRunnable = new InvalidateOnAnimationRunnable(this.mHandler);this.mAttachInfo = new View.AttachInfo(this,this.mHandler);this.mTraversalRunnable = new TraversalRunnable(this);}_createClass(ViewRootImpl,[{key:"initSurface",value:function initSurface(canvasElement){this.mSurface = new Surface(canvasElement);}},{key:"setView",value:function setView(view){if(this.mView == null){this.mView = view;this.mAttachInfo.mRootView = view;this.mAdded = true;this.requestLayout();view.assignParent(this);this.mAddedTouchMode = true;var syntheticInputStage=new SyntheticInputStage(this);var viewPostImeStage=new ViewPostImeInputStage(this,syntheticInputStage);var earlyPostImeStage=new EarlyPostImeInputStage(this,viewPostImeStage);this.mFirstInputStage = earlyPostImeStage;}}},{key:"getView",value:function getView(){return this.mView;}},{key:"getHostVisibility",value:function getHostVisibility(){return this.mView.getVisibility();}},{key:"scheduleTraversals",value:function scheduleTraversals(){if(!this.mTraversalScheduled){this.mTraversalScheduled = true;this.mHandler.post(this.mTraversalRunnable);}}},{key:"unscheduleTraversals",value:function unscheduleTraversals(){if(this.mTraversalScheduled){this.mTraversalScheduled = false;this.mHandler.removeCallbacks(this.mTraversalRunnable);}}},{key:"doTraversal",value:function doTraversal(){if(this.mTraversalScheduled){this.mTraversalScheduled = false;this.performTraversals();}}},{key:"measureHierarchy",value:function measureHierarchy(host,lp,desiredWindowWidth,desiredWindowHeight){var windowSizeMayChange=false;if(ViewRootImpl.DEBUG_ORIENTATION || ViewRootImpl.DEBUG_LAYOUT)Log.v(ViewRootImpl.TAG,"Measuring " + host + " in display " + desiredWindowWidth + "x" + desiredWindowHeight + "...");var childWidthMeasureSpec=ViewRootImpl.getRootMeasureSpec(desiredWindowWidth,lp.width);var childHeightMeasureSpec=ViewRootImpl.getRootMeasureSpec(desiredWindowHeight,lp.height);this.performMeasure(childWidthMeasureSpec,childHeightMeasureSpec);if(this.mWidth != host.getMeasuredWidth() || this.mHeight != host.getMeasuredHeight()){windowSizeMayChange = true;}if(ViewRootImpl.DBG){System.out.println("======================================");System.out.println("performTraversals -- after measure");host.debug();}return windowSizeMayChange;}},{key:"performTraversals",value:function performTraversals(){var host=this.mView;if(ViewRootImpl.DBG){System.out.println("======================================");System.out.println("performTraversals");host.debug();}if(host == null || !this.mAdded)return;this.mIsInTraversal = true;this.mWillDrawSoon = true;var windowSizeMayChange=false;var newSurface=false;var surfaceChanged=false;var lp=new view_2.ViewGroup.LayoutParams(view_2.ViewGroup.LayoutParams.MATCH_PARENT,view_2.ViewGroup.LayoutParams.MATCH_PARENT);var desiredWindowWidth=undefined;var desiredWindowHeight=undefined;var attachInfo=this.mAttachInfo;var viewVisibility=this.getHostVisibility();var viewVisibilityChanged=this.mViewVisibility != viewVisibility;var params=null;var frame=this.mWinFrame;if(this.mFirst){this.mFullRedrawNeeded = true;this.mLayoutRequested = true;var packageMetrics=Resources.getDisplayMetrics();desiredWindowWidth = packageMetrics.widthPixels;desiredWindowHeight = packageMetrics.heightPixels;attachInfo.mHasWindowFocus = true;attachInfo.mWindowVisibility = viewVisibility;viewVisibilityChanged = false;host.dispatchAttachedToWindow(attachInfo,0);attachInfo.mTreeObserver.dispatchOnWindowAttachedChange(true);}else {desiredWindowWidth = frame.width();desiredWindowHeight = frame.height();if(desiredWindowWidth != this.mWidth || desiredWindowHeight != this.mHeight){if(ViewRootImpl.DEBUG_ORIENTATION){Log.v(ViewRootImpl.TAG,"View " + host + " resized to: " + frame);}this.mFullRedrawNeeded = true;this.mLayoutRequested = true;windowSizeMayChange = true;}}if(viewVisibilityChanged){attachInfo.mWindowVisibility = viewVisibility;host.dispatchWindowVisibilityChanged(viewVisibility);}ViewRootImpl.getRunQueue(this).executeActions(attachInfo.mHandler);var layoutRequested=this.mLayoutRequested;if(layoutRequested){if(this.mFirst){this.mAttachInfo.mInTouchMode = !this.mAddedTouchMode;this.ensureTouchModeLocally(this.mAddedTouchMode);}else {if(lp.width < 0 || lp.height < 0){windowSizeMayChange = true;var packageMetrics=Resources.getDisplayMetrics();desiredWindowWidth = packageMetrics.widthPixels;desiredWindowHeight = packageMetrics.heightPixels;}}windowSizeMayChange == this.measureHierarchy(host,lp,desiredWindowWidth,desiredWindowHeight) || windowSizeMayChange;}if(this.mFirst || attachInfo.mViewVisibilityChanged){attachInfo.mViewVisibilityChanged = false;}if(layoutRequested){this.mLayoutRequested = false;}var windowShouldResize=layoutRequested && windowSizeMayChange && (this.mWidth != host.getMeasuredWidth() || this.mHeight != host.getMeasuredHeight() || lp.width < 0 && frame.width() !== desiredWindowWidth && frame.width() !== this.mWidth || lp.height < 0 && frame.height() !== desiredWindowHeight && frame.height() !== this.mHeight);if(this.mFirst || windowShouldResize || viewVisibilityChanged){if(ViewRootImpl.DEBUG_LAYOUT){Log.i(ViewRootImpl.TAG,"host=w:" + host.getMeasuredWidth() + ", h:" + host.getMeasuredHeight() + ", params=" + params);}if(ViewRootImpl.DEBUG_ORIENTATION)Log.v(ViewRootImpl.TAG,"Relayout returned: frame=" + frame);attachInfo.mWindowLeft = frame.left;attachInfo.mWindowTop = frame.top;if(this.mWidth != frame.width() || this.mHeight != frame.height()){this.mWidth = frame.width();this.mHeight = frame.height();}if(this.mWidth != host.getMeasuredWidth() || this.mHeight != host.getMeasuredHeight()){var childWidthMeasureSpec=ViewRootImpl.getRootMeasureSpec(this.mWidth,lp.width);var childHeightMeasureSpec=ViewRootImpl.getRootMeasureSpec(this.mHeight,lp.height);if(ViewRootImpl.DEBUG_LAYOUT)Log.v(ViewRootImpl.TAG,"Ooops, something changed!  mWidth=" + this.mWidth + " measuredWidth=" + host.getMeasuredWidth() + " mHeight=" + this.mHeight + " measuredHeight=" + host.getMeasuredHeight());this.performMeasure(childWidthMeasureSpec,childHeightMeasureSpec);layoutRequested = true;}}else {var windowMoved=attachInfo.mWindowLeft != frame.left || attachInfo.mWindowTop != frame.top;if(windowMoved){attachInfo.mWindowLeft = frame.left;attachInfo.mWindowTop = frame.top;}}var didLayout=layoutRequested;var triggerGlobalLayoutListener=didLayout;if(didLayout){this.performLayout(lp,desiredWindowWidth,desiredWindowHeight);if(ViewRootImpl.DBG){System.out.println("======================================");System.out.println("performTraversals -- after setFrame");host.debug();}}if(triggerGlobalLayoutListener){attachInfo.mTreeObserver.dispatchOnGlobalLayout();}var skipDraw=false;if(this.mFirst){if(ViewRootImpl.DEBUG_INPUT_RESIZE)Log.v(ViewRootImpl.TAG,"First: mView.hasFocus()=" + this.mView.hasFocus());if(this.mView != null){if(!this.mView.hasFocus()){this.mView.requestFocus(View.FOCUS_FORWARD);if(ViewRootImpl.DEBUG_INPUT_RESIZE)Log.v(ViewRootImpl.TAG,"First: requested focused view=" + this.mView.findFocus());}else {if(ViewRootImpl.DEBUG_INPUT_RESIZE)Log.v(ViewRootImpl.TAG,"First: existing focused view=" + this.mView.findFocus());}}}this.mFirst = false;this.mWillDrawSoon = false;this.mViewVisibility = viewVisibility;var cancelDraw=attachInfo.mTreeObserver.dispatchOnPreDraw() || viewVisibility != View.VISIBLE;if(!cancelDraw){if(!skipDraw){this.performDraw();}}else {if(viewVisibility == View.VISIBLE){this.scheduleTraversals();}}this.mIsInTraversal = false;}},{key:"performLayout",value:function performLayout(lp,desiredWindowWidth,desiredWindowHeight){var _this7=this;this.mLayoutRequested = false;this.mInLayout = true;var host=this.mView;if(ViewRootImpl.DEBUG_ORIENTATION || ViewRootImpl.DEBUG_LAYOUT){Log.v(ViewRootImpl.TAG,"Laying out " + host + " to (" + host.getMeasuredWidth() + ", " + host.getMeasuredHeight() + ")");}host.layout(0,0,host.getMeasuredWidth(),host.getMeasuredHeight());this.mInLayout = false;var numViewsRequestingLayout=this.mLayoutRequesters.length;if(numViewsRequestingLayout > 0){var validLayoutRequesters=this.getValidLayoutRequesters(this.mLayoutRequesters,false);if(validLayoutRequesters != null){this.mHandlingLayoutInLayoutRequest = true;var numValidRequests=validLayoutRequesters.length;for(var i=0;i < numValidRequests;++i) {var _view5=validLayoutRequesters[i];Log.w("View","requestLayout() improperly called by " + _view5 + " during layout: running second layout pass");_view5.requestLayout();}this.measureHierarchy(host,lp,desiredWindowWidth,desiredWindowHeight);this.mInLayout = true;host.layout(0,0,host.getMeasuredWidth(),host.getMeasuredHeight());this.mHandlingLayoutInLayoutRequest = false;validLayoutRequesters = this.getValidLayoutRequesters(this.mLayoutRequesters,true);if(validLayoutRequesters != null){(function(){var finalRequesters=validLayoutRequesters;ViewRootImpl.getRunQueue(_this7).post({run:function run(){var numValidRequests=finalRequesters.length;for(var i=0;i < numValidRequests;++i) {var _view6=finalRequesters[i];Log.w("View","requestLayout() improperly called by " + _view6 + " during second layout pass: posting in next frame");_view6.requestLayout();}}});})();}}}this.mInLayout = false;}},{key:"getValidLayoutRequesters",value:function getValidLayoutRequesters(layoutRequesters,secondLayoutRequests){var numViewsRequestingLayout=layoutRequesters.length;var validLayoutRequesters=null;for(var i=0;i < numViewsRequestingLayout;++i) {var _view7=layoutRequesters[i];if(_view7 != null && _view7.mAttachInfo != null && _view7.mParent != null && (secondLayoutRequests || (_view7.mPrivateFlags & View.PFLAG_FORCE_LAYOUT) == View.PFLAG_FORCE_LAYOUT)){var gone=false;var _parent3=_view7;while(_parent3 != null) {if((_parent3.mViewFlags & View.VISIBILITY_MASK) == View.GONE){gone = true;break;}if(_parent3.mParent instanceof View){_parent3 = _parent3.mParent;}else {_parent3 = null;}}if(!gone){if(validLayoutRequesters == null){validLayoutRequesters = [];}validLayoutRequesters.push(_view7);}}}if(!secondLayoutRequests){for(var i=0;i < numViewsRequestingLayout;++i) {var _view8=layoutRequesters[i];while(_view8 != null && (_view8.mPrivateFlags & View.PFLAG_FORCE_LAYOUT) != 0) {_view8.mPrivateFlags &= ~View.PFLAG_FORCE_LAYOUT;if(_view8.mParent instanceof View){_view8 = _view8.mParent;}else {_view8 = null;}}}}layoutRequesters.splice(0,layoutRequesters.length);return validLayoutRequesters;}},{key:"performMeasure",value:function performMeasure(childWidthMeasureSpec,childHeightMeasureSpec){this.mView.measure(childWidthMeasureSpec,childHeightMeasureSpec);}},{key:"isInLayout",value:function isInLayout(){return this.mInLayout;}},{key:"requestLayoutDuringLayout",value:function requestLayoutDuringLayout(view){if(view.mParent == null || view.mAttachInfo == null){return true;}if(this.mLayoutRequesters.indexOf(view) === -1){this.mLayoutRequesters.push(view);}if(!this.mHandlingLayoutInLayoutRequest){return true;}else {return false;}}},{key:"trackFPS",value:function trackFPS(){var nowTime=System.currentTimeMillis();if(this.mFpsStartTime < 0){this.mFpsStartTime = this.mFpsPrevTime = nowTime;this.mFpsNumFrames = 0;}else {this.mFpsNumFrames++;var frameTime=nowTime - this.mFpsPrevTime;var totalTime=nowTime - this.mFpsStartTime;this.mFpsPrevTime = nowTime;if(totalTime > 1000){var fps=this.mFpsNumFrames * 1000 / totalTime;Log.v(ViewRootImpl.TAG,"FPS:\t" + fps);if(!this._showFPSNode){this._showFPSNode = document.createElement('p');this._showFPSNode.style.position = 'absolute';this._showFPSNode.style.left = '0';this._showFPSNode.style.bottom = '0';this._showFPSNode.style.background = 'black';this._showFPSNode.style.color = 'white';this.rootElement.appendChild(this._showFPSNode);}this._showFPSNode.innerText = 'FPS:' + fps.toFixed(1);this.mFpsStartTime = nowTime;this.mFpsNumFrames = 0;}}}},{key:"performDraw",value:function performDraw(){var fullRedrawNeeded=this.mFullRedrawNeeded;this.mFullRedrawNeeded = false;this.mIsDrawing = true;try{this.draw(fullRedrawNeeded);}finally {this.mIsDrawing = false;}}},{key:"draw",value:function draw(fullRedrawNeeded){if(ViewRootImpl.DEBUG_FPS){this.trackFPS();}var attachInfo=this.mAttachInfo;if(attachInfo.mViewScrollChanged){attachInfo.mViewScrollChanged = false;attachInfo.mTreeObserver.dispatchOnScrollChanged();}if(fullRedrawNeeded){attachInfo.mIgnoreDirtyState = true;this.mDirty.set(0,0,this.mWidth,this.mHeight);}if(ViewRootImpl.DEBUG_ORIENTATION || ViewRootImpl.DEBUG_DRAW){Log.v(ViewRootImpl.TAG,"Draw " + this.mView + ", width=" + this.mWidth + ", height=" + this.mHeight + ", dirty=" + this.mDirty);}attachInfo.mTreeObserver.dispatchOnDraw();this.drawSoftware();}},{key:"drawSoftware",value:function drawSoftware(){var canvas=this.mSurface.lockCanvas(this.mDirty);this.mDirty.setEmpty();var attachInfo=this.mAttachInfo;attachInfo.mDrawingTime = SystemClock.uptimeMillis();this.mView.mPrivateFlags |= View.PFLAG_DRAWN;attachInfo.mSetIgnoreDirtyState = false;this.mView.draw(canvas);if(!attachInfo.mSetIgnoreDirtyState){attachInfo.mIgnoreDirtyState = false;}this.mSurface.unlockCanvasAndPost(canvas);if(ViewRootImpl.LOCAL_LOGV){Log.v(ViewRootImpl.TAG,"Surface unlockCanvasAndPost");}}},{key:"isLayoutRequested",value:function isLayoutRequested(){return this.mLayoutRequested;}},{key:"dispatchInvalidateDelayed",value:function dispatchInvalidateDelayed(view,delayMilliseconds){var msg=this.mHandler.obtainMessage(ViewRootHandler.MSG_INVALIDATE,view);this.mHandler.sendMessageDelayed(msg,delayMilliseconds);}},{key:"dispatchInvalidateRectDelayed",value:function dispatchInvalidateRectDelayed(info,delayMilliseconds){var msg=this.mHandler.obtainMessage(ViewRootHandler.MSG_INVALIDATE_RECT,info);this.mHandler.sendMessageDelayed(msg,delayMilliseconds);}},{key:"dispatchInvalidateOnAnimation",value:function dispatchInvalidateOnAnimation(view){this.mInvalidateOnAnimationRunnable.addView(view);}},{key:"dispatchInvalidateRectOnAnimation",value:function dispatchInvalidateRectOnAnimation(info){this.mInvalidateOnAnimationRunnable.addViewRect(info);}},{key:"cancelInvalidate",value:function cancelInvalidate(view){this.mHandler.removeMessages(ViewRootHandler.MSG_INVALIDATE,view);this.mHandler.removeMessages(ViewRootHandler.MSG_INVALIDATE_RECT,view);this.mInvalidateOnAnimationRunnable.removeView(view);}},{key:"getParent",value:function getParent(){return null;}},{key:"requestLayout",value:function requestLayout(){if(!this.mHandlingLayoutInLayoutRequest){this.mLayoutRequested = true;this.scheduleTraversals();}}},{key:"invalidate",value:function invalidate(){this.mDirty.set(0,0,this.mWidth,this.mHeight);this.scheduleTraversals();}},{key:"invalidateWorld",value:function invalidateWorld(view){view.invalidate();if(view instanceof view_2.ViewGroup){var _parent4=view;for(var i=0;i < _parent4.getChildCount();i++) {this.invalidateWorld(_parent4.getChildAt(i));}}}},{key:"invalidateChild",value:function invalidateChild(child,dirty){this.invalidateChildInParent(null,dirty);}},{key:"invalidateChildInParent",value:function invalidateChildInParent(location,dirty){if(ViewRootImpl.DEBUG_DRAW)Log.v(ViewRootImpl.TAG,"Invalidate child: " + dirty);if(dirty == null){this.invalidate();return null;}else if(dirty.isEmpty()){return null;}var localDirty=this.mDirty;if(!localDirty.isEmpty() && !localDirty.contains(dirty)){this.mAttachInfo.mSetIgnoreDirtyState = true;this.mAttachInfo.mIgnoreDirtyState = true;}localDirty.union(dirty.left,dirty.top,dirty.right,dirty.bottom);var intersected=localDirty.intersect(0,0,this.mWidth,this.mHeight);if(!intersected){localDirty.setEmpty();}if(!this.mWillDrawSoon && intersected){this.scheduleTraversals();}return null;}},{key:"requestChildFocus",value:function requestChildFocus(child,focused){if(ViewRootImpl.DEBUG_INPUT_RESIZE){Log.v(ViewRootImpl.TAG,"Request child focus: focus now " + focused);}this.scheduleTraversals();}},{key:"clearChildFocus",value:function clearChildFocus(focused){if(ViewRootImpl.DEBUG_INPUT_RESIZE){Log.v(ViewRootImpl.TAG,"Request child focus: focus now " + focused);}this.scheduleTraversals();}},{key:"getChildVisibleRect",value:function getChildVisibleRect(child,r,offset){if(child != this.mView){throw new Error("child is not mine, honest!");}return r.intersect(0,0,this.mWidth,this.mHeight);}},{key:"focusSearch",value:function focusSearch(focused,direction){if(!(this.mView instanceof view_2.ViewGroup)){return null;}return view_2.FocusFinder.getInstance().findNextFocus(this.mView,focused,direction);}},{key:"bringChildToFront",value:function bringChildToFront(child){}},{key:"focusableViewAvailable",value:function focusableViewAvailable(v){if(this.mView != null){if(!this.mView.hasFocus()){v.requestFocus();}else {var focused=this.mView.findFocus();if(focused instanceof view_2.ViewGroup){var group=focused;if(group.getDescendantFocusability() == view_2.ViewGroup.FOCUS_AFTER_DESCENDANTS && ViewRootImpl.isViewDescendantOf(v,focused)){v.requestFocus();}}}}}},{key:"childDrawableStateChanged",value:function childDrawableStateChanged(child){}},{key:"requestDisallowInterceptTouchEvent",value:function requestDisallowInterceptTouchEvent(disallowIntercept){}},{key:"requestChildRectangleOnScreen",value:function requestChildRectangleOnScreen(child,rectangle,immediate){return false;}},{key:"childHasTransientStateChanged",value:function childHasTransientStateChanged(child,hasTransientState){}},{key:"dispatchResized",value:function dispatchResized(frame){this.mWinFrame.set(frame.left,frame.top,frame.right,frame.bottom);this.requestLayout();}},{key:"dispatchInputEvent",value:function dispatchInputEvent(event){this.deliverInputEvent(event);var result=event[InputStage.FLAG_FINISHED_HANDLED];event[InputStage.FLAG_FINISHED] = false;event[InputStage.FLAG_FINISHED_HANDLED] = false;return result;}},{key:"deliverInputEvent",value:function deliverInputEvent(event){this.mFirstInputStage.deliver(event);}},{key:"finishInputEvent",value:function finishInputEvent(event){}},{key:"checkForLeavingTouchModeAndConsume",value:function checkForLeavingTouchModeAndConsume(event){if(!this.mAttachInfo.mInTouchMode){return false;}var action=event.getAction();if(action != view_2.KeyEvent.ACTION_DOWN){return false;}if(ViewRootImpl.isNavigationKey(event)){return this.ensureTouchMode(false);}if(ViewRootImpl.isTypingKey(event)){this.ensureTouchMode(false);return false;}return false;}},{key:"ensureTouchMode",value:function ensureTouchMode(inTouchMode){if(ViewRootImpl.DBG)Log.d("touchmode","ensureTouchMode(" + inTouchMode + "), current " + "touch mode is " + this.mAttachInfo.mInTouchMode);if(this.mAttachInfo.mInTouchMode == inTouchMode)return false;return this.ensureTouchModeLocally(inTouchMode);}},{key:"ensureTouchModeLocally",value:function ensureTouchModeLocally(inTouchMode){if(ViewRootImpl.DBG)Log.d("touchmode","ensureTouchModeLocally(" + inTouchMode + "), current " + "touch mode is " + this.mAttachInfo.mInTouchMode);if(this.mAttachInfo.mInTouchMode == inTouchMode)return false;this.mAttachInfo.mInTouchMode = inTouchMode;this.mAttachInfo.mTreeObserver.dispatchOnTouchModeChanged(inTouchMode);return inTouchMode?this.enterTouchMode():this.leaveTouchMode();}},{key:"enterTouchMode",value:function enterTouchMode(){if(this.mView != null && this.mView.hasFocus()){var focused=this.mView.findFocus();if(focused != null && !focused.isFocusableInTouchMode()){var ancestorToTakeFocus=ViewRootImpl.findAncestorToTakeFocusInTouchMode(focused);if(ancestorToTakeFocus != null){return ancestorToTakeFocus.requestFocus();}else {focused.clearFocusInternal(true,false);return true;}}}return false;}},{key:"leaveTouchMode",value:function leaveTouchMode(){if(this.mView != null){if(this.mView.hasFocus()){var focusedView=this.mView.findFocus();if(!(focusedView instanceof view_2.ViewGroup)){return false;}else if(focusedView.getDescendantFocusability() != view_2.ViewGroup.FOCUS_AFTER_DESCENDANTS){return false;}}var focused=this.focusSearch(null,View.FOCUS_DOWN);if(focused != null){return focused.requestFocus(View.FOCUS_DOWN);}}return false;}}],[{key:"getRootMeasureSpec",value:function getRootMeasureSpec(windowSize,rootDimension){var MeasureSpec=View.MeasureSpec;var measureSpec=undefined;switch(rootDimension){case view_2.ViewGroup.LayoutParams.MATCH_PARENT:measureSpec = MeasureSpec.makeMeasureSpec(windowSize,MeasureSpec.EXACTLY);break;case view_2.ViewGroup.LayoutParams.WRAP_CONTENT:measureSpec = MeasureSpec.makeMeasureSpec(windowSize,MeasureSpec.AT_MOST);break;default:measureSpec = MeasureSpec.makeMeasureSpec(rootDimension,MeasureSpec.EXACTLY);break;}return measureSpec;}},{key:"isViewDescendantOf",value:function isViewDescendantOf(child,parent){if(child == parent){return true;}var theParent=child.getParent();return theParent instanceof view_2.ViewGroup && ViewRootImpl.isViewDescendantOf(theParent,parent);}},{key:"isNavigationKey",value:function isNavigationKey(keyEvent){switch(keyEvent.getKeyCode()){case view_2.KeyEvent.KEYCODE_DPAD_LEFT:case view_2.KeyEvent.KEYCODE_DPAD_RIGHT:case view_2.KeyEvent.KEYCODE_DPAD_UP:case view_2.KeyEvent.KEYCODE_DPAD_DOWN:case view_2.KeyEvent.KEYCODE_DPAD_CENTER:case view_2.KeyEvent.KEYCODE_PAGE_UP:case view_2.KeyEvent.KEYCODE_PAGE_DOWN:case view_2.KeyEvent.KEYCODE_MOVE_HOME:case view_2.KeyEvent.KEYCODE_MOVE_END:case view_2.KeyEvent.KEYCODE_TAB:case view_2.KeyEvent.KEYCODE_SPACE:case view_2.KeyEvent.KEYCODE_ENTER:return true;}return false;}},{key:"isTypingKey",value:function isTypingKey(keyEvent){try{return keyEvent._activeKeyEvent['keyIdentifier'].startsWith('U+');}catch(e) {console.warn(e);}return true;}},{key:"findAncestorToTakeFocusInTouchMode",value:function findAncestorToTakeFocusInTouchMode(focused){var parent=focused.getParent();while(parent instanceof view_2.ViewGroup) {var vgParent=parent;if(vgParent.getDescendantFocusability() == view_2.ViewGroup.FOCUS_AFTER_DESCENDANTS && vgParent.isFocusableInTouchMode()){return vgParent;}if(vgParent.isRootNamespace()){return null;}else {parent = vgParent.getParent();}}return null;}},{key:"getRunQueue",value:function getRunQueue(viewRoot){if(viewRoot){if(!viewRoot.mRunQueue)viewRoot.mRunQueue = new ViewRootImpl.RunQueue();return viewRoot.mRunQueue;}else {if(!this.RunQueueInstance){this.RunQueueInstance = new RunQueueForNoViewRoot();}return this.RunQueueInstance;}}}]);return ViewRootImpl;})();ViewRootImpl.TAG = "ViewRootImpl";ViewRootImpl.DBG = Log.View_DBG;ViewRootImpl.LOCAL_LOGV = ViewRootImpl.DBG;ViewRootImpl.DEBUG_DRAW = false || ViewRootImpl.LOCAL_LOGV;ViewRootImpl.DEBUG_LAYOUT = false || ViewRootImpl.LOCAL_LOGV;ViewRootImpl.DEBUG_INPUT_RESIZE = false || ViewRootImpl.LOCAL_LOGV;ViewRootImpl.DEBUG_ORIENTATION = false || ViewRootImpl.LOCAL_LOGV;ViewRootImpl.DEBUG_CONFIGURATION = false || ViewRootImpl.LOCAL_LOGV;ViewRootImpl.DEBUG_FPS = false || ViewRootImpl.LOCAL_LOGV;view_2.ViewRootImpl = ViewRootImpl;(function(ViewRootImpl){var RunQueue=(function(){function RunQueue(){_classCallCheck(this,RunQueue);this.mActions = [];}_createClass(RunQueue,[{key:"post",value:function post(action){this.postDelayed(action,0);}},{key:"postDelayed",value:function postDelayed(action,delayMillis){var handlerAction={action:action,delay:delayMillis};this.mActions.push(handlerAction);}},{key:"removeCallbacks",value:function removeCallbacks(action){this.mActions = this.mActions.filter(function(item){return item.action == action;});}},{key:"executeActions",value:function executeActions(handler){var _iteratorNormalCompletion30=true;var _didIteratorError30=false;var _iteratorError30=undefined;try{for(var _iterator30=this.mActions[Symbol.iterator](),_step30;!(_iteratorNormalCompletion30 = (_step30 = _iterator30.next()).done);_iteratorNormalCompletion30 = true) {var handlerAction=_step30.value;handler.postDelayed(handlerAction.action,handlerAction.delay);}}catch(err) {_didIteratorError30 = true;_iteratorError30 = err;}finally {try{if(!_iteratorNormalCompletion30 && _iterator30["return"]){_iterator30["return"]();}}finally {if(_didIteratorError30){throw _iteratorError30;}}}this.mActions = [];}}]);return RunQueue;})();ViewRootImpl.RunQueue = RunQueue;})(ViewRootImpl = view_2.ViewRootImpl || (view_2.ViewRootImpl = {}));var RunQueueForNoViewRoot=(function(_ViewRootImpl$RunQueue){_inherits(RunQueueForNoViewRoot,_ViewRootImpl$RunQueue);function RunQueueForNoViewRoot(){_classCallCheck(this,RunQueueForNoViewRoot);_get(Object.getPrototypeOf(RunQueueForNoViewRoot.prototype),"constructor",this).apply(this,arguments);}_createClass(RunQueueForNoViewRoot,[{key:"postDelayed",value:function postDelayed(action,delayMillis){RunQueueForNoViewRoot.Handler.postDelayed(action,delayMillis);}},{key:"removeCallbacks",value:function removeCallbacks(action){RunQueueForNoViewRoot.Handler.removeCallbacks(action);}}]);return RunQueueForNoViewRoot;})(ViewRootImpl.RunQueue);RunQueueForNoViewRoot.Handler = new Handler();var TraversalRunnable=(function(){function TraversalRunnable(impl){_classCallCheck(this,TraversalRunnable);this.ViewRootImpl_this = impl;}_createClass(TraversalRunnable,[{key:"run",value:function run(){this.ViewRootImpl_this.doTraversal();}}]);return TraversalRunnable;})();var InvalidateOnAnimationRunnable=(function(){function InvalidateOnAnimationRunnable(handler){_classCallCheck(this,InvalidateOnAnimationRunnable);this.mPosted = false;this.mViews = new Set();this.mViewRects = new Map();this.mHandler = handler;}_createClass(InvalidateOnAnimationRunnable,[{key:"addView",value:function addView(view){this.mViews.add(view);this.postIfNeededLocked();}},{key:"addViewRect",value:function addViewRect(info){this.mViewRects.set(info.target,info);this.postIfNeededLocked();}},{key:"removeView",value:function removeView(view){this.mViews["delete"](view);this.mViewRects["delete"](view);if(this.mPosted && this.mViews.size === 0 && this.mViewRects.size === 0){this.mHandler.removeCallbacks(this);this.mPosted = false;}}},{key:"run",value:function run(){this.mPosted = false;var _iteratorNormalCompletion31=true;var _didIteratorError31=false;var _iteratorError31=undefined;try{for(var _iterator31=this.mViews[Symbol.iterator](),_step31;!(_iteratorNormalCompletion31 = (_step31 = _iterator31.next()).done);_iteratorNormalCompletion31 = true) {var _view9=_step31.value;_view9.invalidate();}}catch(err) {_didIteratorError31 = true;_iteratorError31 = err;}finally {try{if(!_iteratorNormalCompletion31 && _iterator31["return"]){_iterator31["return"]();}}finally {if(_didIteratorError31){throw _iteratorError31;}}}this.mViews.clear();var _iteratorNormalCompletion32=true;var _didIteratorError32=false;var _iteratorError32=undefined;try{for(var _iterator32=this.mViewRects.values()[Symbol.iterator](),_step32;!(_iteratorNormalCompletion32 = (_step32 = _iterator32.next()).done);_iteratorNormalCompletion32 = true) {var info=_step32.value;info.target.invalidate(info.left,info.top,info.right,info.bottom);info.recycle();}}catch(err) {_didIteratorError32 = true;_iteratorError32 = err;}finally {try{if(!_iteratorNormalCompletion32 && _iterator32["return"]){_iterator32["return"]();}}finally {if(_didIteratorError32){throw _iteratorError32;}}}this.mViewRects.clear();}},{key:"postIfNeededLocked",value:function postIfNeededLocked(){if(!this.mPosted){this.mHandler.post(this);this.mPosted = true;}}}]);return InvalidateOnAnimationRunnable;})();var ViewRootHandler=(function(_Handler){_inherits(ViewRootHandler,_Handler);function ViewRootHandler(){_classCallCheck(this,ViewRootHandler);_get(Object.getPrototypeOf(ViewRootHandler.prototype),"constructor",this).apply(this,arguments);}_createClass(ViewRootHandler,[{key:"handleMessage",value:function handleMessage(msg){switch(msg.what){case ViewRootHandler.MSG_INVALIDATE:msg.obj.invalidate();break;case ViewRootHandler.MSG_INVALIDATE_RECT:var info=msg.obj;info.target.invalidate(info.left,info.top,info.right,info.bottom);info.recycle();break;}}}]);return ViewRootHandler;})(Handler);ViewRootHandler.MSG_INVALIDATE = 1;ViewRootHandler.MSG_INVALIDATE_RECT = 2;var InputStage=(function(){function InputStage(impl,next){_classCallCheck(this,InputStage);this.ViewRootImpl_this = impl;this.mNext = next;}_createClass(InputStage,[{key:"deliver",value:function deliver(event){if(event[InputStage.FLAG_FINISHED]){this.forward(event);}else if(this.shouldDropInputEvent(event)){this.finish(event,false);}else {this.apply(event,this.onProcess(event));}}},{key:"finish",value:function finish(event,handled){event[InputStage.FLAG_FINISHED] = true;if(handled){event[InputStage.FLAG_FINISHED_HANDLED] = true;}this.forward(event);}},{key:"forward",value:function forward(event){this.onDeliverToNext(event);}},{key:"apply",value:function apply(event,result){if(result == InputStage.FORWARD){this.forward(event);}else if(result == InputStage.FINISH_HANDLED){this.finish(event,true);}else if(result == InputStage.FINISH_NOT_HANDLED){this.finish(event,false);}else {throw new Error("Invalid result: " + result);}}},{key:"onDeliverToNext",value:function onDeliverToNext(event){if(this.mNext != null){this.mNext.deliver(event);}else {this.ViewRootImpl_this.finishInputEvent(event);}}},{key:"onProcess",value:function onProcess(event){return InputStage.FORWARD;}},{key:"shouldDropInputEvent",value:function shouldDropInputEvent(event){if(this.ViewRootImpl_this.mView == null || !this.ViewRootImpl_this.mAdded){Log.w(ViewRootImpl.TAG,"Dropping event due to root view being removed: " + event);return true;}else if(!this.ViewRootImpl_this.mAttachInfo.mHasWindowFocus || this.ViewRootImpl_this.mStopped){Log.w(ViewRootImpl.TAG,"Dropping event due to no window focus: " + event);return true;}return false;}}]);return InputStage;})();InputStage.FLAG_FINISHED = Symbol();InputStage.FLAG_FINISHED_HANDLED = Symbol();InputStage.FORWARD = 0;InputStage.FINISH_HANDLED = 1;InputStage.FINISH_NOT_HANDLED = 2;var EarlyPostImeInputStage=(function(_InputStage){_inherits(EarlyPostImeInputStage,_InputStage);function EarlyPostImeInputStage(){_classCallCheck(this,EarlyPostImeInputStage);_get(Object.getPrototypeOf(EarlyPostImeInputStage.prototype),"constructor",this).apply(this,arguments);}_createClass(EarlyPostImeInputStage,[{key:"onProcess",value:function onProcess(event){if(event instanceof view_2.MotionEvent){return this.processMotionEvent(event);}else if(event instanceof view_2.KeyEvent){return this.processKeyEvent(event);}return InputStage.FORWARD;}},{key:"processKeyEvent",value:function processKeyEvent(event){if(this.ViewRootImpl_this.checkForLeavingTouchModeAndConsume(event)){return InputStage.FINISH_HANDLED;}return InputStage.FORWARD;}},{key:"processMotionEvent",value:function processMotionEvent(event){var action=event.getAction();if(action == view_2.MotionEvent.ACTION_DOWN || action == view_2.MotionEvent.ACTION_SCROLL){this.ViewRootImpl_this.ensureTouchMode(true);}event.offsetLocation(this.ViewRootImpl_this.mWinFrame.left,this.ViewRootImpl_this.mWinFrame.top);return InputStage.FORWARD;}}]);return EarlyPostImeInputStage;})(InputStage);var ViewPostImeInputStage=(function(_InputStage2){_inherits(ViewPostImeInputStage,_InputStage2);function ViewPostImeInputStage(){_classCallCheck(this,ViewPostImeInputStage);_get(Object.getPrototypeOf(ViewPostImeInputStage.prototype),"constructor",this).apply(this,arguments);}_createClass(ViewPostImeInputStage,[{key:"onProcess",value:function onProcess(event){if(event instanceof view_2.KeyEvent){return this.processKeyEvent(event);}else if(event instanceof view_2.MotionEvent){if(event.isTouchEvent()){return this.processTouchEvent(event);}else {return this.processGenericMotionEvent(event);}}return InputStage.FORWARD;}},{key:"processKeyEvent",value:function processKeyEvent(event){var mView=this.ViewRootImpl_this.mView;if(this.ViewRootImpl_this.mView.dispatchKeyEvent(event)){return InputStage.FINISH_HANDLED;}if(this.shouldDropInputEvent(event)){return InputStage.FINISH_NOT_HANDLED;}if(event.getAction() == view_2.KeyEvent.ACTION_DOWN && event.isCtrlPressed() && event.getRepeatCount() == 0){if(this.ViewRootImpl_this.shouldDropInputEvent(event)){return InputStage.FINISH_NOT_HANDLED;}}if(this.shouldDropInputEvent(event)){return InputStage.FINISH_NOT_HANDLED;}if(event.getAction() == view_2.KeyEvent.ACTION_DOWN){var direction=0;switch(event.getKeyCode()){case view_2.KeyEvent.KEYCODE_DPAD_LEFT:direction = View.FOCUS_LEFT;break;case view_2.KeyEvent.KEYCODE_DPAD_RIGHT:direction = View.FOCUS_RIGHT;break;case view_2.KeyEvent.KEYCODE_DPAD_UP:direction = View.FOCUS_UP;break;case view_2.KeyEvent.KEYCODE_DPAD_DOWN:direction = View.FOCUS_DOWN;break;case view_2.KeyEvent.KEYCODE_TAB:if(event.isShiftPressed()){direction = View.FOCUS_BACKWARD;}else {direction = View.FOCUS_FORWARD;}break;}if(direction != 0){var focused=mView.findFocus();if(focused != null){var v=focused.focusSearch(direction);if(v != null && v != focused){focused.getFocusedRect(this.ViewRootImpl_this.mTempRect);if(mView instanceof view_2.ViewGroup){mView.offsetDescendantRectToMyCoords(focused,this.ViewRootImpl_this.mTempRect);mView.offsetRectIntoDescendantCoords(v,this.ViewRootImpl_this.mTempRect);}if(v.requestFocus(direction,this.ViewRootImpl_this.mTempRect)){return InputStage.FINISH_HANDLED;}}if(mView.dispatchUnhandledMove(focused,direction)){return InputStage.FINISH_HANDLED;}}else {var v=this.ViewRootImpl_this.focusSearch(null,direction);if(v != null && v.requestFocus(direction)){return InputStage.FINISH_HANDLED;}}}}return InputStage.FORWARD;}},{key:"processGenericMotionEvent",value:function processGenericMotionEvent(event){if(this.ViewRootImpl_this.mView.dispatchGenericMotionEvent(event)){return InputStage.FINISH_HANDLED;}return InputStage.FORWARD;}},{key:"processTouchEvent",value:function processTouchEvent(event){var handled=this.ViewRootImpl_this.mView.dispatchTouchEvent(event);return handled?InputStage.FINISH_HANDLED:InputStage.FORWARD;}}]);return ViewPostImeInputStage;})(InputStage);var SyntheticInputStage=(function(_InputStage3){_inherits(SyntheticInputStage,_InputStage3);function SyntheticInputStage(){_classCallCheck(this,SyntheticInputStage);_get(Object.getPrototypeOf(SyntheticInputStage.prototype),"constructor",this).apply(this,arguments);}_createClass(SyntheticInputStage,[{key:"onProcess",value:function onProcess(event){return _get(Object.getPrototypeOf(SyntheticInputStage.prototype),"onProcess",this).call(this,event);}}]);return SyntheticInputStage;})(InputStage);})(view = android.view || (android.view = {}));})(android || (android = {})); /**
 * Created by linfaxin on 15/11/10.
 */ ///<reference path="View.ts"/>
///<reference path="ViewGroup.ts"/>
var android;(function(android){var view;(function(view_3){var View=android.view.View;var Rect=android.graphics.Rect;var ArrayList=java.util.ArrayList;var FocusFinder=(function(){function FocusFinder(){_classCallCheck(this,FocusFinder);this.mFocusedRect = new Rect();this.mOtherRect = new Rect();this.mBestCandidateRect = new Rect();this.mSequentialFocusComparator = new SequentialFocusComparator();this.mTempList = new ArrayList();}_createClass(FocusFinder,[{key:"findNextFocus",value:function findNextFocus(root,focused,direction){return this._findNextFocus(root,focused,null,direction);}},{key:"findNextFocusFromRect",value:function findNextFocusFromRect(root,focusedRect,direction){this.mFocusedRect.set(focusedRect);return this._findNextFocus(root,null,this.mFocusedRect,direction);}},{key:"_findNextFocus",value:function _findNextFocus(root,focused,focusedRect,direction){var next=null;if(focused != null){next = this.findNextUserSpecifiedFocus(root,focused,direction);}if(next != null){return next;}var focusables=this.mTempList;try{focusables.clear();root.addFocusables(focusables,direction);if(!focusables.isEmpty()){next = this.__findNextFocus(root,focused,focusedRect,direction,focusables);}}finally {focusables.clear();}return next;}},{key:"findNextUserSpecifiedFocus",value:function findNextUserSpecifiedFocus(root,focused,direction){var userSetNextFocus=focused.findUserSetNextFocus(root,direction);if(userSetNextFocus != null && userSetNextFocus.isFocusable() && (!userSetNextFocus.isInTouchMode() || userSetNextFocus.isFocusableInTouchMode())){return userSetNextFocus;}return null;}},{key:"__findNextFocus",value:function __findNextFocus(root,focused,focusedRect,direction,focusables){if(focused != null){if(focusedRect == null){focusedRect = this.mFocusedRect;}focused.getFocusedRect(focusedRect);root.offsetDescendantRectToMyCoords(focused,focusedRect);}else {if(focusedRect == null){focusedRect = this.mFocusedRect;switch(direction){case View.FOCUS_RIGHT:case View.FOCUS_DOWN:this.setFocusTopLeft(root,focusedRect);break;case View.FOCUS_FORWARD:this.setFocusTopLeft(root,focusedRect);break;case View.FOCUS_LEFT:case View.FOCUS_UP:this.setFocusBottomRight(root,focusedRect);break;case View.FOCUS_BACKWARD:this.setFocusBottomRight(root,focusedRect);}}}switch(direction){case View.FOCUS_FORWARD:case View.FOCUS_BACKWARD:return this.findNextFocusInRelativeDirection(focusables,root,focused,focusedRect,direction);case View.FOCUS_UP:case View.FOCUS_DOWN:case View.FOCUS_LEFT:case View.FOCUS_RIGHT:return this.findNextFocusInAbsoluteDirection(focusables,root,focused,focusedRect,direction);default:throw new Error("Unknown direction: " + direction);}}},{key:"findNextFocusInRelativeDirection",value:function findNextFocusInRelativeDirection(focusables,root,focused,focusedRect,direction){try{this.mSequentialFocusComparator.setRoot(root);this.mSequentialFocusComparator.sort(focusables);}finally {this.mSequentialFocusComparator.recycle();}var count=focusables.size();switch(direction){case View.FOCUS_FORWARD:return FocusFinder.getNextFocusable(focused,focusables,count);case View.FOCUS_BACKWARD:return FocusFinder.getPreviousFocusable(focused,focusables,count);}return focusables.get(count - 1);}},{key:"setFocusBottomRight",value:function setFocusBottomRight(root,focusedRect){var rootBottom=root.getScrollY() + root.getHeight();var rootRight=root.getScrollX() + root.getWidth();focusedRect.set(rootRight,rootBottom,rootRight,rootBottom);}},{key:"setFocusTopLeft",value:function setFocusTopLeft(root,focusedRect){var rootTop=root.getScrollY();var rootLeft=root.getScrollX();focusedRect.set(rootLeft,rootTop,rootLeft,rootTop);}},{key:"findNextFocusInAbsoluteDirection",value:function findNextFocusInAbsoluteDirection(focusables,root,focused,focusedRect,direction){this.mBestCandidateRect.set(focusedRect);switch(direction){case View.FOCUS_LEFT:this.mBestCandidateRect.offset(focusedRect.width() + 1,0);break;case View.FOCUS_RIGHT:this.mBestCandidateRect.offset(-(focusedRect.width() + 1),0);break;case View.FOCUS_UP:this.mBestCandidateRect.offset(0,focusedRect.height() + 1);break;case View.FOCUS_DOWN:this.mBestCandidateRect.offset(0,-(focusedRect.height() + 1));}var closest=null;var numFocusables=focusables.size();for(var i=0;i < numFocusables;i++) {var focusable=focusables.get(i);if(focusable == focused || focusable == root)continue;focusable.getFocusedRect(this.mOtherRect);root.offsetDescendantRectToMyCoords(focusable,this.mOtherRect);if(this.isBetterCandidate(direction,focusedRect,this.mOtherRect,this.mBestCandidateRect)){this.mBestCandidateRect.set(this.mOtherRect);closest = focusable;}}return closest;}},{key:"isBetterCandidate",value:function isBetterCandidate(direction,source,rect1,rect2){if(!this.isCandidate(source,rect1,direction)){return false;}if(!this.isCandidate(source,rect2,direction)){return true;}if(this.beamBeats(direction,source,rect1,rect2)){return true;}if(this.beamBeats(direction,source,rect2,rect1)){return false;}return this.getWeightedDistanceFor(FocusFinder.majorAxisDistance(direction,source,rect1),FocusFinder.minorAxisDistance(direction,source,rect1)) < this.getWeightedDistanceFor(FocusFinder.majorAxisDistance(direction,source,rect2),FocusFinder.minorAxisDistance(direction,source,rect2));}},{key:"beamBeats",value:function beamBeats(direction,source,rect1,rect2){var rect1InSrcBeam=this.beamsOverlap(direction,source,rect1);var rect2InSrcBeam=this.beamsOverlap(direction,source,rect2);if(rect2InSrcBeam || !rect1InSrcBeam){return false;}if(!this.isToDirectionOf(direction,source,rect2)){return true;}if(direction == View.FOCUS_LEFT || direction == View.FOCUS_RIGHT){return true;}return FocusFinder.majorAxisDistance(direction,source,rect1) < FocusFinder.majorAxisDistanceToFarEdge(direction,source,rect2);}},{key:"getWeightedDistanceFor",value:function getWeightedDistanceFor(majorAxisDistance,minorAxisDistance){return 13 * majorAxisDistance * majorAxisDistance + minorAxisDistance * minorAxisDistance;}},{key:"isCandidate",value:function isCandidate(srcRect,destRect,direction){switch(direction){case View.FOCUS_LEFT:return (srcRect.right > destRect.right || srcRect.left >= destRect.right) && srcRect.left > destRect.left;case View.FOCUS_RIGHT:return (srcRect.left < destRect.left || srcRect.right <= destRect.left) && srcRect.right < destRect.right;case View.FOCUS_UP:return (srcRect.bottom > destRect.bottom || srcRect.top >= destRect.bottom) && srcRect.top > destRect.top;case View.FOCUS_DOWN:return (srcRect.top < destRect.top || srcRect.bottom <= destRect.top) && srcRect.bottom < destRect.bottom;}throw new Error("direction must be one of " + "{FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");}},{key:"beamsOverlap",value:function beamsOverlap(direction,rect1,rect2){switch(direction){case View.FOCUS_LEFT:case View.FOCUS_RIGHT:return rect2.bottom >= rect1.top && rect2.top <= rect1.bottom;case View.FOCUS_UP:case View.FOCUS_DOWN:return rect2.right >= rect1.left && rect2.left <= rect1.right;}throw new Error("direction must be one of " + "{FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");}},{key:"isToDirectionOf",value:function isToDirectionOf(direction,src,dest){switch(direction){case View.FOCUS_LEFT:return src.left >= dest.right;case View.FOCUS_RIGHT:return src.right <= dest.left;case View.FOCUS_UP:return src.top >= dest.bottom;case View.FOCUS_DOWN:return src.bottom <= dest.top;}throw new Error("direction must be one of " + "{FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");}},{key:"findNearestTouchable",value:function findNearestTouchable(root,x,y,direction,deltas){var touchables=root.getTouchables();var minDistance=Number.MAX_SAFE_INTEGER;var closest=null;var numTouchables=touchables.size();var edgeSlop=view_3.ViewConfiguration.get().getScaledEdgeSlop();var closestBounds=new Rect();var touchableBounds=this.mOtherRect;for(var i=0;i < numTouchables;i++) {var touchable=touchables.get(i);touchable.getDrawingRect(touchableBounds);root.offsetRectBetweenParentAndChild(touchable,touchableBounds,true,true);if(!this.isTouchCandidate(x,y,touchableBounds,direction)){continue;}var distance=Number.MAX_SAFE_INTEGER;switch(direction){case View.FOCUS_LEFT:distance = x - touchableBounds.right + 1;break;case View.FOCUS_RIGHT:distance = touchableBounds.left;break;case View.FOCUS_UP:distance = y - touchableBounds.bottom + 1;break;case View.FOCUS_DOWN:distance = touchableBounds.top;break;}if(distance < edgeSlop){if(closest == null || closestBounds.contains(touchableBounds) || !touchableBounds.contains(closestBounds) && distance < minDistance){minDistance = distance;closest = touchable;closestBounds.set(touchableBounds);switch(direction){case View.FOCUS_LEFT:deltas[0] = -distance;break;case View.FOCUS_RIGHT:deltas[0] = distance;break;case View.FOCUS_UP:deltas[1] = -distance;break;case View.FOCUS_DOWN:deltas[1] = distance;break;}}}}return closest;}},{key:"isTouchCandidate",value:function isTouchCandidate(x,y,destRect,direction){switch(direction){case View.FOCUS_LEFT:return destRect.left <= x && destRect.top <= y && y <= destRect.bottom;case View.FOCUS_RIGHT:return destRect.left >= x && destRect.top <= y && y <= destRect.bottom;case View.FOCUS_UP:return destRect.top <= y && destRect.left <= x && x <= destRect.right;case View.FOCUS_DOWN:return destRect.top >= y && destRect.left <= x && x <= destRect.right;}throw new Error("direction must be one of " + "{FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");}}],[{key:"getInstance",value:function getInstance(){if(!FocusFinder.sFocusFinder){FocusFinder.sFocusFinder = new FocusFinder();}return FocusFinder.sFocusFinder;}},{key:"getNextFocusable",value:function getNextFocusable(focused,focusables,count){if(focused != null){var position=focusables.lastIndexOf(focused);if(position >= 0 && position + 1 < count){return focusables.get(position + 1);}}if(!focusables.isEmpty()){return focusables.get(0);}return null;}},{key:"getPreviousFocusable",value:function getPreviousFocusable(focused,focusables,count){if(focused != null){var position=focusables.indexOf(focused);if(position > 0){return focusables.get(position - 1);}}if(!focusables.isEmpty()){return focusables.get(count - 1);}return null;}},{key:"majorAxisDistance",value:function majorAxisDistance(direction,source,dest){return Math.max(0,FocusFinder.majorAxisDistanceRaw(direction,source,dest));}},{key:"majorAxisDistanceRaw",value:function majorAxisDistanceRaw(direction,source,dest){switch(direction){case View.FOCUS_LEFT:return source.left - dest.right;case View.FOCUS_RIGHT:return dest.left - source.right;case View.FOCUS_UP:return source.top - dest.bottom;case View.FOCUS_DOWN:return dest.top - source.bottom;}throw new Error("direction must be one of " + "{FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");}},{key:"majorAxisDistanceToFarEdge",value:function majorAxisDistanceToFarEdge(direction,source,dest){return Math.max(1,FocusFinder.majorAxisDistanceToFarEdgeRaw(direction,source,dest));}},{key:"majorAxisDistanceToFarEdgeRaw",value:function majorAxisDistanceToFarEdgeRaw(direction,source,dest){switch(direction){case View.FOCUS_LEFT:return source.left - dest.left;case View.FOCUS_RIGHT:return dest.right - source.right;case View.FOCUS_UP:return source.top - dest.top;case View.FOCUS_DOWN:return dest.bottom - source.bottom;}throw new Error("direction must be one of " + "{FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");}},{key:"minorAxisDistance",value:function minorAxisDistance(direction,source,dest){switch(direction){case View.FOCUS_LEFT:case View.FOCUS_RIGHT:return Math.abs(source.top + source.height() / 2 - (dest.top + dest.height() / 2));case View.FOCUS_UP:case View.FOCUS_DOWN:return Math.abs(source.left + source.width() / 2 - (dest.left + dest.width() / 2));}throw new Error("direction must be one of " + "{FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT}.");}}]);return FocusFinder;})();view_3.FocusFinder = FocusFinder;var SequentialFocusComparator=(function(){function SequentialFocusComparator(){var _this8=this;_classCallCheck(this,SequentialFocusComparator);this.mFirstRect = new Rect();this.mSecondRect = new Rect();this.mIsLayoutRtl = false;this.compareFn = function(first,second){if(first == second){return 0;}_this8.getRect(first,_this8.mFirstRect);_this8.getRect(second,_this8.mSecondRect);if(_this8.mFirstRect.top < _this8.mSecondRect.top){return -1;}else if(_this8.mFirstRect.top > _this8.mSecondRect.top){return 1;}else if(_this8.mFirstRect.left < _this8.mSecondRect.left){return _this8.mIsLayoutRtl?1:-1;}else if(_this8.mFirstRect.left > _this8.mSecondRect.left){return _this8.mIsLayoutRtl?-1:1;}else if(_this8.mFirstRect.bottom < _this8.mSecondRect.bottom){return -1;}else if(_this8.mFirstRect.bottom > _this8.mSecondRect.bottom){return 1;}else if(_this8.mFirstRect.right < _this8.mSecondRect.right){return _this8.mIsLayoutRtl?1:-1;}else if(_this8.mFirstRect.right > _this8.mSecondRect.right){return _this8.mIsLayoutRtl?-1:1;}else {return 0;}};}_createClass(SequentialFocusComparator,[{key:"recycle",value:function recycle(){this.mRoot = null;}},{key:"setRoot",value:function setRoot(root){this.mRoot = root;}},{key:"getRect",value:function getRect(view,rect){view.getDrawingRect(rect);this.mRoot.offsetDescendantRectToMyCoords(view,rect);}},{key:"sort",value:function sort(array){array.sort(this.compareFn);}}]);return SequentialFocusComparator;})();})(view = android.view || (android.view = {}));})(android || (android = {})); /**
 * Created by linfaxin on 15/10/5.
 */ ///<reference path="ViewRootImpl.ts"/>
///<reference path="View.ts"/>
///<reference path="MotionEvent.ts"/>
///<reference path="ViewParent.ts"/>
///<reference path="../graphics/Canvas.ts"/>
///<reference path="../graphics/Point.ts"/>
///<reference path="../graphics/Matrix.ts"/>
///<reference path="../graphics/Rect.ts"/>
///<reference path="../os/SystemClock.ts"/>
///<reference path="../util/TypedValue.ts"/>
///<reference path="FocusFinder.ts"/>
var android;(function(android){var view;(function(view_4){var Rect=android.graphics.Rect;var SystemClock=android.os.SystemClock;var TypedValue=android.util.TypedValue;var System=java.lang.System;var AttrBinder=androidui.attr.AttrBinder;var ViewGroup=(function(_view_4$View){_inherits(ViewGroup,_view_4$View);function ViewGroup(bindElement,rootElement){var _this9=this;_classCallCheck(this,ViewGroup);_get(Object.getPrototypeOf(ViewGroup.prototype),"constructor",this).call(this,bindElement,rootElement);this.mLastTouchDownTime = 0;this.mLastTouchDownIndex = -1;this.mLastTouchDownX = 0;this.mLastTouchDownY = 0;this.mGroupFlags = 0;this.mLayoutMode = ViewGroup.LAYOUT_MODE_UNDEFINED;this.mChildren = [];this.mSuppressLayout = false;this.mLayoutCalledWhileSuppressed = false;this.mChildCountWithTransientState = 0;this.initViewGroup();this._attrBinder.addAttr('clipChildren',function(value){_this9.setClipChildren(_this9._attrBinder.parseBoolean(value));},function(){return _this9.getClipChildren();});this._attrBinder.addAttr('clipToPadding',function(value){_this9.setClipToPadding(_this9._attrBinder.parseBoolean(value));},function(){return _this9.isClipToPadding();});this._attrBinder.addAttr('animationCache',function(value){});this._attrBinder.addAttr('persistentDrawingCache',function(value){});this._attrBinder.addAttr('addStatesFromChildren',function(value){});this._attrBinder.addAttr('alwaysDrawnWithCache',function(value){});this._attrBinder.addAttr('layoutAnimation',function(value){});this._attrBinder.addAttr('descendantFocusability',function(value){});this._attrBinder.addAttr('animationCache',function(value){});this._attrBinder.addAttr('splitMotionEvents',function(value){});this._attrBinder.addAttr('animateLayoutChanges',function(value){});this._attrBinder.addAttr('layoutMode',function(value){});}_createClass(ViewGroup,[{key:"initViewGroup",value:function initViewGroup(){this.setFlags(view_4.View.WILL_NOT_DRAW,view_4.View.DRAW_MASK);this.mGroupFlags |= ViewGroup.FLAG_CLIP_CHILDREN;this.mGroupFlags |= ViewGroup.FLAG_CLIP_TO_PADDING;this.mGroupFlags |= ViewGroup.FLAG_ANIMATION_DONE;this.mGroupFlags |= ViewGroup.FLAG_ANIMATION_CACHE;this.mGroupFlags |= ViewGroup.FLAG_ALWAYS_DRAWN_WITH_CACHE;this.mGroupFlags |= ViewGroup.FLAG_SPLIT_MOTION_EVENTS;this.setDescendantFocusability(ViewGroup.FOCUS_BEFORE_DESCENDANTS);this.mPersistentDrawingCache = ViewGroup.PERSISTENT_SCROLLING_CACHE;}},{key:"getDescendantFocusability",value:function getDescendantFocusability(){return this.mGroupFlags & ViewGroup.FLAG_MASK_FOCUSABILITY;}},{key:"setDescendantFocusability",value:function setDescendantFocusability(focusability){switch(focusability){case ViewGroup.FOCUS_BEFORE_DESCENDANTS:case ViewGroup.FOCUS_AFTER_DESCENDANTS:case ViewGroup.FOCUS_BLOCK_DESCENDANTS:break;default:throw new Error("must be one of FOCUS_BEFORE_DESCENDANTS, " + "FOCUS_AFTER_DESCENDANTS, FOCUS_BLOCK_DESCENDANTS");}this.mGroupFlags &= ~ViewGroup.FLAG_MASK_FOCUSABILITY;this.mGroupFlags |= focusability & ViewGroup.FLAG_MASK_FOCUSABILITY;}},{key:"handleFocusGainInternal",value:function handleFocusGainInternal(direction,previouslyFocusedRect){if(this.mFocused != null){this.mFocused.unFocus();this.mFocused = null;}_get(Object.getPrototypeOf(ViewGroup.prototype),"handleFocusGainInternal",this).call(this,direction,previouslyFocusedRect);}},{key:"requestChildFocus",value:function requestChildFocus(child,focused){if(view_4.View.DBG){System.out.println(this + " requestChildFocus()");}if(this.getDescendantFocusability() == ViewGroup.FOCUS_BLOCK_DESCENDANTS){return;}_get(Object.getPrototypeOf(ViewGroup.prototype),"unFocus",this).call(this);if(this.mFocused != child){if(this.mFocused != null){this.mFocused.unFocus();}this.mFocused = child;}if(this.mParent != null){this.mParent.requestChildFocus(this,focused);}}},{key:"focusableViewAvailable",value:function focusableViewAvailable(v){if(this.mParent != null && this.getDescendantFocusability() != ViewGroup.FOCUS_BLOCK_DESCENDANTS && !(this.isFocused() && this.getDescendantFocusability() != ViewGroup.FOCUS_AFTER_DESCENDANTS)){this.mParent.focusableViewAvailable(v);}}},{key:"focusSearch",value:function focusSearch(){for(var _len22=arguments.length,args=Array(_len22),_key22=0;_key22 < _len22;_key22++) {args[_key22] = arguments[_key22];}if(arguments.length === 1){return _get(Object.getPrototypeOf(ViewGroup.prototype),"focusSearch",this).call(this,args[0]);}var focused=args[0];var direction=args[1];if(this.isRootNamespace()){return view_4.FocusFinder.getInstance().findNextFocus(this,focused,direction);}else if(this.mParent != null){return this.mParent.focusSearch(focused,direction);}return null;}},{key:"requestChildRectangleOnScreen",value:function requestChildRectangleOnScreen(child,rectangle,immediate){return false;}},{key:"childHasTransientStateChanged",value:function childHasTransientStateChanged(child,childHasTransientState){var oldHasTransientState=this.hasTransientState();if(childHasTransientState){this.mChildCountWithTransientState++;}else {this.mChildCountWithTransientState--;}var newHasTransientState=this.hasTransientState();if(this.mParent != null && oldHasTransientState != newHasTransientState){this.mParent.childHasTransientStateChanged(this,newHasTransientState);}}},{key:"hasTransientState",value:function hasTransientState(){return this.mChildCountWithTransientState > 0 || _get(Object.getPrototypeOf(ViewGroup.prototype),"hasTransientState",this).call(this);}},{key:"dispatchUnhandledMove",value:function dispatchUnhandledMove(focused,direction){return this.mFocused != null && this.mFocused.dispatchUnhandledMove(focused,direction);}},{key:"clearChildFocus",value:function clearChildFocus(child){if(view_4.View.DBG){System.out.println(this + " clearChildFocus()");}this.mFocused = null;if(this.mParent != null){this.mParent.clearChildFocus(this);}}},{key:"clearFocus",value:function clearFocus(){if(view_4.View.DBG){System.out.println(this + " clearFocus()");}if(this.mFocused == null){_get(Object.getPrototypeOf(ViewGroup.prototype),"clearFocus",this).call(this);}else {var focused=this.mFocused;this.mFocused = null;focused.clearFocus();}}},{key:"unFocus",value:function unFocus(){if(view_4.View.DBG){System.out.println(this + " unFocus()");}if(this.mFocused == null){_get(Object.getPrototypeOf(ViewGroup.prototype),"unFocus",this).call(this);}else {this.mFocused.unFocus();this.mFocused = null;}}},{key:"getFocusedChild",value:function getFocusedChild(){return this.mFocused;}},{key:"hasFocus",value:function hasFocus(){return (this.mPrivateFlags & view_4.View.PFLAG_FOCUSED) != 0 || this.mFocused != null;}},{key:"findFocus",value:function findFocus(){if(ViewGroup.DBG){System.out.println("Find focus in " + this + ": flags=" + this.isFocused() + ", child=" + this.mFocused);}if(this.isFocused()){return this;}if(this.mFocused != null){return this.mFocused.findFocus();}return null;}},{key:"hasFocusable",value:function hasFocusable(){if((this.mViewFlags & view_4.View.VISIBILITY_MASK) != view_4.View.VISIBLE){return false;}if(this.isFocusable()){return true;}var descendantFocusability=this.getDescendantFocusability();if(descendantFocusability != ViewGroup.FOCUS_BLOCK_DESCENDANTS){var count=this.mChildrenCount;var children=this.mChildren;for(var i=0;i < count;i++) {var child=children[i];if(child.hasFocusable()){return true;}}}return false;}},{key:"addFocusables",value:function addFocusables(views,direction){var focusableMode=arguments.length <= 2 || arguments[2] === undefined?view_4.View.FOCUSABLES_TOUCH_MODE:arguments[2];var focusableCount=views.size();var descendantFocusability=this.getDescendantFocusability();if(descendantFocusability != ViewGroup.FOCUS_BLOCK_DESCENDANTS){var count=this.mChildrenCount;var children=this.mChildren;for(var i=0;i < count;i++) {var child=children[i];if((child.mViewFlags & view_4.View.VISIBILITY_MASK) == view_4.View.VISIBLE){child.addFocusables(views,direction,focusableMode);}}}if(descendantFocusability != ViewGroup.FOCUS_AFTER_DESCENDANTS || focusableCount == views.size()){_get(Object.getPrototypeOf(ViewGroup.prototype),"addFocusables",this).call(this,views,direction,focusableMode);}}},{key:"requestFocus",value:function requestFocus(direction,previouslyFocusedRect){if(view_4.View.DBG){System.out.println(this + " ViewGroup.requestFocus direction=" + direction);}var descendantFocusability=this.getDescendantFocusability();switch(descendantFocusability){case ViewGroup.FOCUS_BLOCK_DESCENDANTS:return _get(Object.getPrototypeOf(ViewGroup.prototype),"requestFocus",this).call(this,direction,previouslyFocusedRect);case ViewGroup.FOCUS_BEFORE_DESCENDANTS:{var took=_get(Object.getPrototypeOf(ViewGroup.prototype),"requestFocus",this).call(this,direction,previouslyFocusedRect);return took?took:this.onRequestFocusInDescendants(direction,previouslyFocusedRect);}case ViewGroup.FOCUS_AFTER_DESCENDANTS:{var took=this.onRequestFocusInDescendants(direction,previouslyFocusedRect);return took?took:_get(Object.getPrototypeOf(ViewGroup.prototype),"requestFocus",this).call(this,direction,previouslyFocusedRect);}default:throw new Error("descendant focusability must be " + "one of FOCUS_BEFORE_DESCENDANTS, FOCUS_AFTER_DESCENDANTS, FOCUS_BLOCK_DESCENDANTS " + "but is " + descendantFocusability);}}},{key:"onRequestFocusInDescendants",value:function onRequestFocusInDescendants(direction,previouslyFocusedRect){var index=undefined;var increment=undefined;var end=undefined;var count=this.mChildrenCount;if((direction & view_4.View.FOCUS_FORWARD) != 0){index = 0;increment = 1;end = count;}else {index = count - 1;increment = -1;end = -1;}var children=this.mChildren;for(var i=index;i != end;i += increment) {var child=children[i];if((child.mViewFlags & view_4.View.VISIBILITY_MASK) == view_4.View.VISIBLE){if(child.requestFocus(direction,previouslyFocusedRect)){return true;}}}return false;}},{key:"addView",value:function addView(){for(var _len23=arguments.length,args=Array(_len23),_key23=0;_key23 < _len23;_key23++) {args[_key23] = arguments[_key23];}var child=args[0];var params=child.getLayoutParams();var index=-1;if(args.length == 2){if(args[1] instanceof ViewGroup.LayoutParams)params = args[1];else index = args[1];}else if(args.length == 3){if(args[2] instanceof ViewGroup.LayoutParams){index = args[1];params = args[2];}else {params = this.generateDefaultLayoutParams();params.width = args[1];params.height = args[2];}}if(params == null){params = this.generateDefaultLayoutParams();if(params == null){throw new Error("generateDefaultLayoutParams() cannot return null");}}this.requestLayout();this.invalidate(true);this.addViewInner(child,index,params,false);}},{key:"checkLayoutParams",value:function checkLayoutParams(p){return p != null;}},{key:"setOnHierarchyChangeListener",value:function setOnHierarchyChangeListener(listener){this.mOnHierarchyChangeListener = listener;}},{key:"onViewAdded",value:function onViewAdded(child){if(this.mOnHierarchyChangeListener != null){this.mOnHierarchyChangeListener.onChildViewAdded(this,child);}}},{key:"onViewRemoved",value:function onViewRemoved(child){if(this.mOnHierarchyChangeListener != null){this.mOnHierarchyChangeListener.onChildViewRemoved(this,child);}}},{key:"clearCachedLayoutMode",value:function clearCachedLayoutMode(){if(!this.hasBooleanFlag(ViewGroup.FLAG_LAYOUT_MODE_WAS_EXPLICITLY_SET)){this.mLayoutMode = ViewGroup.LAYOUT_MODE_UNDEFINED;}}},{key:"addViewInLayout",value:function addViewInLayout(child,index,params){var preventRequestLayout=arguments.length <= 3 || arguments[3] === undefined?false:arguments[3];child.mParent = null;this.addViewInner(child,index,params,preventRequestLayout);child.mPrivateFlags = child.mPrivateFlags & ~ViewGroup.PFLAG_DIRTY_MASK | ViewGroup.PFLAG_DRAWN;return true;}},{key:"cleanupLayoutState",value:function cleanupLayoutState(child){child.mPrivateFlags &= ~view_4.View.PFLAG_FORCE_LAYOUT;}},{key:"addViewInner",value:function addViewInner(child,index,params,preventRequestLayout){if(child.getParent() != null){throw new Error("The specified child already has a parent. " + "You must call removeView() on the child's parent first.");}if(!this.checkLayoutParams(params)){params = this.generateLayoutParams(params);}if(preventRequestLayout){child.mLayoutParams = params;}else {child.setLayoutParams(params);}if(index < 0){index = this.mChildrenCount;}this.addInArray(child,index);if(preventRequestLayout){child.assignParent(this);}else {child.mParent = this;}if(child.hasFocus()){this.requestChildFocus(child,child.findFocus());}var ai=this.mAttachInfo;if(ai != null && (this.mGroupFlags & ViewGroup.FLAG_PREVENT_DISPATCH_ATTACHED_TO_WINDOW) == 0){child.dispatchAttachedToWindow(this.mAttachInfo,this.mViewFlags & ViewGroup.VISIBILITY_MASK);}this.onViewAdded(child);if((child.mViewFlags & ViewGroup.DUPLICATE_PARENT_STATE) == ViewGroup.DUPLICATE_PARENT_STATE){this.mGroupFlags |= ViewGroup.FLAG_NOTIFY_CHILDREN_ON_DRAWABLE_STATE_CHANGE;}}},{key:"addInArray",value:function addInArray(child,index){var count=this.mChildrenCount;if(index == count){this.mChildren.push(child);this.addToBindElement(child.bindElement,null);}else if(index < count){var refChild=this.getChildAt(index);this.mChildren.splice(index,0,child);this.addToBindElement(child.bindElement,refChild.bindElement);}else {throw new Error("index=" + index + " count=" + count);}}},{key:"addToBindElement",value:function addToBindElement(childElement,insertBeforeElement){if(childElement.parentElement){if(childElement.parentElement == this.bindElement)return;childElement.parentElement.removeChild(childElement);}if(insertBeforeElement){this.bindElement.insertBefore(childElement,insertBeforeElement);}else {this.bindElement.appendChild(childElement);}}},{key:"removeChildElement",value:function removeChildElement(childElement){try{this.bindElement.removeChild(childElement);}catch(e) {}}},{key:"removeFromArray",value:function removeFromArray(index){var count=arguments.length <= 1 || arguments[1] === undefined?1:arguments[1];var start=Math.max(0,index);var end=Math.min(this.mChildrenCount,start + count);if(start == end){return;}for(var i=start;i < end;i++) {this.mChildren[i].mParent = null;this.removeChildElement(this.mChildren[i].bindElement);}this.mChildren.splice(index,end - start);}},{key:"removeView",value:function removeView(view){this.removeViewInternal(view);this.requestLayout();this.invalidate(true);}},{key:"removeViewInLayout",value:function removeViewInLayout(view){this.removeViewInternal(view);}},{key:"removeViewsInLayout",value:function removeViewsInLayout(start,count){this.removeViewsInternal(start,count);}},{key:"removeViewAt",value:function removeViewAt(index){this.removeViewsInternal(index,1);this.requestLayout();this.invalidate(true);}},{key:"removeViews",value:function removeViews(start,count){this.removeViewsInternal(start,count);this.requestLayout();this.invalidate(true);}},{key:"removeViewInternal",value:function removeViewInternal(view){var index=this.indexOfChild(view);if(index >= 0){this.removeViewsInternal(index,1);}}},{key:"removeViewsInternal",value:function removeViewsInternal(start,count){var focused=this.mFocused;var clearChildFocus=false;var detach=this.mAttachInfo != null;var children=this.mChildren;var end=start + count;for(var i=start;i < end;i++) {var _view10=children[i];if(_view10 == focused){_view10.unFocus();clearChildFocus = true;}this.cancelTouchTarget(_view10);if(detach){_view10.dispatchDetachedFromWindow();}this.onViewRemoved(_view10);}this.removeFromArray(start,count);if(clearChildFocus){this.clearChildFocus(focused);if(!this.rootViewRequestFocus()){this.notifyGlobalFocusCleared(focused);}}}},{key:"removeAllViews",value:function removeAllViews(){this.removeAllViewsInLayout();this.requestLayout();this.invalidate(true);}},{key:"removeAllViewsInLayout",value:function removeAllViewsInLayout(){var count=this.mChildrenCount;if(count <= 0){return;}this.removeViewsInternal(0,count);}},{key:"detachViewFromParent",value:function detachViewFromParent(child){if(child instanceof view_4.View)child = this.indexOfChild(child);this.removeFromArray(child);}},{key:"removeDetachedView",value:function removeDetachedView(child,animate){if(child == this.mFocused){child.clearFocus();}this.cancelTouchTarget(child);if(animate && child.getAnimation() != null){}else if(child.mAttachInfo != null){child.dispatchDetachedFromWindow();}if(child.hasTransientState()){this.childHasTransientStateChanged(child,false);}this.onViewRemoved(child);}},{key:"attachViewToParent",value:function attachViewToParent(child,index,params){child.mLayoutParams = params;if(index < 0){index = this.mChildrenCount;}this.addInArray(child,index);child.mParent = this;child.mPrivateFlags = child.mPrivateFlags & ~ViewGroup.PFLAG_DIRTY_MASK & ~ViewGroup.PFLAG_DRAWING_CACHE_VALID | ViewGroup.PFLAG_DRAWN | ViewGroup.PFLAG_INVALIDATED;this.mPrivateFlags |= ViewGroup.PFLAG_INVALIDATED;if(child.hasFocus()){this.requestChildFocus(child,child.findFocus());}}},{key:"detachViewsFromParent",value:function detachViewsFromParent(start){var count=arguments.length <= 1 || arguments[1] === undefined?1:arguments[1];this.removeFromArray(start,count);}},{key:"detachAllViewsFromParent",value:function detachAllViewsFromParent(){var count=this.mChildrenCount;if(count <= 0){return;}var children=this.mChildren;this.mChildren = [];for(var i=count - 1;i >= 0;i--) {children[i].mParent = null;this.removeChildElement(children[i].bindElement);}}},{key:"indexOfChild",value:function indexOfChild(child){return this.mChildren.indexOf(child);}},{key:"getChildCount",value:function getChildCount(){return this.mChildrenCount;}},{key:"getChildAt",value:function getChildAt(index){if(index < 0 || index >= this.mChildrenCount){return null;}return this.mChildren[index];}},{key:"bringChildToFront",value:function bringChildToFront(child){var index=this.indexOfChild(child);if(index >= 0){this.removeFromArray(index);this.addInArray(child,this.mChildrenCount);child.mParent = this;this.requestLayout();this.invalidate();}}},{key:"hasBooleanFlag",value:function hasBooleanFlag(flag){return (this.mGroupFlags & flag) == flag;}},{key:"setBooleanFlag",value:function setBooleanFlag(flag,value){if(value){this.mGroupFlags |= flag;}else {this.mGroupFlags &= ~flag;}}},{key:"dispatchGenericPointerEvent",value:function dispatchGenericPointerEvent(event){var childrenCount=this.mChildrenCount;if(childrenCount != 0){var children=this.mChildren;var x=event.getX();var y=event.getY();var customOrder=this.isChildrenDrawingOrderEnabled();for(var i=childrenCount - 1;i >= 0;i--) {var childIndex=customOrder?this.getChildDrawingOrder(childrenCount,i):i;var child=children[childIndex];if(!ViewGroup.canViewReceivePointerEvents(child) || !this.isTransformedTouchPointInView(x,y,child,null)){continue;}if(this.dispatchTransformedGenericPointerEvent(event,child)){return true;}}}return _get(Object.getPrototypeOf(ViewGroup.prototype),"dispatchGenericPointerEvent",this).call(this,event);}},{key:"dispatchTransformedGenericPointerEvent",value:function dispatchTransformedGenericPointerEvent(event,child){var offsetX=this.mScrollX - child.mLeft;var offsetY=this.mScrollY - child.mTop;var handled=undefined;if(!child.hasIdentityMatrix()){}else {event.offsetLocation(offsetX,offsetY);handled = child.dispatchGenericMotionEvent(event);event.offsetLocation(-offsetX,-offsetY);}return handled;}},{key:"dispatchKeyEvent",value:function dispatchKeyEvent(event){if((this.mPrivateFlags & (view_4.View.PFLAG_FOCUSED | view_4.View.PFLAG_HAS_BOUNDS)) == (view_4.View.PFLAG_FOCUSED | view_4.View.PFLAG_HAS_BOUNDS)){if(_get(Object.getPrototypeOf(ViewGroup.prototype),"dispatchKeyEvent",this).call(this,event)){return true;}}else if(this.mFocused != null && (this.mFocused.mPrivateFlags & view_4.View.PFLAG_HAS_BOUNDS) == view_4.View.PFLAG_HAS_BOUNDS){if(this.mFocused.dispatchKeyEvent(event)){return true;}}return false;}},{key:"dispatchWindowFocusChanged",value:function dispatchWindowFocusChanged(hasFocus){_get(Object.getPrototypeOf(ViewGroup.prototype),"dispatchWindowFocusChanged",this).call(this,hasFocus);var count=this.mChildrenCount;var children=this.mChildren;for(var i=0;i < count;i++) {children[i].dispatchWindowFocusChanged(hasFocus);}}},{key:"addTouchables",value:function addTouchables(views){_get(Object.getPrototypeOf(ViewGroup.prototype),"addTouchables",this).call(this,views);var count=this.mChildrenCount;var children=this.mChildren;for(var i=0;i < count;i++) {var child=children[i];if((child.mViewFlags & view_4.View.VISIBILITY_MASK) == view_4.View.VISIBLE){child.addTouchables(views);}}}},{key:"onInterceptTouchEvent",value:function onInterceptTouchEvent(ev){return false;}},{key:"dispatchTouchEvent",value:function dispatchTouchEvent(ev){var handled=false;if(this.onFilterTouchEventForSecurity(ev)){var action=ev.getAction();var actionMasked=action & view_4.MotionEvent.ACTION_MASK;if(actionMasked == view_4.MotionEvent.ACTION_DOWN){this.cancelAndClearTouchTargets(ev);this.resetTouchState();}var intercepted=undefined;if(actionMasked == view_4.MotionEvent.ACTION_DOWN || this.mFirstTouchTarget != null){var disallowIntercept=(this.mGroupFlags & ViewGroup.FLAG_DISALLOW_INTERCEPT) != 0;if(!disallowIntercept){intercepted = this.onInterceptTouchEvent(ev);ev.setAction(action);}else {intercepted = false;}}else {intercepted = true;}var canceled=ViewGroup.resetCancelNextUpFlag(this) || actionMasked == view_4.MotionEvent.ACTION_CANCEL;var split=(this.mGroupFlags & ViewGroup.FLAG_SPLIT_MOTION_EVENTS) != 0;var newTouchTarget=null;var alreadyDispatchedToNewTouchTarget=false;if(!canceled && !intercepted){if(actionMasked == view_4.MotionEvent.ACTION_DOWN || split && actionMasked == view_4.MotionEvent.ACTION_POINTER_DOWN || actionMasked == view_4.MotionEvent.ACTION_HOVER_MOVE){var actionIndex=ev.getActionIndex();var idBitsToAssign=split?1 << ev.getPointerId(actionIndex):TouchTarget.ALL_POINTER_IDS;this.removePointersFromTouchTargets(idBitsToAssign);var childrenCount=this.mChildrenCount;if(newTouchTarget == null && childrenCount != 0){var x=ev.getX(actionIndex);var y=ev.getY(actionIndex);var children=this.mChildren;var customOrder=this.isChildrenDrawingOrderEnabled();for(var i=childrenCount - 1;i >= 0;i--) {var childIndex=customOrder?this.getChildDrawingOrder(childrenCount,i):i;var child=children[childIndex];if(!ViewGroup.canViewReceivePointerEvents(child) || !this.isTransformedTouchPointInView(x,y,child,null)){continue;}newTouchTarget = this.getTouchTarget(child);if(newTouchTarget != null){newTouchTarget.pointerIdBits |= idBitsToAssign;break;}ViewGroup.resetCancelNextUpFlag(child);if(this.dispatchTransformedTouchEvent(ev,false,child,idBitsToAssign)){this.mLastTouchDownTime = ev.getDownTime();this.mLastTouchDownIndex = childIndex;this.mLastTouchDownX = ev.getX();this.mLastTouchDownY = ev.getY();newTouchTarget = this.addTouchTarget(child,idBitsToAssign);alreadyDispatchedToNewTouchTarget = true;break;}}}if(newTouchTarget == null && this.mFirstTouchTarget != null){newTouchTarget = this.mFirstTouchTarget;while(newTouchTarget.next != null) {newTouchTarget = newTouchTarget.next;}newTouchTarget.pointerIdBits |= idBitsToAssign;}}}if(this.mFirstTouchTarget == null){handled = this.dispatchTransformedTouchEvent(ev,canceled,null,TouchTarget.ALL_POINTER_IDS);}else {var predecessor=null;var target=this.mFirstTouchTarget;while(target != null) {var next=target.next;if(alreadyDispatchedToNewTouchTarget && target == newTouchTarget){handled = true;}else {var cancelChild=ViewGroup.resetCancelNextUpFlag(target.child) || intercepted;if(this.dispatchTransformedTouchEvent(ev,cancelChild,target.child,target.pointerIdBits)){handled = true;}if(cancelChild){if(predecessor == null){this.mFirstTouchTarget = next;}else {predecessor.next = next;}target.recycle();target = next;continue;}}predecessor = target;target = next;}}if(canceled || actionMasked == view_4.MotionEvent.ACTION_UP || actionMasked == view_4.MotionEvent.ACTION_HOVER_MOVE){this.resetTouchState();}else if(split && actionMasked == view_4.MotionEvent.ACTION_POINTER_UP){var actionIndex=ev.getActionIndex();var idBitsToRemove=1 << ev.getPointerId(actionIndex);this.removePointersFromTouchTargets(idBitsToRemove);}}return handled;}},{key:"resetTouchState",value:function resetTouchState(){this.clearTouchTargets();ViewGroup.resetCancelNextUpFlag(this);this.mGroupFlags &= ~ViewGroup.FLAG_DISALLOW_INTERCEPT;}},{key:"clearTouchTargets",value:function clearTouchTargets(){var target=this.mFirstTouchTarget;if(target != null){do {var next=target.next;target.recycle();target = next;}while(target != null);this.mFirstTouchTarget = null;}}},{key:"cancelAndClearTouchTargets",value:function cancelAndClearTouchTargets(event){if(this.mFirstTouchTarget != null){var syntheticEvent=false;if(event == null){var now=SystemClock.uptimeMillis();event = view_4.MotionEvent.obtainWithAction(now,now,view_4.MotionEvent.ACTION_CANCEL,0,0);syntheticEvent = true;}for(var target=this.mFirstTouchTarget;target != null;target = target.next) {ViewGroup.resetCancelNextUpFlag(target.child);this.dispatchTransformedTouchEvent(event,true,target.child,target.pointerIdBits);}this.clearTouchTargets();if(syntheticEvent){event.recycle();}}}},{key:"getTouchTarget",value:function getTouchTarget(child){for(var target=this.mFirstTouchTarget;target != null;target = target.next) {if(target.child == child){return target;}}return null;}},{key:"addTouchTarget",value:function addTouchTarget(child,pointerIdBits){var target=TouchTarget.obtain(child,pointerIdBits);target.next = this.mFirstTouchTarget;this.mFirstTouchTarget = target;return target;}},{key:"removePointersFromTouchTargets",value:function removePointersFromTouchTargets(pointerIdBits){var predecessor=null;var target=this.mFirstTouchTarget;while(target != null) {var next=target.next;if((target.pointerIdBits & pointerIdBits) != 0){target.pointerIdBits &= ~pointerIdBits;if(target.pointerIdBits == 0){if(predecessor == null){this.mFirstTouchTarget = next;}else {predecessor.next = next;}target.recycle();target = next;continue;}}predecessor = target;target = next;}}},{key:"cancelTouchTarget",value:function cancelTouchTarget(view){var predecessor=null;var target=this.mFirstTouchTarget;while(target != null) {var next=target.next;if(target.child == view){if(predecessor == null){this.mFirstTouchTarget = next;}else {predecessor.next = next;}target.recycle();var now=SystemClock.uptimeMillis();var _event=view_4.MotionEvent.obtainWithAction(now,now,view_4.MotionEvent.ACTION_CANCEL,0,0);view.dispatchTouchEvent(_event);_event.recycle();return;}predecessor = target;target = next;}}},{key:"isTransformedTouchPointInView",value:function isTransformedTouchPointInView(x,y,child,outLocalPoint){var localX=x + this.mScrollX - child.mLeft;var localY=y + this.mScrollY - child.mTop;var isInView=child.pointInView(localX,localY);if(isInView && outLocalPoint != null){outLocalPoint.set(localX,localY);}return isInView;}},{key:"dispatchTransformedTouchEvent",value:function dispatchTransformedTouchEvent(event,cancel,child,desiredPointerIdBits){var handled=undefined;var oldAction=event.getAction();if(cancel || oldAction == view_4.MotionEvent.ACTION_CANCEL){event.setAction(view_4.MotionEvent.ACTION_CANCEL);if(child == null){handled = _get(Object.getPrototypeOf(ViewGroup.prototype),"dispatchTouchEvent",this).call(this,event);}else {handled = child.dispatchTouchEvent(event);}event.setAction(oldAction);return handled;}var oldPointerIdBits=event.getPointerIdBits();var newPointerIdBits=oldPointerIdBits & desiredPointerIdBits;if(newPointerIdBits == 0){return false;}var transformedEvent=undefined;if(newPointerIdBits == oldPointerIdBits){if(child == null || child.hasIdentityMatrix()){if(child == null){handled = _get(Object.getPrototypeOf(ViewGroup.prototype),"dispatchTouchEvent",this).call(this,event);}else {var offsetX=this.mScrollX - child.mLeft;var offsetY=this.mScrollY - child.mTop;event.offsetLocation(offsetX,offsetY);handled = child.dispatchTouchEvent(event);event.offsetLocation(-offsetX,-offsetY);}return handled;}transformedEvent = view_4.MotionEvent.obtain(event);}else {transformedEvent = event.split(newPointerIdBits);}if(child == null){handled = _get(Object.getPrototypeOf(ViewGroup.prototype),"dispatchTouchEvent",this).call(this,transformedEvent);}else {var offsetX=this.mScrollX - child.mLeft;var offsetY=this.mScrollY - child.mTop;transformedEvent.offsetLocation(offsetX,offsetY);handled = child.dispatchTouchEvent(transformedEvent);}transformedEvent.recycle();return handled;}},{key:"isAlwaysDrawnWithCacheEnabled",value:function isAlwaysDrawnWithCacheEnabled(){return (this.mGroupFlags & ViewGroup.FLAG_ALWAYS_DRAWN_WITH_CACHE) == ViewGroup.FLAG_ALWAYS_DRAWN_WITH_CACHE;}},{key:"setAlwaysDrawnWithCacheEnabled",value:function setAlwaysDrawnWithCacheEnabled(always){this.setBooleanFlag(ViewGroup.FLAG_ALWAYS_DRAWN_WITH_CACHE,always);}},{key:"isChildrenDrawnWithCacheEnabled",value:function isChildrenDrawnWithCacheEnabled(){return (this.mGroupFlags & ViewGroup.FLAG_CHILDREN_DRAWN_WITH_CACHE) == ViewGroup.FLAG_CHILDREN_DRAWN_WITH_CACHE;}},{key:"setChildrenDrawnWithCacheEnabled",value:function setChildrenDrawnWithCacheEnabled(enabled){this.setBooleanFlag(ViewGroup.FLAG_CHILDREN_DRAWN_WITH_CACHE,enabled);}},{key:"setChildrenDrawingCacheEnabled",value:function setChildrenDrawingCacheEnabled(enabled){if(enabled || (this.mPersistentDrawingCache & ViewGroup.PERSISTENT_ALL_CACHES) != ViewGroup.PERSISTENT_ALL_CACHES){var children=this.mChildren;var count=this.mChildrenCount;for(var i=0;i < count;i++) {children[i].setDrawingCacheEnabled(enabled);}}}},{key:"getPersistentDrawingCache",value:function getPersistentDrawingCache(){return this.mPersistentDrawingCache;}},{key:"setPersistentDrawingCache",value:function setPersistentDrawingCache(drawingCacheToKeep){this.mPersistentDrawingCache = drawingCacheToKeep & ViewGroup.PERSISTENT_ALL_CACHES;}},{key:"isChildrenDrawingOrderEnabled",value:function isChildrenDrawingOrderEnabled(){return (this.mGroupFlags & ViewGroup.FLAG_USE_CHILD_DRAWING_ORDER) == ViewGroup.FLAG_USE_CHILD_DRAWING_ORDER;}},{key:"setChildrenDrawingOrderEnabled",value:function setChildrenDrawingOrderEnabled(enabled){this.setBooleanFlag(ViewGroup.FLAG_USE_CHILD_DRAWING_ORDER,enabled);}},{key:"getChildDrawingOrder",value:function getChildDrawingOrder(childCount,i){return i;}},{key:"generateLayoutParams",value:function generateLayoutParams(p){return p;}},{key:"generateDefaultLayoutParams",value:function generateDefaultLayoutParams(){return new ViewGroup.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT,ViewGroup.LayoutParams.WRAP_CONTENT);}},{key:"measureChildren",value:function measureChildren(widthMeasureSpec,heightMeasureSpec){var size=this.mChildren.length;for(var i=0;i < size;++i) {var child=this.mChildren[i];if((child.mViewFlags & view_4.View.VISIBILITY_MASK) != view_4.View.GONE){this.measureChild(child,widthMeasureSpec,heightMeasureSpec);}}}},{key:"measureChild",value:function measureChild(child,parentWidthMeasureSpec,parentHeightMeasureSpec){var lp=child.getLayoutParams();lp._measuringParentWidthMeasureSpec = parentWidthMeasureSpec;lp._measuringParentHeightMeasureSpec = parentHeightMeasureSpec;var childWidthMeasureSpec=ViewGroup.getChildMeasureSpec(parentWidthMeasureSpec,this.mPaddingLeft + this.mPaddingRight,lp.width);var childHeightMeasureSpec=ViewGroup.getChildMeasureSpec(parentHeightMeasureSpec,this.mPaddingTop + this.mPaddingBottom,lp.height);child.measure(childWidthMeasureSpec,childHeightMeasureSpec);lp._measuringParentWidthMeasureSpec = null;lp._measuringParentHeightMeasureSpec = null;}},{key:"measureChildWithMargins",value:function measureChildWithMargins(child,parentWidthMeasureSpec,widthUsed,parentHeightMeasureSpec,heightUsed){var lp=child.getLayoutParams();lp._measuringParentWidthMeasureSpec = parentWidthMeasureSpec;lp._measuringParentHeightMeasureSpec = parentHeightMeasureSpec;if(lp instanceof ViewGroup.MarginLayoutParams){var childWidthMeasureSpec=ViewGroup.getChildMeasureSpec(parentWidthMeasureSpec,this.mPaddingLeft + this.mPaddingRight + lp.leftMargin + lp.rightMargin + widthUsed,lp.width);var childHeightMeasureSpec=ViewGroup.getChildMeasureSpec(parentHeightMeasureSpec,this.mPaddingTop + this.mPaddingBottom + lp.topMargin + lp.bottomMargin + heightUsed,lp.height);child.measure(childWidthMeasureSpec,childHeightMeasureSpec);}lp._measuringParentWidthMeasureSpec = null;lp._measuringParentHeightMeasureSpec = null;}},{key:"dispatchAttachedToWindow",value:function dispatchAttachedToWindow(info,visibility){this.mGroupFlags |= ViewGroup.FLAG_PREVENT_DISPATCH_ATTACHED_TO_WINDOW;_get(Object.getPrototypeOf(ViewGroup.prototype),"dispatchAttachedToWindow",this).call(this,info,visibility);this.mGroupFlags &= ~ViewGroup.FLAG_PREVENT_DISPATCH_ATTACHED_TO_WINDOW;var count=this.mChildrenCount;var children=this.mChildren;for(var i=0;i < count;i++) {var child=children[i];child.dispatchAttachedToWindow(info,visibility | child.mViewFlags & view_4.View.VISIBILITY_MASK);}}},{key:"onAttachedToWindow",value:function onAttachedToWindow(){_get(Object.getPrototypeOf(ViewGroup.prototype),"onAttachedToWindow",this).call(this);this.clearCachedLayoutMode();}},{key:"onDetachedFromWindow",value:function onDetachedFromWindow(){_get(Object.getPrototypeOf(ViewGroup.prototype),"onDetachedFromWindow",this).call(this);this.clearCachedLayoutMode();}},{key:"dispatchDetachedFromWindow",value:function dispatchDetachedFromWindow(){this.cancelAndClearTouchTargets(null);this.mLayoutCalledWhileSuppressed = false;this.mChildren.forEach(function(child){return child.dispatchDetachedFromWindow();});_get(Object.getPrototypeOf(ViewGroup.prototype),"dispatchDetachedFromWindow",this).call(this);}},{key:"dispatchDisplayHint",value:function dispatchDisplayHint(hint){_get(Object.getPrototypeOf(ViewGroup.prototype),"dispatchDisplayHint",this).call(this,hint);var count=this.mChildrenCount;var children=this.mChildren;for(var i=0;i < count;i++) {children[i].dispatchDisplayHint(hint);}}},{key:"onChildVisibilityChanged",value:function onChildVisibilityChanged(child,oldVisibility,newVisibility){}},{key:"dispatchVisibilityChanged",value:function dispatchVisibilityChanged(changedView,visibility){_get(Object.getPrototypeOf(ViewGroup.prototype),"dispatchVisibilityChanged",this).call(this,changedView,visibility);var count=this.mChildrenCount;var children=this.mChildren;for(var i=0;i < count;i++) {children[i].dispatchVisibilityChanged(changedView,visibility);}}},{key:"dispatchSetSelected",value:function dispatchSetSelected(selected){var children=this.mChildren;var count=this.mChildrenCount;for(var i=0;i < count;i++) {children[i].setSelected(selected);}}},{key:"dispatchSetActivated",value:function dispatchSetActivated(activated){var children=this.mChildren;var count=this.mChildrenCount;for(var i=0;i < count;i++) {children[i].setActivated(activated);}}},{key:"dispatchSetPressed",value:function dispatchSetPressed(pressed){var children=this.mChildren;var count=this.mChildrenCount;for(var i=0;i < count;i++) {var child=children[i];if(!pressed || !child.isClickable() && !child.isLongClickable()){child.setPressed(pressed);}}}},{key:"dispatchCancelPendingInputEvents",value:function dispatchCancelPendingInputEvents(){_get(Object.getPrototypeOf(ViewGroup.prototype),"dispatchCancelPendingInputEvents",this).call(this);var children=this.mChildren;var count=this.mChildrenCount;for(var i=0;i < count;i++) {children[i].dispatchCancelPendingInputEvents();}}},{key:"offsetDescendantRectToMyCoords",value:function offsetDescendantRectToMyCoords(descendant,rect){this.offsetRectBetweenParentAndChild(descendant,rect,true,false);}},{key:"offsetRectIntoDescendantCoords",value:function offsetRectIntoDescendantCoords(descendant,rect){this.offsetRectBetweenParentAndChild(descendant,rect,false,false);}},{key:"offsetRectBetweenParentAndChild",value:function offsetRectBetweenParentAndChild(descendant,rect,offsetFromChildToParent,clipToBounds){if(descendant == this){return;}var theParent=descendant.mParent;while(theParent != null && theParent instanceof view_4.View && theParent != this) {if(offsetFromChildToParent){rect.offset(descendant.mLeft - descendant.mScrollX,descendant.mTop - descendant.mScrollY);if(clipToBounds){var p=theParent;rect.intersect(0,0,p.mRight - p.mLeft,p.mBottom - p.mTop);}}else {if(clipToBounds){var p=theParent;rect.intersect(0,0,p.mRight - p.mLeft,p.mBottom - p.mTop);}rect.offset(descendant.mScrollX - descendant.mLeft,descendant.mScrollY - descendant.mTop);}descendant = theParent;theParent = descendant.mParent;}if(theParent == this){if(offsetFromChildToParent){rect.offset(descendant.mLeft - descendant.mScrollX,descendant.mTop - descendant.mScrollY);}else {rect.offset(descendant.mScrollX - descendant.mLeft,descendant.mScrollY - descendant.mTop);}}else {throw new Error("parameter must be a descendant of this view");}}},{key:"offsetChildrenTopAndBottom",value:function offsetChildrenTopAndBottom(offset){var count=this.mChildrenCount;var children=this.mChildren;for(var i=0;i < count;i++) {var v=children[i];v.mTop += offset;v.mBottom += offset;}this.invalidateViewProperty(false,false);}},{key:"suppressLayout",value:function suppressLayout(suppress){this.mSuppressLayout = suppress;if(!suppress){if(this.mLayoutCalledWhileSuppressed){this.requestLayout();this.mLayoutCalledWhileSuppressed = false;}}}},{key:"isLayoutSuppressed",value:function isLayoutSuppressed(){return this.mSuppressLayout;}},{key:"layout",value:function layout(l,t,r,b){if(!this.mSuppressLayout){_get(Object.getPrototypeOf(ViewGroup.prototype),"layout",this).call(this,l,t,r,b);}else {this.mLayoutCalledWhileSuppressed = true;}}},{key:"canAnimate",value:function canAnimate(){return false;}},{key:"getChildVisibleRect",value:function getChildVisibleRect(child,r,offset){var rect=this.mAttachInfo != null?this.mAttachInfo.mTmpTransformRect:new Rect();rect.set(r);var dx=child.mLeft - this.mScrollX;var dy=child.mTop - this.mScrollY;rect.offset(dx,dy);if(offset != null){offset.x += dx;offset.y += dy;}if(rect.intersect(0,0,this.mRight - this.mLeft,this.mBottom - this.mTop)){if(this.mParent == null)return true;r.set(rect);return this.mParent.getChildVisibleRect(this,r,offset);}return false;}},{key:"dispatchDraw",value:function dispatchDraw(canvas){var count=this.mChildrenCount;var children=this.mChildren;var flags=this.mGroupFlags;var saveCount=0;var clipToPadding=(flags & ViewGroup.CLIP_TO_PADDING_MASK) == ViewGroup.CLIP_TO_PADDING_MASK;if(clipToPadding){saveCount = canvas.save();canvas.clipRect(this.mScrollX + this.mPaddingLeft,this.mScrollY + this.mPaddingTop,this.mScrollX + this.mRight - this.mLeft - this.mPaddingRight,this.mScrollY + this.mBottom - this.mTop - this.mPaddingBottom);}this.mPrivateFlags &= ~ViewGroup.PFLAG_DRAW_ANIMATION;this.mGroupFlags &= ~ViewGroup.FLAG_INVALIDATE_REQUIRED;var more=false;var drawingTime=this.getDrawingTime();var customOrder=this.isChildrenDrawingOrderEnabled();for(var i=0;i < count;i++) {var child=children[customOrder?this.getChildDrawingOrder(count,i):i];if((child.mViewFlags & view_4.View.VISIBILITY_MASK) == view_4.View.VISIBLE){more = this.drawChild(canvas,child,drawingTime) || more;}}if(clipToPadding){canvas.restoreToCount(saveCount);}flags = this.mGroupFlags;if((flags & ViewGroup.FLAG_INVALIDATE_REQUIRED) == ViewGroup.FLAG_INVALIDATE_REQUIRED){this.invalidate(true);}}},{key:"drawChild",value:function drawChild(canvas,child,drawingTime){return child.drawFromParent(canvas,this,drawingTime);}},{key:"drawableStateChanged",value:function drawableStateChanged(){_get(Object.getPrototypeOf(ViewGroup.prototype),"drawableStateChanged",this).call(this);if((this.mGroupFlags & ViewGroup.FLAG_NOTIFY_CHILDREN_ON_DRAWABLE_STATE_CHANGE) != 0){if((this.mGroupFlags & ViewGroup.FLAG_ADD_STATES_FROM_CHILDREN) != 0){throw new Error("addStateFromChildren cannot be enabled if a" + " child has duplicateParentState set to true");}var children=this.mChildren;var count=this.mChildrenCount;for(var i=0;i < count;i++) {var child=children[i];if((child.mViewFlags & view_4.View.DUPLICATE_PARENT_STATE) != 0){child.refreshDrawableState();}}}}},{key:"jumpDrawablesToCurrentState",value:function jumpDrawablesToCurrentState(){_get(Object.getPrototypeOf(ViewGroup.prototype),"jumpDrawablesToCurrentState",this).call(this);var children=this.mChildren;var count=this.mChildrenCount;for(var i=0;i < count;i++) {children[i].jumpDrawablesToCurrentState();}}},{key:"onCreateDrawableState",value:function onCreateDrawableState(extraSpace){if((this.mGroupFlags & ViewGroup.FLAG_ADD_STATES_FROM_CHILDREN) == 0){return _get(Object.getPrototypeOf(ViewGroup.prototype),"onCreateDrawableState",this).call(this,extraSpace);}var need=0;var n=this.getChildCount();for(var i=0;i < n;i++) {var childState=this.getChildAt(i).getDrawableState();if(childState != null){need += childState.length;}}var state=_get(Object.getPrototypeOf(ViewGroup.prototype),"onCreateDrawableState",this).call(this,extraSpace + need);for(var i=0;i < n;i++) {var childState=this.getChildAt(i).getDrawableState();if(childState != null){state = view_4.View.mergeDrawableStates(state,childState);}}return state;}},{key:"setAddStatesFromChildren",value:function setAddStatesFromChildren(addsStates){if(addsStates){this.mGroupFlags |= ViewGroup.FLAG_ADD_STATES_FROM_CHILDREN;}else {this.mGroupFlags &= ~ViewGroup.FLAG_ADD_STATES_FROM_CHILDREN;}this.refreshDrawableState();}},{key:"addStatesFromChildren",value:function addStatesFromChildren(){return (this.mGroupFlags & ViewGroup.FLAG_ADD_STATES_FROM_CHILDREN) != 0;}},{key:"childDrawableStateChanged",value:function childDrawableStateChanged(child){if((this.mGroupFlags & ViewGroup.FLAG_ADD_STATES_FROM_CHILDREN) != 0){this.refreshDrawableState();}}},{key:"getClipChildren",value:function getClipChildren(){return (this.mGroupFlags & ViewGroup.FLAG_CLIP_CHILDREN) != 0;}},{key:"setClipChildren",value:function setClipChildren(clipChildren){var previousValue=(this.mGroupFlags & ViewGroup.FLAG_CLIP_CHILDREN) == ViewGroup.FLAG_CLIP_CHILDREN;if(clipChildren != previousValue){this.setBooleanFlag(ViewGroup.FLAG_CLIP_CHILDREN,clipChildren);}}},{key:"setClipToPadding",value:function setClipToPadding(clipToPadding){this.setBooleanFlag(ViewGroup.FLAG_CLIP_TO_PADDING,clipToPadding);}},{key:"isClipToPadding",value:function isClipToPadding(){return (this.mGroupFlags & ViewGroup.FLAG_CLIP_TO_PADDING) == ViewGroup.FLAG_CLIP_TO_PADDING;}},{key:"invalidateChild",value:function invalidateChild(child,dirty){var parent=this;var attachInfo=this.mAttachInfo;if(attachInfo != null){var drawAnimation=(child.mPrivateFlags & view_4.View.PFLAG_DRAW_ANIMATION) == view_4.View.PFLAG_DRAW_ANIMATION;var childMatrix=child.getMatrix();var isOpaque=child.isOpaque() && !drawAnimation && child.getAnimation() == null && childMatrix.isIdentity();var opaqueFlag=isOpaque?view_4.View.PFLAG_DIRTY_OPAQUE:view_4.View.PFLAG_DIRTY;if(child.mLayerType != view_4.View.LAYER_TYPE_NONE){this.mPrivateFlags |= view_4.View.PFLAG_INVALIDATED;this.mPrivateFlags &= ~view_4.View.PFLAG_DRAWING_CACHE_VALID;}var _location=attachInfo.mInvalidateChildLocation;_location[0] = child.mLeft;_location[1] = child.mTop;do {var _view11=null;if(parent instanceof view_4.View){_view11 = parent;}if(_view11 != null){opaqueFlag = view_4.View.PFLAG_DIRTY;if((_view11.mPrivateFlags & view_4.View.PFLAG_DIRTY_MASK) != view_4.View.PFLAG_DIRTY){_view11.mPrivateFlags = _view11.mPrivateFlags & ~view_4.View.PFLAG_DIRTY_MASK | opaqueFlag;}}parent = parent.invalidateChildInParent(_location,dirty);if(_view11 != null){var m=_view11.getMatrix();if(!m.isIdentity()){var boundingRect=attachInfo.mTmpTransformRect;boundingRect.set(dirty);m.mapRect(boundingRect);dirty.set(boundingRect);}}}while(parent != null);}}},{key:"invalidateChildInParent",value:function invalidateChildInParent(location,dirty){if((this.mPrivateFlags & view_4.View.PFLAG_DRAWN) == view_4.View.PFLAG_DRAWN || (this.mPrivateFlags & view_4.View.PFLAG_DRAWING_CACHE_VALID) == view_4.View.PFLAG_DRAWING_CACHE_VALID){if((this.mGroupFlags & (ViewGroup.FLAG_OPTIMIZE_INVALIDATE | ViewGroup.FLAG_ANIMATION_DONE)) != ViewGroup.FLAG_OPTIMIZE_INVALIDATE){dirty.offset(location[0] - this.mScrollX,location[1] - this.mScrollY);if((this.mGroupFlags & ViewGroup.FLAG_CLIP_CHILDREN) == 0){dirty.union(0,0,this.mRight - this.mLeft,this.mBottom - this.mTop);}var left=this.mLeft;var _top9=this.mTop;if((this.mGroupFlags & ViewGroup.FLAG_CLIP_CHILDREN) == ViewGroup.FLAG_CLIP_CHILDREN){if(!dirty.intersect(0,0,this.mRight - left,this.mBottom - _top9)){dirty.setEmpty();}}this.mPrivateFlags &= ~view_4.View.PFLAG_DRAWING_CACHE_VALID;location[0] = left;location[1] = _top9;if(this.mLayerType != view_4.View.LAYER_TYPE_NONE){this.mPrivateFlags |= view_4.View.PFLAG_INVALIDATED;}return this.mParent;}else {this.mPrivateFlags &= ~view_4.View.PFLAG_DRAWN & ~view_4.View.PFLAG_DRAWING_CACHE_VALID;location[0] = this.mLeft;location[1] = this.mTop;if((this.mGroupFlags & ViewGroup.FLAG_CLIP_CHILDREN) == ViewGroup.FLAG_CLIP_CHILDREN){dirty.set(0,0,this.mRight - this.mLeft,this.mBottom - this.mTop);}else {dirty.union(0,0,this.mRight - this.mLeft,this.mBottom - this.mTop);}if(this.mLayerType != view_4.View.LAYER_TYPE_NONE){this.mPrivateFlags |= view_4.View.PFLAG_INVALIDATED;}return this.mParent;}}return null;}},{key:"invalidateChildFast",value:function invalidateChildFast(child,dirty){var parent=this;var attachInfo=this.mAttachInfo;if(attachInfo != null){var left=child.mLeft;var _top10=child.mTop;if(!child.getMatrix().isIdentity()){child.transformRect(dirty);}do {if(parent instanceof ViewGroup){var parentVG=parent;if(parentVG.mLayerType != view_4.View.LAYER_TYPE_NONE){parentVG.invalidate();parent = null;}else {parent = parentVG.invalidateChildInParentFast(left,_top10,dirty);left = parentVG.mLeft;_top10 = parentVG.mTop;}}else {var _location2=attachInfo.mInvalidateChildLocation;_location2[0] = left;_location2[1] = _top10;parent = parent.invalidateChildInParent(_location2,dirty);}}while(parent != null);}}},{key:"invalidateChildInParentFast",value:function invalidateChildInParentFast(left,top,dirty){if((this.mPrivateFlags & view_4.View.PFLAG_DRAWN) == view_4.View.PFLAG_DRAWN || (this.mPrivateFlags & view_4.View.PFLAG_DRAWING_CACHE_VALID) == view_4.View.PFLAG_DRAWING_CACHE_VALID){dirty.offset(left - this.mScrollX,top - this.mScrollY);if((this.mGroupFlags & ViewGroup.FLAG_CLIP_CHILDREN) == 0){dirty.union(0,0,this.mRight - this.mLeft,this.mBottom - this.mTop);}if((this.mGroupFlags & ViewGroup.FLAG_CLIP_CHILDREN) == 0 || dirty.intersect(0,0,this.mRight - this.mLeft,this.mBottom - this.mTop)){if(this.mLayerType != view_4.View.LAYER_TYPE_NONE){}if(!this.getMatrix().isIdentity()){this.transformRect(dirty);}return this.mParent;}}return null;}},{key:"findViewByPredicateTraversal",value:function findViewByPredicateTraversal(predicate,childToSkip){if(predicate.apply(this)){return this;}var where=this.mChildren;var len=this.mChildrenCount;for(var i=0;i < len;i++) {var v=where[i];if(v != childToSkip && (v.mPrivateFlags & view_4.View.PFLAG_IS_ROOT_NAMESPACE) == 0){v = v.findViewByPredicate(predicate);if(v != null){return v;}}}return null;}},{key:"requestDisallowInterceptTouchEvent",value:function requestDisallowInterceptTouchEvent(disallowIntercept){if(disallowIntercept == ((this.mGroupFlags & ViewGroup.FLAG_DISALLOW_INTERCEPT) != 0)){return;}if(disallowIntercept){this.mGroupFlags |= ViewGroup.FLAG_DISALLOW_INTERCEPT;}else {this.mGroupFlags &= ~ViewGroup.FLAG_DISALLOW_INTERCEPT;}if(this.mParent != null){this.mParent.requestDisallowInterceptTouchEvent(disallowIntercept);}}},{key:"shouldDelayChildPressedState",value:function shouldDelayChildPressedState(){return true;}},{key:"onSetLayoutParams",value:function onSetLayoutParams(child,layoutParams){}},{key:"mChildrenCount",get:function get(){return this.mChildren.length;}}],[{key:"resetCancelNextUpFlag",value:function resetCancelNextUpFlag(view){if((view.mPrivateFlags & view_4.View.PFLAG_CANCEL_NEXT_UP_EVENT) != 0){view.mPrivateFlags &= ~view_4.View.PFLAG_CANCEL_NEXT_UP_EVENT;return true;}return false;}},{key:"canViewReceivePointerEvents",value:function canViewReceivePointerEvents(child){return (child.mViewFlags & view_4.View.VISIBILITY_MASK) == view_4.View.VISIBLE;}},{key:"getChildMeasureSpec",value:function getChildMeasureSpec(spec,padding,childDimension){var MeasureSpec=view_4.View.MeasureSpec;var specMode=MeasureSpec.getMode(spec);var specSize=MeasureSpec.getSize(spec);var size=Math.max(0,specSize - padding);var resultSize=0;var resultMode=0;switch(specMode){case MeasureSpec.EXACTLY:if(childDimension >= 0){resultSize = childDimension;resultMode = MeasureSpec.EXACTLY;}else if(childDimension == ViewGroup.LayoutParams.MATCH_PARENT){resultSize = size;resultMode = MeasureSpec.EXACTLY;}else if(childDimension == ViewGroup.LayoutParams.WRAP_CONTENT){resultSize = size;resultMode = MeasureSpec.AT_MOST;}break;case MeasureSpec.AT_MOST:if(childDimension >= 0){resultSize = childDimension;resultMode = MeasureSpec.EXACTLY;}else if(childDimension == ViewGroup.LayoutParams.MATCH_PARENT){resultSize = size;resultMode = MeasureSpec.AT_MOST;}else if(childDimension == ViewGroup.LayoutParams.WRAP_CONTENT){resultSize = size;resultMode = MeasureSpec.AT_MOST;}break;case MeasureSpec.UNSPECIFIED:if(childDimension >= 0){resultSize = childDimension;resultMode = MeasureSpec.EXACTLY;}else if(childDimension == ViewGroup.LayoutParams.MATCH_PARENT){resultSize = 0;resultMode = MeasureSpec.UNSPECIFIED;}else if(childDimension == ViewGroup.LayoutParams.WRAP_CONTENT){resultSize = 0;resultMode = MeasureSpec.UNSPECIFIED;}break;}return MeasureSpec.makeMeasureSpec(resultSize,resultMode);}}]);return ViewGroup;})(view_4.View);ViewGroup.FLAG_CLIP_CHILDREN = 0x1;ViewGroup.FLAG_CLIP_TO_PADDING = 0x2;ViewGroup.FLAG_INVALIDATE_REQUIRED = 0x4;ViewGroup.FLAG_RUN_ANIMATION = 0x8;ViewGroup.FLAG_ANIMATION_DONE = 0x10;ViewGroup.FLAG_PADDING_NOT_NULL = 0x20;ViewGroup.FLAG_ANIMATION_CACHE = 0x40;ViewGroup.FLAG_OPTIMIZE_INVALIDATE = 0x80;ViewGroup.FLAG_CLEAR_TRANSFORMATION = 0x100;ViewGroup.FLAG_NOTIFY_ANIMATION_LISTENER = 0x200;ViewGroup.FLAG_USE_CHILD_DRAWING_ORDER = 0x400;ViewGroup.FLAG_SUPPORT_STATIC_TRANSFORMATIONS = 0x800;ViewGroup.FLAG_ALPHA_LOWER_THAN_ONE = 0x1000;ViewGroup.FLAG_ADD_STATES_FROM_CHILDREN = 0x2000;ViewGroup.FLAG_ALWAYS_DRAWN_WITH_CACHE = 0x4000;ViewGroup.FLAG_CHILDREN_DRAWN_WITH_CACHE = 0x8000;ViewGroup.FLAG_NOTIFY_CHILDREN_ON_DRAWABLE_STATE_CHANGE = 0x10000;ViewGroup.FLAG_MASK_FOCUSABILITY = 0x60000;ViewGroup.FOCUS_BEFORE_DESCENDANTS = 0x20000;ViewGroup.FOCUS_AFTER_DESCENDANTS = 0x40000;ViewGroup.FOCUS_BLOCK_DESCENDANTS = 0x60000;ViewGroup.FLAG_DISALLOW_INTERCEPT = 0x80000;ViewGroup.FLAG_SPLIT_MOTION_EVENTS = 0x200000;ViewGroup.FLAG_PREVENT_DISPATCH_ATTACHED_TO_WINDOW = 0x400000;ViewGroup.FLAG_LAYOUT_MODE_WAS_EXPLICITLY_SET = 0x800000;ViewGroup.PERSISTENT_NO_CACHE = 0x0;ViewGroup.PERSISTENT_ANIMATION_CACHE = 0x1;ViewGroup.PERSISTENT_SCROLLING_CACHE = 0x2;ViewGroup.PERSISTENT_ALL_CACHES = 0x3;ViewGroup.LAYOUT_MODE_UNDEFINED = -1;ViewGroup.LAYOUT_MODE_CLIP_BOUNDS = 0;ViewGroup.LAYOUT_MODE_DEFAULT = ViewGroup.LAYOUT_MODE_CLIP_BOUNDS;ViewGroup.CLIP_TO_PADDING_MASK = ViewGroup.FLAG_CLIP_TO_PADDING | ViewGroup.FLAG_PADDING_NOT_NULL;view_4.ViewGroup = ViewGroup;(function(ViewGroup){var LayoutParams=(function(){function LayoutParams(){var _this10=this;_classCallCheck(this,LayoutParams);this._width = 0;this._height = 0;this._measuringParentWidthMeasureSpec = 0;this._measuringParentHeightMeasureSpec = 0;for(var _len24=arguments.length,args=Array(_len24),_key24=0;_key24 < _len24;_key24++) {args[_key24] = arguments[_key24];}if(args.length === 1){var src=args[0];this.width = src._width;this.height = src._height;}else if(args.length === 2){var _args$015=args[0];var width=_args$015 === undefined?0:_args$015;var _args$115=args[1];var height=_args$115 === undefined?0:_args$115;this.width = width;this.height = height;}if(!this._attrBinder){this._attrBinder = new AttrBinder(this);this._attrBinder.addAttr('width',function(value){if(value == null)value = -2;_this10.width = value;},function(){return _this10._widthOrig;});this._attrBinder.addAttr('height',function(value){if(value == null)value = -2;_this10.height = value;},function(){return _this10._heightOrig;});}}_createClass(LayoutParams,[{key:"parseAttributeFrom",value:function parseAttributeFrom(node,rootElement){var _this11=this;Array.from(node.attributes).forEach(function(attr){var layoutParamFiled=attr.name.split("layout_")[1];_this11._attrBinder.onAttrChange(layoutParamFiled,attr.value,rootElement);});}},{key:"width",get:function get(){if(typeof this._width === 'number')return this._width;var up=(this._width + "").toUpperCase();if(up === 'FILL_PARENT' || up === 'MATCH_PARENT')this._width = -1;else if(up === 'WRAP_CONTENT')this._width = -2;else {var parentWidth=view_4.View.MeasureSpec.getSize(this._measuringParentWidthMeasureSpec);try{this._width = TypedValue.complexToDimensionPixelSize(this._width,parentWidth,this._measuringMeasureSpec);}catch(e) {console.error(e);this._width = -2;}}return this._width;},set:function set(value){this._width = this._widthOrig = value;}},{key:"height",get:function get(){if(typeof this._height === 'number')return this._height;var up=(this._height + "").toUpperCase();if(up === 'FILL_PARENT' || up === 'MATCH_PARENT')this._height = -1;else if(up === 'WRAP_CONTENT')this._height = -2;else {var parentHeight=view_4.View.MeasureSpec.getSize(this._measuringParentHeightMeasureSpec);try{this._height = TypedValue.complexToDimensionPixelSize(this._height,parentHeight,this._measuringMeasureSpec);}catch(e) {console.error(e);this._height = -2;}}return this._height;},set:function set(value){this._height = this._heightOrig = value;}}]);return LayoutParams;})();LayoutParams.FILL_PARENT = -1;LayoutParams.MATCH_PARENT = -1;LayoutParams.WRAP_CONTENT = -2;ViewGroup.LayoutParams = LayoutParams;var MarginLayoutParams=(function(_LayoutParams){_inherits(MarginLayoutParams,_LayoutParams);function MarginLayoutParams(){var _this12=this;_classCallCheck(this,MarginLayoutParams);_get(Object.getPrototypeOf(MarginLayoutParams.prototype),"constructor",this).call(this);this._leftMargin = 0;this._topMargin = 0;this._rightMargin = 0;this._bottomMargin = 0;this._leftMarginOrig = 0;this._topMarginOrig = 0;this._rightMarginOrig = 0;this._bottomMarginOrig = 0;for(var _len25=arguments.length,args=Array(_len25),_key25=0;_key25 < _len25;_key25++) {args[_key25] = arguments[_key25];}if(args.length === 1){var src=args[0];if(src instanceof MarginLayoutParams){_get(Object.getPrototypeOf(MarginLayoutParams.prototype),"constructor",this).call(this,src);this.leftMargin = src._leftMargin;this.topMargin = src._topMargin;this.rightMargin = src._rightMargin;this.bottomMargin = src._bottomMargin;}}else if(args.length == 2){_get(Object.getPrototypeOf(MarginLayoutParams.prototype),"constructor",this).call(this,args[0],args[1]);}this._attrBinder.addAttr('marginLeft',function(value){if(value == null)value = 0;_this12.leftMargin = value;},function(){return _this12._leftMarginOrig;});this._attrBinder.addAttr('marginTop',function(value){if(value == null)value = 0;_this12.topMargin = value;},function(){return _this12._topMarginOrig;});this._attrBinder.addAttr('marginRight',function(value){if(value == null)value = 0;_this12.rightMargin = value;},function(){return _this12._rightMarginOrig;});this._attrBinder.addAttr('marginBottom',function(value){if(value == null)value = 0;_this12.bottomMargin = value;},function(){return _this12._bottomMargin;});this._attrBinder.addAttr('margin',function(value){if(value == null)value = 0;var _attrBinder$parsePaddingMarginLTRB3=_this12._attrBinder.parsePaddingMarginLTRB(value);var _attrBinder$parsePaddingMarginLTRB32=_slicedToArray(_attrBinder$parsePaddingMarginLTRB3,4);var left=_attrBinder$parsePaddingMarginLTRB32[0];var top=_attrBinder$parsePaddingMarginLTRB32[1];var right=_attrBinder$parsePaddingMarginLTRB32[2];var bottom=_attrBinder$parsePaddingMarginLTRB32[3];_this12.leftMargin = left;_this12.topMargin = top;_this12.rightMargin = right;_this12.bottomMargin = bottom;});}_createClass(MarginLayoutParams,[{key:"setMargins",value:function setMargins(left,top,right,bottom){this.leftMargin = left;this.topMargin = top;this.rightMargin = right;this.bottomMargin = bottom;}},{key:"leftMargin",get:function get(){if(typeof this._leftMargin === 'number')return this._leftMargin;var parentWidth=view_4.View.MeasureSpec.getSize(this._measuringParentWidthMeasureSpec);try{this._leftMargin = TypedValue.complexToDimensionPixelSize(this._leftMargin,parentWidth,this._measuringMeasureSpec);}catch(e) {console.warn(e);this._leftMargin = 0;}return this._leftMargin;},set:function set(value){this._leftMargin = this._leftMarginOrig = value;}},{key:"topMargin",get:function get(){if(typeof this._topMargin === 'number')return this._topMargin;var parentWidth=view_4.View.MeasureSpec.getSize(this._measuringParentWidthMeasureSpec);try{this._topMargin = TypedValue.complexToDimensionPixelSize(this._topMargin,parentWidth,this._measuringMeasureSpec);}catch(e) {console.warn(e);this._topMargin = 0;}return this._topMargin;},set:function set(value){this._topMargin = this._topMarginOrig = value;}},{key:"rightMargin",get:function get(){if(typeof this._rightMargin === 'number')return this._rightMargin;var parentWidth=view_4.View.MeasureSpec.getSize(this._measuringParentWidthMeasureSpec);try{this._rightMargin = TypedValue.complexToDimensionPixelSize(this._rightMargin,parentWidth,this._measuringMeasureSpec);}catch(e) {console.warn(e);this._rightMargin = 0;}return this._rightMargin;},set:function set(value){this._rightMargin = this._rightMarginOrig = value;}},{key:"bottomMargin",get:function get(){if(typeof this._bottomMargin === 'number')return this._bottomMargin;var parentWidth=view_4.View.MeasureSpec.getSize(this._measuringParentWidthMeasureSpec);try{this._bottomMargin = TypedValue.complexToDimensionPixelSize(this._bottomMargin,parentWidth,this._measuringMeasureSpec);}catch(e) {console.warn(e);this._bottomMargin = 0;}return this._bottomMargin;},set:function set(value){this._bottomMargin = this._bottomMarginOrig = value;}}]);return MarginLayoutParams;})(LayoutParams);ViewGroup.MarginLayoutParams = MarginLayoutParams;})(ViewGroup = view_4.ViewGroup || (view_4.ViewGroup = {}));var TouchTarget=(function(){function TouchTarget(){_classCallCheck(this,TouchTarget);}_createClass(TouchTarget,[{key:"recycle",value:function recycle(){if(TouchTarget.sRecycledCount < TouchTarget.MAX_RECYCLED){this.next = TouchTarget.sRecycleBin;TouchTarget.sRecycleBin = this;TouchTarget.sRecycledCount += 1;}else {this.next = null;}this.child = null;}}],[{key:"obtain",value:function obtain(child,pointerIdBits){var target=undefined;if(TouchTarget.sRecycleBin == null){target = new TouchTarget();}else {target = TouchTarget.sRecycleBin;TouchTarget.sRecycleBin = target.next;TouchTarget.sRecycledCount--;target.next = null;}target.child = child;target.pointerIdBits = pointerIdBits;return target;}}]);return TouchTarget;})();TouchTarget.MAX_RECYCLED = 32;TouchTarget.sRecycledCount = 0;TouchTarget.ALL_POINTER_IDS = -1;})(view = android.view || (android.view = {}));})(android || (android = {})); /**
 * Created by linfaxin on 15/10/6.
 */ ///<reference path="ViewGroup.ts"/>
///<reference path="ViewRootImpl.ts"/>
///<reference path="View.ts"/>
///<reference path="../graphics/drawable/Drawable.ts"/>
var android;(function(android){var view;(function(view){var Drawable=android.graphics.drawable.Drawable;var ViewOverlay=(function(){function ViewOverlay(hostView){_classCallCheck(this,ViewOverlay);this.mOverlayViewGroup = new ViewOverlay.OverlayViewGroup(hostView);}_createClass(ViewOverlay,[{key:"getOverlayView",value:function getOverlayView(){return this.mOverlayViewGroup;}},{key:"add",value:function add(drawable){this.mOverlayViewGroup.add(drawable);}},{key:"remove",value:function remove(drawable){}},{key:"clear",value:function clear(){this.mOverlayViewGroup.clear();}},{key:"isEmpty",value:function isEmpty(){return this.mOverlayViewGroup.isEmpty();}}]);return ViewOverlay;})();view.ViewOverlay = ViewOverlay;(function(ViewOverlay){var OverlayViewGroup=(function(_view$ViewGroup){_inherits(OverlayViewGroup,_view$ViewGroup);function OverlayViewGroup(hostView){_classCallCheck(this,OverlayViewGroup);_get(Object.getPrototypeOf(OverlayViewGroup.prototype),"constructor",this).call(this);this.mHostView = hostView;this.mAttachInfo = hostView.mAttachInfo;this.mRight = hostView.getWidth();this.mBottom = hostView.getHeight();}_createClass(OverlayViewGroup,[{key:"addDrawable",value:function addDrawable(drawable){}},{key:"addView",value:function addView(child){}},{key:"add",value:function add(arg){if(arg instanceof Drawable)this.addDrawable(arg);else if(arg instanceof view.View)this.addView(arg);}},{key:"clear",value:function clear(){}},{key:"isEmpty",value:function isEmpty(){return true;}},{key:"onLayout",value:function onLayout(changed,l,t,r,b){}}]);return OverlayViewGroup;})(view.ViewGroup);ViewOverlay.OverlayViewGroup = OverlayViewGroup;})(ViewOverlay = view.ViewOverlay || (view.ViewOverlay = {}));})(view = android.view || (android.view = {}));})(android || (android = {})); /**
 * Created by linfaxin on 15/10/17.
 */ ///<reference path="../util/Log.ts"/>
///<reference path="../util/Pools.ts"/>
///<reference path="MotionEvent.ts"/>
///<reference path="KeyEvent.ts"/>
var android;(function(android){var view;(function(view){var Log=android.util.Log;var Pools=android.util.Pools;var VelocityTracker=(function(){function VelocityTracker(){_classCallCheck(this,VelocityTracker);this.mLastTouchIndex = 0;this.mGeneration = 0;this.clear();}_createClass(VelocityTracker,[{key:"recycle",value:function recycle(){this.clear();VelocityTracker.sPool.release(this);}},{key:"setNextPoolable",value:function setNextPoolable(element){this.mNext = element;}},{key:"getNextPoolable",value:function getNextPoolable(){return this.mNext;}},{key:"clear",value:function clear(){VelocityTracker.releasePointerList(this.mPointerListHead);this.mPointerListHead = null;this.mLastTouchIndex = 0;}},{key:"addMovement",value:function addMovement(ev){var historySize=ev.getHistorySize();var pointerCount=ev.getPointerCount();var lastTouchIndex=this.mLastTouchIndex;var nextTouchIndex=(lastTouchIndex + 1) % VelocityTracker.NUM_PAST;var finalTouchIndex=(nextTouchIndex + historySize) % VelocityTracker.NUM_PAST;var generation=this.mGeneration++;this.mLastTouchIndex = finalTouchIndex;var previousPointer=null;for(var i=0;i < pointerCount;i++) {var pointerId=ev.getPointerId(i);var nextPointer=undefined;if(previousPointer == null || pointerId < previousPointer.id){previousPointer = null;nextPointer = this.mPointerListHead;}else {nextPointer = previousPointer.next;}var pointer=undefined;for(;;) {if(nextPointer != null){var nextPointerId=nextPointer.id;if(nextPointerId == pointerId){pointer = nextPointer;break;}if(nextPointerId < pointerId){nextPointer = nextPointer.next;continue;}}pointer = VelocityTracker.obtainPointer();pointer.id = pointerId;pointer.pastTime[lastTouchIndex] = Number.MIN_VALUE;pointer.next = nextPointer;if(previousPointer == null){this.mPointerListHead = pointer;}else {previousPointer.next = pointer;}break;}pointer.generation = generation;previousPointer = pointer;var pastX=pointer.pastX;var pastY=pointer.pastY;var pastTime=pointer.pastTime;historySize = ev.getHistorySize(pointerId);for(var j=0;j < historySize;j++) {var touchIndex=(nextTouchIndex + j) % VelocityTracker.NUM_PAST;pastX[touchIndex] = ev.getHistoricalX(i,j);pastY[touchIndex] = ev.getHistoricalY(i,j);pastTime[touchIndex] = ev.getHistoricalEventTime(i,j);}pastX[finalTouchIndex] = ev.getX(i);pastY[finalTouchIndex] = ev.getY(i);pastTime[finalTouchIndex] = ev.getEventTime();}previousPointer = null;for(var pointer=this.mPointerListHead;pointer != null;) {var nextPointer=pointer.next;if(pointer.generation != generation){if(previousPointer == null){this.mPointerListHead = nextPointer;}else {previousPointer.next = nextPointer;}VelocityTracker.releasePointer(pointer);}else {previousPointer = pointer;}pointer = nextPointer;}}},{key:"computeCurrentVelocity",value:function computeCurrentVelocity(units){var maxVelocity=arguments.length <= 1 || arguments[1] === undefined?Number.MAX_SAFE_INTEGER:arguments[1];var lastTouchIndex=this.mLastTouchIndex;for(var pointer=this.mPointerListHead;pointer != null;pointer = pointer.next) {var pastTime=pointer.pastTime;var oldestTouchIndex=lastTouchIndex;var numTouches=1;var minTime=pastTime[lastTouchIndex] - VelocityTracker.MAX_AGE_MILLISECONDS;while(numTouches < VelocityTracker.NUM_PAST) {var nextOldestTouchIndex=(oldestTouchIndex + VelocityTracker.NUM_PAST - 1) % VelocityTracker.NUM_PAST;var nextOldestTime=pastTime[nextOldestTouchIndex];if(nextOldestTime < minTime){break;}oldestTouchIndex = nextOldestTouchIndex;numTouches += 1;}if(numTouches > 3){numTouches -= 1;}var pastX=pointer.pastX;var pastY=pointer.pastY;var oldestX=pastX[oldestTouchIndex];var oldestY=pastY[oldestTouchIndex];var oldestTime=pastTime[oldestTouchIndex];var accumX=0;var accumY=0;for(var i=1;i < numTouches;i++) {var touchIndex=(oldestTouchIndex + i) % VelocityTracker.NUM_PAST;var duration=pastTime[touchIndex] - oldestTime;if(duration == 0)continue;var delta=pastX[touchIndex] - oldestX;var velocity=delta / duration * units;accumX = accumX == 0?velocity:(accumX + velocity) * .5;delta = pastY[touchIndex] - oldestY;velocity = delta / duration * units;accumY = accumY == 0?velocity:(accumY + velocity) * .5;}if(accumX < -maxVelocity){accumX = -maxVelocity;}else if(accumX > maxVelocity){accumX = maxVelocity;}if(accumY < -maxVelocity){accumY = -maxVelocity;}else if(accumY > maxVelocity){accumY = maxVelocity;}pointer.xVelocity = accumX;pointer.yVelocity = accumY;if(VelocityTracker.localLOGV){Log.v(VelocityTracker.TAG,"Pointer " + pointer.id + ": Y velocity=" + accumX + " X velocity=" + accumY + " N=" + numTouches);}}}},{key:"getXVelocity",value:function getXVelocity(){var id=arguments.length <= 0 || arguments[0] === undefined?0:arguments[0];var pointer=this.getPointer(id);return pointer != null?pointer.xVelocity:0;}},{key:"getYVelocity",value:function getYVelocity(){var id=arguments.length <= 0 || arguments[0] === undefined?0:arguments[0];var pointer=this.getPointer(id);return pointer != null?pointer.yVelocity:0;}},{key:"getPointer",value:function getPointer(id){for(var pointer=this.mPointerListHead;pointer != null;pointer = pointer.next) {if(pointer.id == id){return pointer;}}return null;}}],[{key:"obtain",value:function obtain(){var instance=VelocityTracker.sPool.acquire();return instance != null?instance:new VelocityTracker();}},{key:"obtainPointer",value:function obtainPointer(){if(VelocityTracker.sRecycledPointerCount != 0){var element=VelocityTracker.sRecycledPointerListHead;VelocityTracker.sRecycledPointerCount -= 1;VelocityTracker.sRecycledPointerListHead = element.next;element.next = null;return element;}return new Pointer();}},{key:"releasePointer",value:function releasePointer(pointer){if(VelocityTracker.sRecycledPointerCount < VelocityTracker.POINTER_POOL_CAPACITY){pointer.next = VelocityTracker.sRecycledPointerListHead;VelocityTracker.sRecycledPointerCount += 1;VelocityTracker.sRecycledPointerListHead = pointer;}}},{key:"releasePointerList",value:function releasePointerList(pointer){if(pointer != null){var count=VelocityTracker.sRecycledPointerCount;if(count >= VelocityTracker.POINTER_POOL_CAPACITY){return;}var tail=pointer;for(;;) {count += 1;if(count >= VelocityTracker.POINTER_POOL_CAPACITY){break;}var next=tail.next;if(next == null){break;}tail = next;}tail.next = VelocityTracker.sRecycledPointerListHead;VelocityTracker.sRecycledPointerCount = count;VelocityTracker.sRecycledPointerListHead = pointer;}}}]);return VelocityTracker;})();VelocityTracker.TAG = "VelocityTracker";VelocityTracker.DEBUG = Log.VelocityTracker_DBG;VelocityTracker.localLOGV = VelocityTracker.DEBUG;VelocityTracker.NUM_PAST = 10;VelocityTracker.MAX_AGE_MILLISECONDS = 200;VelocityTracker.POINTER_POOL_CAPACITY = 20;VelocityTracker.sPool = new Pools.SynchronizedPool(2);VelocityTracker.sRecycledPointerCount = 0;view.VelocityTracker = VelocityTracker;var Pointer=function Pointer(){_classCallCheck(this,Pointer);this.id = 0;this.xVelocity = 0;this.yVelocity = 0;this.pastX = new Array(VelocityTracker.NUM_PAST);this.pastY = new Array(VelocityTracker.NUM_PAST);this.pastTime = new Array(VelocityTracker.NUM_PAST);this.generation = 0;};})(view = android.view || (android.view = {}));})(android || (android = {})); /*
 * Copyright (C) 2008 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ ///<reference path="../../android/os/Handler.ts"/>
///<reference path="../../android/os/Message.ts"/>
///<reference path="../../android/view/MotionEvent.ts"/>
///<reference path="../../android/view/VelocityTracker.ts"/>
///<reference path="../../android/view/View.ts"/>
///<reference path="../../android/view/ViewConfiguration.ts"/>
var android;(function(android){var view;(function(view){var Handler=android.os.Handler;var MotionEvent=android.view.MotionEvent;var VelocityTracker=android.view.VelocityTracker;var ViewConfiguration=android.view.ViewConfiguration;var GestureDetector=(function(){function GestureDetector(listener,handler){_classCallCheck(this,GestureDetector);this.mTouchSlopSquare = 0;this.mDoubleTapTouchSlopSquare = 0;this.mDoubleTapSlopSquare = 0;this.mMinimumFlingVelocity = 0;this.mMaximumFlingVelocity = 0;this.mLastFocusX = 0;this.mLastFocusY = 0;this.mDownFocusX = 0;this.mDownFocusY = 0;this.mHandler = new GestureDetector.GestureHandler(this);this.mListener = listener;if(listener['setOnDoubleTapListener']){this.setOnDoubleTapListener(listener);}this.init();}_createClass(GestureDetector,[{key:"init",value:function init(){if(this.mListener == null){throw Error("new NullPointerException(\"OnGestureListener must not be null\")");}this.mIsLongpressEnabled = true;var touchSlop=undefined,doubleTapSlop=undefined,doubleTapTouchSlop=undefined;var configuration=ViewConfiguration.get();touchSlop = configuration.getScaledTouchSlop();doubleTapTouchSlop = configuration.getScaledDoubleTapTouchSlop();doubleTapSlop = configuration.getScaledDoubleTapSlop();this.mMinimumFlingVelocity = configuration.getScaledMinimumFlingVelocity();this.mMaximumFlingVelocity = configuration.getScaledMaximumFlingVelocity();this.mTouchSlopSquare = touchSlop * touchSlop;this.mDoubleTapTouchSlopSquare = doubleTapTouchSlop * doubleTapTouchSlop;this.mDoubleTapSlopSquare = doubleTapSlop * doubleTapSlop;}},{key:"setOnDoubleTapListener",value:function setOnDoubleTapListener(onDoubleTapListener){this.mDoubleTapListener = onDoubleTapListener;}},{key:"setIsLongpressEnabled",value:function setIsLongpressEnabled(isLongpressEnabled){this.mIsLongpressEnabled = isLongpressEnabled;}},{key:"isLongpressEnabled",value:function isLongpressEnabled(){return this.mIsLongpressEnabled;}},{key:"onTouchEvent",value:function onTouchEvent(ev){var action=ev.getAction();if(this.mVelocityTracker == null){this.mVelocityTracker = VelocityTracker.obtain();}this.mVelocityTracker.addMovement(ev);var pointerUp=(action & MotionEvent.ACTION_MASK) == MotionEvent.ACTION_POINTER_UP;var skipIndex=pointerUp?ev.getActionIndex():-1;var sumX=0,sumY=0;var count=ev.getPointerCount();for(var i=0;i < count;i++) {if(skipIndex == i)continue;sumX += ev.getX(i);sumY += ev.getY(i);}var div=pointerUp?count - 1:count;var focusX=sumX / div;var focusY=sumY / div;var handled=false;switch(action & MotionEvent.ACTION_MASK){case MotionEvent.ACTION_POINTER_DOWN:this.mDownFocusX = this.mLastFocusX = focusX;this.mDownFocusY = this.mLastFocusY = focusY;this.cancelTaps();break;case MotionEvent.ACTION_POINTER_UP:this.mDownFocusX = this.mLastFocusX = focusX;this.mDownFocusY = this.mLastFocusY = focusY;this.mVelocityTracker.computeCurrentVelocity(1000,this.mMaximumFlingVelocity);var upIndex=ev.getActionIndex();var id1=ev.getPointerId(upIndex);var x1=this.mVelocityTracker.getXVelocity(id1);var y1=this.mVelocityTracker.getYVelocity(id1);for(var i=0;i < count;i++) {if(i == upIndex)continue;var id2=ev.getPointerId(i);var x=x1 * this.mVelocityTracker.getXVelocity(id2);var y=y1 * this.mVelocityTracker.getYVelocity(id2);var dot=x + y;if(dot < 0){this.mVelocityTracker.clear();break;}}break;case MotionEvent.ACTION_DOWN:if(this.mDoubleTapListener != null){var hadTapMessage=this.mHandler.hasMessages(GestureDetector.TAP);if(hadTapMessage)this.mHandler.removeMessages(GestureDetector.TAP);if(this.mCurrentDownEvent != null && this.mPreviousUpEvent != null && hadTapMessage && this.isConsideredDoubleTap(this.mCurrentDownEvent,this.mPreviousUpEvent,ev)){this.mIsDoubleTapping = true;handled = this.mDoubleTapListener.onDoubleTap(this.mCurrentDownEvent) || handled;handled = this.mDoubleTapListener.onDoubleTapEvent(ev) || handled;}else {this.mHandler.sendEmptyMessageDelayed(GestureDetector.TAP,GestureDetector.DOUBLE_TAP_TIMEOUT);}}this.mDownFocusX = this.mLastFocusX = focusX;this.mDownFocusY = this.mLastFocusY = focusY;if(this.mCurrentDownEvent != null){this.mCurrentDownEvent.recycle();}this.mCurrentDownEvent = MotionEvent.obtain(ev);this.mAlwaysInTapRegion = true;this.mAlwaysInBiggerTapRegion = true;this.mStillDown = true;this.mInLongPress = false;this.mDeferConfirmSingleTap = false;if(this.mIsLongpressEnabled){this.mHandler.removeMessages(GestureDetector.LONG_PRESS);this.mHandler.sendEmptyMessageAtTime(GestureDetector.LONG_PRESS,this.mCurrentDownEvent.getDownTime() + GestureDetector.TAP_TIMEOUT + GestureDetector.LONGPRESS_TIMEOUT);}this.mHandler.sendEmptyMessageAtTime(GestureDetector.SHOW_PRESS,this.mCurrentDownEvent.getDownTime() + GestureDetector.TAP_TIMEOUT);handled = this.mListener.onDown(ev) || handled;break;case MotionEvent.ACTION_MOVE:if(this.mInLongPress){break;}var scrollX=this.mLastFocusX - focusX;var scrollY=this.mLastFocusY - focusY;if(this.mIsDoubleTapping){handled = this.mDoubleTapListener.onDoubleTapEvent(ev) || handled;}else if(this.mAlwaysInTapRegion){var deltaX=Math.floor(focusX - this.mDownFocusX);var deltaY=Math.floor(focusY - this.mDownFocusY);var distance=deltaX * deltaX + deltaY * deltaY;if(distance > this.mTouchSlopSquare){handled = this.mListener.onScroll(this.mCurrentDownEvent,ev,scrollX,scrollY);this.mLastFocusX = focusX;this.mLastFocusY = focusY;this.mAlwaysInTapRegion = false;this.mHandler.removeMessages(GestureDetector.TAP);this.mHandler.removeMessages(GestureDetector.SHOW_PRESS);this.mHandler.removeMessages(GestureDetector.LONG_PRESS);}if(distance > this.mDoubleTapTouchSlopSquare){this.mAlwaysInBiggerTapRegion = false;}}else if(Math.abs(scrollX) >= 1 || Math.abs(scrollY) >= 1){handled = this.mListener.onScroll(this.mCurrentDownEvent,ev,scrollX,scrollY);this.mLastFocusX = focusX;this.mLastFocusY = focusY;}break;case MotionEvent.ACTION_UP:this.mStillDown = false;var currentUpEvent=MotionEvent.obtain(ev);if(this.mIsDoubleTapping){handled = this.mDoubleTapListener.onDoubleTapEvent(ev) || handled;}else if(this.mInLongPress){this.mHandler.removeMessages(GestureDetector.TAP);this.mInLongPress = false;}else if(this.mAlwaysInTapRegion){handled = this.mListener.onSingleTapUp(ev);if(this.mDeferConfirmSingleTap && this.mDoubleTapListener != null){this.mDoubleTapListener.onSingleTapConfirmed(ev);}}else {var velocityTracker=this.mVelocityTracker;var pointerId=ev.getPointerId(0);velocityTracker.computeCurrentVelocity(1000,this.mMaximumFlingVelocity);var velocityY=velocityTracker.getYVelocity(pointerId);var velocityX=velocityTracker.getXVelocity(pointerId);if(Math.abs(velocityY) > this.mMinimumFlingVelocity || Math.abs(velocityX) > this.mMinimumFlingVelocity){handled = this.mListener.onFling(this.mCurrentDownEvent,ev,velocityX,velocityY);}}if(this.mPreviousUpEvent != null){this.mPreviousUpEvent.recycle();}this.mPreviousUpEvent = currentUpEvent;if(this.mVelocityTracker != null){this.mVelocityTracker.recycle();this.mVelocityTracker = null;}this.mIsDoubleTapping = false;this.mDeferConfirmSingleTap = false;this.mHandler.removeMessages(GestureDetector.SHOW_PRESS);this.mHandler.removeMessages(GestureDetector.LONG_PRESS);break;case MotionEvent.ACTION_CANCEL:this.cancel();break;}return handled;}},{key:"cancel",value:function cancel(){this.mHandler.removeMessages(GestureDetector.SHOW_PRESS);this.mHandler.removeMessages(GestureDetector.LONG_PRESS);this.mHandler.removeMessages(GestureDetector.TAP);this.mVelocityTracker.recycle();this.mVelocityTracker = null;this.mIsDoubleTapping = false;this.mStillDown = false;this.mAlwaysInTapRegion = false;this.mAlwaysInBiggerTapRegion = false;this.mDeferConfirmSingleTap = false;if(this.mInLongPress){this.mInLongPress = false;}}},{key:"cancelTaps",value:function cancelTaps(){this.mHandler.removeMessages(GestureDetector.SHOW_PRESS);this.mHandler.removeMessages(GestureDetector.LONG_PRESS);this.mHandler.removeMessages(GestureDetector.TAP);this.mIsDoubleTapping = false;this.mAlwaysInTapRegion = false;this.mAlwaysInBiggerTapRegion = false;this.mDeferConfirmSingleTap = false;if(this.mInLongPress){this.mInLongPress = false;}}},{key:"isConsideredDoubleTap",value:function isConsideredDoubleTap(firstDown,firstUp,secondDown){if(!this.mAlwaysInBiggerTapRegion){return false;}var deltaTime=secondDown.getEventTime() - firstUp.getEventTime();if(deltaTime > GestureDetector.DOUBLE_TAP_TIMEOUT || deltaTime < GestureDetector.DOUBLE_TAP_MIN_TIME){return false;}var deltaX=Math.floor(firstDown.getX()) - Math.floor(secondDown.getX());var deltaY=Math.floor(firstDown.getY()) - Math.floor(secondDown.getY());return deltaX * deltaX + deltaY * deltaY < this.mDoubleTapSlopSquare;}},{key:"dispatchLongPress",value:function dispatchLongPress(){this.mHandler.removeMessages(GestureDetector.TAP);this.mDeferConfirmSingleTap = false;this.mInLongPress = true;this.mListener.onLongPress(this.mCurrentDownEvent);}}]);return GestureDetector;})();GestureDetector.LONGPRESS_TIMEOUT = ViewConfiguration.getLongPressTimeout();GestureDetector.TAP_TIMEOUT = ViewConfiguration.getTapTimeout();GestureDetector.DOUBLE_TAP_TIMEOUT = ViewConfiguration.getDoubleTapTimeout();GestureDetector.DOUBLE_TAP_MIN_TIME = ViewConfiguration.getDoubleTapMinTime();GestureDetector.SHOW_PRESS = 1;GestureDetector.LONG_PRESS = 2;GestureDetector.TAP = 3;view.GestureDetector = GestureDetector;(function(GestureDetector){var SimpleOnGestureListener=(function(){function SimpleOnGestureListener(){_classCallCheck(this,SimpleOnGestureListener);}_createClass(SimpleOnGestureListener,[{key:"onSingleTapUp",value:function onSingleTapUp(e){return false;}},{key:"onLongPress",value:function onLongPress(e){}},{key:"onScroll",value:function onScroll(e1,e2,distanceX,distanceY){return false;}},{key:"onFling",value:function onFling(e1,e2,velocityX,velocityY){return false;}},{key:"onShowPress",value:function onShowPress(e){}},{key:"onDown",value:function onDown(e){return false;}},{key:"onDoubleTap",value:function onDoubleTap(e){return false;}},{key:"onDoubleTapEvent",value:function onDoubleTapEvent(e){return false;}},{key:"onSingleTapConfirmed",value:function onSingleTapConfirmed(e){return false;}}]);return SimpleOnGestureListener;})();GestureDetector.SimpleOnGestureListener = SimpleOnGestureListener;var GestureHandler=(function(_Handler2){_inherits(GestureHandler,_Handler2);function GestureHandler(arg){_classCallCheck(this,GestureHandler);_get(Object.getPrototypeOf(GestureHandler.prototype),"constructor",this).call(this);this._GestureDetector_this = arg;}_createClass(GestureHandler,[{key:"handleMessage",value:function handleMessage(msg){switch(msg.what){case GestureDetector.SHOW_PRESS:this._GestureDetector_this.mListener.onShowPress(this._GestureDetector_this.mCurrentDownEvent);break;case GestureDetector.LONG_PRESS:this._GestureDetector_this.dispatchLongPress();break;case GestureDetector.TAP:if(this._GestureDetector_this.mDoubleTapListener != null){if(!this._GestureDetector_this.mStillDown){this._GestureDetector_this.mDoubleTapListener.onSingleTapConfirmed(this._GestureDetector_this.mCurrentDownEvent);}else {this._GestureDetector_this.mDeferConfirmSingleTap = true;}}break;default:throw Error("new RuntimeException(\"Unknown message \" + msg)");}}}]);return GestureHandler;})(Handler);GestureDetector.GestureHandler = GestureHandler;})(GestureDetector = view.GestureDetector || (view.GestureDetector = {}));})(view = android.view || (android.view = {}));})(android || (android = {})); /**
 * Created by linfaxin on 15/10/9.
 */ ///<reference path="../view/Gravity.ts"/>
///<reference path="../view/View.ts"/>
///<reference path="../view/ViewGroup.ts"/>
///<reference path="../graphics/drawable/Drawable.ts"/>
///<reference path="../graphics/Rect.ts"/>
///<reference path="../graphics/Canvas.ts"/>
var android;(function(android){var widget;(function(widget){var Gravity=android.view.Gravity;var View=android.view.View;var ViewGroup=android.view.ViewGroup;var Rect=android.graphics.Rect;var FrameLayout=(function(_ViewGroup){_inherits(FrameLayout,_ViewGroup);function FrameLayout(bindElement,rootElement){var _this13=this;_classCallCheck(this,FrameLayout);_get(Object.getPrototypeOf(FrameLayout.prototype),"constructor",this).call(this,bindElement,rootElement);this.mMeasureAllChildren = false;this.mForegroundPaddingLeft = 0;this.mForegroundPaddingTop = 0;this.mForegroundPaddingRight = 0;this.mForegroundPaddingBottom = 0;this.mSelfBounds = new Rect();this.mOverlayBounds = new Rect();this.mForegroundGravity = Gravity.FILL;this.mForegroundInPadding = true;this.mForegroundBoundsChanged = false;this.mMatchParentChildren = new Array(1);this._attrBinder.addAttr('foregroundGravity',function(value){_this13.mForegroundGravity = _this13._attrBinder.parseGravity(value,_this13.mForegroundGravity);},function(){return _this13.mForegroundGravity;});}_createClass(FrameLayout,[{key:"getForegroundGravity",value:function getForegroundGravity(){return this.mForegroundGravity;}},{key:"setForegroundGravity",value:function setForegroundGravity(foregroundGravity){if(this.mForegroundGravity != foregroundGravity){if((foregroundGravity & Gravity.HORIZONTAL_GRAVITY_MASK) == 0){foregroundGravity |= Gravity.LEFT;}if((foregroundGravity & Gravity.VERTICAL_GRAVITY_MASK) == 0){foregroundGravity |= Gravity.TOP;}this.mForegroundGravity = foregroundGravity;if(this.mForegroundGravity == Gravity.FILL && this.mForeground != null){var padding=new Rect();if(this.mForeground.getPadding(padding)){this.mForegroundPaddingLeft = padding.left;this.mForegroundPaddingTop = padding.top;this.mForegroundPaddingRight = padding.right;this.mForegroundPaddingBottom = padding.bottom;}}else {this.mForegroundPaddingLeft = 0;this.mForegroundPaddingTop = 0;this.mForegroundPaddingRight = 0;this.mForegroundPaddingBottom = 0;}this.requestLayout();}}},{key:"verifyDrawable",value:function verifyDrawable(who){return _get(Object.getPrototypeOf(FrameLayout.prototype),"verifyDrawable",this).call(this,who) || who == this.mForeground;}},{key:"jumpDrawablesToCurrentState",value:function jumpDrawablesToCurrentState(){_get(Object.getPrototypeOf(FrameLayout.prototype),"jumpDrawablesToCurrentState",this).call(this);if(this.mForeground != null)this.mForeground.jumpToCurrentState();}},{key:"drawableStateChanged",value:function drawableStateChanged(){_get(Object.getPrototypeOf(FrameLayout.prototype),"drawableStateChanged",this).call(this);if(this.mForeground != null && this.mForeground.isStateful()){this.mForeground.setState(this.getDrawableState());}}},{key:"generateDefaultLayoutParams",value:function generateDefaultLayoutParams(){return new FrameLayout.LayoutParams(FrameLayout.LayoutParams.MATCH_PARENT,FrameLayout.LayoutParams.MATCH_PARENT);}},{key:"setForeground",value:function setForeground(drawable){}},{key:"getForeground",value:function getForeground(){return this.mForeground;}},{key:"getPaddingLeftWithForeground",value:function getPaddingLeftWithForeground(){return this.mForegroundInPadding?Math.max(this.mPaddingLeft,this.mForegroundPaddingLeft):this.mPaddingLeft + this.mForegroundPaddingLeft;}},{key:"getPaddingRightWithForeground",value:function getPaddingRightWithForeground(){return this.mForegroundInPadding?Math.max(this.mPaddingRight,this.mForegroundPaddingRight):this.mPaddingRight + this.mForegroundPaddingRight;}},{key:"getPaddingTopWithForeground",value:function getPaddingTopWithForeground(){return this.mForegroundInPadding?Math.max(this.mPaddingTop,this.mForegroundPaddingTop):this.mPaddingTop + this.mForegroundPaddingTop;}},{key:"getPaddingBottomWithForeground",value:function getPaddingBottomWithForeground(){return this.mForegroundInPadding?Math.max(this.mPaddingBottom,this.mForegroundPaddingBottom):this.mPaddingBottom + this.mForegroundPaddingBottom;}},{key:"onMeasure",value:function onMeasure(widthMeasureSpec,heightMeasureSpec){var count=this.getChildCount();var measureMatchParentChildren=View.MeasureSpec.getMode(widthMeasureSpec) != View.MeasureSpec.EXACTLY || View.MeasureSpec.getMode(heightMeasureSpec) != View.MeasureSpec.EXACTLY;this.mMatchParentChildren = [];var maxHeight=0;var maxWidth=0;var childState=0;for(var i=0;i < count;i++) {var child=this.getChildAt(i);if(this.mMeasureAllChildren || child.getVisibility() != View.GONE){this.measureChildWithMargins(child,widthMeasureSpec,0,heightMeasureSpec,0);var lp=child.getLayoutParams();maxWidth = Math.max(maxWidth,child.getMeasuredWidth() + lp.leftMargin + lp.rightMargin);maxHeight = Math.max(maxHeight,child.getMeasuredHeight() + lp.topMargin + lp.bottomMargin);childState = View.combineMeasuredStates(childState,child.getMeasuredState());if(measureMatchParentChildren){if(lp.width == FrameLayout.LayoutParams.MATCH_PARENT || lp.height == FrameLayout.LayoutParams.MATCH_PARENT){this.mMatchParentChildren.push(child);}}}}maxWidth += this.getPaddingLeftWithForeground() + this.getPaddingRightWithForeground();maxHeight += this.getPaddingTopWithForeground() + this.getPaddingBottomWithForeground();maxHeight = Math.max(maxHeight,this.getSuggestedMinimumHeight());maxWidth = Math.max(maxWidth,this.getSuggestedMinimumWidth());var drawable=this.getForeground();if(drawable != null){maxHeight = Math.max(maxHeight,drawable.getMinimumHeight());maxWidth = Math.max(maxWidth,drawable.getMinimumWidth());}this.setMeasuredDimension(View.resolveSizeAndState(maxWidth,widthMeasureSpec,childState),View.resolveSizeAndState(maxHeight,heightMeasureSpec,childState << View.MEASURED_HEIGHT_STATE_SHIFT));count = this.mMatchParentChildren.length;if(count > 1){for(var i=0;i < count;i++) {var child=this.mMatchParentChildren[i];var lp=child.getLayoutParams();var childWidthMeasureSpec=undefined;var childHeightMeasureSpec=undefined;if(lp.width == FrameLayout.LayoutParams.MATCH_PARENT){childWidthMeasureSpec = View.MeasureSpec.makeMeasureSpec(this.getMeasuredWidth() - this.getPaddingLeftWithForeground() - this.getPaddingRightWithForeground() - lp.leftMargin - lp.rightMargin,View.MeasureSpec.EXACTLY);}else {childWidthMeasureSpec = ViewGroup.getChildMeasureSpec(widthMeasureSpec,this.getPaddingLeftWithForeground() + this.getPaddingRightWithForeground() + lp.leftMargin + lp.rightMargin,lp.width);}if(lp.height == FrameLayout.LayoutParams.MATCH_PARENT){childHeightMeasureSpec = View.MeasureSpec.makeMeasureSpec(this.getMeasuredHeight() - this.getPaddingTopWithForeground() - this.getPaddingBottomWithForeground() - lp.topMargin - lp.bottomMargin,View.MeasureSpec.EXACTLY);}else {childHeightMeasureSpec = ViewGroup.getChildMeasureSpec(heightMeasureSpec,this.getPaddingTopWithForeground() + this.getPaddingBottomWithForeground() + lp.topMargin + lp.bottomMargin,lp.height);}child.measure(childWidthMeasureSpec,childHeightMeasureSpec);}}}},{key:"onLayout",value:function onLayout(changed,left,top,right,bottom){this.layoutChildren(left,top,right,bottom,false);}},{key:"layoutChildren",value:function layoutChildren(left,top,right,bottom,forceLeftGravity){var count=this.getChildCount();var parentLeft=this.getPaddingLeftWithForeground();var parentRight=right - left - this.getPaddingRightWithForeground();var parentTop=this.getPaddingTopWithForeground();var parentBottom=bottom - top - this.getPaddingBottomWithForeground();this.mForegroundBoundsChanged = true;for(var i=0;i < count;i++) {var child=this.getChildAt(i);if(child.getVisibility() != View.GONE){var lp=child.getLayoutParams();var width=child.getMeasuredWidth();var height=child.getMeasuredHeight();var childLeft=undefined;var childTop=undefined;var gravity=lp.gravity;if(gravity == -1){gravity = FrameLayout.DEFAULT_CHILD_GRAVITY;}var absoluteGravity=gravity;var verticalGravity=gravity & Gravity.VERTICAL_GRAVITY_MASK;switch(absoluteGravity & Gravity.HORIZONTAL_GRAVITY_MASK){case Gravity.CENTER_HORIZONTAL:childLeft = parentLeft + (parentRight - parentLeft - width) / 2 + lp.leftMargin - lp.rightMargin;break;case Gravity.RIGHT:if(!forceLeftGravity){childLeft = parentRight - width - lp.rightMargin;break;}case Gravity.LEFT:default:childLeft = parentLeft + lp.leftMargin;}switch(verticalGravity){case Gravity.TOP:childTop = parentTop + lp.topMargin;break;case Gravity.CENTER_VERTICAL:childTop = parentTop + (parentBottom - parentTop - height) / 2 + lp.topMargin - lp.bottomMargin;break;case Gravity.BOTTOM:childTop = parentBottom - height - lp.bottomMargin;break;default:childTop = parentTop + lp.topMargin;}child.layout(childLeft,childTop,childLeft + width,childTop + height);}}}},{key:"onSizeChanged",value:function onSizeChanged(w,h,oldw,oldh){_get(Object.getPrototypeOf(FrameLayout.prototype),"onSizeChanged",this).call(this,w,h,oldw,oldh);this.mForegroundBoundsChanged = true;}},{key:"draw",value:function draw(canvas){_get(Object.getPrototypeOf(FrameLayout.prototype),"draw",this).call(this,canvas);if(this.mForeground != null){var foreground=this.mForeground;if(this.mForegroundBoundsChanged){this.mForegroundBoundsChanged = false;var selfBounds=this.mSelfBounds;var overlayBounds=this.mOverlayBounds;var w=this.mRight - this.mLeft;var h=this.mBottom - this.mTop;if(this.mForegroundInPadding){selfBounds.set(0,0,w,h);}else {selfBounds.set(this.mPaddingLeft,this.mPaddingTop,w - this.mPaddingRight,h - this.mPaddingBottom);}Gravity.apply(this.mForegroundGravity,foreground.getIntrinsicWidth(),foreground.getIntrinsicHeight(),selfBounds,overlayBounds);foreground.setBounds(overlayBounds);}foreground.draw(canvas);}}},{key:"setMeasureAllChildren",value:function setMeasureAllChildren(measureAll){this.mMeasureAllChildren = measureAll;}},{key:"getMeasureAllChildren",value:function getMeasureAllChildren(){return this.mMeasureAllChildren;}},{key:"shouldDelayChildPressedState",value:function shouldDelayChildPressedState(){return false;}},{key:"checkLayoutParams",value:function checkLayoutParams(p){return p instanceof FrameLayout.LayoutParams;}},{key:"generateLayoutParams",value:function generateLayoutParams(p){return new FrameLayout.LayoutParams(p);}}]);return FrameLayout;})(ViewGroup);FrameLayout.DEFAULT_CHILD_GRAVITY = Gravity.TOP | Gravity.LEFT;widget.FrameLayout = FrameLayout;(function(FrameLayout){var LayoutParams=(function(_ViewGroup$MarginLayoutParams){_inherits(LayoutParams,_ViewGroup$MarginLayoutParams);function LayoutParams(){var _this14=this;_classCallCheck(this,LayoutParams);_get(Object.getPrototypeOf(LayoutParams.prototype),"constructor",this).call(this);this.gravity = -1;for(var _len26=arguments.length,args=Array(_len26),_key26=0;_key26 < _len26;_key26++) {args[_key26] = arguments[_key26];}if(args.length === 1 && args[0] instanceof LayoutParams){_get(Object.getPrototypeOf(LayoutParams.prototype),"constructor",this).call(this,args[0]);this.gravity = args[0].gravity;}else {var width=args[0];var height=args[1];var _args$211=args[2];var gravity=_args$211 === undefined?-1:_args$211;_get(Object.getPrototypeOf(LayoutParams.prototype),"constructor",this).call(this,width,height);this.gravity = gravity;}this._attrBinder.addAttr('gravity',function(value){_this14.gravity = _this14._attrBinder.parseGravity(value,_this14.gravity);},function(){return _this14.gravity;});}return LayoutParams;})(ViewGroup.MarginLayoutParams);FrameLayout.LayoutParams = LayoutParams;})(FrameLayout = widget.FrameLayout || (widget.FrameLayout = {}));})(widget = android.widget || (android.widget = {}));})(android || (android = {}));var androidui;(function(androidui){var util;(function(util){var NumberChecker=(function(){function NumberChecker(){_classCallCheck(this,NumberChecker);}_createClass(NumberChecker,null,[{key:"warnNotNumber",value:function warnNotNumber(){try{this.assetNotNumber.apply(this,arguments);}catch(e) {console.error(e);return true;}return false;}},{key:"assetNotNumber",value:function assetNotNumber(){if(!this.checkIsNumber()){for(var _len27=arguments.length,ns=Array(_len27),_key27=0;_key27 < _len27;_key27++) {ns[_key27] = arguments[_key27];}throw Error('assetNotNumber : ' + ns);}}},{key:"checkIsNumber",value:function checkIsNumber(){for(var _len28=arguments.length,ns=Array(_len28),_key28=0;_key28 < _len28;_key28++) {ns[_key28] = arguments[_key28];}if(ns == null)return false;var _iteratorNormalCompletion33=true;var _didIteratorError33=false;var _iteratorError33=undefined;try{for(var _iterator33=ns[Symbol.iterator](),_step33;!(_iteratorNormalCompletion33 = (_step33 = _iterator33.next()).done);_iteratorNormalCompletion33 = true) {var n=_step33.value;if(n == null || Number.isNaN(n))return false;}}catch(err) {_didIteratorError33 = true;_iteratorError33 = err;}finally {try{if(!_iteratorNormalCompletion33 && _iterator33["return"]){_iterator33["return"]();}}finally {if(_didIteratorError33){throw _iteratorError33;}}}return true;}}]);return NumberChecker;})();util.NumberChecker = NumberChecker;})(util = androidui.util || (androidui.util = {}));})(androidui || (androidui = {})); /**
 * Created by linfaxin on 15/10/17.
 */ ///<reference path="../view/ViewConfiguration.ts"/>
///<reference path="../view/animation/Interpolator.ts"/>
///<reference path="../content/res/Resources.ts"/>
///<reference path="../os/SystemClock.ts"/>
///<reference path="../util/Log.ts"/>
///<reference path="../../androidui/util/NumberChecker.ts"/>
var android;(function(android){var widget;(function(widget){var ViewConfiguration=android.view.ViewConfiguration;var Resources=android.content.res.Resources;var SystemClock=android.os.SystemClock;var Log=android.util.Log;var NumberChecker=androidui.util.NumberChecker;var OverScroller=(function(){function OverScroller(interpolator){var flywheel=arguments.length <= 1 || arguments[1] === undefined?true:arguments[1];_classCallCheck(this,OverScroller);this.mMode = 0;this.mFlywheel = true;this.mInterpolator = interpolator;this.mFlywheel = flywheel;this.mScrollerX = new SplineOverScroller();this.mScrollerY = new SplineOverScroller();}_createClass(OverScroller,[{key:"setInterpolator",value:function setInterpolator(interpolator){this.mInterpolator = interpolator;}},{key:"setFriction",value:function setFriction(friction){NumberChecker.warnNotNumber(friction);this.mScrollerX.setFriction(friction);this.mScrollerY.setFriction(friction);}},{key:"isFinished",value:function isFinished(){return this.mScrollerX.mFinished && this.mScrollerY.mFinished;}},{key:"forceFinished",value:function forceFinished(finished){this.mScrollerX.mFinished = this.mScrollerY.mFinished = finished;}},{key:"getCurrX",value:function getCurrX(){return this.mScrollerX.mCurrentPosition;}},{key:"getCurrY",value:function getCurrY(){return this.mScrollerY.mCurrentPosition;}},{key:"getCurrVelocity",value:function getCurrVelocity(){var squaredNorm=this.mScrollerX.mCurrVelocity * this.mScrollerX.mCurrVelocity;squaredNorm += this.mScrollerY.mCurrVelocity * this.mScrollerY.mCurrVelocity;return Math.sqrt(squaredNorm);}},{key:"getStartX",value:function getStartX(){return this.mScrollerX.mStart;}},{key:"getStartY",value:function getStartY(){return this.mScrollerY.mStart;}},{key:"getFinalX",value:function getFinalX(){return this.mScrollerX.mFinal;}},{key:"getFinalY",value:function getFinalY(){return this.mScrollerY.mFinal;}},{key:"getDuration",value:function getDuration(){return Math.max(this.mScrollerX.mDuration,this.mScrollerY.mDuration);}},{key:"computeScrollOffset",value:function computeScrollOffset(){if(this.isFinished()){return false;}switch(this.mMode){case OverScroller.SCROLL_MODE:var time=SystemClock.uptimeMillis();var elapsedTime=time - this.mScrollerX.mStartTime;var duration=this.mScrollerX.mDuration;if(elapsedTime < duration){var q=elapsedTime / duration;if(this.mInterpolator == null){q = Scroller_viscousFluid(q);}else {q = this.mInterpolator.getInterpolation(q);}this.mScrollerX.updateScroll(q);this.mScrollerY.updateScroll(q);}else {this.abortAnimation();}break;case OverScroller.FLING_MODE:if(!this.mScrollerX.mFinished){if(!this.mScrollerX.update()){if(!this.mScrollerX.continueWhenFinished()){this.mScrollerX.finish();}}}if(!this.mScrollerY.mFinished){if(!this.mScrollerY.update()){if(!this.mScrollerY.continueWhenFinished()){this.mScrollerY.finish();}}}break;}return true;}},{key:"startScroll",value:function startScroll(startX,startY,dx,dy){var duration=arguments.length <= 4 || arguments[4] === undefined?OverScroller.DEFAULT_DURATION:arguments[4];NumberChecker.warnNotNumber(startX,startY,dx,dy,duration);this.mMode = OverScroller.SCROLL_MODE;this.mScrollerX.startScroll(startX,dx,duration);this.mScrollerY.startScroll(startY,dy,duration);}},{key:"springBack",value:function springBack(startX,startY,minX,maxX,minY,maxY){NumberChecker.warnNotNumber(startX,startY,minX,maxX,minY,maxY);this.mMode = OverScroller.FLING_MODE;var spingbackX=this.mScrollerX.springback(startX,minX,maxX);var spingbackY=this.mScrollerY.springback(startY,minY,maxY);return spingbackX || spingbackY;}},{key:"fling",value:function fling(startX,startY,velocityX,velocityY,minX,maxX,minY,maxY){var overX=arguments.length <= 8 || arguments[8] === undefined?0:arguments[8];var overY=arguments.length <= 9 || arguments[9] === undefined?0:arguments[9];NumberChecker.warnNotNumber(startX,startY,velocityX,velocityY,minX,maxX,minY,maxY,overX,overY);if(this.mFlywheel && !this.isFinished()){var oldVelocityX=this.mScrollerX.mCurrVelocity;var oldVelocityY=this.mScrollerY.mCurrVelocity;if(Math_signum(velocityX) == Math_signum(oldVelocityX) && Math_signum(velocityY) == Math_signum(oldVelocityY)){velocityX += oldVelocityX;velocityY += oldVelocityY;}}this.mMode = OverScroller.FLING_MODE;this.mScrollerX.fling(startX,velocityX,minX,maxX,overX);this.mScrollerY.fling(startY,velocityY,minY,maxY,overY);}},{key:"notifyHorizontalEdgeReached",value:function notifyHorizontalEdgeReached(startX,finalX,overX){NumberChecker.warnNotNumber(startX,finalX,overX);this.mScrollerX.notifyEdgeReached(startX,finalX,overX);}},{key:"notifyVerticalEdgeReached",value:function notifyVerticalEdgeReached(startY,finalY,overY){NumberChecker.warnNotNumber(startY,finalY,overY);this.mScrollerY.notifyEdgeReached(startY,finalY,overY);}},{key:"isOverScrolled",value:function isOverScrolled(){return !this.mScrollerX.mFinished && this.mScrollerX.mState != SplineOverScroller.SPLINE || !this.mScrollerY.mFinished && this.mScrollerY.mState != SplineOverScroller.SPLINE;}},{key:"abortAnimation",value:function abortAnimation(){this.mScrollerX.finish();this.mScrollerY.finish();}},{key:"timePassed",value:function timePassed(){var time=SystemClock.uptimeMillis();var startTime=Math.min(this.mScrollerX.mStartTime,this.mScrollerY.mStartTime);return time - startTime;}},{key:"isScrollingInDirection",value:function isScrollingInDirection(xvel,yvel){var dx=this.mScrollerX.mFinal - this.mScrollerX.mStart;var dy=this.mScrollerY.mFinal - this.mScrollerY.mStart;return !this.isFinished() && Math_signum(xvel) == Math_signum(dx) && Math_signum(yvel) == Math_signum(dy);}}]);return OverScroller;})();OverScroller.DEFAULT_DURATION = 250;OverScroller.SCROLL_MODE = 0;OverScroller.FLING_MODE = 1;widget.OverScroller = OverScroller;var SplineOverScroller=(function(){function SplineOverScroller(){_classCallCheck(this,SplineOverScroller);this.mStart = 0;this.mCurrentPosition = 0;this.mFinal = 0;this.mVelocity = 0;this._mCurrVelocity = 0;this.mDeceleration = 0;this.mStartTime = 0;this.mDuration = 0;this.mSplineDuration = 0;this.mSplineDistance = 0;this.mFinished = false;this.mOver = 0;this.mFlingFriction = ViewConfiguration.getScrollFriction();this.mState = SplineOverScroller.SPLINE;this.mPhysicalCoeff = 0;this.mFinished = true;var ppi=Resources.getDisplayMetrics().density * 160;this.mPhysicalCoeff = 9.80665 * 39.37 * ppi * 0.84;}_createClass(SplineOverScroller,[{key:"setFriction",value:function setFriction(friction){this.mFlingFriction = friction;}},{key:"updateScroll",value:function updateScroll(q){this.mCurrentPosition = this.mStart + Math.round(q * (this.mFinal - this.mStart));}},{key:"adjustDuration",value:function adjustDuration(start,oldFinal,newFinal){var oldDistance=oldFinal - start;var newDistance=newFinal - start;var x=Math.abs(newDistance / oldDistance);var index=Number.parseInt(SplineOverScroller.NB_SAMPLES * x);if(index < SplineOverScroller.NB_SAMPLES){var x_inf=index / SplineOverScroller.NB_SAMPLES;var x_sup=(index + 1) / SplineOverScroller.NB_SAMPLES;var t_inf=SplineOverScroller.SPLINE_TIME[index];var t_sup=SplineOverScroller.SPLINE_TIME[index + 1];var timeCoef=t_inf + (x - x_inf) / (x_sup - x_inf) * (t_sup - t_inf);this.mDuration *= timeCoef;}}},{key:"startScroll",value:function startScroll(start,distance,duration){this.mFinished = false;this.mStart = start;this.mFinal = start + distance;this.mStartTime = SystemClock.uptimeMillis();this.mDuration = duration;this.mDeceleration = 0;this.mVelocity = 0;}},{key:"finish",value:function finish(){this.mCurrentPosition = this.mFinal;this.mFinished = true;}},{key:"setFinalPosition",value:function setFinalPosition(position){this.mFinal = position;this.mFinished = false;}},{key:"extendDuration",value:function extendDuration(extend){var time=SystemClock.uptimeMillis();var elapsedTime=time - this.mStartTime;this.mDuration = elapsedTime + extend;this.mFinished = false;}},{key:"springback",value:function springback(start,min,max){this.mFinished = true;this.mStart = this.mFinal = start;this.mVelocity = 0;this.mStartTime = SystemClock.uptimeMillis();this.mDuration = 0;if(start < min){this.startSpringback(start,min,0);}else if(start > max){this.startSpringback(start,max,0);}return !this.mFinished;}},{key:"startSpringback",value:function startSpringback(start,end,velocity){this.mFinished = false;this.mState = SplineOverScroller.CUBIC;this.mStart = start;this.mFinal = end;var delta=start - end;this.mDeceleration = SplineOverScroller.getDeceleration(delta);this.mVelocity = -delta;this.mOver = Math.abs(delta);this.mDuration = 1000.0 * Math.sqrt(-2.0 * delta / this.mDeceleration);}},{key:"fling",value:function fling(start,velocity,min,max,over){this.mOver = over;this.mFinished = false;this.mCurrVelocity = this.mVelocity = velocity;this.mDuration = this.mSplineDuration = 0;this.mStartTime = SystemClock.uptimeMillis();this.mCurrentPosition = this.mStart = start;if(start > max || start < min){this.startAfterEdge(start,min,max,velocity);return;}this.mState = SplineOverScroller.SPLINE;var totalDistance=0.0;if(velocity != 0){this.mDuration = this.mSplineDuration = this.getSplineFlingDuration(velocity);totalDistance = this.getSplineFlingDistance(velocity);}this.mSplineDistance = totalDistance * Math_signum(velocity);this.mFinal = start + this.mSplineDistance;if(this.mFinal < min){this.adjustDuration(this.mStart,this.mFinal,min);this.mFinal = min;}if(this.mFinal > max){this.adjustDuration(this.mStart,this.mFinal,max);this.mFinal = max;}}},{key:"getSplineDeceleration",value:function getSplineDeceleration(velocity){return Math.log(SplineOverScroller.INFLEXION * Math.abs(velocity) / (this.mFlingFriction * this.mPhysicalCoeff));}},{key:"getSplineFlingDistance",value:function getSplineFlingDistance(velocity){var l=this.getSplineDeceleration(velocity);var decelMinusOne=SplineOverScroller.DECELERATION_RATE - 1.0;return this.mFlingFriction * this.mPhysicalCoeff * Math.exp(SplineOverScroller.DECELERATION_RATE / decelMinusOne * l);}},{key:"getSplineFlingDuration",value:function getSplineFlingDuration(velocity){var l=this.getSplineDeceleration(velocity);var decelMinusOne=SplineOverScroller.DECELERATION_RATE - 1.0;return 1000.0 * Math.exp(l / decelMinusOne);}},{key:"fitOnBounceCurve",value:function fitOnBounceCurve(start,end,velocity){var durationToApex=-velocity / this.mDeceleration;var distanceToApex=velocity * velocity / 2.0 / Math.abs(this.mDeceleration);var distanceToEdge=Math.abs(end - start);var totalDuration=Math.sqrt(2.0 * (distanceToApex + distanceToEdge) / Math.abs(this.mDeceleration));this.mStartTime -= 1000 * (totalDuration - durationToApex);this.mStart = end;this.mVelocity = -this.mDeceleration * totalDuration;}},{key:"startBounceAfterEdge",value:function startBounceAfterEdge(start,end,velocity){this.mDeceleration = SplineOverScroller.getDeceleration(velocity == 0?start - end:velocity);this.fitOnBounceCurve(start,end,velocity);this.onEdgeReached();}},{key:"startAfterEdge",value:function startAfterEdge(start,min,max,velocity){if(start > min && start < max){Log.e("OverScroller","startAfterEdge called from a valid position");this.mFinished = true;return;}var positive=start > max;var edge=positive?max:min;var overDistance=start - edge;var keepIncreasing=overDistance * velocity >= 0;if(keepIncreasing){this.startBounceAfterEdge(start,edge,velocity);}else {var totalDistance=this.getSplineFlingDistance(velocity);if(totalDistance > Math.abs(overDistance)){this.fling(start,velocity,positive?min:start,positive?start:max,this.mOver);}else {this.startSpringback(start,edge,velocity);}}}},{key:"notifyEdgeReached",value:function notifyEdgeReached(start,end,over){if(this.mState == SplineOverScroller.SPLINE){this.mOver = over;this.mStartTime = SystemClock.uptimeMillis();this.startAfterEdge(start,end,end,this.mCurrVelocity);}}},{key:"onEdgeReached",value:function onEdgeReached(){var distance=this.mVelocity * this.mVelocity / (2 * Math.abs(this.mDeceleration));var sign=Math_signum(this.mVelocity);if(distance > this.mOver){this.mDeceleration = -sign * this.mVelocity * this.mVelocity / (2.0 * this.mOver);distance = this.mOver;}this.mOver = distance;this.mState = SplineOverScroller.BALLISTIC;this.mFinal = this.mStart + (this.mVelocity > 0?distance:-distance);this.mDuration = -(1000 * this.mVelocity / this.mDeceleration);}},{key:"continueWhenFinished",value:function continueWhenFinished(){switch(this.mState){case SplineOverScroller.SPLINE:if(this.mDuration < this.mSplineDuration){this.mStart = this.mFinal;this.mVelocity = this.mCurrVelocity;this.mDeceleration = SplineOverScroller.getDeceleration(this.mVelocity);this.mStartTime += this.mDuration;this.onEdgeReached();}else {return false;}break;case SplineOverScroller.BALLISTIC:this.mStartTime += this.mDuration;this.startSpringback(this.mFinal,this.mStart,0);break;case SplineOverScroller.CUBIC:return false;}this.update();return true;}},{key:"update",value:function update(){var time=SystemClock.uptimeMillis();var currentTime=time - this.mStartTime;if(currentTime > this.mDuration){return false;}var distance=0;switch(this.mState){case SplineOverScroller.SPLINE:{var t=currentTime / this.mSplineDuration;var index=Math.floor(SplineOverScroller.NB_SAMPLES * t);var distanceCoef=1;var velocityCoef=0;if(index < SplineOverScroller.NB_SAMPLES){var t_inf=index / SplineOverScroller.NB_SAMPLES;var t_sup=(index + 1) / SplineOverScroller.NB_SAMPLES;var d_inf=SplineOverScroller.SPLINE_POSITION[index];var d_sup=SplineOverScroller.SPLINE_POSITION[index + 1];velocityCoef = (d_sup - d_inf) / (t_sup - t_inf);distanceCoef = d_inf + (t - t_inf) * velocityCoef;}distance = distanceCoef * this.mSplineDistance;this.mCurrVelocity = velocityCoef * this.mSplineDistance / this.mSplineDuration * 1000;break;}case SplineOverScroller.BALLISTIC:{var t=currentTime / 1000;this.mCurrVelocity = this.mVelocity + this.mDeceleration * t;distance = this.mVelocity * t + this.mDeceleration * t * t / 2;break;}case SplineOverScroller.CUBIC:{var t=currentTime / this.mDuration;var t2=t * t;var sign=Math_signum(this.mVelocity);distance = sign * this.mOver * (3 * t2 - 2 * t * t2);this.mCurrVelocity = sign * this.mOver * 6 * (-t + t2);break;}}this.mCurrentPosition = this.mStart + Math.round(distance);return true;}},{key:"mCurrVelocity",get:function get(){return this._mCurrVelocity;},set:function set(value){if(!NumberChecker.checkIsNumber(value)){value = 0;}this._mCurrVelocity = value;}}],[{key:"getDeceleration",value:function getDeceleration(velocity){return velocity > 0?-SplineOverScroller.GRAVITY:SplineOverScroller.GRAVITY;}}]);return SplineOverScroller;})();SplineOverScroller.DECELERATION_RATE = Math.log(0.78) / Math.log(0.9);SplineOverScroller.INFLEXION = 0.35;SplineOverScroller.START_TENSION = 0.5;SplineOverScroller.END_TENSION = 1.0;SplineOverScroller.P1 = SplineOverScroller.START_TENSION * SplineOverScroller.INFLEXION;SplineOverScroller.P2 = 1.0 - SplineOverScroller.END_TENSION * (1 - SplineOverScroller.INFLEXION);SplineOverScroller.NB_SAMPLES = 100;SplineOverScroller.SPLINE_POSITION = new Array(SplineOverScroller.NB_SAMPLES + 1);SplineOverScroller.SPLINE_TIME = new Array(SplineOverScroller.NB_SAMPLES + 1);SplineOverScroller.SPLINE = 0;SplineOverScroller.CUBIC = 1;SplineOverScroller.BALLISTIC = 2;SplineOverScroller.GRAVITY = 2000;SplineOverScroller._staticFunc = (function(){var x_min=0.0;var y_min=0.0;for(var i=0;i < SplineOverScroller.NB_SAMPLES;i++) {var alpha=i / SplineOverScroller.NB_SAMPLES;var x_max=1.0;var x=undefined,tx=undefined,coef=undefined;while(true) {x = x_min + (x_max - x_min) / 2.0;coef = 3.0 * x * (1.0 - x);tx = coef * ((1.0 - x) * SplineOverScroller.P1 + x * SplineOverScroller.P2) + x * x * x;if(Math.abs(tx - alpha) < 1E-5)break;if(tx > alpha)x_max = x;else x_min = x;}SplineOverScroller.SPLINE_POSITION[i] = coef * ((1.0 - x) * SplineOverScroller.START_TENSION + x) + x * x * x;var y_max=1.0;var y=undefined,dy=undefined;while(true) {y = y_min + (y_max - y_min) / 2.0;coef = 3.0 * y * (1.0 - y);dy = coef * ((1.0 - y) * SplineOverScroller.START_TENSION + y) + y * y * y;if(Math.abs(dy - alpha) < 1E-5)break;if(dy > alpha)y_max = y;else y_min = y;}SplineOverScroller.SPLINE_TIME[i] = coef * ((1.0 - y) * SplineOverScroller.P1 + y * SplineOverScroller.P2) + y * y * y;}SplineOverScroller.SPLINE_POSITION[SplineOverScroller.NB_SAMPLES] = SplineOverScroller.SPLINE_TIME[SplineOverScroller.NB_SAMPLES] = 1.0;})();function Math_signum(value){if(value === 0 || Number.isNaN(value))return value;return Math.abs(value) === value?1:-1;}var sViscousFluidScale=8;var sViscousFluidNormalize=1;function Scroller_viscousFluid(x){x *= sViscousFluidScale;if(x < 1){x -= 1 - Math.exp(-x);}else {var start=0.36787944117;x = 1 - Math.exp(1 - x);x = start + x * (1 - start);}x *= sViscousFluidNormalize;return x;}sViscousFluidNormalize = 1 / Scroller_viscousFluid(1);})(widget = android.widget || (android.widget = {}));})(android || (android = {})); /**
 * Created by linfaxin on 15/10/17.
 */ ///<reference path="../view/View.ts"/>
///<reference path="../view/ViewGroup.ts"/>
///<reference path="../view/MotionEvent.ts"/>
///<reference path="FrameLayout.ts"/>
///<reference path="OverScroller.ts"/>
///<reference path="../view/VelocityTracker.ts"/>
///<reference path="../view/ViewConfiguration.ts"/>
///<reference path="../util/Log.ts"/>
///<reference path="../os/SystemClock.ts"/>
///<reference path="../graphics/Rect.ts"/>
var android;(function(android){var widget;(function(widget){var View=android.view.View;var ViewGroup=android.view.ViewGroup;var MeasureSpec=View.MeasureSpec;var MotionEvent=android.view.MotionEvent;var VelocityTracker=android.view.VelocityTracker;var ViewConfiguration=android.view.ViewConfiguration;var Rect=android.graphics.Rect;var OverScroller=android.widget.OverScroller;var Log=android.util.Log;var SystemClock=android.os.SystemClock;var KeyEvent=android.view.KeyEvent;var ScrollView=(function(_widget$FrameLayout){_inherits(ScrollView,_widget$FrameLayout);function ScrollView(bindElement,rootElement){var _this15=this;_classCallCheck(this,ScrollView);_get(Object.getPrototypeOf(ScrollView.prototype),"constructor",this).call(this,bindElement,rootElement);this.mLastScroll = 0;this.mTempRect = new Rect();this.mLastMotionY = 0;this.mIsLayoutDirty = true;this.mIsBeingDragged = false;this.mFillViewport = false;this.mSmoothScrollingEnabled = true;this.mMinimumVelocity = 0;this.mMaximumVelocity = 0;this.mOverscrollDistance = 0;this._mOverflingDistance = 0;this.mActivePointerId = ScrollView.INVALID_POINTER;this.initScrollView();this._attrBinder.addAttr('fillViewport',function(value){_this15.setFillViewport(_this15._attrBinder.parseBoolean(value));});}_createClass(ScrollView,[{key:"shouldDelayChildPressedState",value:function shouldDelayChildPressedState(){return true;}},{key:"getMaxScrollAmount",value:function getMaxScrollAmount(){return ScrollView.MAX_SCROLL_FACTOR * (this.mBottom - this.mTop);}},{key:"initScrollView",value:function initScrollView(){this.mScroller = new OverScroller();this.setFocusable(true);this.setDescendantFocusability(ViewGroup.FOCUS_AFTER_DESCENDANTS);this.setWillNotDraw(false);var configuration=ViewConfiguration.get();this.mTouchSlop = configuration.getScaledTouchSlop();this.mMinimumVelocity = configuration.getScaledMinimumFlingVelocity();this.mMaximumVelocity = configuration.getScaledMaximumFlingVelocity();this.mOverscrollDistance = configuration.getScaledOverscrollDistance();this.mOverflingDistance = configuration.getScaledOverflingDistance();this.initScrollCache();this.setVerticalScrollBarEnabled(true);}},{key:"addView",value:function addView(){if(this.getChildCount() > 0){throw new Error("ScrollView can host only one direct child");}for(var _len29=arguments.length,args=Array(_len29),_key29=0;_key29 < _len29;_key29++) {args[_key29] = arguments[_key29];}return _get(Object.getPrototypeOf(ScrollView.prototype),"addView",this).apply(this,args);}},{key:"canScroll",value:function canScroll(){var child=this.getChildAt(0);if(child != null){var childHeight=child.getHeight();return this.getHeight() < childHeight + this.mPaddingTop + this.mPaddingBottom;}return false;}},{key:"isFillViewport",value:function isFillViewport(){return this.mFillViewport;}},{key:"setFillViewport",value:function setFillViewport(fillViewport){if(fillViewport != this.mFillViewport){this.mFillViewport = fillViewport;this.requestLayout();}}},{key:"isSmoothScrollingEnabled",value:function isSmoothScrollingEnabled(){return this.mSmoothScrollingEnabled;}},{key:"setSmoothScrollingEnabled",value:function setSmoothScrollingEnabled(smoothScrollingEnabled){this.mSmoothScrollingEnabled = smoothScrollingEnabled;}},{key:"onMeasure",value:function onMeasure(widthMeasureSpec,heightMeasureSpec){_get(Object.getPrototypeOf(ScrollView.prototype),"onMeasure",this).call(this,widthMeasureSpec,heightMeasureSpec);if(!this.mFillViewport){return;}var heightMode=MeasureSpec.getMode(heightMeasureSpec);if(heightMode == MeasureSpec.UNSPECIFIED){return;}if(this.getChildCount() > 0){var child=this.getChildAt(0);var height=this.getMeasuredHeight();if(child.getMeasuredHeight() < height){var lp=child.getLayoutParams();var childWidthMeasureSpec=widget.FrameLayout.getChildMeasureSpec(widthMeasureSpec,this.mPaddingLeft + this.mPaddingRight,lp.width);height -= this.mPaddingTop;height -= this.mPaddingBottom;var childHeightMeasureSpec=MeasureSpec.makeMeasureSpec(height,MeasureSpec.EXACTLY);child.measure(childWidthMeasureSpec,childHeightMeasureSpec);}}}},{key:"dispatchKeyEvent",value:function dispatchKeyEvent(event){return _get(Object.getPrototypeOf(ScrollView.prototype),"dispatchKeyEvent",this).call(this,event) || this.executeKeyEvent(event);}},{key:"executeKeyEvent",value:function executeKeyEvent(event){this.mTempRect.setEmpty();if(!this.canScroll()){return false;}var handled=false;if(event.getAction() == KeyEvent.ACTION_DOWN){switch(event.getKeyCode()){case KeyEvent.KEYCODE_DPAD_UP:if(!event.isAltPressed()){handled = this.arrowScroll(View.FOCUS_UP);}else {handled = this.fullScroll(View.FOCUS_UP);}break;case KeyEvent.KEYCODE_DPAD_DOWN:if(!event.isAltPressed()){handled = this.arrowScroll(View.FOCUS_DOWN);}else {handled = this.fullScroll(View.FOCUS_DOWN);}break;case KeyEvent.KEYCODE_SPACE:this.pageScroll(event.isShiftPressed()?View.FOCUS_UP:View.FOCUS_DOWN);break;}}return handled;}},{key:"inChild",value:function inChild(x,y){if(this.getChildCount() > 0){var _scrollY5=this.mScrollY;var child=this.getChildAt(0);return !(y < child.getTop() - _scrollY5 || y >= child.getBottom() - _scrollY5 || x < child.getLeft() || x >= child.getRight());}return false;}},{key:"initOrResetVelocityTracker",value:function initOrResetVelocityTracker(){if(this.mVelocityTracker == null){this.mVelocityTracker = VelocityTracker.obtain();}else {this.mVelocityTracker.clear();}}},{key:"initVelocityTrackerIfNotExists",value:function initVelocityTrackerIfNotExists(){if(this.mVelocityTracker == null){this.mVelocityTracker = VelocityTracker.obtain();}}},{key:"recycleVelocityTracker",value:function recycleVelocityTracker(){if(this.mVelocityTracker != null){this.mVelocityTracker.recycle();this.mVelocityTracker = null;}}},{key:"requestDisallowInterceptTouchEvent",value:function requestDisallowInterceptTouchEvent(disallowIntercept){if(disallowIntercept){this.recycleVelocityTracker();}_get(Object.getPrototypeOf(ScrollView.prototype),"requestDisallowInterceptTouchEvent",this).call(this,disallowIntercept);}},{key:"onInterceptTouchEvent",value:function onInterceptTouchEvent(ev){ /*
                 * This method JUST determines whether we want to intercept the motion.
                 * If we return true, onMotionEvent will be called and we do the actual
                 * scrolling there.
                 */var action=ev.getAction();if(action == MotionEvent.ACTION_MOVE && this.mIsBeingDragged){return true;}if(this.getScrollY() == 0 && !this.canScrollVertically(1)){return false;}switch(action & MotionEvent.ACTION_MASK){case MotionEvent.ACTION_MOVE:{var activePointerId=this.mActivePointerId;if(activePointerId == ScrollView.INVALID_POINTER){break;}var pointerIndex=ev.findPointerIndex(activePointerId);if(pointerIndex == -1){Log.e(ScrollView.TAG,"Invalid pointerId=" + activePointerId + " in onInterceptTouchEvent");break;}var y=ev.getY(pointerIndex);var yDiff=Math.abs(y - this.mLastMotionY);if(yDiff > this.mTouchSlop){this.mIsBeingDragged = true;this.mLastMotionY = y;this.initVelocityTrackerIfNotExists();this.mVelocityTracker.addMovement(ev);var _parent5=this.getParent();if(_parent5 != null){_parent5.requestDisallowInterceptTouchEvent(true);}}break;}case MotionEvent.ACTION_DOWN:{var y=ev.getY();if(!this.inChild(ev.getX(),y)){this.mIsBeingDragged = false;this.recycleVelocityTracker();break;}this.mLastMotionY = y;this.mActivePointerId = ev.getPointerId(0);this.initOrResetVelocityTracker();this.mVelocityTracker.addMovement(ev);this.mIsBeingDragged = !this.mScroller.isFinished();break;}case MotionEvent.ACTION_CANCEL:case MotionEvent.ACTION_UP:this.mIsBeingDragged = false;this.mActivePointerId = ScrollView.INVALID_POINTER;this.recycleVelocityTracker();if(this.mScroller.springBack(this.mScrollX,this.mScrollY,0,0,0,this.getScrollRange())){this.postInvalidateOnAnimation();}break;case MotionEvent.ACTION_POINTER_UP:this.onSecondaryPointerUp(ev);break;}return this.mIsBeingDragged;}},{key:"onTouchEvent",value:function onTouchEvent(ev){this.initVelocityTrackerIfNotExists();this.mVelocityTracker.addMovement(ev);var action=ev.getAction();switch(action & MotionEvent.ACTION_MASK){case MotionEvent.ACTION_DOWN:{if(this.getChildCount() == 0){return false;}if(this.mIsBeingDragged = !this.mScroller.isFinished()){var _parent6=this.getParent();if(_parent6 != null){_parent6.requestDisallowInterceptTouchEvent(true);}}if(!this.mScroller.isFinished()){this.mScroller.abortAnimation();}this.mLastMotionY = ev.getY();this.mActivePointerId = ev.getPointerId(0);break;}case MotionEvent.ACTION_MOVE:var activePointerIndex=ev.findPointerIndex(this.mActivePointerId);if(activePointerIndex == -1){Log.e(ScrollView.TAG,"Invalid pointerId=" + this.mActivePointerId + " in onTouchEvent");break;}var y=ev.getY(activePointerIndex);var deltaY=this.mLastMotionY - y;if(!this.mIsBeingDragged && Math.abs(deltaY) > this.mTouchSlop){var _parent7=this.getParent();if(_parent7 != null){_parent7.requestDisallowInterceptTouchEvent(true);}this.mIsBeingDragged = true;if(deltaY > 0){deltaY -= this.mTouchSlop;}else {deltaY += this.mTouchSlop;}}if(this.mIsBeingDragged){this.mLastMotionY = y;var oldX=this.mScrollX;var oldY=this.mScrollY;var range=this.getScrollRange();var overscrollMode=this.getOverScrollMode();var canOverscroll=overscrollMode == ScrollView.OVER_SCROLL_ALWAYS || overscrollMode == ScrollView.OVER_SCROLL_IF_CONTENT_SCROLLS && range > 0;if(this.overScrollBy(0,deltaY,0,this.mScrollY,0,range,0,this.mOverscrollDistance,true)){this.mVelocityTracker.clear();}if(canOverscroll){var pulledToY=oldY + deltaY;if(pulledToY < 0){}else if(pulledToY > range){}}}break;case MotionEvent.ACTION_UP:if(this.mIsBeingDragged){var velocityTracker=this.mVelocityTracker;velocityTracker.computeCurrentVelocity(1000,this.mMaximumVelocity);var initialVelocity=velocityTracker.getYVelocity(this.mActivePointerId);if(this.getChildCount() > 0){var forceSpringBack=this.mScrollY < -this._mOverflingDistance && initialVelocity > 0 || this.mScrollY > this.getScrollRange() + this._mOverflingDistance && initialVelocity < 0;if(!forceSpringBack && Math.abs(initialVelocity) > this.mMinimumVelocity){this.fling(-initialVelocity);}else {if(this.mScroller.springBack(this.mScrollX,this.mScrollY,0,0,0,this.getScrollRange())){this.postInvalidateOnAnimation();}}}this.mActivePointerId = ScrollView.INVALID_POINTER;this.endDrag();}break;case MotionEvent.ACTION_CANCEL:if(this.mIsBeingDragged && this.getChildCount() > 0){if(this.mScroller.springBack(this.mScrollX,this.mScrollY,0,0,0,this.getScrollRange())){this.postInvalidateOnAnimation();}this.mActivePointerId = ScrollView.INVALID_POINTER;this.endDrag();}break;case MotionEvent.ACTION_POINTER_DOWN:{var index=ev.getActionIndex();this.mLastMotionY = ev.getY(index);this.mActivePointerId = ev.getPointerId(index);break;}case MotionEvent.ACTION_POINTER_UP:this.onSecondaryPointerUp(ev);this.mLastMotionY = ev.getY(ev.findPointerIndex(this.mActivePointerId));break;}return true;}},{key:"onSecondaryPointerUp",value:function onSecondaryPointerUp(ev){var pointerIndex=(ev.getAction() & MotionEvent.ACTION_POINTER_INDEX_MASK) >> MotionEvent.ACTION_POINTER_INDEX_SHIFT;var pointerId=ev.getPointerId(pointerIndex);if(pointerId == this.mActivePointerId){var newPointerIndex=pointerIndex == 0?1:0;this.mLastMotionY = ev.getY(newPointerIndex);this.mActivePointerId = ev.getPointerId(newPointerIndex);if(this.mVelocityTracker != null){this.mVelocityTracker.clear();}}}},{key:"onGenericMotionEvent",value:function onGenericMotionEvent(event){switch(event.getAction()){case MotionEvent.ACTION_SCROLL:{if(!this.mIsBeingDragged){var vscroll=event.getAxisValue(MotionEvent.AXIS_VSCROLL);if(vscroll != 0){var delta=Math.floor(vscroll * this.getVerticalScrollFactor());var range=this.getScrollRange();var oldScrollY=this.mScrollY;var newScrollY=oldScrollY - delta;if(newScrollY < 0){newScrollY = 0;}else if(newScrollY > range){newScrollY = range;}if(newScrollY != oldScrollY){_get(Object.getPrototypeOf(ScrollView.prototype),"scrollTo",this).call(this,this.mScrollX,newScrollY);return true;}}}}}return _get(Object.getPrototypeOf(ScrollView.prototype),"onGenericMotionEvent",this).call(this,event);}},{key:"onOverScrolled",value:function onOverScrolled(scrollX,scrollY,clampedX,clampedY){if(!this.mScroller.isFinished()){var oldX=this.mScrollX;var oldY=this.mScrollY;this.mScrollX = scrollX;this.mScrollY = scrollY;this.invalidateParentIfNeeded();this.onScrollChanged(this.mScrollX,this.mScrollY,oldX,oldY);}else {_get(Object.getPrototypeOf(ScrollView.prototype),"scrollTo",this).call(this,scrollX,scrollY);}if(!this.awakenScrollBars()){this.postInvalidateOnAnimation();}}},{key:"getScrollRange",value:function getScrollRange(){var scrollRange=0;if(this.getChildCount() > 0){var child=this.getChildAt(0);scrollRange = Math.max(0,child.getHeight() - (this.getHeight() - this.mPaddingBottom - this.mPaddingTop));}return scrollRange;}},{key:"findFocusableViewInBounds",value:function findFocusableViewInBounds(topFocus,top,bottom){return null;}},{key:"pageScroll",value:function pageScroll(direction){var down=direction == View.FOCUS_DOWN;var height=this.getHeight();if(down){this.mTempRect.top = this.getScrollY() + height;var count=this.getChildCount();if(count > 0){var view=this.getChildAt(count - 1);if(this.mTempRect.top + height > view.getBottom()){this.mTempRect.top = view.getBottom() - height;}}}else {this.mTempRect.top = this.getScrollY() - height;if(this.mTempRect.top < 0){this.mTempRect.top = 0;}}this.mTempRect.bottom = this.mTempRect.top + height;return this.scrollAndFocus(direction,this.mTempRect.top,this.mTempRect.bottom);}},{key:"fullScroll",value:function fullScroll(direction){var down=direction == View.FOCUS_DOWN;var height=this.getHeight();this.mTempRect.top = 0;this.mTempRect.bottom = height;if(down){var count=this.getChildCount();if(count > 0){var view=this.getChildAt(count - 1);this.mTempRect.bottom = view.getBottom() + this.mPaddingBottom;this.mTempRect.top = this.mTempRect.bottom - height;}}return this.scrollAndFocus(direction,this.mTempRect.top,this.mTempRect.bottom);}},{key:"scrollAndFocus",value:function scrollAndFocus(direction,top,bottom){var handled=true;var height=this.getHeight();var containerTop=this.getScrollY();var containerBottom=containerTop + height;var up=direction == View.FOCUS_UP;var newFocused=this.findFocusableViewInBounds(up,top,bottom);if(newFocused == null){newFocused = this;}if(top >= containerTop && bottom <= containerBottom){handled = false;}else {var delta=up?top - containerTop:bottom - containerBottom;this.doScrollY(delta);}if(newFocused != this.findFocus())newFocused.requestFocus(direction);return handled;}},{key:"arrowScroll",value:function arrowScroll(direction){var currentFocused=this.findFocus();if(currentFocused == this)currentFocused = null;var nextFocused=null;var maxJump=this.getMaxScrollAmount();if(nextFocused != null && this.isWithinDeltaOfScreen(nextFocused,maxJump,this.getHeight())){}else {var scrollDelta=maxJump;if(direction == View.FOCUS_UP && this.getScrollY() < scrollDelta){scrollDelta = this.getScrollY();}else if(direction == View.FOCUS_DOWN){if(this.getChildCount() > 0){var daBottom=this.getChildAt(0).getBottom();var screenBottom=this.getScrollY() + this.getHeight() - this.mPaddingBottom;if(daBottom - screenBottom < maxJump){scrollDelta = daBottom - screenBottom;}}}if(scrollDelta == 0){return false;}this.doScrollY(direction == View.FOCUS_DOWN?scrollDelta:-scrollDelta);}if(currentFocused != null && currentFocused.isFocused() && this.isOffScreen(currentFocused)){}return true;}},{key:"isOffScreen",value:function isOffScreen(descendant){return !this.isWithinDeltaOfScreen(descendant,0,this.getHeight());}},{key:"isWithinDeltaOfScreen",value:function isWithinDeltaOfScreen(descendant,delta,height){descendant.getDrawingRect(this.mTempRect);this.offsetDescendantRectToMyCoords(descendant,this.mTempRect);return this.mTempRect.bottom + delta >= this.getScrollY() && this.mTempRect.top - delta <= this.getScrollY() + height;}},{key:"doScrollY",value:function doScrollY(delta){if(delta != 0){if(this.mSmoothScrollingEnabled){this.smoothScrollBy(0,delta);}else {this.scrollBy(0,delta);}}}},{key:"smoothScrollBy",value:function smoothScrollBy(dx,dy){if(this.getChildCount() == 0){return;}var duration=SystemClock.uptimeMillis() - this.mLastScroll;if(duration > ScrollView.ANIMATED_SCROLL_GAP){var height=this.getHeight() - this.mPaddingBottom - this.mPaddingTop;var bottom=this.getChildAt(0).getHeight();var maxY=Math.max(0,bottom - height);var _scrollY6=this.mScrollY;dy = Math.max(0,Math.min(_scrollY6 + dy,maxY)) - _scrollY6;this.mScroller.startScroll(this.mScrollX,_scrollY6,0,dy);this.postInvalidateOnAnimation();}else {if(!this.mScroller.isFinished()){this.mScroller.abortAnimation();}this.scrollBy(dx,dy);}this.mLastScroll = SystemClock.uptimeMillis();}},{key:"smoothScrollTo",value:function smoothScrollTo(x,y){this.smoothScrollBy(x - this.mScrollX,y - this.mScrollY);}},{key:"computeVerticalScrollRange",value:function computeVerticalScrollRange(){var count=this.getChildCount();var contentHeight=this.getHeight() - this.mPaddingBottom - this.mPaddingTop;if(count == 0){return contentHeight;}var scrollRange=this.getChildAt(0).getBottom();var scrollY=this.mScrollY;var overscrollBottom=Math.max(0,scrollRange - contentHeight);if(scrollY < 0){scrollRange -= scrollY;}else if(scrollY > overscrollBottom){scrollRange += scrollY - overscrollBottom;}return scrollRange;}},{key:"computeVerticalScrollOffset",value:function computeVerticalScrollOffset(){return Math.max(0,_get(Object.getPrototypeOf(ScrollView.prototype),"computeVerticalScrollOffset",this).call(this));}},{key:"measureChild",value:function measureChild(child,parentWidthMeasureSpec,parentHeightMeasureSpec){var lp=child.getLayoutParams();lp._measuringParentWidthMeasureSpec = parentWidthMeasureSpec;lp._measuringParentHeightMeasureSpec = parentHeightMeasureSpec;var childWidthMeasureSpec=undefined;var childHeightMeasureSpec=undefined;childWidthMeasureSpec = ViewGroup.getChildMeasureSpec(parentWidthMeasureSpec,this.mPaddingLeft + this.mPaddingRight,lp.width);childHeightMeasureSpec = MeasureSpec.makeMeasureSpec(0,MeasureSpec.UNSPECIFIED);child.measure(childWidthMeasureSpec,childHeightMeasureSpec);lp._measuringParentWidthMeasureSpec = null;lp._measuringParentHeightMeasureSpec = null;}},{key:"measureChildWithMargins",value:function measureChildWithMargins(child,parentWidthMeasureSpec,widthUsed,parentHeightMeasureSpec,heightUsed){var lp=child.getLayoutParams();lp._measuringParentWidthMeasureSpec = parentWidthMeasureSpec;lp._measuringParentHeightMeasureSpec = parentHeightMeasureSpec;var childWidthMeasureSpec=ScrollView.getChildMeasureSpec(parentWidthMeasureSpec,this.mPaddingLeft + this.mPaddingRight + lp.leftMargin + lp.rightMargin + widthUsed,lp.width);var childHeightMeasureSpec=MeasureSpec.makeMeasureSpec(lp.topMargin + lp.bottomMargin,MeasureSpec.UNSPECIFIED);child.measure(childWidthMeasureSpec,childHeightMeasureSpec);lp._measuringParentWidthMeasureSpec = null;lp._measuringParentHeightMeasureSpec = null;}},{key:"computeScroll",value:function computeScroll(){if(this.mScroller.computeScrollOffset()){var oldX=this.mScrollX;var oldY=this.mScrollY;var x=this.mScroller.getCurrX();var y=this.mScroller.getCurrY();if(oldX != x || oldY != y){var range=this.getScrollRange();var overscrollMode=this.getOverScrollMode();var canOverscroll=overscrollMode == ScrollView.OVER_SCROLL_ALWAYS || overscrollMode == ScrollView.OVER_SCROLL_IF_CONTENT_SCROLLS && range > 0;this.overScrollBy(x - oldX,y - oldY,oldX,oldY,0,range,0,this.mOverflingDistance,false);this.onScrollChanged(this.mScrollX,this.mScrollY,oldX,oldY);if(canOverscroll){if(y < 0 && oldY >= 0){}else if(y > range && oldY <= range){}}}if(!this.awakenScrollBars()){this.postInvalidateOnAnimation();}}else {}}},{key:"scrollToChild",value:function scrollToChild(child){child.getDrawingRect(this.mTempRect);this.offsetDescendantRectToMyCoords(child,this.mTempRect);var scrollDelta=this.computeScrollDeltaToGetChildRectOnScreen(this.mTempRect);if(scrollDelta != 0){this.scrollBy(0,scrollDelta);}}},{key:"scrollToChildRect",value:function scrollToChildRect(rect,immediate){var delta=this.computeScrollDeltaToGetChildRectOnScreen(rect);var scroll=delta != 0;if(scroll){if(immediate){this.scrollBy(0,delta);}else {this.smoothScrollBy(0,delta);}}return scroll;}},{key:"computeScrollDeltaToGetChildRectOnScreen",value:function computeScrollDeltaToGetChildRectOnScreen(rect){if(this.getChildCount() == 0)return 0;var height=this.getHeight();var screenTop=this.getScrollY();var screenBottom=screenTop + height;var fadingEdge=this.getVerticalFadingEdgeLength();if(rect.top > 0){screenTop += fadingEdge;}if(rect.bottom < this.getChildAt(0).getHeight()){screenBottom -= fadingEdge;}var scrollYDelta=0;if(rect.bottom > screenBottom && rect.top > screenTop){if(rect.height() > height){scrollYDelta += rect.top - screenTop;}else {scrollYDelta += rect.bottom - screenBottom;}var bottom=this.getChildAt(0).getBottom();var distanceToBottom=bottom - screenBottom;scrollYDelta = Math.min(scrollYDelta,distanceToBottom);}else if(rect.top < screenTop && rect.bottom < screenBottom){if(rect.height() > height){scrollYDelta -= screenBottom - rect.bottom;}else {scrollYDelta -= screenTop - rect.top;}scrollYDelta = Math.max(scrollYDelta,-this.getScrollY());}return scrollYDelta;}},{key:"requestChildFocus",value:function requestChildFocus(child,focused){if(!this.mIsLayoutDirty){this.scrollToChild(focused);}else {this.mChildToScrollTo = focused;}_get(Object.getPrototypeOf(ScrollView.prototype),"requestChildFocus",this).call(this,child,focused);}},{key:"onRequestFocusInDescendants",value:function onRequestFocusInDescendants(direction,previouslyFocusedRect){return false;}},{key:"requestChildRectangleOnScreen",value:function requestChildRectangleOnScreen(child,rectangle,immediate){rectangle.offset(child.getLeft() - child.getScrollX(),child.getTop() - child.getScrollY());return this.scrollToChildRect(rectangle,immediate);}},{key:"requestLayout",value:function requestLayout(){this.mIsLayoutDirty = true;_get(Object.getPrototypeOf(ScrollView.prototype),"requestLayout",this).call(this);}},{key:"onLayout",value:function onLayout(changed,l,t,r,b){_get(Object.getPrototypeOf(ScrollView.prototype),"onLayout",this).call(this,changed,l,t,r,b);this.mIsLayoutDirty = false;if(this.mChildToScrollTo != null && ScrollView.isViewDescendantOf(this.mChildToScrollTo,this)){this.scrollToChild(this.mChildToScrollTo);}this.mChildToScrollTo = null;if(!this.isLaidOut()){var childHeight=this.getChildCount() > 0?this.getChildAt(0).getMeasuredHeight():0;var scrollRange=Math.max(0,childHeight - (b - t - this.mPaddingBottom - this.mPaddingTop));if(this.mScrollY > scrollRange){this.mScrollY = scrollRange;}else if(this.mScrollY < 0){this.mScrollY = 0;}}this.scrollTo(this.mScrollX,this.mScrollY);}},{key:"onSizeChanged",value:function onSizeChanged(w,h,oldw,oldh){_get(Object.getPrototypeOf(ScrollView.prototype),"onSizeChanged",this).call(this,w,h,oldw,oldh);var currentFocused=this.findFocus();if(null == currentFocused || this == currentFocused)return;if(this.isWithinDeltaOfScreen(currentFocused,0,oldh)){currentFocused.getDrawingRect(this.mTempRect);this.offsetDescendantRectToMyCoords(currentFocused,this.mTempRect);var scrollDelta=this.computeScrollDeltaToGetChildRectOnScreen(this.mTempRect);this.doScrollY(scrollDelta);}}},{key:"fling",value:function fling(velocityY){if(this.getChildCount() > 0){var height=this.getHeight() - this.mPaddingBottom - this.mPaddingTop;var bottom=this.getChildAt(0).getHeight();this.mScroller.fling(this.mScrollX,this.mScrollY,0,velocityY,0,0,0,Math.max(0,bottom - height),0,this.mOverflingDistance);this.postInvalidateOnAnimation();}}},{key:"endDrag",value:function endDrag(){this.mIsBeingDragged = false;this.recycleVelocityTracker();}},{key:"scrollTo",value:function scrollTo(x,y){if(this.getChildCount() > 0){var child=this.getChildAt(0);x = ScrollView.clamp(x,this.getWidth() - this.mPaddingRight - this.mPaddingLeft,child.getWidth());y = ScrollView.clamp(y,this.getHeight() - this.mPaddingBottom - this.mPaddingTop,child.getHeight());if(x != this.mScrollX || y != this.mScrollY){_get(Object.getPrototypeOf(ScrollView.prototype),"scrollTo",this).call(this,x,y);}}}},{key:"canScrollVertically",value:function canScrollVertically(direction){if(this.getOverScrollMode() === View.OVER_SCROLL_ALWAYS)return true;return _get(Object.getPrototypeOf(ScrollView.prototype),"canScrollVertically",this).call(this,direction);}},{key:"mOverflingDistance",get:function get(){var height=this.getHeight() - this.mPaddingBottom - this.mPaddingTop;var bottom=this.getChildAt(0).getHeight();var minOverY=this.mScrollY < 0?-this.mScrollY:this.mScrollY - (bottom - height);return Math.max(this._mOverflingDistance,minOverY + this._mOverflingDistance);},set:function set(value){this._mOverflingDistance = value;}}],[{key:"isViewDescendantOf",value:function isViewDescendantOf(child,parent){if(child == parent){return true;}var theParent=child.getParent();return theParent instanceof ViewGroup && ScrollView.isViewDescendantOf(theParent,parent);}},{key:"clamp",value:function clamp(n,my,child){if(my >= child || n < 0){return 0;}if(my + n > child){return child - my;}return n;}}]);return ScrollView;})(widget.FrameLayout);ScrollView.ANIMATED_SCROLL_GAP = 250;ScrollView.MAX_SCROLL_FACTOR = 0.5;ScrollView.TAG = "ScrollView";ScrollView.INVALID_POINTER = -1;widget.ScrollView = ScrollView;})(widget = android.widget || (android.widget = {}));})(android || (android = {})); ///<reference path="../view/Gravity.ts"/>
///<reference path="../view/View.ts"/>
///<reference path="../view/ViewGroup.ts"/>
///<reference path="../graphics/drawable/Drawable.ts"/>
///<reference path="../graphics/Rect.ts"/>
var android;(function(android){var widget;(function(widget){var Gravity=android.view.Gravity;var View=android.view.View;var MeasureSpec=View.MeasureSpec;var ViewGroup=android.view.ViewGroup;var LinearLayout=(function(_ViewGroup2){_inherits(LinearLayout,_ViewGroup2);function LinearLayout(bindElement,rootElement){var _this16=this;_classCallCheck(this,LinearLayout);_get(Object.getPrototypeOf(LinearLayout.prototype),"constructor",this).call(this,bindElement,rootElement);this.mBaselineAligned = true;this.mBaselineAlignedChildIndex = -1;this.mBaselineChildTop = 0;this.mOrientation = 0;this.mGravity = Gravity.LEFT | Gravity.TOP;this.mTotalLength = 0;this.mWeightSum = -1;this.mUseLargestChild = false;this.mDividerWidth = 0;this.mDividerHeight = 0;this.mShowDividers = LinearLayout.SHOW_DIVIDER_NONE;this.mDividerPadding = 0;this._attrBinder.addAttr('orientation',function(value){if((value + "").toUpperCase() === 'VERTICAL' || LinearLayout.VERTICAL == value){_this16.setOrientation(LinearLayout.VERTICAL);}else if((value + "").toUpperCase() === 'HORIZONTAL' || LinearLayout.HORIZONTAL == value){_this16.setOrientation(LinearLayout.HORIZONTAL);}},function(){return _this16.mOrientation;});this._attrBinder.addAttr('gravity',function(value){_this16.setGravity(_this16._attrBinder.parseGravity(value,_this16.mGravity));},function(){return _this16.mGravity;});this._attrBinder.addAttr('baselineAligned',function(value){if(!_this16._attrBinder.parseBoolean(value))_this16.setBaselineAligned(false);});this._attrBinder.addAttr('weightSum',function(value){var weightSum=Number.parseFloat(value);if(!Number.isNaN(weightSum) && weightSum != null){_this16.setWeightSum(weightSum);}},function(){return _this16.mWeightSum;});this._attrBinder.addAttr('baselineAlignedChildIndex',function(value){value = Number.parseInt(value);if(Number.isSafeInteger(value)){_this16.mBaselineAlignedChildIndex = value;}});this._attrBinder.addAttr('measureWithLargestChild',function(value){value = Number.parseInt(value);if(Number.isSafeInteger(value)){_this16.mUseLargestChild = _this16._attrBinder.parseBoolean(value,_this16.mUseLargestChild);}});this._attrBinder.addAttr('divider',function(value){_this16.setDividerDrawable(_this16._attrBinder.parseDrawable(value));});this._attrBinder.addAttr('showDividers',function(value){var fieldName=('SHOW_DIVIDER_' + value).toUpperCase();if(Number.isInteger(LinearLayout[fieldName])){_this16.mShowDividers = LinearLayout[fieldName];}});this._attrBinder.addAttr('dividerPadding',function(value){value = Number.parseInt(value);if(Number.isInteger(value)){_this16.mDividerPadding = value;}});}_createClass(LinearLayout,[{key:"setShowDividers",value:function setShowDividers(showDividers){if(showDividers != this.mShowDividers){this.requestLayout();}this.mShowDividers = showDividers;}},{key:"shouldDelayChildPressedState",value:function shouldDelayChildPressedState(){return false;}},{key:"getShowDividers",value:function getShowDividers(){return this.mShowDividers;}},{key:"getDividerDrawable",value:function getDividerDrawable(){return this.mDivider;}},{key:"setDividerDrawable",value:function setDividerDrawable(divider){if(divider == this.mDivider){return;}this.mDivider = divider;if(divider != null){this.mDividerWidth = divider.getIntrinsicWidth();this.mDividerHeight = divider.getIntrinsicHeight();}else {this.mDividerWidth = 0;this.mDividerHeight = 0;}this.setWillNotDraw(divider == null);this.requestLayout();}},{key:"setDividerPadding",value:function setDividerPadding(padding){this.mDividerPadding = padding;}},{key:"getDividerPadding",value:function getDividerPadding(){return this.mDividerPadding;}},{key:"getDividerWidth",value:function getDividerWidth(){return this.mDividerWidth;}},{key:"onDraw",value:function onDraw(canvas){if(this.mDivider == null){return;}if(this.mOrientation == LinearLayout.VERTICAL){this.drawDividersVertical(canvas);}else {this.drawDividersHorizontal(canvas);}}},{key:"drawDividersVertical",value:function drawDividersVertical(canvas){var count=this.getVirtualChildCount();for(var i=0;i < count;i++) {var child=this.getVirtualChildAt(i);if(child != null && child.getVisibility() != View.GONE){if(this.hasDividerBeforeChildAt(i)){var lp=child.getLayoutParams();var _top11=child.getTop() - lp.topMargin - this.mDividerHeight;this.drawHorizontalDivider(canvas,_top11);}}}if(this.hasDividerBeforeChildAt(count)){var child=this.getVirtualChildAt(count - 1);var bottom=0;if(child == null){bottom = this.getHeight() - this.getPaddingBottom() - this.mDividerHeight;}else {var lp=child.getLayoutParams();bottom = child.getBottom() + lp.bottomMargin;}this.drawHorizontalDivider(canvas,bottom);}}},{key:"drawDividersHorizontal",value:function drawDividersHorizontal(canvas){var count=this.getVirtualChildCount();var isLayoutRtl=this.isLayoutRtl();for(var i=0;i < count;i++) {var child=this.getVirtualChildAt(i);if(child != null && child.getVisibility() != View.GONE){if(this.hasDividerBeforeChildAt(i)){var lp=child.getLayoutParams();var position=undefined;if(isLayoutRtl){position = child.getRight() + lp.rightMargin;}else {position = child.getLeft() - lp.leftMargin - this.mDividerWidth;}this.drawVerticalDivider(canvas,position);}}}if(this.hasDividerBeforeChildAt(count)){var child=this.getVirtualChildAt(count - 1);var position=undefined;if(child == null){if(isLayoutRtl){position = this.getPaddingLeft();}else {position = this.getWidth() - this.getPaddingRight() - this.mDividerWidth;}}else {var lp=child.getLayoutParams();if(isLayoutRtl){position = child.getLeft() - lp.leftMargin - this.mDividerWidth;}else {position = child.getRight() + lp.rightMargin;}}this.drawVerticalDivider(canvas,position);}}},{key:"drawHorizontalDivider",value:function drawHorizontalDivider(canvas,top){this.mDivider.setBounds(this.getPaddingLeft() + this.mDividerPadding,top,this.getWidth() - this.getPaddingRight() - this.mDividerPadding,top + this.mDividerHeight);this.mDivider.draw(canvas);}},{key:"drawVerticalDivider",value:function drawVerticalDivider(canvas,left){this.mDivider.setBounds(left,this.getPaddingTop() + this.mDividerPadding,left + this.mDividerWidth,this.getHeight() - this.getPaddingBottom() - this.mDividerPadding);this.mDivider.draw(canvas);}},{key:"isBaselineAligned",value:function isBaselineAligned(){return this.mBaselineAligned;}},{key:"setBaselineAligned",value:function setBaselineAligned(baselineAligned){this.mBaselineAligned = baselineAligned;}},{key:"isMeasureWithLargestChildEnabled",value:function isMeasureWithLargestChildEnabled(){return this.mUseLargestChild;}},{key:"setMeasureWithLargestChildEnabled",value:function setMeasureWithLargestChildEnabled(enabled){this.mUseLargestChild = enabled;}},{key:"getBaseline",value:function getBaseline(){if(this.mBaselineAlignedChildIndex < 0){return _get(Object.getPrototypeOf(LinearLayout.prototype),"getBaseline",this).call(this);}if(this.getChildCount() <= this.mBaselineAlignedChildIndex){throw new Error("mBaselineAlignedChildIndex of LinearLayout " + "set to an index that is out of bounds.");}var child=this.getChildAt(this.mBaselineAlignedChildIndex);var childBaseline=child.getBaseline();if(childBaseline == -1){if(this.mBaselineAlignedChildIndex == 0){return -1;}throw new Error("mBaselineAlignedChildIndex of LinearLayout " + "points to a View that doesn't know how to get its baseline.");}var childTop=this.mBaselineChildTop;if(this.mOrientation == LinearLayout.VERTICAL){var majorGravity=this.mGravity & Gravity.VERTICAL_GRAVITY_MASK;if(majorGravity != Gravity.TOP){switch(majorGravity){case Gravity.BOTTOM:childTop = this.mBottom - this.mTop - this.mPaddingBottom - this.mTotalLength;break;case Gravity.CENTER_VERTICAL:childTop += (this.mBottom - this.mTop - this.mPaddingTop - this.mPaddingBottom - this.mTotalLength) / 2;break;}}}var lp=child.getLayoutParams();return childTop + lp.topMargin + childBaseline;}},{key:"getBaselineAlignedChildIndex",value:function getBaselineAlignedChildIndex(){return this.mBaselineAlignedChildIndex;}},{key:"setBaselineAlignedChildIndex",value:function setBaselineAlignedChildIndex(i){if(i < 0 || i >= this.getChildCount()){throw new Error("base aligned child index out " + "of range (0, " + this.getChildCount() + ")");}this.mBaselineAlignedChildIndex = i;}},{key:"getVirtualChildAt",value:function getVirtualChildAt(index){return this.getChildAt(index);}},{key:"getVirtualChildCount",value:function getVirtualChildCount(){return this.getChildCount();}},{key:"getWeightSum",value:function getWeightSum(){return this.mWeightSum;}},{key:"setWeightSum",value:function setWeightSum(weightSum){this.mWeightSum = Math.max(0,weightSum);}},{key:"onMeasure",value:function onMeasure(widthMeasureSpec,heightMeasureSpec){if(this.mOrientation == LinearLayout.VERTICAL){this.measureVertical(widthMeasureSpec,heightMeasureSpec);}else {this.measureHorizontal(widthMeasureSpec,heightMeasureSpec);}}},{key:"hasDividerBeforeChildAt",value:function hasDividerBeforeChildAt(childIndex){if(childIndex == 0){return (this.mShowDividers & LinearLayout.SHOW_DIVIDER_BEGINNING) != 0;}else if(childIndex == this.getChildCount()){return (this.mShowDividers & LinearLayout.SHOW_DIVIDER_END) != 0;}else if((this.mShowDividers & LinearLayout.SHOW_DIVIDER_MIDDLE) != 0){var hasVisibleViewBefore=false;for(var i=childIndex - 1;i >= 0;i--) {if(this.getChildAt(i).getVisibility() != LinearLayout.GONE){hasVisibleViewBefore = true;break;}}return hasVisibleViewBefore;}return false;}},{key:"measureVertical",value:function measureVertical(widthMeasureSpec,heightMeasureSpec){this.mTotalLength = 0;var maxWidth=0;var childState=0;var alternativeMaxWidth=0;var weightedMaxWidth=0;var allFillParent=true;var totalWeight=0;var count=this.getVirtualChildCount();var widthMode=MeasureSpec.getMode(widthMeasureSpec);var heightMode=MeasureSpec.getMode(heightMeasureSpec);var matchWidth=false;var baselineChildIndex=this.mBaselineAlignedChildIndex;var useLargestChild=this.mUseLargestChild;var largestChildHeight=Number.MIN_SAFE_INTEGER;for(var i=0;i < count;++i) {var child=this.getVirtualChildAt(i);if(child == null){this.mTotalLength += this.measureNullChild(i);continue;}if(child.getVisibility() == View.GONE){i += this.getChildrenSkipCount(child,i);continue;}if(this.hasDividerBeforeChildAt(i)){this.mTotalLength += this.mDividerHeight;}var lp=child.getLayoutParams();totalWeight += lp.weight;if(heightMode == MeasureSpec.EXACTLY && lp.height == 0 && lp.weight > 0){var totalLength=this.mTotalLength;this.mTotalLength = Math.max(totalLength,totalLength + lp.topMargin + lp.bottomMargin);}else {var oldHeight=Number.MIN_SAFE_INTEGER;if(lp.height == 0 && lp.weight > 0){oldHeight = 0;lp.height = LinearLayout.LayoutParams.WRAP_CONTENT;}this.measureChildBeforeLayout(child,i,widthMeasureSpec,0,heightMeasureSpec,totalWeight == 0?this.mTotalLength:0);if(oldHeight != Number.MIN_SAFE_INTEGER){lp.height = oldHeight;}var childHeight=child.getMeasuredHeight();var totalLength=this.mTotalLength;this.mTotalLength = Math.max(totalLength,totalLength + childHeight + lp.topMargin + lp.bottomMargin + this.getNextLocationOffset(child));if(useLargestChild){largestChildHeight = Math.max(childHeight,largestChildHeight);}}if(baselineChildIndex >= 0 && baselineChildIndex == i + 1){this.mBaselineChildTop = this.mTotalLength;}if(i < baselineChildIndex && lp.weight > 0){throw new Error("A child of LinearLayout with index " + "less than mBaselineAlignedChildIndex has weight > 0, which " + "won't work.  Either remove the weight, or don't set " + "mBaselineAlignedChildIndex.");}var matchWidthLocally=false;if(widthMode != MeasureSpec.EXACTLY && lp.width == LinearLayout.LayoutParams.MATCH_PARENT){matchWidth = true;matchWidthLocally = true;}var margin=lp.leftMargin + lp.rightMargin;var measuredWidth=child.getMeasuredWidth() + margin;maxWidth = Math.max(maxWidth,measuredWidth);childState = LinearLayout.combineMeasuredStates(childState,child.getMeasuredState());allFillParent = allFillParent && lp.width == LinearLayout.LayoutParams.MATCH_PARENT;if(lp.weight > 0){weightedMaxWidth = Math.max(weightedMaxWidth,matchWidthLocally?margin:measuredWidth);}else {alternativeMaxWidth = Math.max(alternativeMaxWidth,matchWidthLocally?margin:measuredWidth);}i += this.getChildrenSkipCount(child,i);}if(this.mTotalLength > 0 && this.hasDividerBeforeChildAt(count)){this.mTotalLength += this.mDividerHeight;}if(useLargestChild && (heightMode == MeasureSpec.AT_MOST || heightMode == MeasureSpec.UNSPECIFIED)){this.mTotalLength = 0;for(var i=0;i < count;++i) {var child=this.getVirtualChildAt(i);if(child == null){this.mTotalLength += this.measureNullChild(i);continue;}if(child.getVisibility() == View.GONE){i += this.getChildrenSkipCount(child,i);continue;}var lp=child.getLayoutParams();var totalLength=this.mTotalLength;this.mTotalLength = Math.max(totalLength,totalLength + largestChildHeight + lp.topMargin + lp.bottomMargin + this.getNextLocationOffset(child));}}this.mTotalLength += this.mPaddingTop + this.mPaddingBottom;var heightSize=this.mTotalLength;heightSize = Math.max(heightSize,this.getSuggestedMinimumHeight());var heightSizeAndState=LinearLayout.resolveSizeAndState(heightSize,heightMeasureSpec,0);heightSize = heightSizeAndState & View.MEASURED_SIZE_MASK;var delta=heightSize - this.mTotalLength;if(delta != 0 && totalWeight > 0){var weightSum=this.mWeightSum > 0?this.mWeightSum:totalWeight;this.mTotalLength = 0;for(var i=0;i < count;++i) {var child=this.getVirtualChildAt(i);if(child.getVisibility() == View.GONE){continue;}var lp=child.getLayoutParams();var childExtra=lp.weight;if(childExtra > 0){var share=childExtra * delta / weightSum;weightSum -= childExtra;delta -= share;var childWidthMeasureSpec=LinearLayout.getChildMeasureSpec(widthMeasureSpec,this.mPaddingLeft + this.mPaddingRight + lp.leftMargin + lp.rightMargin,lp.width);if(lp.height != 0 || heightMode != MeasureSpec.EXACTLY){var childHeight=child.getMeasuredHeight() + share;if(childHeight < 0){childHeight = 0;}child.measure(childWidthMeasureSpec,MeasureSpec.makeMeasureSpec(childHeight,MeasureSpec.EXACTLY));}else {child.measure(childWidthMeasureSpec,MeasureSpec.makeMeasureSpec(share > 0?share:0,MeasureSpec.EXACTLY));}childState = LinearLayout.combineMeasuredStates(childState,child.getMeasuredState() & View.MEASURED_STATE_MASK >> View.MEASURED_HEIGHT_STATE_SHIFT);}var margin=lp.leftMargin + lp.rightMargin;var measuredWidth=child.getMeasuredWidth() + margin;maxWidth = Math.max(maxWidth,measuredWidth);var matchWidthLocally=widthMode != MeasureSpec.EXACTLY && lp.width == LinearLayout.LayoutParams.MATCH_PARENT;alternativeMaxWidth = Math.max(alternativeMaxWidth,matchWidthLocally?margin:measuredWidth);allFillParent = allFillParent && lp.width == LinearLayout.LayoutParams.MATCH_PARENT;var totalLength=this.mTotalLength;this.mTotalLength = Math.max(totalLength,totalLength + child.getMeasuredHeight() + lp.topMargin + lp.bottomMargin + this.getNextLocationOffset(child));}this.mTotalLength += this.mPaddingTop + this.mPaddingBottom;}else {alternativeMaxWidth = Math.max(alternativeMaxWidth,weightedMaxWidth);if(useLargestChild && heightMode != MeasureSpec.EXACTLY){for(var i=0;i < count;i++) {var child=this.getVirtualChildAt(i);if(child == null || child.getVisibility() == View.GONE){continue;}var lp=child.getLayoutParams();var childExtra=lp.weight;if(childExtra > 0){child.measure(MeasureSpec.makeMeasureSpec(child.getMeasuredWidth(),MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(largestChildHeight,MeasureSpec.EXACTLY));}}}}if(!allFillParent && widthMode != MeasureSpec.EXACTLY){maxWidth = alternativeMaxWidth;}maxWidth += this.mPaddingLeft + this.mPaddingRight;maxWidth = Math.max(maxWidth,this.getSuggestedMinimumWidth());this.setMeasuredDimension(LinearLayout.resolveSizeAndState(maxWidth,widthMeasureSpec,childState),heightSizeAndState);if(matchWidth){this.forceUniformWidth(count,heightMeasureSpec);}}},{key:"forceUniformWidth",value:function forceUniformWidth(count,heightMeasureSpec){var uniformMeasureSpec=MeasureSpec.makeMeasureSpec(this.getMeasuredWidth(),MeasureSpec.EXACTLY);for(var i=0;i < count;++i) {var child=this.getVirtualChildAt(i);if(child.getVisibility() != View.GONE){var lp=child.getLayoutParams();if(lp.width == LinearLayout.LayoutParams.MATCH_PARENT){var oldHeight=lp.height;lp.height = child.getMeasuredHeight();this.measureChildWithMargins(child,uniformMeasureSpec,0,heightMeasureSpec,0);lp.height = oldHeight;}}}}},{key:"measureHorizontal",value:function measureHorizontal(widthMeasureSpec,heightMeasureSpec){this.mTotalLength = 0;var maxHeight=0;var childState=0;var alternativeMaxHeight=0;var weightedMaxHeight=0;var allFillParent=true;var totalWeight=0;var count=this.getVirtualChildCount();var widthMode=MeasureSpec.getMode(widthMeasureSpec);var heightMode=MeasureSpec.getMode(heightMeasureSpec);var matchHeight=false;if(this.mMaxAscent == null || this.mMaxDescent == null){this.mMaxAscent = new Array(LinearLayout.VERTICAL_GRAVITY_COUNT);this.mMaxDescent = new Array(LinearLayout.VERTICAL_GRAVITY_COUNT);}var maxAscent=this.mMaxAscent;var maxDescent=this.mMaxDescent;maxAscent[0] = maxAscent[1] = maxAscent[2] = maxAscent[3] = -1;maxDescent[0] = maxDescent[1] = maxDescent[2] = maxDescent[3] = -1;var baselineAligned=this.mBaselineAligned;var useLargestChild=this.mUseLargestChild;var isExactly=widthMode == MeasureSpec.EXACTLY;var largestChildWidth=Number.MAX_SAFE_INTEGER;for(var i=0;i < count;++i) {var child=this.getVirtualChildAt(i);if(child == null){this.mTotalLength += this.measureNullChild(i);continue;}if(child.getVisibility() == View.GONE){i += this.getChildrenSkipCount(child,i);continue;}if(this.hasDividerBeforeChildAt(i)){this.mTotalLength += this.mDividerWidth;}var lp=child.getLayoutParams();totalWeight += lp.weight;if(widthMode == MeasureSpec.EXACTLY && lp.width == 0 && lp.weight > 0){if(isExactly){this.mTotalLength += lp.leftMargin + lp.rightMargin;}else {var totalLength=this.mTotalLength;this.mTotalLength = Math.max(totalLength,totalLength + lp.leftMargin + lp.rightMargin);}if(baselineAligned){var freeSpec=MeasureSpec.makeMeasureSpec(0,MeasureSpec.UNSPECIFIED);child.measure(freeSpec,freeSpec);}}else {var oldWidth=Number.MIN_SAFE_INTEGER;if(lp.width == 0 && lp.weight > 0){oldWidth = 0;lp.width = LinearLayout.LayoutParams.WRAP_CONTENT;}this.measureChildBeforeLayout(child,i,widthMeasureSpec,totalWeight == 0?this.mTotalLength:0,heightMeasureSpec,0);if(oldWidth != Number.MIN_SAFE_INTEGER){lp.width = oldWidth;}var childWidth=child.getMeasuredWidth();if(isExactly){this.mTotalLength += childWidth + lp.leftMargin + lp.rightMargin + this.getNextLocationOffset(child);}else {var totalLength=this.mTotalLength;this.mTotalLength = Math.max(totalLength,totalLength + childWidth + lp.leftMargin + lp.rightMargin + this.getNextLocationOffset(child));}if(useLargestChild){largestChildWidth = Math.max(childWidth,largestChildWidth);}}var matchHeightLocally=false;if(heightMode != MeasureSpec.EXACTLY && lp.height == LinearLayout.LayoutParams.MATCH_PARENT){matchHeight = true;matchHeightLocally = true;}var margin=lp.topMargin + lp.bottomMargin;var childHeight=child.getMeasuredHeight() + margin;childState = LinearLayout.combineMeasuredStates(childState,child.getMeasuredState());if(baselineAligned){var childBaseline=child.getBaseline();if(childBaseline != -1){var gravity=(lp.gravity < 0?this.mGravity:lp.gravity) & Gravity.VERTICAL_GRAVITY_MASK;var index=(gravity >> Gravity.AXIS_Y_SHIFT & ~Gravity.AXIS_SPECIFIED) >> 1;maxAscent[index] = Math.max(maxAscent[index],childBaseline);maxDescent[index] = Math.max(maxDescent[index],childHeight - childBaseline);}}maxHeight = Math.max(maxHeight,childHeight);allFillParent = allFillParent && lp.height == LinearLayout.LayoutParams.MATCH_PARENT;if(lp.weight > 0){weightedMaxHeight = Math.max(weightedMaxHeight,matchHeightLocally?margin:childHeight);}else {alternativeMaxHeight = Math.max(alternativeMaxHeight,matchHeightLocally?margin:childHeight);}i += this.getChildrenSkipCount(child,i);}if(this.mTotalLength > 0 && this.hasDividerBeforeChildAt(count)){this.mTotalLength += this.mDividerWidth;}if(maxAscent[LinearLayout.INDEX_TOP] != -1 || maxAscent[LinearLayout.INDEX_CENTER_VERTICAL] != -1 || maxAscent[LinearLayout.INDEX_BOTTOM] != -1 || maxAscent[LinearLayout.INDEX_FILL] != -1){var ascent=Math.max(maxAscent[LinearLayout.INDEX_FILL],Math.max(maxAscent[LinearLayout.INDEX_CENTER_VERTICAL],Math.max(maxAscent[LinearLayout.INDEX_TOP],maxAscent[LinearLayout.INDEX_BOTTOM])));var descent=Math.max(maxDescent[LinearLayout.INDEX_FILL],Math.max(maxDescent[LinearLayout.INDEX_CENTER_VERTICAL],Math.max(maxDescent[LinearLayout.INDEX_TOP],maxDescent[LinearLayout.INDEX_BOTTOM])));maxHeight = Math.max(maxHeight,ascent + descent);}if(useLargestChild && (widthMode == MeasureSpec.AT_MOST || widthMode == MeasureSpec.UNSPECIFIED)){this.mTotalLength = 0;for(var i=0;i < count;++i) {var child=this.getVirtualChildAt(i);if(child == null){this.mTotalLength += this.measureNullChild(i);continue;}if(child.getVisibility() == View.GONE){i += this.getChildrenSkipCount(child,i);continue;}var lp=child.getLayoutParams();if(isExactly){this.mTotalLength += largestChildWidth + lp.leftMargin + lp.rightMargin + this.getNextLocationOffset(child);}else {var totalLength=this.mTotalLength;this.mTotalLength = Math.max(totalLength,totalLength + largestChildWidth + lp.leftMargin + lp.rightMargin + this.getNextLocationOffset(child));}}}this.mTotalLength += this.mPaddingLeft + this.mPaddingRight;var widthSize=this.mTotalLength;widthSize = Math.max(widthSize,this.getSuggestedMinimumWidth());var widthSizeAndState=LinearLayout.resolveSizeAndState(widthSize,widthMeasureSpec,0);widthSize = widthSizeAndState & View.MEASURED_SIZE_MASK;var delta=widthSize - this.mTotalLength;if(delta != 0 && totalWeight > 0){var weightSum=this.mWeightSum > 0?this.mWeightSum:totalWeight;maxAscent[0] = maxAscent[1] = maxAscent[2] = maxAscent[3] = -1;maxDescent[0] = maxDescent[1] = maxDescent[2] = maxDescent[3] = -1;maxHeight = -1;this.mTotalLength = 0;for(var i=0;i < count;++i) {var child=this.getVirtualChildAt(i);if(child == null || child.getVisibility() == View.GONE){continue;}var lp=child.getLayoutParams();var childExtra=lp.weight;if(childExtra > 0){var share=childExtra * delta / weightSum;weightSum -= childExtra;delta -= share;var childHeightMeasureSpec=LinearLayout.getChildMeasureSpec(heightMeasureSpec,this.mPaddingTop + this.mPaddingBottom + lp.topMargin + lp.bottomMargin,lp.height);if(lp.width != 0 || widthMode != MeasureSpec.EXACTLY){var childWidth=child.getMeasuredWidth() + share;if(childWidth < 0){childWidth = 0;}child.measure(MeasureSpec.makeMeasureSpec(childWidth,MeasureSpec.EXACTLY),childHeightMeasureSpec);}else {child.measure(MeasureSpec.makeMeasureSpec(share > 0?share:0,MeasureSpec.EXACTLY),childHeightMeasureSpec);}childState = LinearLayout.combineMeasuredStates(childState,child.getMeasuredState() & View.MEASURED_STATE_MASK);}if(isExactly){this.mTotalLength += child.getMeasuredWidth() + lp.leftMargin + lp.rightMargin + this.getNextLocationOffset(child);}else {var totalLength=this.mTotalLength;this.mTotalLength = Math.max(totalLength,totalLength + child.getMeasuredWidth() + lp.leftMargin + lp.rightMargin + this.getNextLocationOffset(child));}var matchHeightLocally=heightMode != MeasureSpec.EXACTLY && lp.height == LinearLayout.LayoutParams.MATCH_PARENT;var margin=lp.topMargin + lp.bottomMargin;var childHeight=child.getMeasuredHeight() + margin;maxHeight = Math.max(maxHeight,childHeight);alternativeMaxHeight = Math.max(alternativeMaxHeight,matchHeightLocally?margin:childHeight);allFillParent = allFillParent && lp.height == LinearLayout.LayoutParams.MATCH_PARENT;if(baselineAligned){var childBaseline=child.getBaseline();if(childBaseline != -1){var gravity=(lp.gravity < 0?this.mGravity:lp.gravity) & Gravity.VERTICAL_GRAVITY_MASK;var index=(gravity >> Gravity.AXIS_Y_SHIFT & ~Gravity.AXIS_SPECIFIED) >> 1;maxAscent[index] = Math.max(maxAscent[index],childBaseline);maxDescent[index] = Math.max(maxDescent[index],childHeight - childBaseline);}}}this.mTotalLength += this.mPaddingLeft + this.mPaddingRight;if(maxAscent[LinearLayout.INDEX_TOP] != -1 || maxAscent[LinearLayout.INDEX_CENTER_VERTICAL] != -1 || maxAscent[LinearLayout.INDEX_BOTTOM] != -1 || maxAscent[LinearLayout.INDEX_FILL] != -1){var ascent=Math.max(maxAscent[LinearLayout.INDEX_FILL],Math.max(maxAscent[LinearLayout.INDEX_CENTER_VERTICAL],Math.max(maxAscent[LinearLayout.INDEX_TOP],maxAscent[LinearLayout.INDEX_BOTTOM])));var descent=Math.max(maxDescent[LinearLayout.INDEX_FILL],Math.max(maxDescent[LinearLayout.INDEX_CENTER_VERTICAL],Math.max(maxDescent[LinearLayout.INDEX_TOP],maxDescent[LinearLayout.INDEX_BOTTOM])));maxHeight = Math.max(maxHeight,ascent + descent);}}else {alternativeMaxHeight = Math.max(alternativeMaxHeight,weightedMaxHeight);if(useLargestChild && widthMode != MeasureSpec.EXACTLY){for(var i=0;i < count;i++) {var child=this.getVirtualChildAt(i);if(child == null || child.getVisibility() == View.GONE){continue;}var lp=child.getLayoutParams();var childExtra=lp.weight;if(childExtra > 0){child.measure(MeasureSpec.makeMeasureSpec(largestChildWidth,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(child.getMeasuredHeight(),MeasureSpec.EXACTLY));}}}}if(!allFillParent && heightMode != MeasureSpec.EXACTLY){maxHeight = alternativeMaxHeight;}maxHeight += this.mPaddingTop + this.mPaddingBottom;maxHeight = Math.max(maxHeight,this.getSuggestedMinimumHeight());this.setMeasuredDimension(widthSizeAndState | childState & View.MEASURED_STATE_MASK,LinearLayout.resolveSizeAndState(maxHeight,heightMeasureSpec,childState << View.MEASURED_HEIGHT_STATE_SHIFT));if(matchHeight){this.forceUniformHeight(count,widthMeasureSpec);}}},{key:"forceUniformHeight",value:function forceUniformHeight(count,widthMeasureSpec){var uniformMeasureSpec=MeasureSpec.makeMeasureSpec(this.getMeasuredHeight(),MeasureSpec.EXACTLY);for(var i=0;i < count;++i) {var child=this.getVirtualChildAt(i);if(child.getVisibility() != View.GONE){var lp=child.getLayoutParams();if(lp.height == LinearLayout.LayoutParams.MATCH_PARENT){var oldWidth=lp.width;lp.width = child.getMeasuredWidth();this.measureChildWithMargins(child,widthMeasureSpec,0,uniformMeasureSpec,0);lp.width = oldWidth;}}}}},{key:"getChildrenSkipCount",value:function getChildrenSkipCount(child,index){return 0;}},{key:"measureNullChild",value:function measureNullChild(childIndex){return 0;}},{key:"measureChildBeforeLayout",value:function measureChildBeforeLayout(child,childIndex,widthMeasureSpec,totalWidth,heightMeasureSpec,totalHeight){this.measureChildWithMargins(child,widthMeasureSpec,totalWidth,heightMeasureSpec,totalHeight);}},{key:"getLocationOffset",value:function getLocationOffset(child){return 0;}},{key:"getNextLocationOffset",value:function getNextLocationOffset(child){return 0;}},{key:"onLayout",value:function onLayout(changed,l,t,r,b){if(this.mOrientation == LinearLayout.VERTICAL){this.layoutVertical(l,t,r,b);}else {this.layoutHorizontal(l,t,r,b);}}},{key:"layoutVertical",value:function layoutVertical(left,top,right,bottom){var paddingLeft=this.mPaddingLeft;var childTop=undefined;var childLeft=undefined;var width=right - left;var childRight=width - this.mPaddingRight;var childSpace=width - paddingLeft - this.mPaddingRight;var count=this.getVirtualChildCount();var majorGravity=this.mGravity & Gravity.VERTICAL_GRAVITY_MASK;var minorGravity=this.mGravity & Gravity.HORIZONTAL_GRAVITY_MASK;switch(majorGravity){case Gravity.BOTTOM:childTop = this.mPaddingTop + bottom - top - this.mTotalLength;break;case Gravity.CENTER_VERTICAL:childTop = this.mPaddingTop + (bottom - top - this.mTotalLength) / 2;break;case Gravity.TOP:default:childTop = this.mPaddingTop;break;}for(var i=0;i < count;i++) {var child=this.getVirtualChildAt(i);if(child == null){childTop += this.measureNullChild(i);}else if(child.getVisibility() != View.GONE){var childWidth=child.getMeasuredWidth();var childHeight=child.getMeasuredHeight();var lp=child.getLayoutParams();var gravity=lp.gravity;if(gravity < 0){gravity = minorGravity;}var absoluteGravity=gravity;switch(absoluteGravity & Gravity.HORIZONTAL_GRAVITY_MASK){case Gravity.CENTER_HORIZONTAL:childLeft = paddingLeft + (childSpace - childWidth) / 2 + lp.leftMargin - lp.rightMargin;break;case Gravity.RIGHT:childLeft = childRight - childWidth - lp.rightMargin;break;case Gravity.LEFT:default:childLeft = paddingLeft + lp.leftMargin;break;}if(this.hasDividerBeforeChildAt(i)){childTop += this.mDividerHeight;}childTop += lp.topMargin;this.setChildFrame(child,childLeft,childTop + this.getLocationOffset(child),childWidth,childHeight);childTop += childHeight + lp.bottomMargin + this.getNextLocationOffset(child);i += this.getChildrenSkipCount(child,i);}}}},{key:"layoutHorizontal",value:function layoutHorizontal(left,top,right,bottom){var isLayoutRtl=this.isLayoutRtl();var paddingTop=this.mPaddingTop;var childTop=undefined;var childLeft=undefined;var height=bottom - top;var childBottom=height - this.mPaddingBottom;var childSpace=height - paddingTop - this.mPaddingBottom;var count=this.getVirtualChildCount();var majorGravity=this.mGravity & Gravity.HORIZONTAL_GRAVITY_MASK;var minorGravity=this.mGravity & Gravity.VERTICAL_GRAVITY_MASK;var baselineAligned=this.mBaselineAligned;var maxAscent=this.mMaxAscent;var maxDescent=this.mMaxDescent;var absoluteGravity=majorGravity;switch(absoluteGravity){case Gravity.RIGHT:childLeft = this.mPaddingLeft + right - left - this.mTotalLength;break;case Gravity.CENTER_HORIZONTAL:childLeft = this.mPaddingLeft + (right - left - this.mTotalLength) / 2;break;case Gravity.LEFT:default:childLeft = this.mPaddingLeft;break;}var start=0;var dir=1;if(isLayoutRtl){start = count - 1;dir = -1;}for(var i=0;i < count;i++) {var childIndex=start + dir * i;var child=this.getVirtualChildAt(childIndex);if(child == null){childLeft += this.measureNullChild(childIndex);}else if(child.getVisibility() != View.GONE){var childWidth=child.getMeasuredWidth();var childHeight=child.getMeasuredHeight();var childBaseline=-1;var lp=child.getLayoutParams();if(baselineAligned && lp.height != LinearLayout.LayoutParams.MATCH_PARENT){childBaseline = child.getBaseline();}var gravity=lp.gravity;if(gravity < 0){gravity = minorGravity;}switch(gravity & Gravity.VERTICAL_GRAVITY_MASK){case Gravity.TOP:childTop = paddingTop + lp.topMargin;if(childBaseline != -1){childTop += maxAscent[LinearLayout.INDEX_TOP] - childBaseline;}break;case Gravity.CENTER_VERTICAL:childTop = paddingTop + (childSpace - childHeight) / 2 + lp.topMargin - lp.bottomMargin;break;case Gravity.BOTTOM:childTop = childBottom - childHeight - lp.bottomMargin;if(childBaseline != -1){var descent=child.getMeasuredHeight() - childBaseline;childTop -= maxDescent[LinearLayout.INDEX_BOTTOM] - descent;}break;default:childTop = paddingTop;break;}if(this.hasDividerBeforeChildAt(childIndex)){childLeft += this.mDividerWidth;}childLeft += lp.leftMargin;this.setChildFrame(child,childLeft + this.getLocationOffset(child),childTop,childWidth,childHeight);childLeft += childWidth + lp.rightMargin + this.getNextLocationOffset(child);i += this.getChildrenSkipCount(child,childIndex);}}}},{key:"setChildFrame",value:function setChildFrame(child,left,top,width,height){child.layout(left,top,left + width,top + height);}},{key:"setOrientation",value:function setOrientation(orientation){if(typeof orientation === 'string'){if('VERTICAL' === (orientation + '').toUpperCase())orientation = LinearLayout.VERTICAL;else if('HORIZONTAL' === (orientation + '').toUpperCase())orientation = LinearLayout.HORIZONTAL;}if(this.mOrientation != orientation){this.mOrientation = orientation;this.requestLayout();}}},{key:"getOrientation",value:function getOrientation(){return this.mOrientation;}},{key:"setGravity",value:function setGravity(gravity){if(this.mGravity != gravity){if((gravity & Gravity.HORIZONTAL_GRAVITY_MASK) == 0){gravity |= Gravity.LEFT;}if((gravity & Gravity.VERTICAL_GRAVITY_MASK) == 0){gravity |= Gravity.TOP;}this.mGravity = gravity;this.requestLayout();}}},{key:"setHorizontalGravity",value:function setHorizontalGravity(horizontalGravity){var gravity=horizontalGravity & Gravity.HORIZONTAL_GRAVITY_MASK;if((this.mGravity & Gravity.HORIZONTAL_GRAVITY_MASK) != gravity){this.mGravity = this.mGravity & ~Gravity.HORIZONTAL_GRAVITY_MASK | gravity;this.requestLayout();}}},{key:"setVerticalGravity",value:function setVerticalGravity(verticalGravity){var gravity=verticalGravity & Gravity.VERTICAL_GRAVITY_MASK;if((this.mGravity & Gravity.VERTICAL_GRAVITY_MASK) != gravity){this.mGravity = this.mGravity & ~Gravity.VERTICAL_GRAVITY_MASK | gravity;this.requestLayout();}}},{key:"generateDefaultLayoutParams",value:function generateDefaultLayoutParams(){var LayoutParams=LinearLayout.LayoutParams;if(this.mOrientation == LinearLayout.HORIZONTAL){return new LayoutParams(LayoutParams.WRAP_CONTENT,LayoutParams.WRAP_CONTENT);}else if(this.mOrientation == LinearLayout.VERTICAL){return new LayoutParams(LayoutParams.MATCH_PARENT,LayoutParams.WRAP_CONTENT);}return _get(Object.getPrototypeOf(LinearLayout.prototype),"generateDefaultLayoutParams",this).call(this);}},{key:"generateLayoutParams",value:function generateLayoutParams(p){return new LinearLayout.LayoutParams(p);}},{key:"checkLayoutParams",value:function checkLayoutParams(p){return p instanceof LinearLayout.LayoutParams;}}]);return LinearLayout;})(ViewGroup);LinearLayout.HORIZONTAL = 0;LinearLayout.VERTICAL = 1;LinearLayout.SHOW_DIVIDER_NONE = 0;LinearLayout.SHOW_DIVIDER_BEGINNING = 1;LinearLayout.SHOW_DIVIDER_MIDDLE = 2;LinearLayout.SHOW_DIVIDER_END = 4;LinearLayout.VERTICAL_GRAVITY_COUNT = 4;LinearLayout.INDEX_CENTER_VERTICAL = 0;LinearLayout.INDEX_TOP = 1;LinearLayout.INDEX_BOTTOM = 2;LinearLayout.INDEX_FILL = 3;widget.LinearLayout = LinearLayout;(function(LinearLayout){var LayoutParams=(function(_android$view$ViewGroup$MarginLayoutParams){_inherits(LayoutParams,_android$view$ViewGroup$MarginLayoutParams);function LayoutParams(){var _this17=this;_classCallCheck(this,LayoutParams);_get(Object.getPrototypeOf(LayoutParams.prototype),"constructor",this).call(this);this.weight = 0;this.gravity = -1;for(var _len30=arguments.length,args=Array(_len30),_key30=0;_key30 < _len30;_key30++) {args[_key30] = arguments[_key30];}if(args.length === 1 && args[0] instanceof LayoutParams){this.gravity = args[0].gravity;}else {var width=args[0];var height=args[1];var _args$212=args[2];var weight=_args$212 === undefined?0:_args$212;_get(Object.getPrototypeOf(LayoutParams.prototype),"constructor",this).call(this,width,height);this.weight = weight;}this._attrBinder.addAttr('gravity',function(value){_this17.gravity = _this17._attrBinder.parseGravity(value,_this17.gravity);},function(){return _this17.gravity;});this._attrBinder.addAttr('weight',function(value){value = Number.parseInt(value);if(Number.isInteger(value))_this17.weight = value;},function(){return _this17.weight;});}return LayoutParams;})(android.view.ViewGroup.MarginLayoutParams);LinearLayout.LayoutParams = LayoutParams;})(LinearLayout = widget.LinearLayout || (widget.LinearLayout = {}));})(widget = android.widget || (android.widget = {}));})(android || (android = {})); /**
 * Created by linfaxin on 15/11/2.
 */ ///<reference path="Drawable.ts"/>
///<reference path="../Canvas.ts"/>
///<reference path="../Rect.ts"/>
///<reference path="../PixelFormat.ts"/>
///<reference path="../../../java/lang/ref/WeakReference.ts"/>
///<reference path="../../../java/lang/Runnable.ts"/>
///<reference path="../../util/StateSet.ts"/>
///<reference path="../../util/Log.ts"/>
///<reference path="../../util/SparseArray.ts"/>
///<reference path="../../os/SystemClock.ts"/>
var android;(function(android){var graphics;(function(graphics){var drawable;(function(drawable){var Rect=android.graphics.Rect;var PixelFormat=android.graphics.PixelFormat;var Log=android.util.Log;var SparseArray=android.util.SparseArray;var SystemClock=android.os.SystemClock;var DrawableContainer=(function(_drawable$Drawable2){_inherits(DrawableContainer,_drawable$Drawable2);function DrawableContainer(){_classCallCheck(this,DrawableContainer);for(var _len31=arguments.length,args=Array(_len31),_key31=0;_key31 < _len31;_key31++) {args[_key31] = arguments[_key31];}_get(Object.getPrototypeOf(DrawableContainer.prototype),"constructor",this).apply(this,args);this.mAlpha = 0xFF;this.mCurIndex = -1;this.mMutated = false;this.mEnterAnimationEnd = 0;this.mExitAnimationEnd = 0;}_createClass(DrawableContainer,[{key:"draw",value:function draw(canvas){if(this.mCurrDrawable != null){this.mCurrDrawable.draw(canvas);}if(this.mLastDrawable != null){this.mLastDrawable.draw(canvas);}}},{key:"needsMirroring",value:function needsMirroring(){return false && this.isAutoMirrored();}},{key:"getPadding",value:function getPadding(padding){var r=this.mDrawableContainerState.getConstantPadding();var result=undefined;if(r != null){padding.set(r);result = (r.left | r.top | r.bottom | r.right) != 0;}else {if(this.mCurrDrawable != null){result = this.mCurrDrawable.getPadding(padding);}else {result = _get(Object.getPrototypeOf(DrawableContainer.prototype),"getPadding",this).call(this,padding);}}if(this.needsMirroring()){var left=padding.left;var right=padding.right;padding.left = right;padding.right = left;}return result;}},{key:"setAlpha",value:function setAlpha(alpha){if(this.mAlpha != alpha){this.mAlpha = alpha;if(this.mCurrDrawable != null){if(this.mEnterAnimationEnd == 0){this.mCurrDrawable.mutate().setAlpha(alpha);}else {this.animate(false);}}}}},{key:"getAlpha",value:function getAlpha(){return this.mAlpha;}},{key:"setDither",value:function setDither(dither){if(this.mDrawableContainerState.mDither != dither){this.mDrawableContainerState.mDither = dither;if(this.mCurrDrawable != null){this.mCurrDrawable.mutate().setDither(this.mDrawableContainerState.mDither);}}}},{key:"setEnterFadeDuration",value:function setEnterFadeDuration(ms){this.mDrawableContainerState.mEnterFadeDuration = ms;}},{key:"setExitFadeDuration",value:function setExitFadeDuration(ms){this.mDrawableContainerState.mExitFadeDuration = ms;}},{key:"onBoundsChange",value:function onBoundsChange(bounds){if(this.mLastDrawable != null){this.mLastDrawable.setBounds(bounds);}if(this.mCurrDrawable != null){this.mCurrDrawable.setBounds(bounds);}}},{key:"isStateful",value:function isStateful(){return this.mDrawableContainerState.isStateful();}},{key:"setAutoMirrored",value:function setAutoMirrored(mirrored){this.mDrawableContainerState.mAutoMirrored = mirrored;if(this.mCurrDrawable != null){this.mCurrDrawable.mutate().setAutoMirrored(this.mDrawableContainerState.mAutoMirrored);}}},{key:"isAutoMirrored",value:function isAutoMirrored(){return this.mDrawableContainerState.mAutoMirrored;}},{key:"jumpToCurrentState",value:function jumpToCurrentState(){var changed=false;if(this.mLastDrawable != null){this.mLastDrawable.jumpToCurrentState();this.mLastDrawable = null;changed = true;}if(this.mCurrDrawable != null){this.mCurrDrawable.jumpToCurrentState();this.mCurrDrawable.mutate().setAlpha(this.mAlpha);}if(this.mExitAnimationEnd != 0){this.mExitAnimationEnd = 0;changed = true;}if(this.mEnterAnimationEnd != 0){this.mEnterAnimationEnd = 0;changed = true;}if(changed){this.invalidateSelf();}}},{key:"onStateChange",value:function onStateChange(state){if(this.mLastDrawable != null){return this.mLastDrawable.setState(state);}if(this.mCurrDrawable != null){return this.mCurrDrawable.setState(state);}return false;}},{key:"onLevelChange",value:function onLevelChange(level){if(this.mLastDrawable != null){return this.mLastDrawable.setLevel(level);}if(this.mCurrDrawable != null){return this.mCurrDrawable.setLevel(level);}return false;}},{key:"getIntrinsicWidth",value:function getIntrinsicWidth(){if(this.mDrawableContainerState.isConstantSize()){return this.mDrawableContainerState.getConstantWidth();}return this.mCurrDrawable != null?this.mCurrDrawable.getIntrinsicWidth():-1;}},{key:"getIntrinsicHeight",value:function getIntrinsicHeight(){if(this.mDrawableContainerState.isConstantSize()){return this.mDrawableContainerState.getConstantHeight();}return this.mCurrDrawable != null?this.mCurrDrawable.getIntrinsicHeight():-1;}},{key:"getMinimumWidth",value:function getMinimumWidth(){if(this.mDrawableContainerState.isConstantSize()){return this.mDrawableContainerState.getConstantMinimumWidth();}return this.mCurrDrawable != null?this.mCurrDrawable.getMinimumWidth():0;}},{key:"getMinimumHeight",value:function getMinimumHeight(){if(this.mDrawableContainerState.isConstantSize()){return this.mDrawableContainerState.getConstantMinimumHeight();}return this.mCurrDrawable != null?this.mCurrDrawable.getMinimumHeight():0;}},{key:"invalidateDrawable",value:function invalidateDrawable(who){if(who == this.mCurrDrawable && this.getCallback() != null){this.getCallback().invalidateDrawable(this);}}},{key:"scheduleDrawable",value:function scheduleDrawable(who,what,when){if(who == this.mCurrDrawable && this.getCallback() != null){this.getCallback().scheduleDrawable(this,what,when);}}},{key:"unscheduleDrawable",value:function unscheduleDrawable(who,what){if(who == this.mCurrDrawable && this.getCallback() != null){this.getCallback().unscheduleDrawable(this,what);}}},{key:"setVisible",value:function setVisible(visible,restart){var changed=_get(Object.getPrototypeOf(DrawableContainer.prototype),"setVisible",this).call(this,visible,restart);if(this.mLastDrawable != null){this.mLastDrawable.setVisible(visible,restart);}if(this.mCurrDrawable != null){this.mCurrDrawable.setVisible(visible,restart);}return changed;}},{key:"getOpacity",value:function getOpacity(){return this.mCurrDrawable == null || !this.mCurrDrawable.isVisible()?PixelFormat.TRANSPARENT:this.mDrawableContainerState.getOpacity();}},{key:"selectDrawable",value:function selectDrawable(idx){var _this18=this;if(idx == this.mCurIndex){return false;}var now=SystemClock.uptimeMillis();if(DrawableContainer.DEBUG)android.util.Log.i(DrawableContainer.TAG,toString() + " from " + this.mCurIndex + " to " + idx + ": exit=" + this.mDrawableContainerState.mExitFadeDuration + " enter=" + this.mDrawableContainerState.mEnterFadeDuration);if(this.mDrawableContainerState.mExitFadeDuration > 0){if(this.mLastDrawable != null){this.mLastDrawable.setVisible(false,false);}if(this.mCurrDrawable != null){this.mLastDrawable = this.mCurrDrawable;this.mExitAnimationEnd = now + this.mDrawableContainerState.mExitFadeDuration;}else {this.mLastDrawable = null;this.mExitAnimationEnd = 0;}}else if(this.mCurrDrawable != null){this.mCurrDrawable.setVisible(false,false);}if(idx >= 0 && idx < this.mDrawableContainerState.mNumChildren){var d=this.mDrawableContainerState.getChild(idx);this.mCurrDrawable = d;this.mCurIndex = idx;if(d != null){d.mutate();if(this.mDrawableContainerState.mEnterFadeDuration > 0){this.mEnterAnimationEnd = now + this.mDrawableContainerState.mEnterFadeDuration;}else {d.setAlpha(this.mAlpha);}d.setVisible(this.isVisible(),true);d.setDither(this.mDrawableContainerState.mDither);d.setState(this.getState());d.setLevel(this.getLevel());d.setBounds(this.getBounds());d.setAutoMirrored(this.mDrawableContainerState.mAutoMirrored);}else {}}else {this.mCurrDrawable = null;this.mCurIndex = -1;}if(this.mEnterAnimationEnd != 0 || this.mExitAnimationEnd != 0){if(this.mAnimationRunnable == null){(function(){var t=_this18;_this18.mAnimationRunnable = {run:function run(){t.animate(true);t.invalidateSelf();}};})();}else {this.unscheduleSelf(this.mAnimationRunnable);}this.animate(true);}this.invalidateSelf();return true;}},{key:"animate",value:function animate(schedule){var now=SystemClock.uptimeMillis();var animating=false;if(this.mCurrDrawable != null){if(this.mEnterAnimationEnd != 0){if(this.mEnterAnimationEnd <= now){this.mCurrDrawable.mutate().setAlpha(this.mAlpha);this.mEnterAnimationEnd = 0;}else {var animAlpha=(this.mEnterAnimationEnd - now) * 255 / this.mDrawableContainerState.mEnterFadeDuration;if(DrawableContainer.DEBUG)android.util.Log.i(DrawableContainer.TAG,toString() + " cur alpha " + animAlpha);this.mCurrDrawable.mutate().setAlpha((255 - animAlpha) * this.mAlpha / 255);animating = true;}}}else {this.mEnterAnimationEnd = 0;}if(this.mLastDrawable != null){if(this.mExitAnimationEnd != 0){if(this.mExitAnimationEnd <= now){this.mLastDrawable.setVisible(false,false);this.mLastDrawable = null;this.mExitAnimationEnd = 0;}else {var animAlpha=(this.mExitAnimationEnd - now) * 255 / this.mDrawableContainerState.mExitFadeDuration;if(DrawableContainer.DEBUG)android.util.Log.i(DrawableContainer.TAG,toString() + " last alpha " + animAlpha);this.mLastDrawable.mutate().setAlpha(animAlpha * this.mAlpha / 255);animating = true;}}}else {this.mExitAnimationEnd = 0;}if(schedule && animating){this.scheduleSelf(this.mAnimationRunnable,now + 1000 / 60);}}},{key:"getCurrent",value:function getCurrent(){return this.mCurrDrawable;}},{key:"getConstantState",value:function getConstantState(){if(this.mDrawableContainerState.canConstantState()){return this.mDrawableContainerState;}return null;}},{key:"mutate",value:function mutate(){if(!this.mMutated && _get(Object.getPrototypeOf(DrawableContainer.prototype),"mutate",this).call(this) == this){this.mDrawableContainerState.mutate();this.mMutated = true;}return this;}},{key:"setConstantState",value:function setConstantState(state){this.mDrawableContainerState = state;}}]);return DrawableContainer;})(drawable.Drawable);DrawableContainer.DEBUG = Log.DBG_DrawableContainer;DrawableContainer.TAG = "DrawableContainer";DrawableContainer.DEFAULT_DITHER = true;drawable.DrawableContainer = DrawableContainer;(function(DrawableContainer){var DrawableContainerState=(function(){function DrawableContainerState(orig,owner){_classCallCheck(this,DrawableContainerState);this.mVariablePadding = false;this.mPaddingChecked = false;this.mConstantSize = false;this.mComputedConstantSize = false;this.mConstantWidth = 0;this.mConstantHeight = 0;this.mConstantMinimumWidth = 0;this.mConstantMinimumHeight = 0;this.mCheckedOpacity = false;this.mOpacity = 0;this.mCheckedStateful = false;this.mStateful = false;this.mCheckedConstantState = false;this.mCanConstantState = false;this.mDither = DrawableContainer.DEFAULT_DITHER;this.mMutated = false;this.mEnterFadeDuration = 0;this.mExitFadeDuration = 0;this.mAutoMirrored = false;this.mOwner = owner;if(orig != null){this.mCheckedConstantState = true;this.mCanConstantState = true;this.mVariablePadding = orig.mVariablePadding;this.mConstantSize = orig.mConstantSize;this.mDither = orig.mDither;this.mMutated = orig.mMutated;this.mEnterFadeDuration = orig.mEnterFadeDuration;this.mExitFadeDuration = orig.mExitFadeDuration;this.mAutoMirrored = orig.mAutoMirrored;this.mConstantPadding = orig.getConstantPadding();this.mPaddingChecked = true;this.mConstantWidth = orig.getConstantWidth();this.mConstantHeight = orig.getConstantHeight();this.mConstantMinimumWidth = orig.getConstantMinimumWidth();this.mConstantMinimumHeight = orig.getConstantMinimumHeight();this.mComputedConstantSize = true;this.mOpacity = orig.getOpacity();this.mCheckedOpacity = true;this.mStateful = orig.isStateful();this.mCheckedStateful = true;var origDr=orig.mDrawables;this.mDrawables = new Array(0);var origDf=orig.mDrawableFutures;if(origDf != null){this.mDrawableFutures = origDf.clone();}else {this.mDrawableFutures = new SparseArray(this.mNumChildren);}var N=this.mNumChildren;for(var i=0;i < N;i++) {if(origDr[i] != null){this.mDrawableFutures.put(i,new ConstantStateFuture(origDr[i]));}}}else {this.mDrawables = new Array(0);}}_createClass(DrawableContainerState,[{key:"addChild",value:function addChild(dr){var pos=this.mNumChildren;dr.setVisible(false,true);dr.setCallback(this.mOwner);this.mDrawables.push(dr);this.mCheckedStateful = false;this.mCheckedOpacity = false;this.mConstantPadding = null;this.mPaddingChecked = false;this.mComputedConstantSize = false;return pos;}},{key:"getCapacity",value:function getCapacity(){return this.mDrawables.length;}},{key:"createAllFutures",value:function createAllFutures(){if(this.mDrawableFutures != null){var futureCount=this.mDrawableFutures.size();for(var keyIndex=0;keyIndex < futureCount;keyIndex++) {var index=this.mDrawableFutures.keyAt(keyIndex);this.mDrawables[index] = this.mDrawableFutures.valueAt(keyIndex).get(this);}this.mDrawableFutures = null;}}},{key:"getChildCount",value:function getChildCount(){return this.mNumChildren;}},{key:"getChildren",value:function getChildren(){this.createAllFutures();return this.mDrawables;}},{key:"getChild",value:function getChild(index){var result=this.mDrawables[index];if(result != null){return result;}if(this.mDrawableFutures != null){var keyIndex=this.mDrawableFutures.indexOfKey(index);if(keyIndex >= 0){var prepared=this.mDrawableFutures.valueAt(keyIndex).get(this);this.mDrawables[index] = prepared;this.mDrawableFutures.removeAt(keyIndex);return prepared;}}return null;}},{key:"mutate",value:function mutate(){var N=this.mNumChildren;var drawables=this.mDrawables;for(var i=0;i < N;i++) {if(drawables[i] != null){drawables[i].mutate();}}this.mMutated = true;}},{key:"setVariablePadding",value:function setVariablePadding(variable){this.mVariablePadding = variable;}},{key:"getConstantPadding",value:function getConstantPadding(){if(this.mVariablePadding){return null;}if(this.mConstantPadding != null || this.mPaddingChecked){return this.mConstantPadding;}this.createAllFutures();var r=null;var t=new Rect();var N=this.mNumChildren;var drawables=this.mDrawables;for(var i=0;i < N;i++) {if(drawables[i].getPadding(t)){if(r == null)r = new Rect(0,0,0,0);if(t.left > r.left)r.left = t.left;if(t.top > r.top)r.top = t.top;if(t.right > r.right)r.right = t.right;if(t.bottom > r.bottom)r.bottom = t.bottom;}}this.mPaddingChecked = true;return this.mConstantPadding = r;}},{key:"setConstantSize",value:function setConstantSize(constant){this.mConstantSize = constant;}},{key:"isConstantSize",value:function isConstantSize(){return this.mConstantSize;}},{key:"getConstantWidth",value:function getConstantWidth(){if(!this.mComputedConstantSize){this.computeConstantSize();}return this.mConstantWidth;}},{key:"getConstantHeight",value:function getConstantHeight(){if(!this.mComputedConstantSize){this.computeConstantSize();}return this.mConstantHeight;}},{key:"getConstantMinimumWidth",value:function getConstantMinimumWidth(){if(!this.mComputedConstantSize){this.computeConstantSize();}return this.mConstantMinimumWidth;}},{key:"getConstantMinimumHeight",value:function getConstantMinimumHeight(){if(!this.mComputedConstantSize){this.computeConstantSize();}return this.mConstantMinimumHeight;}},{key:"computeConstantSize",value:function computeConstantSize(){this.mComputedConstantSize = true;this.createAllFutures();var N=this.mNumChildren;var drawables=this.mDrawables;this.mConstantWidth = this.mConstantHeight = -1;this.mConstantMinimumWidth = this.mConstantMinimumHeight = 0;for(var i=0;i < N;i++) {var dr=drawables[i];var s=dr.getIntrinsicWidth();if(s > this.mConstantWidth)this.mConstantWidth = s;s = dr.getIntrinsicHeight();if(s > this.mConstantHeight)this.mConstantHeight = s;s = dr.getMinimumWidth();if(s > this.mConstantMinimumWidth)this.mConstantMinimumWidth = s;s = dr.getMinimumHeight();if(s > this.mConstantMinimumHeight)this.mConstantMinimumHeight = s;}}},{key:"setEnterFadeDuration",value:function setEnterFadeDuration(duration){this.mEnterFadeDuration = duration;}},{key:"getEnterFadeDuration",value:function getEnterFadeDuration(){return this.mEnterFadeDuration;}},{key:"setExitFadeDuration",value:function setExitFadeDuration(duration){this.mExitFadeDuration = duration;}},{key:"getExitFadeDuration",value:function getExitFadeDuration(){return this.mExitFadeDuration;}},{key:"getOpacity",value:function getOpacity(){if(this.mCheckedOpacity){return this.mOpacity;}this.createAllFutures();this.mCheckedOpacity = true;var N=this.mNumChildren;var drawables=this.mDrawables;var op=N > 0?drawables[0].getOpacity():PixelFormat.TRANSPARENT;for(var i=1;i < N;i++) {op = drawable.Drawable.resolveOpacity(op,drawables[i].getOpacity());}this.mOpacity = op;return op;}},{key:"isStateful",value:function isStateful(){if(this.mCheckedStateful){return this.mStateful;}this.createAllFutures();this.mCheckedStateful = true;var N=this.mNumChildren;var drawables=this.mDrawables;for(var i=0;i < N;i++) {if(drawables[i].isStateful()){this.mStateful = true;return true;}}this.mStateful = false;return false;}},{key:"canConstantState",value:function canConstantState(){if(this.mCheckedConstantState){return this.mCanConstantState;}this.createAllFutures();this.mCheckedConstantState = true;var N=this.mNumChildren;var drawables=this.mDrawables;for(var i=0;i < N;i++) {if(drawables[i].getConstantState() == null){this.mCanConstantState = false;return false;}}this.mCanConstantState = true;return true;}},{key:"newDrawable",value:function newDrawable(){return undefined;}},{key:"mNumChildren",get:function get(){return this.mDrawables.length;}}]);return DrawableContainerState;})();DrawableContainer.DrawableContainerState = DrawableContainerState;var ConstantStateFuture=(function(){function ConstantStateFuture(source){_classCallCheck(this,ConstantStateFuture);this.mConstantState = source.getConstantState();}_createClass(ConstantStateFuture,[{key:"get",value:function get(state){var result=this.mConstantState.newDrawable();result.setCallback(state.mOwner);if(state.mMutated){result.mutate();}return result;}}]);return ConstantStateFuture;})();})(DrawableContainer = drawable.DrawableContainer || (drawable.DrawableContainer = {}));})(drawable = graphics.drawable || (graphics.drawable = {}));})(graphics = android.graphics || (android.graphics = {}));})(android || (android = {})); /**
 * Created by linfaxin on 15/11/2.
 */ ///<reference path="DrawableContainer.ts"/>
var android;(function(android){var graphics;(function(graphics){var drawable;(function(drawable_2){var DEBUG=android.util.Log.DBG_StateListDrawable;var TAG="StateListDrawable";var DEFAULT_DITHER=true;var StateListDrawable=(function(_drawable_2$DrawableContainer){_inherits(StateListDrawable,_drawable_2$DrawableContainer);function StateListDrawable(){_classCallCheck(this,StateListDrawable);_get(Object.getPrototypeOf(StateListDrawable.prototype),"constructor",this).call(this);this.initWithState(null);}_createClass(StateListDrawable,[{key:"initWithState",value:function initWithState(state){var _as=new StateListState(state,this);this.mStateListState = _as;this.setConstantState(_as);this.onStateChange(this.getState());}},{key:"addState",value:function addState(stateSet,drawable){if(drawable != null){this.mStateListState.addStateSet(stateSet,drawable);this.onStateChange(this.getState());}}},{key:"isStateful",value:function isStateful(){return true;}},{key:"onStateChange",value:function onStateChange(stateSet){var idx=this.mStateListState.indexOfStateSet(stateSet);if(DEBUG)android.util.Log.i(TAG,"onStateChange " + this + " states " + stateSet + " found " + idx);if(idx < 0){idx = this.mStateListState.indexOfStateSet(android.util.StateSet.WILD_CARD);}if(this.selectDrawable(idx)){return true;}return _get(Object.getPrototypeOf(StateListDrawable.prototype),"onStateChange",this).call(this,stateSet);}},{key:"getStateCount",value:function getStateCount(){return this.mStateListState.getChildCount();}},{key:"getStateSet",value:function getStateSet(index){return this.mStateListState.mStateSets[index];}},{key:"getStateDrawable",value:function getStateDrawable(index){return this.mStateListState.getChild(index);}},{key:"getStateDrawableIndex",value:function getStateDrawableIndex(stateSet){return this.mStateListState.indexOfStateSet(stateSet);}},{key:"mutate",value:function mutate(){if(!this.mMutated && _get(Object.getPrototypeOf(StateListDrawable.prototype),"mutate",this).call(this) == this){var sets=this.mStateListState.mStateSets;var count=sets.length;this.mStateListState.mStateSets = new Array(count);for(var i=0;i < count;i++) {var _set=sets[i];if(_set != null){this.mStateListState.mStateSets[i] = _set.concat();}}this.mMutated = true;}return this;}}]);return StateListDrawable;})(drawable_2.DrawableContainer);drawable_2.StateListDrawable = StateListDrawable;var StateListState=(function(_drawable_2$DrawableContainer$DrawableContainerState){_inherits(StateListState,_drawable_2$DrawableContainer$DrawableContainerState);function StateListState(orig,owner){_classCallCheck(this,StateListState);_get(Object.getPrototypeOf(StateListState.prototype),"constructor",this).call(this,orig,owner);if(orig != null){this.mStateSets = orig.mStateSets.concat();}else {this.mStateSets = new Array(this.getCapacity());}}_createClass(StateListState,[{key:"addStateSet",value:function addStateSet(stateSet,drawable){var pos=this.addChild(drawable);this.mStateSets[pos] = stateSet;return pos;}},{key:"indexOfStateSet",value:function indexOfStateSet(stateSet){var stateSets=this.mStateSets;var N=this.getChildCount();for(var i=0;i < N;i++) {if(android.util.StateSet.stateSetMatches(stateSets[i],stateSet)){return i;}}return -1;}},{key:"newDrawable",value:function newDrawable(){var drawable=new StateListDrawable();drawable.initWithState(this);return drawable;}}]);return StateListState;})(drawable_2.DrawableContainer.DrawableContainerState);})(drawable = graphics.drawable || (graphics.drawable = {}));})(graphics = android.graphics || (android.graphics = {}));})(android || (android = {})); /**
 * Created by linfaxin on 15/11/15.
 */ ///<reference path="../view/View.ts"/>
///<reference path="../content/res/Resources.ts"/>
///<reference path="../graphics/Color.ts"/>
///<reference path="../graphics/drawable/Drawable.ts"/>
///<reference path="../graphics/drawable/InsetDrawable.ts"/>
///<reference path="../graphics/drawable/ColorDrawable.ts"/>
///<reference path="../graphics/drawable/StateListDrawable.ts"/>
var android;(function(android){var R;(function(R){var View=android.view.View;var Resources=android.content.res.Resources;var Color=android.graphics.Color;var InsetDrawable=android.graphics.drawable.InsetDrawable;var ColorDrawable=android.graphics.drawable.ColorDrawable;var StateListDrawable=android.graphics.drawable.StateListDrawable;var density=Resources.getDisplayMetrics().density;var drawable=(function(){function drawable(){_classCallCheck(this,drawable);}_createClass(drawable,null,[{key:"button_background",get:function get(){var DefaultButtonBackgroundDrawable=(function(_InsetDrawable){_inherits(DefaultButtonBackgroundDrawable,_InsetDrawable);function DefaultButtonBackgroundDrawable(){_classCallCheck(this,DefaultButtonBackgroundDrawable);_get(Object.getPrototypeOf(DefaultButtonBackgroundDrawable.prototype),"constructor",this).call(this,DefaultButtonBackgroundDrawable.createStateList(),6 * density);}_createClass(DefaultButtonBackgroundDrawable,[{key:"getPadding",value:function getPadding(padding){var result=_get(Object.getPrototypeOf(DefaultButtonBackgroundDrawable.prototype),"getPadding",this).call(this,padding);padding.left += 12 * density;padding.right += 12 * density;padding.top += 6 * density;padding.bottom += 6 * density;return result;}},{key:"getIntrinsicWidth",value:function getIntrinsicWidth(){return 64 * density;}},{key:"getIntrinsicHeight",value:function getIntrinsicHeight(){return 48 * density;}}],[{key:"createStateList",value:function createStateList(){var stateList=new StateListDrawable();stateList.addState([View.VIEW_STATE_PRESSED],new ColorDrawable(Color.GRAY));stateList.addState([View.VIEW_STATE_ACTIVATED],new ColorDrawable(Color.GRAY));stateList.addState([View.VIEW_STATE_FOCUSED],new ColorDrawable(0xffaaaaaa));stateList.addState([-View.VIEW_STATE_ENABLED],new ColorDrawable(0xffebebeb));stateList.addState([],new ColorDrawable(Color.LTGRAY));return stateList;}}]);return DefaultButtonBackgroundDrawable;})(InsetDrawable);return new DefaultButtonBackgroundDrawable();}},{key:"list_selector_background",get:function get(){var stateList=new StateListDrawable();stateList.addState([View.VIEW_STATE_FOCUSED,-View.VIEW_STATE_ENABLED],new ColorDrawable(0xffebebeb));stateList.addState([View.VIEW_STATE_FOCUSED,View.VIEW_STATE_PRESSED],new ColorDrawable(Color.LTGRAY));stateList.addState([-View.VIEW_STATE_FOCUSED,View.VIEW_STATE_PRESSED],new ColorDrawable(Color.LTGRAY));stateList.addState([View.VIEW_STATE_FOCUSED],new ColorDrawable(0xffaaaaaa));stateList.addState([],new ColorDrawable(Color.TRANSPARENT));return stateList;}},{key:"list_divider",get:function get(){var divider=new ColorDrawable(0xffcccccc);return divider;}}]);return drawable;})();R.drawable = drawable;})(R = android.R || (android.R = {}));})(android || (android = {})); ///<reference path="../view/View.ts"/>
///<reference path="../content/res/Resources.ts"/>
///<reference path="../content/res/ColorStateList.ts"/>
///<reference path="../graphics/Color.ts"/>
///<reference path="../graphics/drawable/Drawable.ts"/>
///<reference path="../graphics/drawable/InsetDrawable.ts"/>
///<reference path="../graphics/drawable/ColorDrawable.ts"/>
///<reference path="../graphics/drawable/StateListDrawable.ts"/>
var android;(function(android){var R;(function(R){var View=android.view.View;var ColorStateList=android.content.res.ColorStateList;var color=(function(){function color(){_classCallCheck(this,color);}_createClass(color,null,[{key:"textView_textColor",get:function get(){var _defaultStates=[[-View.VIEW_STATE_ENABLED],[]];var _defaultColors=[0xffc0c0c0,0xff333333];var DefaultStyleTextColor=(function(_ColorStateList){_inherits(DefaultStyleTextColor,_ColorStateList);function DefaultStyleTextColor(){_classCallCheck(this,DefaultStyleTextColor);_get(Object.getPrototypeOf(DefaultStyleTextColor.prototype),"constructor",this).call(this,_defaultStates,_defaultColors);}return DefaultStyleTextColor;})(ColorStateList);return new DefaultStyleTextColor();}}]);return color;})();R.color = color;})(R = android.R || (android.R = {}));})(android || (android = {})); /**
 * Created by linfaxin on 15/11/26.
 */ ///<reference path="drawable.ts"/>
///<reference path="color.ts"/>
///<reference path="../view/Gravity.ts"/>
///<reference path="../view/View.ts"/>
///<reference path="../content/res/Resources.ts"/>
///<reference path="../graphics/Color.ts"/>
///<reference path="../graphics/drawable/Drawable.ts"/>
///<reference path="../graphics/drawable/InsetDrawable.ts"/>
///<reference path="../graphics/drawable/ColorDrawable.ts"/>
///<reference path="../graphics/drawable/StateListDrawable.ts"/>
var android;(function(android){var R;(function(R){var Gravity=android.view.Gravity;var View=android.view.View;var Color=android.graphics.Color;var ColorDrawable=android.graphics.drawable.ColorDrawable;var StateListDrawable=android.graphics.drawable.StateListDrawable;var attr=(function(){function attr(){_classCallCheck(this,attr);}_createClass(attr,null,[{key:"buttonStyle",get:function get(){return {background:R.drawable.button_background,focusable:true,clickable:true,textSize:'18sp',gravity:Gravity.CENTER};}},{key:"textViewStyle",get:function get(){return {textSize:'14sp',textColor:R.color.textView_textColor};}},{key:"imageButtonStyle",get:function get(){return {background:R.drawable.button_background,focusable:true,clickable:true,gravity:Gravity.CENTER};}},{key:"gridViewStyle",get:function get(){return {numColumns:1};}},{key:"listViewStyle",get:function get(){return {divider:android.R.drawable.list_divider,dividerHeight:1};}},{key:"numberPickerStyle",get:function get(){return {orientation:'vertical',solidColor:'transparent',selectionDivider:new ColorDrawable(0xcc33b5e5),selectionDividerHeight:'2dp',selectionDividersDistance:'48dp',internalMinWidth:'64dp',internalMaxHeight:'180dp',virtualButtonPressedDrawable:(function(){var stateList=new StateListDrawable();stateList.addState([View.VIEW_STATE_PRESSED],new ColorDrawable(0x44888888));stateList.addState([View.VIEW_STATE_PRESSED],new ColorDrawable(0x44888888));stateList.addState([],new ColorDrawable(Color.TRANSPARENT));return stateList;})()};}}]);return attr;})();R.attr = attr;})(R = android.R || (android.R = {}));})(android || (android = {})); /**
 * Created by linfaxin on 15/10/26.
 */ ///<reference path="../view/View.ts"/>
///<reference path="../view/Gravity.ts"/>
///<reference path="../content/res/Resources.ts"/>
///<reference path="../graphics/Color.ts"/>
///<reference path="../content/res/ColorStateList.ts"/>
///<reference path="../util/TypedValue.ts"/>
///<reference path="../R/attr.ts"/>
var android;(function(android){var widget;(function(widget){var View=android.view.View;var Gravity=android.view.Gravity;var Resources=android.content.res.Resources;var Color=android.graphics.Color;var ColorStateList=android.content.res.ColorStateList;var MeasureSpec=View.MeasureSpec;var TypedValue=android.util.TypedValue;var TextView=(function(_View){_inherits(TextView,_View);function TextView(bindElement,rootElement){var _this19=this;_classCallCheck(this,TextView);_get(Object.getPrototypeOf(TextView.prototype),"constructor",this).call(this,bindElement,rootElement);this.mGravity = Gravity.TOP | Gravity.LEFT;this.mSingleLine = false;this.mTextColor = ColorStateList.valueOf(Color.BLACK);this.mCurTextColor = Color.BLACK;this.mHintColor = Color.LTGRAY;this.mSpacingMult = 1.2;this.mSpacingAdd = 0;this.mMaxWidth = Number.MAX_SAFE_INTEGER;this.mMaxHeight = Number.MAX_SAFE_INTEGER;this.mMaxLineCount = Number.MAX_SAFE_INTEGER;this.mMinLineCount = 0;this.initTextElement();this._attrBinder.addAttr('enabled',function(value){_this19.setEnabled(_this19._attrBinder.parseBoolean(value,true));},function(){return _this19.isEnabled();});this._attrBinder.addAttr('textColorHighlight',function(value){});this._attrBinder.addAttr('textColor',function(value){var colorList=_this19._attrBinder.parseColorList(value);if(colorList instanceof ColorStateList){_this19.setTextColor(colorList);return;}var color=_this19._attrBinder.parseColor(value);if(Number.isInteger(color))_this19.setTextColor(color);},function(){if(_this19.mTextColor.isStateful())return _this19.mTextColor;return _this19.mTextColor.getDefaultColor();});this._attrBinder.addAttr('textColorHint',function(value){});this._attrBinder.addAttr('textSize',function(value){if(value !== undefined && value !== null){value = TypedValue.complexToDimensionPixelSize(value,0,Resources.getDisplayMetrics());_this19.setTextSizeInPx(value);}},function(){return _this19.mTextSize;});this._attrBinder.addAttr('textStyle',function(value){});this._attrBinder.addAttr('textAllCaps',function(value){});this._attrBinder.addAttr('drawableLeft',function(value){});this._attrBinder.addAttr('drawableTop',function(value){});this._attrBinder.addAttr('drawableRight',function(value){});this._attrBinder.addAttr('drawableBottom',function(value){});this._attrBinder.addAttr('drawablePadding',function(value){});this._attrBinder.addAttr('maxLines',function(value){value = Number.parseInt(value);if(Number.isInteger(value))_this19.setMaxLines(value);},function(){return _this19.mMaxLineCount;});this._attrBinder.addAttr('maxHeight',function(value){value = Number.parseInt(value);if(Number.isInteger(value))_this19.setMaxHeight(value);},function(){return _this19.mMaxHeight;});this._attrBinder.addAttr('lines',function(value){value = Number.parseInt(value);if(Number.isInteger(value))_this19.setLines(value);},function(){if(_this19.mMaxLineCount === _this19.mMinLineCount)return _this19.mMaxLineCount;return null;});this._attrBinder.addAttr('height',function(value){value = Number.parseInt(value);if(Number.isInteger(value))_this19.setHeight(value);},function(){if(_this19.mMaxHeight === _this19.getMinimumHeight())return _this19.mMaxHeight;return null;});this._attrBinder.addAttr('minLines',function(value){value = Number.parseInt(value);if(Number.isInteger(value))_this19.setMinLines(value);},function(){return _this19.mMinLineCount;});this._attrBinder.addAttr('minHeight',function(value){value = Number.parseInt(value);if(Number.isInteger(value))_this19.setMinimumHeight(value);});this._attrBinder.addAttr('maxWidth',function(value){value = Number.parseInt(value);if(Number.isInteger(value))_this19.setMaxWidth(value);},function(){return _this19.mMaxWidth;});this._attrBinder.addAttr('width',function(value){value = Number.parseInt(value);if(Number.isInteger(value))_this19.setWidth(value);},function(){if(_this19.mMinWidth === _this19.mMaxWidth)return _this19.mMinWidth;return null;});this._attrBinder.addAttr('gravity',function(value){_this19.setGravity(_this19._attrBinder.parseGravity(value,_this19.mGravity));},function(){return _this19.mGravity;});this._attrBinder.addAttr('text',function(value){_this19.setText(value);},function(){return _this19.getText();});this._attrBinder.addAttr('singleLine',function(value){if(_this19._attrBinder.parseBoolean(value,false))_this19.setSingleLine();},function(){if(_this19.mMinLineCount === 1 && _this19.mMaxLineCount === 1)return true;return false;});this._attrBinder.addAttr('textScaleX',function(value){});this._attrBinder.addAttr('lineSpacingExtra',function(value){value = Number.parseInt(value);if(Number.isInteger(value))_this19.setLineSpacing(value,_this19.mSpacingMult);},function(){return _this19.mSpacingAdd;});this._attrBinder.addAttr('lineSpacingMultiplier',function(value){value = Number.parseInt(value);if(Number.isInteger(value))_this19.setLineSpacing(_this19.mSpacingAdd,value);},function(){return _this19.mSpacingMult;});this.applyDefaultAttributes(android.R.attr.textViewStyle);}_createClass(TextView,[{key:"initTextElement",value:function initTextElement(){this.mTextElement = document.createElement('div');this.mTextElement.style.position = "absolute";this.mTextElement.style.boxSizing = "border-box";this.mTextElement.style.overflow = "hidden";this.mTextElement.style.opacity = "0";this.bindElement.appendChild(this.mTextElement);}},{key:"onLayout",value:function onLayout(changed,left,top,right,bottom){_get(Object.getPrototypeOf(TextView.prototype),"onLayout",this).call(this,changed,left,top,right,bottom);this.mTextElement.style.opacity = "";}},{key:"onFinishInflate",value:function onFinishInflate(){var _this20=this;_get(Object.getPrototypeOf(TextView.prototype),"onFinishInflate",this).call(this);Array.from(this.bindElement.childNodes).forEach(function(item){if(item === _this20.mTextElement)return;_this20.bindElement.removeChild(item);_this20.mTextElement.appendChild(item);});}},{key:"onMeasure",value:function onMeasure(widthMeasureSpec,heightMeasureSpec){var widthMode=MeasureSpec.getMode(widthMeasureSpec);var heightMode=MeasureSpec.getMode(heightMeasureSpec);var widthSize=MeasureSpec.getSize(widthMeasureSpec);var heightSize=MeasureSpec.getSize(heightMeasureSpec);var width=undefined,height=undefined;var padLeft=this.getCompoundPaddingLeft();var padTop=this.getCompoundPaddingTop();var padRight=this.getCompoundPaddingRight();var padBottom=this.getCompoundPaddingBottom();this.mTextElement.style.height = "";this.mTextElement.style.width = "";this.mTextElement.style.left = -Resources.getDisplayMetrics().widthPixels * Resources.getDisplayMetrics().density + 'px';this.mTextElement.style.top = "";if(widthMode == MeasureSpec.EXACTLY){width = widthSize;}else {width = this.mTextElement.offsetWidth + 2;width += padLeft + padRight;width = Math.min(width,this.mMaxWidth);width = Math.max(width,this.getSuggestedMinimumWidth());if(widthMode == MeasureSpec.AT_MOST){width = Math.min(widthSize,width);}}var unpaddedWidth=width - padLeft - padRight;this.mTextElement.style.width = unpaddedWidth + "px";this.mTextElement.style.left = padLeft + "px";if(heightMode == MeasureSpec.EXACTLY){height = heightSize;var pad=this.getCompoundPaddingTop() + this.getCompoundPaddingBottom();if(this.mMaxLineCount < Number.MAX_SAFE_INTEGER){var maxHeightWithLineCount=pad + this.mMaxLineCount * this.getLineHeight();height = Math.min(maxHeightWithLineCount,height);}}else {var desired=this.getDesiredHeight();height = desired;if(heightMode == MeasureSpec.AT_MOST){height = Math.min(desired,heightSize);}}var contextHeight=height - padTop - padBottom;var verticalGravity=this.mGravity & Gravity.VERTICAL_GRAVITY_MASK;var finalTop=padTop;if(verticalGravity !== Gravity.TOP){var textHeight=this.mTextElement.offsetHeight;if(textHeight < contextHeight){switch(verticalGravity){case Gravity.CENTER_VERTICAL:finalTop += (contextHeight - textHeight) / 2;break;case Gravity.BOTTOM:finalTop += contextHeight - textHeight;break;case Gravity.TOP:break;}contextHeight = textHeight;}}this.mTextElement.style.height = contextHeight + "px";this.mTextElement.style.top = finalTop + "px";this.setMeasuredDimension(width,height);}},{key:"getDesiredHeight",value:function getDesiredHeight(){var desired=this.mTextElement.offsetHeight;var pad=this.getCompoundPaddingTop() + this.getCompoundPaddingBottom();desired += pad;desired = Math.min(this.mMaxHeight,desired);if(this.mMaxLineCount < Number.MAX_SAFE_INTEGER){var maxHeightWithLineCount=pad + this.mMaxLineCount * this.getLineHeight();desired = Math.min(maxHeightWithLineCount,desired);}if(this.mMinLineCount > 0){var minHeightWithLineCount=pad + this.mMinLineCount * this.getLineHeight();desired = Math.max(minHeightWithLineCount,desired);}desired = Math.max(desired,this.getSuggestedMinimumHeight());return desired;}},{key:"setTextColor",value:function setTextColor(color){if(Number.isInteger(color)){this.mTextColor = ColorStateList.valueOf(color);}else {if(color === null || color === undefined){throw new Error('colors is null');}this.mTextColor = color;}this.updateTextColors();}},{key:"getTextColors",value:function getTextColors(){return this.mTextColor;}},{key:"getCurrentTextColor",value:function getCurrentTextColor(){return this.mCurTextColor;}},{key:"updateTextColors",value:function updateTextColors(){var inval=false;var color=this.mTextColor.getColorForState(this.getDrawableState(),0);if(color != this.mCurTextColor){this.mCurTextColor = color;var r=Color.red(this.mCurTextColor);var g=Color.green(this.mCurTextColor);var b=Color.blue(this.mCurTextColor);var a=Color.alpha(this.mCurTextColor);this.mTextElement.style.color = "rgba(" + r + ", " + g + ", " + b + ", " + a / 255 + ")";inval = false;}if(inval){this.invalidate();}}},{key:"drawableStateChanged",value:function drawableStateChanged(){_get(Object.getPrototypeOf(TextView.prototype),"drawableStateChanged",this).call(this);if(this.mTextColor != null && this.mTextColor.isStateful()){this.updateTextColors();}}},{key:"getCompoundPaddingTop",value:function getCompoundPaddingTop(){return this.mPaddingTop;}},{key:"getCompoundPaddingBottom",value:function getCompoundPaddingBottom(){return this.mPaddingBottom;}},{key:"getCompoundPaddingLeft",value:function getCompoundPaddingLeft(){return this.mPaddingLeft;}},{key:"getCompoundPaddingRight",value:function getCompoundPaddingRight(){return this.mPaddingRight;}},{key:"setGravity",value:function setGravity(gravity){switch(gravity & Gravity.HORIZONTAL_GRAVITY_MASK){case Gravity.CENTER_HORIZONTAL:this.mTextElement.style.textAlign = "center";break;case Gravity.RIGHT:this.mTextElement.style.textAlign = "right";break;case Gravity.LEFT:this.mTextElement.style.textAlign = "left";break;}if((gravity & Gravity.VERTICAL_GRAVITY_MASK) != (this.mGravity & Gravity.VERTICAL_GRAVITY_MASK)){this.requestLayout();}this.mGravity = gravity;}},{key:"setLineSpacing",value:function setLineSpacing(add,mult){if(this.mSpacingAdd != add || this.mSpacingMult != mult){this.mSpacingAdd = add;this.mSpacingMult = mult;this.setTextSize(this.mTextSize);}}},{key:"setTextSizeInPx",value:function setTextSizeInPx(sizeInPx){if(this.mTextSize !== sizeInPx){this.mTextSize = sizeInPx;this.mTextElement.style.fontSize = sizeInPx + "px";this.mTextElement.style.lineHeight = this.getLineHeight() + "px";this.requestLayout();}}},{key:"setTextSize",value:function setTextSize(size){var sizeInPx=size * Resources.getDisplayMetrics().density;this.setTextSizeInPx(sizeInPx);}},{key:"getLineHeight",value:function getLineHeight(){return Math.ceil(this.mTextSize * this.mSpacingMult + this.mSpacingAdd);}},{key:"setHeight",value:function setHeight(pixels){this.mMaxHeight = pixels;this.setMinimumHeight(pixels);this.requestLayout();this.invalidate();}},{key:"setMaxLines",value:function setMaxLines(max){this.mMaxLineCount = max;this.requestLayout();this.invalidate();}},{key:"getMaxLines",value:function getMaxLines(){return this.mMaxLineCount;}},{key:"setMaxHeight",value:function setMaxHeight(maxHeight){this.mMaxHeight = maxHeight;this.requestLayout();this.invalidate();}},{key:"getMaxHeight",value:function getMaxHeight(){return this.mMaxHeight;}},{key:"setMaxWidth",value:function setMaxWidth(maxpixels){this.mMaxWidth = maxpixels;this.requestLayout();this.invalidate();}},{key:"getMaxWidth",value:function getMaxWidth(){return this.mMaxWidth;}},{key:"setWidth",value:function setWidth(pixels){this.mMaxWidth = pixels;this.setMinimumWidth(pixels);this.requestLayout();this.invalidate();}},{key:"setMinLines",value:function setMinLines(min){this.mMinLineCount = min;this.requestLayout();this.invalidate();}},{key:"getMinLines",value:function getMinLines(){return this.mMinLineCount;}},{key:"setSingleLine",value:function setSingleLine(){var singleLine=arguments.length <= 0 || arguments[0] === undefined?true:arguments[0];if(singleLine)this.setLines(1);else {this.mMaxLineCount = Number.MAX_SAFE_INTEGER;this.mMinLineCount = 0;this.requestLayout();this.invalidate();}}},{key:"setLines",value:function setLines(lines){this.mMaxLineCount = this.mMinLineCount = lines;this.requestLayout();this.invalidate();}},{key:"setText",value:function setText(){var text=arguments.length <= 0 || arguments[0] === undefined?'':arguments[0];this.mTextElement.innerText = text;this.requestLayout();}},{key:"getText",value:function getText(){return this.mTextElement.innerText;}},{key:"setHtml",value:function setHtml(html){this.mTextElement.innerHTML = html;this.requestLayout();}},{key:"getHtml",value:function getHtml(){return this.mTextElement.innerHTML;}},{key:"getTextElement",value:function getTextElement(){return this.mTextElement;}}]);return TextView;})(View);widget.TextView = TextView;})(widget = android.widget || (android.widget = {}));})(android || (android = {})); /**
 * Created by linfaxin on 15/11/2.
 */ ///<reference path="TextView.ts"/>
///<reference path="../view/View.ts"/>
///<reference path="../R/attr.ts"/>
var android;(function(android){var widget;(function(widget){var Button=(function(_widget$TextView){_inherits(Button,_widget$TextView);function Button(bindElement,rootElement){_classCallCheck(this,Button);_get(Object.getPrototypeOf(Button.prototype),"constructor",this).call(this,bindElement,rootElement);this.applyDefaultAttributes(android.R.attr.buttonStyle);}return Button;})(widget.TextView);widget.Button = Button;})(widget = android.widget || (android.widget = {}));})(android || (android = {})); /**
 * Created by linfaxin on 15/11/7.
 */ ///<reference path="../../android/view/View.ts"/>
///<reference path="../../android/widget/ImageView.ts"/>
var androidui;(function(androidui){var widget;(function(widget){var View=android.view.View;var MeasureSpec=View.MeasureSpec;var ImageView=android.widget.ImageView;requestAnimationFrame(function(){eval('ImageView = android.widget.ImageView;');});var HtmlImageView=(function(_View2){_inherits(HtmlImageView,_View2);function HtmlImageView(bindElement,rootElement){var _this21=this;_classCallCheck(this,HtmlImageView);_get(Object.getPrototypeOf(HtmlImageView.prototype),"constructor",this).call(this,bindElement,rootElement);this.mHaveFrame = false;this.mAdjustViewBounds = false;this.mMaxWidth = Number.MAX_SAFE_INTEGER;this.mMaxHeight = Number.MAX_SAFE_INTEGER;this.mAlpha = 255;this.mDrawableWidth = 0;this.mDrawableHeight = 0;this.mAdjustViewBoundsCompat = false;this.initImageView();this._attrBinder.addAttr('src',function(value){_this21.setImageURI(value);},function(){return _this21.mImgElement.src;});this._attrBinder.addAttr('adjustViewBounds',function(value){_this21.setAdjustViewBounds(_this21._attrBinder.parseBoolean(value,false));});this._attrBinder.addAttr('maxWidth',function(value){var baseValue=_this21.getParent() instanceof View?_this21.getParent().getWidth():0;_this21.setMaxWidth(_this21._attrBinder.parseNumber(value,_this21.mMaxWidth,baseValue));},function(){return _this21.mMaxWidth;});this._attrBinder.addAttr('maxHeight',function(value){var baseValue=_this21.getParent() instanceof View?_this21.getParent().getHeight():0;_this21.setMaxHeight(_this21._attrBinder.parseNumber(value,_this21.mMaxHeight,baseValue));},function(){return _this21.mMaxHeight;});this._attrBinder.addAttr('scaleType',function(value){_this21.setScaleType(ImageView.ScaleType.parseScaleType(value,_this21.mScaleType));},function(){return _this21.mScaleType.toString();});}_createClass(HtmlImageView,[{key:"initImageView",value:function initImageView(){var _this22=this;this.mScaleType = ImageView.ScaleType.FIT_CENTER;this.mImgElement = document.createElement('img');this.mImgElement.style.position = "absolute";this.mImgElement.onload = function(){_this22.mImgElement.style.left = 0 + 'px';_this22.mImgElement.style.top = 0 + 'px';_this22.mImgElement.style.width = '';_this22.mImgElement.style.height = '';_this22.mDrawableWidth = _this22.mImgElement.width;_this22.mDrawableHeight = _this22.mImgElement.height;_this22.mImgElement.style.display = 'none';_this22.mImgElement.style.opacity = '';_this22.requestLayout();};this.bindElement.appendChild(this.mImgElement);}},{key:"getAdjustViewBounds",value:function getAdjustViewBounds(){return this.mAdjustViewBounds;}},{key:"setAdjustViewBounds",value:function setAdjustViewBounds(adjustViewBounds){this.mAdjustViewBounds = adjustViewBounds;if(adjustViewBounds){this.setScaleType(ImageView.ScaleType.FIT_CENTER);}}},{key:"getMaxWidth",value:function getMaxWidth(){return this.mMaxWidth;}},{key:"setMaxWidth",value:function setMaxWidth(maxWidth){this.mMaxWidth = maxWidth;}},{key:"getMaxHeight",value:function getMaxHeight(){return this.mMaxHeight;}},{key:"setMaxHeight",value:function setMaxHeight(maxHeight){this.mMaxHeight = maxHeight;}},{key:"setImageURI",value:function setImageURI(uri){this.mDrawableWidth = -1;this.mDrawableHeight = -1;this.mImgElement.style.opacity = '0';this.mImgElement.src = uri;}},{key:"setScaleType",value:function setScaleType(scaleType){if(scaleType == null){throw new Error('NullPointerException');}if(this.mScaleType != scaleType){this.mScaleType = scaleType;this.setWillNotCacheDrawing(scaleType == ImageView.ScaleType.CENTER);this.requestLayout();this.invalidate();}}},{key:"getScaleType",value:function getScaleType(){return this.mScaleType;}},{key:"onMeasure",value:function onMeasure(widthMeasureSpec,heightMeasureSpec){var w=undefined;var h=undefined;var desiredAspect=0.0;var resizeWidth=false;var resizeHeight=false;var widthSpecMode=MeasureSpec.getMode(widthMeasureSpec);var heightSpecMode=MeasureSpec.getMode(heightMeasureSpec);if(!this.mImgElement.src || !this.mImgElement.complete){this.mDrawableWidth = -1;this.mDrawableHeight = -1;w = h = 0;}else {w = this.mDrawableWidth;h = this.mDrawableHeight;if(w <= 0)w = 1;if(h <= 0)h = 1;if(this.mAdjustViewBounds){resizeWidth = widthSpecMode != MeasureSpec.EXACTLY;resizeHeight = heightSpecMode != MeasureSpec.EXACTLY;desiredAspect = w / h;}}var pleft=this.mPaddingLeft;var pright=this.mPaddingRight;var ptop=this.mPaddingTop;var pbottom=this.mPaddingBottom;var widthSize=undefined;var heightSize=undefined;if(resizeWidth || resizeHeight){widthSize = this.resolveAdjustedSize(w + pleft + pright,this.mMaxWidth,widthMeasureSpec);heightSize = this.resolveAdjustedSize(h + ptop + pbottom,this.mMaxHeight,heightMeasureSpec);if(desiredAspect != 0){var actualAspect=(widthSize - pleft - pright) / (heightSize - ptop - pbottom);if(Math.abs(actualAspect - desiredAspect) > 0.0000001){var done=false;if(resizeWidth){var newWidth=Math.floor(desiredAspect * (heightSize - ptop - pbottom)) + pleft + pright;if(!resizeHeight && !this.mAdjustViewBoundsCompat){widthSize = this.resolveAdjustedSize(newWidth,this.mMaxWidth,widthMeasureSpec);}if(newWidth <= widthSize){widthSize = newWidth;done = true;}}if(!done && resizeHeight){var newHeight=Math.floor((widthSize - pleft - pright) / desiredAspect) + ptop + pbottom;if(!resizeWidth && !this.mAdjustViewBoundsCompat){heightSize = this.resolveAdjustedSize(newHeight,this.mMaxHeight,heightMeasureSpec);}if(newHeight <= heightSize){heightSize = newHeight;}}}}}else {w += pleft + pright;h += ptop + pbottom;w = Math.max(w,this.getSuggestedMinimumWidth());h = Math.max(h,this.getSuggestedMinimumHeight());widthSize = HtmlImageView.resolveSizeAndState(w,widthMeasureSpec,0);heightSize = HtmlImageView.resolveSizeAndState(h,heightMeasureSpec,0);}this.setMeasuredDimension(widthSize,heightSize);}},{key:"resolveAdjustedSize",value:function resolveAdjustedSize(desiredSize,maxSize,measureSpec){var result=desiredSize;var specMode=MeasureSpec.getMode(measureSpec);var specSize=MeasureSpec.getSize(measureSpec);switch(specMode){case MeasureSpec.UNSPECIFIED:result = Math.min(desiredSize,maxSize);break;case MeasureSpec.AT_MOST:result = Math.min(Math.min(desiredSize,specSize),maxSize);break;case MeasureSpec.EXACTLY:result = specSize;break;}return result;}},{key:"setFrame",value:function setFrame(left,top,right,bottom){var changed=_get(Object.getPrototypeOf(HtmlImageView.prototype),"setFrame",this).call(this,left,top,right,bottom);this.mHaveFrame = true;this.configureBounds();this.mImgElement.style.display = '';return changed;}},{key:"configureBounds",value:function configureBounds(){var dwidth=this.mDrawableWidth;var dheight=this.mDrawableHeight;var vwidth=this.getWidth() - this.mPaddingLeft - this.mPaddingRight;var vheight=this.getHeight() - this.mPaddingTop - this.mPaddingBottom;var fits=(dwidth < 0 || vwidth == dwidth) && (dheight < 0 || vheight == dheight);this.mImgElement.style.left = 0 + 'px';this.mImgElement.style.top = 0 + 'px';this.mImgElement.style.width = '';this.mImgElement.style.height = '';if(dwidth <= 0 || dheight <= 0){return;}if(this.mScaleType === ImageView.ScaleType.FIT_XY){this.mImgElement.style.width = vwidth + 'px';this.mImgElement.style.height = vheight + 'px';return;}this.mImgElement.style.width = dwidth + 'px';this.mImgElement.style.height = dheight + 'px';if(ImageView.ScaleType.MATRIX === this.mScaleType){}else if(fits){}else if(ImageView.ScaleType.CENTER === this.mScaleType){var left=Math.round((vwidth - dwidth) * 0.5);var _top12=Math.round((vheight - dheight) * 0.5);this.mImgElement.style.left = left + 'px';this.mImgElement.style.top = _top12 + 'px';}else if(ImageView.ScaleType.CENTER_CROP === this.mScaleType){var scale=undefined;var dx=0,dy=0;if(dwidth * vheight > vwidth * dheight){scale = vheight / dheight;dx = (vwidth - dwidth * scale) * 0.5;this.mImgElement.style.width = 'auto';this.mImgElement.style.height = vheight + 'px';this.mImgElement.style.left = Math.round(dx) + 'px';this.mImgElement.style.top = '0px';}else {scale = vwidth / dwidth;dy = (vheight - dheight * scale) * 0.5;this.mImgElement.style.width = vwidth + 'px';this.mImgElement.style.height = 'auto';this.mImgElement.style.left = '0px';this.mImgElement.style.top = Math.round(dy) + 'px';}}else if(ImageView.ScaleType.CENTER_INSIDE === this.mScaleType){var scale=1;if(dwidth <= vwidth && dheight <= vheight){}else {var wScale=vwidth / dwidth;var hScale=vheight / dheight;if(wScale < hScale){this.mImgElement.style.width = vwidth + 'px';this.mImgElement.style.height = 'auto';}else {this.mImgElement.style.width = 'auto';this.mImgElement.style.height = vheight + 'px';}scale = Math.min(wScale,hScale);}var dx=Math.round((vwidth - dwidth * scale) * 0.5);var dy=Math.round((vheight - dheight * scale) * 0.5);this.mImgElement.style.left = dx + 'px';this.mImgElement.style.top = dy + 'px';}else {var wScale=vwidth / dwidth;var hScale=vheight / dheight;if(wScale < hScale){this.mImgElement.style.width = vwidth + 'px';this.mImgElement.style.height = 'auto';}else {this.mImgElement.style.width = 'auto';this.mImgElement.style.height = vheight + 'px';}var scale=Math.min(wScale,hScale);if(ImageView.ScaleType.FIT_CENTER === this.mScaleType){var dx=Math.round((vwidth - dwidth * scale) * 0.5);var dy=Math.round((vheight - dheight * scale) * 0.5);this.mImgElement.style.left = dx + 'px';this.mImgElement.style.top = dy + 'px';}else if(ImageView.ScaleType.FIT_END === this.mScaleType){var dx=Math.round(vwidth - dwidth * scale);var dy=Math.round(vheight - dheight * scale);this.mImgElement.style.left = dx + 'px';this.mImgElement.style.top = dy + 'px';}else if(ImageView.ScaleType.FIT_START === this.mScaleType){}}}},{key:"getImageAlpha",value:function getImageAlpha(){return this.mAlpha;}},{key:"setImageAlpha",value:function setImageAlpha(alpha){this.setAlpha(alpha);}}]);return HtmlImageView;})(View);widget.HtmlImageView = HtmlImageView;})(widget = androidui.widget || (androidui.widget = {}));})(androidui || (androidui = {})); ///<reference path="../view/View.ts"/>
///<reference path="../../androidui/widget/HtmlImageView.ts"/>
var android;(function(android){var widget;(function(widget){var ImageView=(function(_androidui$widget$HtmlImageView){_inherits(ImageView,_androidui$widget$HtmlImageView);function ImageView(){_classCallCheck(this,ImageView);_get(Object.getPrototypeOf(ImageView.prototype),"constructor",this).apply(this,arguments);}return ImageView;})(androidui.widget.HtmlImageView);widget.ImageView = ImageView;(function(ImageView){var ScaleType=(function(){function ScaleType(type){_classCallCheck(this,ScaleType);this.mType = type;}_createClass(ScaleType,[{key:"toString",value:function toString(){return this.mType;}}],[{key:"parseScaleType",value:function parseScaleType(s,defaultType){if(s == null)return defaultType;if(s.toLowerCase() === ScaleType.MATRIX.mType.toLowerCase())return ScaleType.MATRIX;if(s.toLowerCase() === ScaleType.FIT_XY.mType.toLowerCase())return ScaleType.FIT_XY;if(s.toLowerCase() === ScaleType.FIT_START.mType.toLowerCase())return ScaleType.FIT_START;if(s.toLowerCase() === ScaleType.FIT_CENTER.mType.toLowerCase())return ScaleType.FIT_CENTER;if(s.toLowerCase() === ScaleType.FIT_END.mType.toLowerCase())return ScaleType.FIT_END;if(s.toLowerCase() === ScaleType.CENTER.mType.toLowerCase())return ScaleType.CENTER;if(s.toLowerCase() === ScaleType.CENTER_CROP.mType.toLowerCase())return ScaleType.CENTER_CROP;if(s.toLowerCase() === ScaleType.CENTER_INSIDE.mType.toLowerCase())return ScaleType.CENTER_INSIDE;return defaultType;}}]);return ScaleType;})();ScaleType.MATRIX = new ScaleType("matrix");ScaleType.FIT_XY = new ScaleType("fitXY");ScaleType.FIT_START = new ScaleType("fitStart");ScaleType.FIT_CENTER = new ScaleType("fitCenter");ScaleType.FIT_END = new ScaleType("fitEnd");ScaleType.CENTER = new ScaleType("center");ScaleType.CENTER_CROP = new ScaleType("centerCrop");ScaleType.CENTER_INSIDE = new ScaleType("centerInside");ImageView.ScaleType = ScaleType;})(ImageView = widget.ImageView || (widget.ImageView = {}));})(widget = android.widget || (android.widget = {}));})(android || (android = {})); /**
 * Created by linfaxin on 15/11/28.
 */ ///<reference path="ImageView.ts"/>
///<reference path="../view/View.ts"/>
///<reference path="../R/attr.ts"/>
var android;(function(android){var widget;(function(widget){var ImageButton=(function(_widget$ImageView){_inherits(ImageButton,_widget$ImageView);function ImageButton(bindElement,rootElement){_classCallCheck(this,ImageButton);_get(Object.getPrototypeOf(ImageButton.prototype),"constructor",this).call(this,bindElement,rootElement);this.applyDefaultAttributes(android.R.attr.imageButtonStyle);}return ImageButton;})(widget.ImageView);widget.ImageButton = ImageButton;})(widget = android.widget || (android.widget = {}));})(android || (android = {})); /*
 * Copyright (C) 2009 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var android;(function(android){var util;(function(util){var MathUtils=(function(){function MathUtils(){_classCallCheck(this,MathUtils);}_createClass(MathUtils,null,[{key:"abs",value:function abs(v){return v > 0?v:-v;}},{key:"constrain",value:function constrain(amount,low,high){return amount < low?low:amount > high?high:amount;}},{key:"log",value:function log(a){return Math.log(a);}},{key:"exp",value:function exp(a){return Math.exp(a);}},{key:"pow",value:function pow(a,b){return Math.pow(a,b);}},{key:"max",value:function max(a,b,c){if(c == null)return a > b?a:b;return a > b?a > c?a:c:b > c?b:c;}},{key:"min",value:function min(a,b,c){if(c == null)return a < b?a:b;return a < b?a < c?a:c:b < c?b:c;}},{key:"dist",value:function dist(x1,y1,x2,y2){var x=x2 - x1;var y=y2 - y1;return Math.sqrt(x * x + y * y);}},{key:"dist3",value:function dist3(x1,y1,z1,x2,y2,z2){var x=x2 - x1;var y=y2 - y1;var z=z2 - z1;return Math.sqrt(x * x + y * y + z * z);}},{key:"mag",value:function mag(a,b,c){if(c == null)return Math.sqrt(a * a + b * b);return Math.sqrt(a * a + b * b + c * c);}},{key:"sq",value:function sq(v){return v * v;}},{key:"radians",value:function radians(degrees){return degrees * MathUtils.DEG_TO_RAD;}},{key:"degrees",value:function degrees(radians){return radians * MathUtils.RAD_TO_DEG;}},{key:"acos",value:function acos(value){return Math.acos(value);}},{key:"asin",value:function asin(value){return Math.asin(value);}},{key:"atan",value:function atan(value){return Math.atan(value);}},{key:"atan2",value:function atan2(a,b){return Math.atan2(a,b);}},{key:"tan",value:function tan(angle){return Math.tan(angle);}},{key:"lerp",value:function lerp(start,stop,amount){return start + (stop - start) * amount;}},{key:"norm",value:function norm(start,stop,value){return (value - start) / (stop - start);}},{key:"map",value:function map(minStart,minStop,maxStart,maxStop,value){return maxStart + (maxStart - maxStop) * ((value - minStart) / (minStop - minStart));}},{key:"random",value:function random(){for(var _len32=arguments.length,args=Array(_len32),_key32=0;_key32 < _len32;_key32++) {args[_key32] = arguments[_key32];}if(args.length == 1)return Math.random() * args[0];var howsmall=args[0];var howbig=args[1];if(howsmall >= howbig)return howsmall;return Math.random() * (howbig - howsmall) + howsmall;}}]);return MathUtils;})();MathUtils.DEG_TO_RAD = 3.1415926 / 180.0;MathUtils.RAD_TO_DEG = 180.0 / 3.1415926;util.MathUtils = MathUtils;})(util = android.util || (android.util = {}));})(android || (android = {})); /**
 * Created by linfaxin on 15/10/3.
 */ ///<reference path="SparseArray.ts"/>
var android;(function(android){var util;(function(util){var SparseBooleanArray=(function(_util$SparseArray){_inherits(SparseBooleanArray,_util$SparseArray);function SparseBooleanArray(){_classCallCheck(this,SparseBooleanArray);_get(Object.getPrototypeOf(SparseBooleanArray.prototype),"constructor",this).apply(this,arguments);}return SparseBooleanArray;})(util.SparseArray);util.SparseBooleanArray = SparseBooleanArray;})(util = android.util || (android.util = {}));})(android || (android = {})); /*
 * Copyright (C) 2008 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ ///<reference path="View.ts"/>
var android;(function(android){var view;(function(view){var SoundEffectConstants=(function(){function SoundEffectConstants(){_classCallCheck(this,SoundEffectConstants);}_createClass(SoundEffectConstants,null,[{key:"getContantForFocusDirection",value:function getContantForFocusDirection(direction){switch(direction){case view.View.FOCUS_RIGHT:return SoundEffectConstants.NAVIGATION_RIGHT;case view.View.FOCUS_FORWARD:case view.View.FOCUS_DOWN:return SoundEffectConstants.NAVIGATION_DOWN;case view.View.FOCUS_LEFT:return SoundEffectConstants.NAVIGATION_LEFT;case view.View.FOCUS_BACKWARD:case view.View.FOCUS_UP:return SoundEffectConstants.NAVIGATION_UP;}throw Error("new IllegalArgumentException(\"direction must be one of \" + \"{FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT, FOCUS_FORWARD, FOCUS_BACKWARD}.\")");}}]);return SoundEffectConstants;})();SoundEffectConstants.CLICK = 0;SoundEffectConstants.NAVIGATION_LEFT = 1;SoundEffectConstants.NAVIGATION_UP = 2;SoundEffectConstants.NAVIGATION_RIGHT = 3;SoundEffectConstants.NAVIGATION_DOWN = 4;view.SoundEffectConstants = SoundEffectConstants;})(view = android.view || (android.view = {}));})(android || (android = {})); /*
 * Copyright (C) 2012 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ ///<reference path="../../android/util/Log.ts"/>
var android;(function(android){var os;(function(os){var Trace=(function(){function Trace(){_classCallCheck(this,Trace);}_createClass(Trace,null,[{key:"nativeGetEnabledTags",value:function nativeGetEnabledTags(){return Trace.TRACE_TAG_ALWAYS;}},{key:"nativeTraceCounter",value:function nativeTraceCounter(tag,name,value){}},{key:"nativeTraceBegin",value:function nativeTraceBegin(tag,name){}},{key:"nativeTraceEnd",value:function nativeTraceEnd(tag){}},{key:"nativeAsyncTraceBegin",value:function nativeAsyncTraceBegin(tag,name,cookie){}},{key:"nativeAsyncTraceEnd",value:function nativeAsyncTraceEnd(tag,name,cookie){}},{key:"nativeSetAppTracingAllowed",value:function nativeSetAppTracingAllowed(allowed){}},{key:"nativeSetTracingEnabled",value:function nativeSetTracingEnabled(allowed){}},{key:"cacheEnabledTags",value:function cacheEnabledTags(){var tags=Trace.nativeGetEnabledTags();Trace.sEnabledTags = tags;return tags;}},{key:"isTagEnabled",value:function isTagEnabled(traceTag){var tags=Trace.sEnabledTags;if(tags == Trace.TRACE_TAG_NOT_READY){tags = Trace.cacheEnabledTags();}return (tags & traceTag) != 0;}},{key:"traceCounter",value:function traceCounter(traceTag,counterName,counterValue){if(Trace.isTagEnabled(traceTag)){Trace.nativeTraceCounter(traceTag,counterName,counterValue);}}},{key:"setAppTracingAllowed",value:function setAppTracingAllowed(allowed){Trace.nativeSetAppTracingAllowed(allowed);Trace.cacheEnabledTags();}},{key:"setTracingEnabled",value:function setTracingEnabled(enabled){Trace.nativeSetTracingEnabled(enabled);Trace.cacheEnabledTags();}},{key:"traceBegin",value:function traceBegin(traceTag,methodName){if(Trace.isTagEnabled(traceTag)){Trace.nativeTraceBegin(traceTag,methodName);}}},{key:"traceEnd",value:function traceEnd(traceTag){if(Trace.isTagEnabled(traceTag)){Trace.nativeTraceEnd(traceTag);}}},{key:"asyncTraceBegin",value:function asyncTraceBegin(traceTag,methodName,cookie){if(Trace.isTagEnabled(traceTag)){Trace.nativeAsyncTraceBegin(traceTag,methodName,cookie);}}},{key:"asyncTraceEnd",value:function asyncTraceEnd(traceTag,methodName,cookie){if(Trace.isTagEnabled(traceTag)){Trace.nativeAsyncTraceEnd(traceTag,methodName,cookie);}}},{key:"beginSection",value:function beginSection(sectionName){if(Trace.isTagEnabled(Trace.TRACE_TAG_APP)){if(sectionName.length > Trace.MAX_SECTION_NAME_LEN){throw Error("new IllegalArgumentException(\"sectionName is too long\")");}Trace.nativeTraceBegin(Trace.TRACE_TAG_APP,sectionName);}}},{key:"endSection",value:function endSection(){if(Trace.isTagEnabled(Trace.TRACE_TAG_APP)){Trace.nativeTraceEnd(Trace.TRACE_TAG_APP);}}}]);return Trace;})();Trace.TAG = "Trace";Trace.TRACE_TAG_NEVER = 0;Trace.TRACE_TAG_ALWAYS = 1 << 0;Trace.TRACE_TAG_GRAPHICS = 1 << 1;Trace.TRACE_TAG_INPUT = 1 << 2;Trace.TRACE_TAG_VIEW = 1 << 3;Trace.TRACE_TAG_WEBVIEW = 1 << 4;Trace.TRACE_TAG_WINDOW_MANAGER = 1 << 5;Trace.TRACE_TAG_ACTIVITY_MANAGER = 1 << 6;Trace.TRACE_TAG_SYNC_MANAGER = 1 << 7;Trace.TRACE_TAG_AUDIO = 1 << 8;Trace.TRACE_TAG_VIDEO = 1 << 9;Trace.TRACE_TAG_CAMERA = 1 << 10;Trace.TRACE_TAG_HAL = 1 << 11;Trace.TRACE_TAG_APP = 1 << 12;Trace.TRACE_TAG_RESOURCES = 1 << 13;Trace.TRACE_TAG_DALVIK = 1 << 14;Trace.TRACE_TAG_RS = 1 << 15;Trace.TRACE_TAG_NOT_READY = 1 << 63;Trace.MAX_SECTION_NAME_LEN = 127;Trace.sEnabledTags = Trace.TRACE_TAG_NOT_READY;os.Trace = Trace;})(os = android.os || (android.os = {}));})(android || (android = {}));var java;(function(java){var lang;(function(lang){var Integer=(function(){function Integer(){_classCallCheck(this,Integer);}_createClass(Integer,null,[{key:"parseInt",value:function parseInt(value){return Number.parseInt(value);}}]);return Integer;})();Integer.MIN_VALUE = Number.MIN_SAFE_INTEGER;Integer.MAX_VALUE = Number.MAX_SAFE_INTEGER;lang.Integer = Integer;})(lang = java.lang || (java.lang = {}));})(java || (java = {})); /*
 * Copyright (C) 2008 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */var android;(function(android){var text;(function(text){var InputType=function InputType(){_classCallCheck(this,InputType);};InputType.TYPE_MASK_CLASS = 0x0000000f;InputType.TYPE_MASK_VARIATION = 0x00000ff0;InputType.TYPE_MASK_FLAGS = 0x00fff000;InputType.TYPE_NULL = 0x00000000;InputType.TYPE_CLASS_TEXT = 0x00000001;InputType.TYPE_TEXT_FLAG_CAP_CHARACTERS = 0x00001000;InputType.TYPE_TEXT_FLAG_CAP_WORDS = 0x00002000;InputType.TYPE_TEXT_FLAG_CAP_SENTENCES = 0x00004000;InputType.TYPE_TEXT_FLAG_AUTO_CORRECT = 0x00008000;InputType.TYPE_TEXT_FLAG_AUTO_COMPLETE = 0x00010000;InputType.TYPE_TEXT_FLAG_MULTI_LINE = 0x00020000;InputType.TYPE_TEXT_FLAG_IME_MULTI_LINE = 0x00040000;InputType.TYPE_TEXT_FLAG_NO_SUGGESTIONS = 0x00080000;InputType.TYPE_TEXT_VARIATION_NORMAL = 0x00000000;InputType.TYPE_TEXT_VARIATION_URI = 0x00000010;InputType.TYPE_TEXT_VARIATION_EMAIL_ADDRESS = 0x00000020;InputType.TYPE_TEXT_VARIATION_EMAIL_SUBJECT = 0x00000030;InputType.TYPE_TEXT_VARIATION_SHORT_MESSAGE = 0x00000040;InputType.TYPE_TEXT_VARIATION_LONG_MESSAGE = 0x00000050;InputType.TYPE_TEXT_VARIATION_PERSON_NAME = 0x00000060;InputType.TYPE_TEXT_VARIATION_POSTAL_ADDRESS = 0x00000070;InputType.TYPE_TEXT_VARIATION_PASSWORD = 0x00000080;InputType.TYPE_TEXT_VARIATION_VISIBLE_PASSWORD = 0x00000090;InputType.TYPE_TEXT_VARIATION_WEB_EDIT_TEXT = 0x000000a0;InputType.TYPE_TEXT_VARIATION_FILTER = 0x000000b0;InputType.TYPE_TEXT_VARIATION_PHONETIC = 0x000000c0;InputType.TYPE_TEXT_VARIATION_WEB_EMAIL_ADDRESS = 0x000000d0;InputType.TYPE_TEXT_VARIATION_WEB_PASSWORD = 0x000000e0;InputType.TYPE_CLASS_NUMBER = 0x00000002;InputType.TYPE_NUMBER_FLAG_SIGNED = 0x00001000;InputType.TYPE_NUMBER_FLAG_DECIMAL = 0x00002000;InputType.TYPE_NUMBER_VARIATION_NORMAL = 0x00000000;InputType.TYPE_NUMBER_VARIATION_PASSWORD = 0x00000010;InputType.TYPE_CLASS_PHONE = 0x00000003;InputType.TYPE_CLASS_DATETIME = 0x00000004;InputType.TYPE_DATETIME_VARIATION_NORMAL = 0x00000000;InputType.TYPE_DATETIME_VARIATION_DATE = 0x00000010;InputType.TYPE_DATETIME_VARIATION_TIME = 0x00000020;text.InputType = InputType;})(text = android.text || (android.text = {}));})(android || (android = {}));var android;(function(android){var text;(function(text){var TextUtils=(function(){function TextUtils(){_classCallCheck(this,TextUtils);}_createClass(TextUtils,null,[{key:"isEmpty",value:function isEmpty(str){if(str == null || str.length == 0)return true;else return false;}}]);return TextUtils;})();text.TextUtils = TextUtils;})(text = android.text || (android.text = {}));})(android || (android = {})); /**
 * Created by linfaxin on 15/10/3.
 */ ///<reference path="SparseArray.ts"/>
var android;(function(android){var util;(function(util){var LongSparseArray=(function(_util$SparseArray2){_inherits(LongSparseArray,_util$SparseArray2);function LongSparseArray(){_classCallCheck(this,LongSparseArray);_get(Object.getPrototypeOf(LongSparseArray.prototype),"constructor",this).apply(this,arguments);}return LongSparseArray;})(util.SparseArray);util.LongSparseArray = LongSparseArray;})(util = android.util || (android.util = {}));})(android || (android = {})); /*
 * Copyright (C) 2009 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ ///<reference path="../../android/view/View.ts"/>
var android;(function(android){var view;(function(view){var HapticFeedbackConstants=function HapticFeedbackConstants(){_classCallCheck(this,HapticFeedbackConstants);};HapticFeedbackConstants.LONG_PRESS = 0;HapticFeedbackConstants.VIRTUAL_KEY = 1;HapticFeedbackConstants.KEYBOARD_TAP = 3;HapticFeedbackConstants.SAFE_MODE_DISABLED = 10000;HapticFeedbackConstants.SAFE_MODE_ENABLED = 10001;HapticFeedbackConstants.FLAG_IGNORE_VIEW_SETTING = 0x0001;HapticFeedbackConstants.FLAG_IGNORE_GLOBAL_SETTING = 0x0002;view.HapticFeedbackConstants = HapticFeedbackConstants;})(view = android.view || (android.view = {}));})(android || (android = {})); /**
 * Created by linfaxin on 15/11/5.
 */var android;(function(android){var database;(function(database){var DataSetObserver=(function(){function DataSetObserver(){_classCallCheck(this,DataSetObserver);}_createClass(DataSetObserver,[{key:"onChanged",value:function onChanged(){}},{key:"onInvalidated",value:function onInvalidated(){}}]);return DataSetObserver;})();database.DataSetObserver = DataSetObserver;})(database = android.database || (android.database = {}));})(android || (android = {}));var java;(function(java){var lang;(function(lang){var Long=function Long(){_classCallCheck(this,Long);};Long.MIN_VALUE = Number.MIN_SAFE_INTEGER;Long.MAX_VALUE = Number.MAX_SAFE_INTEGER;lang.Long = Long;})(lang = java.lang || (java.lang = {}));})(java || (java = {})); /*
 * Copyright (C) 2006 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ ///<reference path="../../android/database/DataSetObserver.ts"/>
///<reference path="../../android/os/SystemClock.ts"/>
///<reference path="../../android/util/SparseArray.ts"/>
///<reference path="../../android/view/SoundEffectConstants.ts"/>
///<reference path="../../android/view/View.ts"/>
///<reference path="../../android/view/ViewGroup.ts"/>
///<reference path="../../java/lang/Long.ts"/>
///<reference path="Adapter.ts"/>
var android;(function(android){var widget;(function(widget){var DataSetObserver=android.database.DataSetObserver;var SystemClock=android.os.SystemClock;var SoundEffectConstants=android.view.SoundEffectConstants;var View=android.view.View;var ViewGroup=android.view.ViewGroup;var Long=java.lang.Long;var AdapterView=(function(_ViewGroup3){_inherits(AdapterView,_ViewGroup3);function AdapterView(){_classCallCheck(this,AdapterView);for(var _len33=arguments.length,args=Array(_len33),_key33=0;_key33 < _len33;_key33++) {args[_key33] = arguments[_key33];}_get(Object.getPrototypeOf(AdapterView.prototype),"constructor",this).apply(this,args);this.mFirstPosition = 0;this.mSpecificTop = 0;this.mSyncPosition = 0;this.mSyncRowId = AdapterView.INVALID_ROW_ID;this.mSyncHeight = 0;this.mNeedSync = false;this.mSyncMode = 0;this.mLayoutHeight = 0;this.mInLayout = false;this.mNextSelectedPosition = AdapterView.INVALID_POSITION;this.mNextSelectedRowId = AdapterView.INVALID_ROW_ID;this.mSelectedPosition = AdapterView.INVALID_POSITION;this.mSelectedRowId = AdapterView.INVALID_ROW_ID;this.mItemCount = 0;this.mOldItemCount = 0;this.mOldSelectedPosition = AdapterView.INVALID_POSITION;this.mOldSelectedRowId = AdapterView.INVALID_ROW_ID;this.mBlockLayoutRequests = false;}_createClass(AdapterView,[{key:"setOnItemClickListener",value:function setOnItemClickListener(listener){this.mOnItemClickListener = listener;}},{key:"getOnItemClickListener",value:function getOnItemClickListener(){return this.mOnItemClickListener;}},{key:"performItemClick",value:function performItemClick(view,position,id){if(this.mOnItemClickListener != null){this.playSoundEffect(SoundEffectConstants.CLICK);this.mOnItemClickListener.onItemClick(this,view,position,id);return true;}return false;}},{key:"setOnItemLongClickListener",value:function setOnItemLongClickListener(listener){if(!this.isLongClickable()){this.setLongClickable(true);}this.mOnItemLongClickListener = listener;}},{key:"getOnItemLongClickListener",value:function getOnItemLongClickListener(){return this.mOnItemLongClickListener;}},{key:"setOnItemSelectedListener",value:function setOnItemSelectedListener(listener){this.mOnItemSelectedListener = listener;}},{key:"getOnItemSelectedListener",value:function getOnItemSelectedListener(){return this.mOnItemSelectedListener;}},{key:"addView",value:function addView(){throw Error("new UnsupportedOperationException(\"addView() is not supported in AdapterView\")");}},{key:"removeView",value:function removeView(child){throw Error("new UnsupportedOperationException(\"removeView(View) is not supported in AdapterView\")");}},{key:"removeViewAt",value:function removeViewAt(index){throw Error("new UnsupportedOperationException(\"removeViewAt(int) is not supported in AdapterView\")");}},{key:"removeAllViews",value:function removeAllViews(){throw Error("new UnsupportedOperationException(\"removeAllViews() is not supported in AdapterView\")");}},{key:"onLayout",value:function onLayout(changed,left,top,right,bottom){this.mLayoutHeight = this.getHeight();}},{key:"getSelectedItemPosition",value:function getSelectedItemPosition(){return this.mNextSelectedPosition;}},{key:"getSelectedItemId",value:function getSelectedItemId(){return this.mNextSelectedRowId;}},{key:"getSelectedItem",value:function getSelectedItem(){var adapter=this.getAdapter();var selection=this.getSelectedItemPosition();if(adapter != null && adapter.getCount() > 0 && selection >= 0){return adapter.getItem(selection);}else {return null;}}},{key:"getCount",value:function getCount(){return this.mItemCount;}},{key:"getPositionForView",value:function getPositionForView(view){var listItem=view;try{var v=undefined;while(!((v = listItem.getParent()) == this)) {listItem = v;}}catch(e) {return AdapterView.INVALID_POSITION;}var childCount=this.getChildCount();for(var i=0;i < childCount;i++) {if(this.getChildAt(i) == listItem){return this.mFirstPosition + i;}}return AdapterView.INVALID_POSITION;}},{key:"getFirstVisiblePosition",value:function getFirstVisiblePosition(){return this.mFirstPosition;}},{key:"getLastVisiblePosition",value:function getLastVisiblePosition(){return this.mFirstPosition + this.getChildCount() - 1;}},{key:"setEmptyView",value:function setEmptyView(emptyView){this.mEmptyView = emptyView;var adapter=this.getAdapter();var empty=adapter == null || adapter.isEmpty();this.updateEmptyStatus(empty);}},{key:"getEmptyView",value:function getEmptyView(){return this.mEmptyView;}},{key:"isInFilterMode",value:function isInFilterMode(){return false;}},{key:"setFocusable",value:function setFocusable(focusable){var adapter=this.getAdapter();var empty=adapter == null || adapter.getCount() == 0;this.mDesiredFocusableState = focusable;if(!focusable){this.mDesiredFocusableInTouchModeState = false;}_get(Object.getPrototypeOf(AdapterView.prototype),"setFocusable",this).call(this,focusable && (!empty || this.isInFilterMode()));}},{key:"setFocusableInTouchMode",value:function setFocusableInTouchMode(focusable){var adapter=this.getAdapter();var empty=adapter == null || adapter.getCount() == 0;this.mDesiredFocusableInTouchModeState = focusable;if(focusable){this.mDesiredFocusableState = true;}_get(Object.getPrototypeOf(AdapterView.prototype),"setFocusableInTouchMode",this).call(this,focusable && (!empty || this.isInFilterMode()));}},{key:"checkFocus",value:function checkFocus(){var adapter=this.getAdapter();var empty=adapter == null || adapter.getCount() == 0;var focusable=!empty || this.isInFilterMode();_get(Object.getPrototypeOf(AdapterView.prototype),"setFocusableInTouchMode",this).call(this,focusable && this.mDesiredFocusableInTouchModeState);_get(Object.getPrototypeOf(AdapterView.prototype),"setFocusable",this).call(this,focusable && this.mDesiredFocusableState);if(this.mEmptyView != null){this.updateEmptyStatus(adapter == null || adapter.isEmpty());}}},{key:"updateEmptyStatus",value:function updateEmptyStatus(empty){if(this.isInFilterMode()){empty = false;}if(empty){if(this.mEmptyView != null){this.mEmptyView.setVisibility(View.VISIBLE);this.setVisibility(View.GONE);}else {this.setVisibility(View.VISIBLE);}if(this.mDataChanged){this.onLayout(false,this.mLeft,this.mTop,this.mRight,this.mBottom);}}else {if(this.mEmptyView != null)this.mEmptyView.setVisibility(View.GONE);this.setVisibility(View.VISIBLE);}}},{key:"getItemAtPosition",value:function getItemAtPosition(position){var adapter=this.getAdapter();return adapter == null || position < 0?null:adapter.getItem(position);}},{key:"getItemIdAtPosition",value:function getItemIdAtPosition(position){var adapter=this.getAdapter();return adapter == null || position < 0?AdapterView.INVALID_ROW_ID:adapter.getItemId(position);}},{key:"setOnClickListener",value:function setOnClickListener(l){throw Error("new RuntimeException(\"Don't call setOnClickListener for an AdapterView. \" + \"You probably want setOnItemClickListener instead\")");}},{key:"onDetachedFromWindow",value:function onDetachedFromWindow(){_get(Object.getPrototypeOf(AdapterView.prototype),"onDetachedFromWindow",this).call(this);this.removeCallbacks(this.mSelectionNotifier);}},{key:"selectionChanged",value:function selectionChanged(){if(this.mOnItemSelectedListener != null){if(this.mInLayout || this.mBlockLayoutRequests){if(this.mSelectionNotifier == null){this.mSelectionNotifier = new SelectionNotifier(this);}this.post(this.mSelectionNotifier);}else {this.fireOnSelected();this.performAccessibilityActionsOnSelected();}}}},{key:"fireOnSelected",value:function fireOnSelected(){if(this.mOnItemSelectedListener == null){return;}var selection=this.getSelectedItemPosition();if(selection >= 0){var v=this.getSelectedView();this.mOnItemSelectedListener.onItemSelected(this,v,selection,this.getAdapter().getItemId(selection));}else {this.mOnItemSelectedListener.onNothingSelected(this);}}},{key:"performAccessibilityActionsOnSelected",value:function performAccessibilityActionsOnSelected(){}},{key:"isScrollableForAccessibility",value:function isScrollableForAccessibility(){var adapter=this.getAdapter();if(adapter != null){var itemCount=adapter.getCount();return itemCount > 0 && (this.getFirstVisiblePosition() > 0 || this.getLastVisiblePosition() < itemCount - 1);}return false;}},{key:"canAnimate",value:function canAnimate(){return _get(Object.getPrototypeOf(AdapterView.prototype),"canAnimate",this).call(this) && this.mItemCount > 0;}},{key:"handleDataChanged",value:function handleDataChanged(){var count=this.mItemCount;var found=false;if(count > 0){var newPos=undefined;if(this.mNeedSync){this.mNeedSync = false;newPos = this.findSyncPosition();if(newPos >= 0){var selectablePos=this.lookForSelectablePosition(newPos,true);if(selectablePos == newPos){this.setNextSelectedPositionInt(newPos);found = true;}}}if(!found){newPos = this.getSelectedItemPosition();if(newPos >= count){newPos = count - 1;}if(newPos < 0){newPos = 0;}var selectablePos=this.lookForSelectablePosition(newPos,true);if(selectablePos < 0){selectablePos = this.lookForSelectablePosition(newPos,false);}if(selectablePos >= 0){this.setNextSelectedPositionInt(selectablePos);this.checkSelectionChanged();found = true;}}}if(!found){this.mSelectedPosition = AdapterView.INVALID_POSITION;this.mSelectedRowId = AdapterView.INVALID_ROW_ID;this.mNextSelectedPosition = AdapterView.INVALID_POSITION;this.mNextSelectedRowId = AdapterView.INVALID_ROW_ID;this.mNeedSync = false;this.checkSelectionChanged();}}},{key:"checkSelectionChanged",value:function checkSelectionChanged(){if(this.mSelectedPosition != this.mOldSelectedPosition || this.mSelectedRowId != this.mOldSelectedRowId){this.selectionChanged();this.mOldSelectedPosition = this.mSelectedPosition;this.mOldSelectedRowId = this.mSelectedRowId;}}},{key:"findSyncPosition",value:function findSyncPosition(){var count=this.mItemCount;if(count == 0){return AdapterView.INVALID_POSITION;}var idToMatch=this.mSyncRowId;var seed=this.mSyncPosition;if(idToMatch == AdapterView.INVALID_ROW_ID){return AdapterView.INVALID_POSITION;}seed = Math.max(0,seed);seed = Math.min(count - 1,seed);var endTime=SystemClock.uptimeMillis() + AdapterView.SYNC_MAX_DURATION_MILLIS;var rowId=undefined;var first=seed;var last=seed;var next=false;var hitFirst=undefined;var hitLast=undefined;var adapter=this.getAdapter();if(adapter == null){return AdapterView.INVALID_POSITION;}while(SystemClock.uptimeMillis() <= endTime) {rowId = adapter.getItemId(seed);if(rowId == idToMatch){return seed;}hitLast = last == count - 1;hitFirst = first == 0;if(hitLast && hitFirst){break;}if(hitFirst || next && !hitLast){last++;seed = last;next = false;}else if(hitLast || !next && !hitFirst){first--;seed = first;next = true;}}return AdapterView.INVALID_POSITION;}},{key:"lookForSelectablePosition",value:function lookForSelectablePosition(position,lookDown){return position;}},{key:"setSelectedPositionInt",value:function setSelectedPositionInt(position){this.mSelectedPosition = position;this.mSelectedRowId = this.getItemIdAtPosition(position);}},{key:"setNextSelectedPositionInt",value:function setNextSelectedPositionInt(position){this.mNextSelectedPosition = position;this.mNextSelectedRowId = this.getItemIdAtPosition(position);if(this.mNeedSync && this.mSyncMode == AdapterView.SYNC_SELECTED_POSITION && position >= 0){this.mSyncPosition = position;this.mSyncRowId = this.mNextSelectedRowId;}}},{key:"rememberSyncState",value:function rememberSyncState(){if(this.getChildCount() > 0){this.mNeedSync = true;this.mSyncHeight = this.mLayoutHeight;if(this.mSelectedPosition >= 0){var v=this.getChildAt(this.mSelectedPosition - this.mFirstPosition);this.mSyncRowId = this.mNextSelectedRowId;this.mSyncPosition = this.mNextSelectedPosition;if(v != null){this.mSpecificTop = v.getTop();}this.mSyncMode = AdapterView.SYNC_SELECTED_POSITION;}else {var v=this.getChildAt(0);var adapter=this.getAdapter();if(this.mFirstPosition >= 0 && this.mFirstPosition < adapter.getCount()){this.mSyncRowId = adapter.getItemId(this.mFirstPosition);}else {this.mSyncRowId = AdapterView.NO_ID;}this.mSyncPosition = this.mFirstPosition;if(v != null){this.mSpecificTop = v.getTop();}this.mSyncMode = AdapterView.SYNC_FIRST_POSITION;}}}}]);return AdapterView;})(ViewGroup);AdapterView.ITEM_VIEW_TYPE_IGNORE = -1;AdapterView.ITEM_VIEW_TYPE_HEADER_OR_FOOTER = -2;AdapterView.SYNC_SELECTED_POSITION = 0;AdapterView.SYNC_FIRST_POSITION = 1;AdapterView.SYNC_MAX_DURATION_MILLIS = 100;AdapterView.INVALID_POSITION = -1;AdapterView.INVALID_ROW_ID = Long.MIN_VALUE;widget.AdapterView = AdapterView;(function(AdapterView){var AdapterDataSetObserver=(function(_DataSetObserver){_inherits(AdapterDataSetObserver,_DataSetObserver);function AdapterDataSetObserver(AdapterView_this){_classCallCheck(this,AdapterDataSetObserver);_get(Object.getPrototypeOf(AdapterDataSetObserver.prototype),"constructor",this).call(this);this.AdapterView_this = AdapterView_this;}_createClass(AdapterDataSetObserver,[{key:"onChanged",value:function onChanged(){this.AdapterView_this.mDataChanged = true;this.AdapterView_this.mOldItemCount = this.AdapterView_this.mItemCount;this.AdapterView_this.mItemCount = this.AdapterView_this.getAdapter().getCount();this.AdapterView_this.rememberSyncState();this.AdapterView_this.checkFocus();this.AdapterView_this.requestLayout();}},{key:"onInvalidated",value:function onInvalidated(){this.AdapterView_this.mDataChanged = true;this.AdapterView_this.mOldItemCount = this.AdapterView_this.mItemCount;this.AdapterView_this.mItemCount = 0;this.AdapterView_this.mSelectedPosition = AdapterView.INVALID_POSITION;this.AdapterView_this.mSelectedRowId = AdapterView.INVALID_ROW_ID;this.AdapterView_this.mNextSelectedPosition = AdapterView.INVALID_POSITION;this.AdapterView_this.mNextSelectedRowId = AdapterView.INVALID_ROW_ID;this.AdapterView_this.mNeedSync = false;this.AdapterView_this.checkFocus();this.AdapterView_this.requestLayout();}},{key:"clearSavedState",value:function clearSavedState(){}}]);return AdapterDataSetObserver;})(DataSetObserver);AdapterView.AdapterDataSetObserver = AdapterDataSetObserver;})(AdapterView = widget.AdapterView || (widget.AdapterView = {}));var SelectionNotifier=(function(){function SelectionNotifier(AdapterView_this){_classCallCheck(this,SelectionNotifier);this.AdapterView_this = AdapterView_this;}_createClass(SelectionNotifier,[{key:"run",value:function run(){if(this.AdapterView_this.mDataChanged){if(this.AdapterView_this.getAdapter() != null){this.AdapterView_this.post(this);}}else {this.AdapterView_this.fireOnSelected();this.AdapterView_this.performAccessibilityActionsOnSelected();}}}]);return SelectionNotifier;})();})(widget = android.widget || (android.widget = {}));})(android || (android = {})); /*
 * Copyright (C) 2006 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ ///<reference path="../../android/database/DataSetObserver.ts"/>
///<reference path="../../android/view/View.ts"/>
///<reference path="../../android/view/ViewGroup.ts"/>
///<reference path="../../java/lang/Integer.ts"/>
///<reference path="AdapterView.ts"/>
var android;(function(android){var widget;(function(widget){var Integer=java.lang.Integer;var Adapter;(function(Adapter){Adapter.IGNORE_ITEM_VIEW_TYPE = widget.AdapterView.ITEM_VIEW_TYPE_IGNORE;Adapter.NO_SELECTION = Integer.MIN_VALUE;})(Adapter = widget.Adapter || (widget.Adapter = {}));})(widget = android.widget || (android.widget = {}));})(android || (android = {})); /*
 * Copyright (C) 2007 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ /*
 * Copyright (C) 2006 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ ///<reference path="../../android/widget/Adapter.ts"/>
/*
 * Copyright (C) 2006 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ ///<reference path="../../android/graphics/Canvas.ts"/>
///<reference path="../../android/graphics/Rect.ts"/>
///<reference path="../../android/graphics/drawable/Drawable.ts"/>
///<reference path="../../android/text/InputType.ts"/>
///<reference path="../../android/text/TextUtils.ts"/>
///<reference path="../../android/util/Log.ts"/>
///<reference path="../../android/util/LongSparseArray.ts"/>
///<reference path="../../android/util/SparseArray.ts"/>
///<reference path="../../android/util/SparseBooleanArray.ts"/>
///<reference path="../../android/util/StateSet.ts"/>
///<reference path="../../android/view/Gravity.ts"/>
///<reference path="../../android/view/HapticFeedbackConstants.ts"/>
///<reference path="../../android/view/KeyEvent.ts"/>
///<reference path="../../android/view/MotionEvent.ts"/>
///<reference path="../../android/view/VelocityTracker.ts"/>
///<reference path="../../android/view/View.ts"/>
///<reference path="../../android/view/ViewConfiguration.ts"/>
///<reference path="../../android/view/ViewGroup.ts"/>
///<reference path="../../android/view/ViewParent.ts"/>
///<reference path="../../android/view/ViewTreeObserver.ts"/>
///<reference path="../../android/view/animation/Interpolator.ts"/>
///<reference path="../../android/view/animation/LinearInterpolator.ts"/>
///<reference path="../../java/util/ArrayList.ts"/>
///<reference path="../../java/util/List.ts"/>
///<reference path="../../java/lang/Integer.ts"/>
///<reference path="../../java/lang/Runnable.ts"/>
///<reference path="../../java/lang/System.ts"/>
///<reference path="../../android/widget/Adapter.ts"/>
///<reference path="../../android/widget/AdapterView.ts"/>
///<reference path="../../android/widget/Button.ts"/>
///<reference path="../../android/widget/Checkable.ts"/>
///<reference path="../../android/widget/ListAdapter.ts"/>
///<reference path="../../android/widget/OverScroller.ts"/>
///<reference path="../../android/R/drawable.ts"/>
var android;(function(android){var widget;(function(widget){var Rect=android.graphics.Rect;var Log=android.util.Log;var LongSparseArray=android.util.LongSparseArray;var SparseArray=android.util.SparseArray;var SparseBooleanArray=android.util.SparseBooleanArray;var StateSet=android.util.StateSet;var HapticFeedbackConstants=android.view.HapticFeedbackConstants;var KeyEvent=android.view.KeyEvent;var MotionEvent=android.view.MotionEvent;var VelocityTracker=android.view.VelocityTracker;var View=android.view.View;var ViewConfiguration=android.view.ViewConfiguration;var ViewGroup=android.view.ViewGroup;var LinearInterpolator=android.view.animation.LinearInterpolator;var ArrayList=java.util.ArrayList;var Integer=java.lang.Integer;var System=java.lang.System;var AdapterView=android.widget.AdapterView;var OverScroller=android.widget.OverScroller;var AbsListView=(function(_AdapterView){_inherits(AbsListView,_AdapterView);function AbsListView(bindElement,rootElement){var _this23=this;_classCallCheck(this,AbsListView);_get(Object.getPrototypeOf(AbsListView.prototype),"constructor",this).call(this,bindElement,rootElement);this.mChoiceMode = AbsListView.CHOICE_MODE_NONE;this.mCheckedItemCount = 0;this.mDeferNotifyDataSetChanged = false;this.mDrawSelectorOnTop = false;this.mSelectorPosition = AbsListView.INVALID_POSITION;this.mSelectorRect = new Rect();this.mRecycler = new AbsListView.RecycleBin(this);this.mSelectionLeftPadding = 0;this.mSelectionTopPadding = 0;this.mSelectionRightPadding = 0;this.mSelectionBottomPadding = 0;this.mListPadding = new Rect();this.mWidthMeasureSpec = 0;this.mMotionPosition = 0;this.mMotionViewOriginalTop = 0;this.mMotionViewNewTop = 0;this.mMotionX = 0;this.mMotionY = 0;this.mTouchMode = AbsListView.TOUCH_MODE_REST;this.mLastY = 0;this.mMotionCorrection = 0;this.mSelectedTop = 0;this.mSmoothScrollbarEnabled = true;this.mResurrectToPosition = AbsListView.INVALID_POSITION;this.mOverscrollMax = 0;this.mLastTouchMode = AbsListView.TOUCH_MODE_UNKNOWN;this.mScrollProfilingStarted = false;this.mFlingProfilingStarted = false;this.mTranscriptMode = 0;this.mCacheColorHint = 0;this.mLastScrollState = AbsListView.OnScrollListener.SCROLL_STATE_IDLE;this.mDensityScale = 0;this.mMinimumVelocity = 0;this.mMaximumVelocity = 0;this.mVelocityScale = 1.0;this.mIsScrap = new Array(1);this.mActivePointerId = AbsListView.INVALID_POINTER;this.mOverscrollDistance = 0;this._mOverflingDistance = 0;this.mFirstPositionDistanceGuess = 0;this.mLastPositionDistanceGuess = 0;this.mDirection = 0;this.mGlowPaddingLeft = 0;this.mGlowPaddingRight = 0;this.mLastHandledItemCount = 0;this.initAbsListView();this.setVerticalScrollBarEnabled(true);this.initializeScrollbars();this._attrBinder.addAttr('listSelector',function(value){var d=_this23._attrBinder.parseDrawable(value);if(d)_this23.setSelector(d);});this._attrBinder.addAttr('drawSelectorOnTop',function(value){_this23.mDrawSelectorOnTop = _this23._attrBinder.parseBoolean(value,false);});this._attrBinder.addAttr('stackFromBottom',function(value){_this23.setStackFromBottom(_this23._attrBinder.parseBoolean(value,false));});this._attrBinder.addAttr('scrollingCache',function(value){_this23.setScrollingCacheEnabled(_this23._attrBinder.parseBoolean(value,true));});this._attrBinder.addAttr('transcriptMode',function(value){var transcriptMode=_this23._attrBinder.parseNumber(value,AbsListView.TRANSCRIPT_MODE_DISABLED);_this23.setTranscriptMode(transcriptMode);});this._attrBinder.addAttr('cacheColorHint',function(value){var color=_this23._attrBinder.parseNumber(value,0);_this23.setCacheColorHint(color);});this._attrBinder.addAttr('fastScrollEnabled',function(value){var enableFastScroll=_this23._attrBinder.parseBoolean(value,false);_this23.setFastScrollEnabled(enableFastScroll);});this._attrBinder.addAttr('fastScrollAlwaysVisible',function(value){var fastScrollAlwaysVisible=_this23._attrBinder.parseBoolean(value,false);_this23.setFastScrollAlwaysVisible(fastScrollAlwaysVisible);});this._attrBinder.addAttr('smoothScrollbar',function(value){var smoothScrollbar=_this23._attrBinder.parseBoolean(value,true);_this23.setSmoothScrollbarEnabled(smoothScrollbar);});this._attrBinder.addAttr('choiceMode',function(value){_this23.setChoiceMode(_this23._attrBinder.parseNumber(value,AbsListView.CHOICE_MODE_NONE));});}_createClass(AbsListView,[{key:"initAbsListView",value:function initAbsListView(){this.setClickable(true);this.setFocusableInTouchMode(true);this.setWillNotDraw(false);this.setAlwaysDrawnWithCacheEnabled(false);this.setScrollingCacheEnabled(true);var configuration=ViewConfiguration.get();this.mTouchSlop = configuration.getScaledTouchSlop();this.mMinimumVelocity = configuration.getScaledMinimumFlingVelocity();this.mMaximumVelocity = configuration.getScaledMaximumFlingVelocity();this.mOverscrollDistance = configuration.getScaledOverscrollDistance();this.mOverflingDistance = configuration.getScaledOverflingDistance();this.mDensityScale = android.content.res.Resources.getDisplayMetrics().density;this.mLayoutMode = AbsListView.LAYOUT_NORMAL;}},{key:"setOverScrollMode",value:function setOverScrollMode(mode){if(mode != AbsListView.OVER_SCROLL_NEVER){}else {}_get(Object.getPrototypeOf(AbsListView.prototype),"setOverScrollMode",this).call(this,mode);}},{key:"setAdapter",value:function setAdapter(adapter){if(adapter != null){this.mAdapterHasStableIds = this.mAdapter.hasStableIds();if(this.mChoiceMode != AbsListView.CHOICE_MODE_NONE && this.mAdapterHasStableIds && this.mCheckedIdStates == null){this.mCheckedIdStates = new LongSparseArray();}}if(this.mCheckStates != null){this.mCheckStates.clear();}if(this.mCheckedIdStates != null){this.mCheckedIdStates.clear();}}},{key:"getCheckedItemCount",value:function getCheckedItemCount(){return this.mCheckedItemCount;}},{key:"isItemChecked",value:function isItemChecked(position){if(this.mChoiceMode != AbsListView.CHOICE_MODE_NONE && this.mCheckStates != null){return this.mCheckStates.get(position);}return false;}},{key:"getCheckedItemPosition",value:function getCheckedItemPosition(){if(this.mChoiceMode == AbsListView.CHOICE_MODE_SINGLE && this.mCheckStates != null && this.mCheckStates.size() == 1){return this.mCheckStates.keyAt(0);}return AbsListView.INVALID_POSITION;}},{key:"getCheckedItemPositions",value:function getCheckedItemPositions(){if(this.mChoiceMode != AbsListView.CHOICE_MODE_NONE){return this.mCheckStates;}return null;}},{key:"getCheckedItemIds",value:function getCheckedItemIds(){if(this.mChoiceMode == AbsListView.CHOICE_MODE_NONE || this.mCheckedIdStates == null || this.mAdapter == null){return [0];}var idStates=this.mCheckedIdStates;var count=idStates.size();var ids=[count];for(var i=0;i < count;i++) {ids[i] = idStates.keyAt(i);}return ids;}},{key:"clearChoices",value:function clearChoices(){if(this.mCheckStates != null){this.mCheckStates.clear();}if(this.mCheckedIdStates != null){this.mCheckedIdStates.clear();}this.mCheckedItemCount = 0;}},{key:"setItemChecked",value:function setItemChecked(position,value){if(this.mChoiceMode == AbsListView.CHOICE_MODE_NONE){return;}if(this.mChoiceMode == AbsListView.CHOICE_MODE_MULTIPLE || this.mChoiceMode == AbsListView.CHOICE_MODE_MULTIPLE_MODAL){var oldValue=this.mCheckStates.get(position);this.mCheckStates.put(position,value);if(this.mCheckedIdStates != null && this.mAdapter.hasStableIds()){if(value){this.mCheckedIdStates.put(this.mAdapter.getItemId(position),position);}else {this.mCheckedIdStates["delete"](this.mAdapter.getItemId(position));}}if(oldValue != value){if(value){this.mCheckedItemCount++;}else {this.mCheckedItemCount--;}}}else {var updateIds=this.mCheckedIdStates != null && this.mAdapter.hasStableIds();if(value || this.isItemChecked(position)){this.mCheckStates.clear();if(updateIds){this.mCheckedIdStates.clear();}}if(value){this.mCheckStates.put(position,true);if(updateIds){this.mCheckedIdStates.put(this.mAdapter.getItemId(position),position);}this.mCheckedItemCount = 1;}else if(this.mCheckStates.size() == 0 || !this.mCheckStates.valueAt(0)){this.mCheckedItemCount = 0;}}if(!this.mInLayout && !this.mBlockLayoutRequests){this.mDataChanged = true;this.rememberSyncState();this.requestLayout();}}},{key:"performItemClick",value:function performItemClick(view,position,id){var handled=false;var dispatchItemClick=true;if(this.mChoiceMode != AbsListView.CHOICE_MODE_NONE){handled = true;var checkedStateChanged=false;if(this.mChoiceMode == AbsListView.CHOICE_MODE_MULTIPLE || this.mChoiceMode == AbsListView.CHOICE_MODE_MULTIPLE_MODAL && this.mChoiceActionMode != null){var checked=!this.mCheckStates.get(position,false);this.mCheckStates.put(position,checked);if(this.mCheckedIdStates != null && this.mAdapter.hasStableIds()){if(checked){this.mCheckedIdStates.put(this.mAdapter.getItemId(position),position);}else {this.mCheckedIdStates["delete"](this.mAdapter.getItemId(position));}}if(checked){this.mCheckedItemCount++;}else {this.mCheckedItemCount--;}checkedStateChanged = true;}else if(this.mChoiceMode == AbsListView.CHOICE_MODE_SINGLE){var checked=!this.mCheckStates.get(position,false);if(checked){this.mCheckStates.clear();this.mCheckStates.put(position,true);if(this.mCheckedIdStates != null && this.mAdapter.hasStableIds()){this.mCheckedIdStates.clear();this.mCheckedIdStates.put(this.mAdapter.getItemId(position),position);}this.mCheckedItemCount = 1;}else if(this.mCheckStates.size() == 0 || !this.mCheckStates.valueAt(0)){this.mCheckedItemCount = 0;}checkedStateChanged = true;}if(checkedStateChanged){this.updateOnScreenCheckedViews();}}if(dispatchItemClick){handled = _get(Object.getPrototypeOf(AbsListView.prototype),"performItemClick",this).call(this,view,position,id) || handled;}return handled;}},{key:"updateOnScreenCheckedViews",value:function updateOnScreenCheckedViews(){var firstPos=this.mFirstPosition;var count=this.getChildCount();var useActivated=true;for(var i=0;i < count;i++) {var child=this.getChildAt(i);var position=firstPos + i;if(child['setChecked']){child.setChecked(this.mCheckStates.get(position));}else if(useActivated){child.setActivated(this.mCheckStates.get(position));}}}},{key:"getChoiceMode",value:function getChoiceMode(){return this.mChoiceMode;}},{key:"setChoiceMode",value:function setChoiceMode(choiceMode){this.mChoiceMode = choiceMode;if(this.mChoiceActionMode != null){this.mChoiceActionMode.finish();this.mChoiceActionMode = null;}if(this.mChoiceMode != AbsListView.CHOICE_MODE_NONE){if(this.mCheckStates == null){this.mCheckStates = new SparseBooleanArray(0);}if(this.mCheckedIdStates == null && this.mAdapter != null && this.mAdapter.hasStableIds()){this.mCheckedIdStates = new LongSparseArray(0);}if(this.mChoiceMode == AbsListView.CHOICE_MODE_MULTIPLE_MODAL){this.clearChoices();this.setLongClickable(true);}}}},{key:"contentFits",value:function contentFits(){var childCount=this.getChildCount();if(childCount == 0)return true;if(childCount != this.mItemCount)return false;return this.getChildAt(0).getTop() >= this.mListPadding.top && this.getChildAt(childCount - 1).getBottom() <= this.getHeight() - this.mListPadding.bottom;}},{key:"setFastScrollEnabled",value:function setFastScrollEnabled(enabled){if(this.mFastScrollEnabled != enabled){this.mFastScrollEnabled = enabled;this.setFastScrollerEnabledUiThread(enabled);}}},{key:"setFastScrollerEnabledUiThread",value:function setFastScrollerEnabledUiThread(enabled){}},{key:"setFastScrollAlwaysVisible",value:function setFastScrollAlwaysVisible(alwaysShow){if(this.mFastScrollAlwaysVisible != alwaysShow){if(alwaysShow && !this.mFastScrollEnabled){this.setFastScrollEnabled(true);}this.mFastScrollAlwaysVisible = alwaysShow;this.setFastScrollerAlwaysVisibleUiThread(alwaysShow);}}},{key:"setFastScrollerAlwaysVisibleUiThread",value:function setFastScrollerAlwaysVisibleUiThread(alwaysShow){}},{key:"isOwnerThread",value:function isOwnerThread(){return true;}},{key:"isFastScrollAlwaysVisible",value:function isFastScrollAlwaysVisible(){return false;}},{key:"getVerticalScrollbarWidth",value:function getVerticalScrollbarWidth(){return _get(Object.getPrototypeOf(AbsListView.prototype),"getVerticalScrollbarWidth",this).call(this);}},{key:"isFastScrollEnabled",value:function isFastScrollEnabled(){return false;}},{key:"setVerticalScrollbarPosition",value:function setVerticalScrollbarPosition(position){_get(Object.getPrototypeOf(AbsListView.prototype),"setVerticalScrollbarPosition",this).call(this,position);}},{key:"setScrollBarStyle",value:function setScrollBarStyle(style){_get(Object.getPrototypeOf(AbsListView.prototype),"setScrollBarStyle",this).call(this,style);}},{key:"isVerticalScrollBarHidden",value:function isVerticalScrollBarHidden(){return this.isFastScrollEnabled();}},{key:"setSmoothScrollbarEnabled",value:function setSmoothScrollbarEnabled(enabled){this.mSmoothScrollbarEnabled = enabled;}},{key:"isSmoothScrollbarEnabled",value:function isSmoothScrollbarEnabled(){return this.mSmoothScrollbarEnabled;}},{key:"setOnScrollListener",value:function setOnScrollListener(l){this.mOnScrollListener = l;this.invokeOnItemScrollListener();}},{key:"invokeOnItemScrollListener",value:function invokeOnItemScrollListener(){if(this.mOnScrollListener != null){this.mOnScrollListener.onScroll(this,this.mFirstPosition,this.getChildCount(),this.mItemCount);}this.onScrollChanged(0,0,0,0);}},{key:"isScrollingCacheEnabled",value:function isScrollingCacheEnabled(){return this.mScrollingCacheEnabled;}},{key:"setScrollingCacheEnabled",value:function setScrollingCacheEnabled(enabled){if(this.mScrollingCacheEnabled && !enabled){this.clearScrollingCache();}this.mScrollingCacheEnabled = enabled;}},{key:"setTextFilterEnabled",value:function setTextFilterEnabled(textFilterEnabled){this.mTextFilterEnabled = textFilterEnabled;}},{key:"isTextFilterEnabled",value:function isTextFilterEnabled(){return this.mTextFilterEnabled;}},{key:"getFocusedRect",value:function getFocusedRect(r){var view=this.getSelectedView();if(view != null && view.getParent() == this){view.getFocusedRect(r);this.offsetDescendantRectToMyCoords(view,r);}else {_get(Object.getPrototypeOf(AbsListView.prototype),"getFocusedRect",this).call(this,r);}}},{key:"useDefaultSelector",value:function useDefaultSelector(){this.setSelector(android.R.drawable.list_selector_background);}},{key:"isStackFromBottom",value:function isStackFromBottom(){return this.mStackFromBottom;}},{key:"setStackFromBottom",value:function setStackFromBottom(stackFromBottom){if(this.mStackFromBottom != stackFromBottom){this.mStackFromBottom = stackFromBottom;this.requestLayoutIfNecessary();}}},{key:"requestLayoutIfNecessary",value:function requestLayoutIfNecessary(){if(this.getChildCount() > 0){this.resetList();this.requestLayout();this.invalidate();}}},{key:"onFocusChanged",value:function onFocusChanged(gainFocus,direction,previouslyFocusedRect){_get(Object.getPrototypeOf(AbsListView.prototype),"onFocusChanged",this).call(this,gainFocus,direction,previouslyFocusedRect);if(gainFocus && this.mSelectedPosition < 0 && !this.isInTouchMode()){if(!this.isAttachedToWindow() && this.mAdapter != null){this.mDataChanged = true;this.mOldItemCount = this.mItemCount;this.mItemCount = this.mAdapter.getCount();}this.resurrectSelection();}}},{key:"requestLayout",value:function requestLayout(){if(!this.mBlockLayoutRequests && !this.mInLayout){_get(Object.getPrototypeOf(AbsListView.prototype),"requestLayout",this).call(this);}}},{key:"resetList",value:function resetList(){this.removeAllViewsInLayout();this.mFirstPosition = 0;this.mDataChanged = false;this.mPositionScrollAfterLayout = null;this.mNeedSync = false;this.mPendingSync = null;this.mOldSelectedPosition = AbsListView.INVALID_POSITION;this.mOldSelectedRowId = AbsListView.INVALID_ROW_ID;this.setSelectedPositionInt(AbsListView.INVALID_POSITION);this.setNextSelectedPositionInt(AbsListView.INVALID_POSITION);this.mSelectedTop = 0;this.mSelectorPosition = AbsListView.INVALID_POSITION;this.mSelectorRect.setEmpty();this.invalidate();}},{key:"computeVerticalScrollExtent",value:function computeVerticalScrollExtent(){var count=this.getChildCount();if(count > 0){if(this.mSmoothScrollbarEnabled){var extent=count * 100;var view=this.getChildAt(0);var _top13=view.getTop();var height=view.getHeight();if(height > 0){extent += _top13 * 100 / height;}view = this.getChildAt(count - 1);var bottom=view.getBottom();height = view.getHeight();if(height > 0){extent -= (bottom - this.getHeight()) * 100 / height;}return extent;}else {return 1;}}return 0;}},{key:"computeVerticalScrollOffset",value:function computeVerticalScrollOffset(){var firstPosition=this.mFirstPosition;var childCount=this.getChildCount();if(firstPosition >= 0 && childCount > 0){if(this.mSmoothScrollbarEnabled){var view=this.getChildAt(0);var _top14=view.getTop();var height=view.getHeight();if(height > 0){return Math.max(firstPosition * 100 - _top14 * 100 / height + Math.floor(this.mScrollY / this.getHeight() * this.mItemCount * 100),0);}}else {var index=undefined;var count=this.mItemCount;if(firstPosition == 0){index = 0;}else if(firstPosition + childCount == count){index = count;}else {index = firstPosition + childCount / 2;}return Math.floor(firstPosition + childCount * (index / count));}}return 0;}},{key:"computeVerticalScrollRange",value:function computeVerticalScrollRange(){var result=undefined;if(this.mSmoothScrollbarEnabled){result = Math.max(this.mItemCount * 100,0);if(this.mScrollY != 0){result += Math.abs(Math.floor(this.mScrollY / this.getHeight() * this.mItemCount * 100));}}else {result = this.mItemCount;}return result;}},{key:"getTopFadingEdgeStrength",value:function getTopFadingEdgeStrength(){var count=this.getChildCount();var fadeEdge=_get(Object.getPrototypeOf(AbsListView.prototype),"getTopFadingEdgeStrength",this).call(this);if(count == 0){return fadeEdge;}else {if(this.mFirstPosition > 0){return 1.0;}var _top15=this.getChildAt(0).getTop();var fadeLength=this.getVerticalFadingEdgeLength();return _top15 < this.mPaddingTop?-(_top15 - this.mPaddingTop) / fadeLength:fadeEdge;}}},{key:"getBottomFadingEdgeStrength",value:function getBottomFadingEdgeStrength(){var count=this.getChildCount();var fadeEdge=_get(Object.getPrototypeOf(AbsListView.prototype),"getBottomFadingEdgeStrength",this).call(this);if(count == 0){return fadeEdge;}else {if(this.mFirstPosition + count - 1 < this.mItemCount - 1){return 1.0;}var bottom=this.getChildAt(count - 1).getBottom();var height=this.getHeight();var fadeLength=this.getVerticalFadingEdgeLength();return bottom > height - this.mPaddingBottom?(bottom - height + this.mPaddingBottom) / fadeLength:fadeEdge;}}},{key:"onMeasure",value:function onMeasure(widthMeasureSpec,heightMeasureSpec){if(this.mSelector == null){this.useDefaultSelector();}var listPadding=this.mListPadding;listPadding.left = this.mSelectionLeftPadding + this.mPaddingLeft;listPadding.top = this.mSelectionTopPadding + this.mPaddingTop;listPadding.right = this.mSelectionRightPadding + this.mPaddingRight;listPadding.bottom = this.mSelectionBottomPadding + this.mPaddingBottom;if(this.mTranscriptMode == AbsListView.TRANSCRIPT_MODE_NORMAL){var childCount=this.getChildCount();var listBottom=this.getHeight() - this.getPaddingBottom();var lastChild=this.getChildAt(childCount - 1);var lastBottom=lastChild != null?lastChild.getBottom():listBottom;this.mForceTranscriptScroll = this.mFirstPosition + childCount >= this.mLastHandledItemCount && lastBottom <= listBottom;}}},{key:"onLayout",value:function onLayout(changed,l,t,r,b){_get(Object.getPrototypeOf(AbsListView.prototype),"onLayout",this).call(this,changed,l,t,r,b);this.mInLayout = true;if(changed){var childCount=this.getChildCount();for(var i=0;i < childCount;i++) {this.getChildAt(i).forceLayout();}this.mRecycler.markChildrenDirty();}this.layoutChildren();this.mInLayout = false;this.mOverscrollMax = (b - t) / AbsListView.OVERSCROLL_LIMIT_DIVISOR;}},{key:"setFrame",value:function setFrame(left,top,right,bottom){var changed=_get(Object.getPrototypeOf(AbsListView.prototype),"setFrame",this).call(this,left,top,right,bottom);if(changed){var visible=this.getWindowVisibility() == View.VISIBLE;}return changed;}},{key:"layoutChildren",value:function layoutChildren(){}},{key:"updateScrollIndicators",value:function updateScrollIndicators(){if(this.mScrollUp != null){var canScrollUp=undefined;canScrollUp = this.mFirstPosition > 0;if(!canScrollUp){if(this.getChildCount() > 0){var child=this.getChildAt(0);canScrollUp = child.getTop() < this.mListPadding.top;}}this.mScrollUp.setVisibility(canScrollUp?View.VISIBLE:View.INVISIBLE);}if(this.mScrollDown != null){var canScrollDown=undefined;var count=this.getChildCount();canScrollDown = this.mFirstPosition + count < this.mItemCount;if(!canScrollDown && count > 0){var child=this.getChildAt(count - 1);canScrollDown = child.getBottom() > this.mBottom - this.mListPadding.bottom;}this.mScrollDown.setVisibility(canScrollDown?View.VISIBLE:View.INVISIBLE);}}},{key:"getSelectedView",value:function getSelectedView(){if(this.mItemCount > 0 && this.mSelectedPosition >= 0){return this.getChildAt(this.mSelectedPosition - this.mFirstPosition);}else {return null;}}},{key:"getListPaddingTop",value:function getListPaddingTop(){return this.mListPadding.top;}},{key:"getListPaddingBottom",value:function getListPaddingBottom(){return this.mListPadding.bottom;}},{key:"getListPaddingLeft",value:function getListPaddingLeft(){return this.mListPadding.left;}},{key:"getListPaddingRight",value:function getListPaddingRight(){return this.mListPadding.right;}},{key:"obtainView",value:function obtainView(position,isScrap){isScrap[0] = false;var scrapView=undefined;scrapView = this.mRecycler.getTransientStateView(position);if(scrapView == null){scrapView = this.mRecycler.getScrapView(position);}var child=undefined;if(scrapView != null){child = this.mAdapter.getView(position,scrapView,this);if(child != scrapView){this.mRecycler.addScrapView(scrapView,position);if(this.mCacheColorHint != 0){child.setDrawingCacheBackgroundColor(this.mCacheColorHint);}}else {isScrap[0] = true;child.dispatchFinishTemporaryDetach();}}else {child = this.mAdapter.getView(position,null,this);if(this.mCacheColorHint != 0){child.setDrawingCacheBackgroundColor(this.mCacheColorHint);}}if(this.mAdapterHasStableIds){var vlp=child.getLayoutParams();var lp=undefined;if(vlp == null){lp = this.generateDefaultLayoutParams();}else if(!this.checkLayoutParams(vlp)){lp = this.generateLayoutParams(vlp);}else {lp = vlp;}lp.itemId = this.mAdapter.getItemId(position);child.setLayoutParams(lp);}return child;}},{key:"positionSelector",value:function positionSelector(){for(var _len34=arguments.length,args=Array(_len34),_key34=0;_key34 < _len34;_key34++) {args[_key34] = arguments[_key34];}if(args.length === 4){var l=args[0];var t=args[1];var r=args[2];var b=args[3];this.mSelectorRect.set(l - this.mSelectionLeftPadding,t - this.mSelectionTopPadding,r + this.mSelectionRightPadding,b + this.mSelectionBottomPadding);}else {var position=args[0];var sel=args[1];if(position != AbsListView.INVALID_POSITION){this.mSelectorPosition = position;}var selectorRect=this.mSelectorRect;selectorRect.set(sel.getLeft(),sel.getTop(),sel.getRight(),sel.getBottom());if(sel['adjustListItemSelectionBounds']){sel.adjustListItemSelectionBounds(selectorRect);}this.positionSelector(selectorRect.left,selectorRect.top,selectorRect.right,selectorRect.bottom);var isChildViewEnabled=this.mIsChildViewEnabled;if(sel.isEnabled() != isChildViewEnabled){this.mIsChildViewEnabled = !isChildViewEnabled;if(this.getSelectedItemPosition() != AbsListView.INVALID_POSITION){this.refreshDrawableState();}}}}},{key:"dispatchDraw",value:function dispatchDraw(canvas){var saveCount=0;var clipToPadding=(this.mGroupFlags & AbsListView.CLIP_TO_PADDING_MASK) == AbsListView.CLIP_TO_PADDING_MASK;if(clipToPadding){saveCount = canvas.save();var _scrollX5=this.mScrollX;var _scrollY7=this.mScrollY;canvas.clipRect(_scrollX5 + this.mPaddingLeft,_scrollY7 + this.mPaddingTop,_scrollX5 + this.mRight - this.mLeft - this.mPaddingRight,_scrollY7 + this.mBottom - this.mTop - this.mPaddingBottom);this.mGroupFlags &= ~AbsListView.CLIP_TO_PADDING_MASK;}var drawSelectorOnTop=this.mDrawSelectorOnTop;if(!drawSelectorOnTop){this.drawSelector(canvas);}_get(Object.getPrototypeOf(AbsListView.prototype),"dispatchDraw",this).call(this,canvas);if(drawSelectorOnTop){this.drawSelector(canvas);}if(clipToPadding){canvas.restoreToCount(saveCount);this.mGroupFlags |= AbsListView.CLIP_TO_PADDING_MASK;}}},{key:"isPaddingOffsetRequired",value:function isPaddingOffsetRequired(){return (this.mGroupFlags & AbsListView.CLIP_TO_PADDING_MASK) != AbsListView.CLIP_TO_PADDING_MASK;}},{key:"getLeftPaddingOffset",value:function getLeftPaddingOffset(){return (this.mGroupFlags & AbsListView.CLIP_TO_PADDING_MASK) == AbsListView.CLIP_TO_PADDING_MASK?0:-this.mPaddingLeft;}},{key:"getTopPaddingOffset",value:function getTopPaddingOffset(){return (this.mGroupFlags & AbsListView.CLIP_TO_PADDING_MASK) == AbsListView.CLIP_TO_PADDING_MASK?0:-this.mPaddingTop;}},{key:"getRightPaddingOffset",value:function getRightPaddingOffset(){return (this.mGroupFlags & AbsListView.CLIP_TO_PADDING_MASK) == AbsListView.CLIP_TO_PADDING_MASK?0:this.mPaddingRight;}},{key:"getBottomPaddingOffset",value:function getBottomPaddingOffset(){return (this.mGroupFlags & AbsListView.CLIP_TO_PADDING_MASK) == AbsListView.CLIP_TO_PADDING_MASK?0:this.mPaddingBottom;}},{key:"onSizeChanged",value:function onSizeChanged(w,h,oldw,oldh){if(this.getChildCount() > 0){this.mDataChanged = true;this.rememberSyncState();}}},{key:"touchModeDrawsInPressedState",value:function touchModeDrawsInPressedState(){switch(this.mTouchMode){case AbsListView.TOUCH_MODE_TAP:case AbsListView.TOUCH_MODE_DONE_WAITING:return true;default:return false;}}},{key:"shouldShowSelector",value:function shouldShowSelector(){return !this.isInTouchMode() || this.touchModeDrawsInPressedState() && this.isPressed();}},{key:"drawSelector",value:function drawSelector(canvas){if(!this.mSelectorRect.isEmpty()){var selector=this.mSelector;selector.setBounds(this.mSelectorRect);selector.draw(canvas);}}},{key:"setDrawSelectorOnTop",value:function setDrawSelectorOnTop(onTop){this.mDrawSelectorOnTop = onTop;}},{key:"setSelector",value:function setSelector(sel){if(this.mSelector != null){this.mSelector.setCallback(null);this.unscheduleDrawable(this.mSelector);}this.mSelector = sel;var padding=new Rect();sel.getPadding(padding);this.mSelectionLeftPadding = padding.left;this.mSelectionTopPadding = padding.top;this.mSelectionRightPadding = padding.right;this.mSelectionBottomPadding = padding.bottom;sel.setCallback(this);this.updateSelectorState();}},{key:"getSelector",value:function getSelector(){return this.mSelector;}},{key:"keyPressed",value:function keyPressed(){if(!this.isEnabled() || !this.isClickable()){return;}var selector=this.mSelector;var selectorRect=this.mSelectorRect;if(selector != null && (this.isFocused() || this.touchModeDrawsInPressedState()) && !selectorRect.isEmpty()){var v=this.getChildAt(this.mSelectedPosition - this.mFirstPosition);if(v != null){if(v.hasFocusable())return;v.setPressed(true);}this.setPressed(true);var longClickable=this.isLongClickable();var d=selector.getCurrent();if(longClickable && !this.mDataChanged){if(this.mPendingCheckForKeyLongPress == null){this.mPendingCheckForKeyLongPress = new AbsListView.CheckForKeyLongPress(this);}this.mPendingCheckForKeyLongPress.rememberWindowAttachCount();this.postDelayed(this.mPendingCheckForKeyLongPress,ViewConfiguration.getLongPressTimeout());}}}},{key:"setScrollIndicators",value:function setScrollIndicators(up,down){this.mScrollUp = up;this.mScrollDown = down;}},{key:"updateSelectorState",value:function updateSelectorState(){if(this.mSelector != null){if(this.shouldShowSelector()){this.mSelector.setState(this.getDrawableState());}else {this.mSelector.setState(StateSet.NOTHING);}}}},{key:"drawableStateChanged",value:function drawableStateChanged(){_get(Object.getPrototypeOf(AbsListView.prototype),"drawableStateChanged",this).call(this);this.updateSelectorState();}},{key:"onCreateDrawableState",value:function onCreateDrawableState(extraSpace){if(this.mIsChildViewEnabled){return _get(Object.getPrototypeOf(AbsListView.prototype),"onCreateDrawableState",this).call(this,extraSpace);}var enabledState=AbsListView.ENABLED_STATE_SET[0];var state=_get(Object.getPrototypeOf(AbsListView.prototype),"onCreateDrawableState",this).call(this,extraSpace + 1);var enabledPos=-1;for(var i=state.length - 1;i >= 0;i--) {if(state[i] == enabledState){enabledPos = i;break;}}if(enabledPos >= 0){System.arraycopy(state,enabledPos + 1,state,enabledPos,state.length - enabledPos - 1);}return state;}},{key:"verifyDrawable",value:function verifyDrawable(dr){return this.mSelector == dr || _get(Object.getPrototypeOf(AbsListView.prototype),"verifyDrawable",this).call(this,dr);}},{key:"jumpDrawablesToCurrentState",value:function jumpDrawablesToCurrentState(){_get(Object.getPrototypeOf(AbsListView.prototype),"jumpDrawablesToCurrentState",this).call(this);if(this.mSelector != null)this.mSelector.jumpToCurrentState();}},{key:"onAttachedToWindow",value:function onAttachedToWindow(){_get(Object.getPrototypeOf(AbsListView.prototype),"onAttachedToWindow",this).call(this);var treeObserver=this.getViewTreeObserver();treeObserver.addOnTouchModeChangeListener(this);if(this.mAdapter != null && this.mDataSetObserver == null){this.mDataSetObserver = new AbsListView.AdapterDataSetObserver(this);this.mAdapter.registerDataSetObserver(this.mDataSetObserver);this.mDataChanged = true;this.mOldItemCount = this.mItemCount;this.mItemCount = this.mAdapter.getCount();}}},{key:"onDetachedFromWindow",value:function onDetachedFromWindow(){_get(Object.getPrototypeOf(AbsListView.prototype),"onDetachedFromWindow",this).call(this);this.dismissPopup();this.mRecycler.clear();var treeObserver=this.getViewTreeObserver();treeObserver.removeOnTouchModeChangeListener(this);if(this.mAdapter != null && this.mDataSetObserver != null){this.mAdapter.unregisterDataSetObserver(this.mDataSetObserver);this.mDataSetObserver = null;}if(this.mFlingRunnable != null){this.removeCallbacks(this.mFlingRunnable);}if(this.mPositionScroller != null){this.mPositionScroller.stop();}if(this.mClearScrollingCache != null){this.removeCallbacks(this.mClearScrollingCache);}if(this.mPerformClick_ != null){this.removeCallbacks(this.mPerformClick_);}if(this.mTouchModeReset != null){this.removeCallbacks(this.mTouchModeReset);this.mTouchModeReset.run();}}},{key:"onWindowFocusChanged",value:function onWindowFocusChanged(hasWindowFocus){_get(Object.getPrototypeOf(AbsListView.prototype),"onWindowFocusChanged",this).call(this,hasWindowFocus);var touchMode=this.isInTouchMode()?AbsListView.TOUCH_MODE_ON:AbsListView.TOUCH_MODE_OFF;if(!hasWindowFocus){this.setChildrenDrawingCacheEnabled(false);if(this.mFlingRunnable != null){this.removeCallbacks(this.mFlingRunnable);this.mFlingRunnable.endFling();if(this.mPositionScroller != null){this.mPositionScroller.stop();}if(this.mScrollY != 0){this.mScrollY = 0;this.invalidateParentCaches();this.finishGlows();this.invalidate();}}this.dismissPopup();if(touchMode == AbsListView.TOUCH_MODE_OFF){this.mResurrectToPosition = this.mSelectedPosition;}}else {if(this.mFiltered && !this.mPopupHidden){this.showPopup();}if(touchMode != this.mLastTouchMode && this.mLastTouchMode != AbsListView.TOUCH_MODE_UNKNOWN){if(touchMode == AbsListView.TOUCH_MODE_OFF){this.resurrectSelection();}else {this.hideSelector();this.mLayoutMode = AbsListView.LAYOUT_NORMAL;this.layoutChildren();}}}this.mLastTouchMode = touchMode;}},{key:"onCancelPendingInputEvents",value:function onCancelPendingInputEvents(){_get(Object.getPrototypeOf(AbsListView.prototype),"onCancelPendingInputEvents",this).call(this);if(this.mPerformClick_ != null){this.removeCallbacks(this.mPerformClick_);}if(this.mPendingCheckForTap_ != null){this.removeCallbacks(this.mPendingCheckForTap_);}if(this.mPendingCheckForLongPress_List != null){this.removeCallbacks(this.mPendingCheckForLongPress_List);}if(this.mPendingCheckForKeyLongPress != null){this.removeCallbacks(this.mPendingCheckForKeyLongPress);}}},{key:"performLongPress",value:function performLongPress(child,longPressPosition,longPressId){var handled=false;if(this.mOnItemLongClickListener != null){handled = this.mOnItemLongClickListener.onItemLongClick(this,child,longPressPosition,longPressId);}if(handled){this.performHapticFeedback(HapticFeedbackConstants.LONG_PRESS);}return handled;}},{key:"onKeyDown",value:function onKeyDown(keyCode,event){return false;}},{key:"onKeyUp",value:function onKeyUp(keyCode,event){if(KeyEvent.isConfirmKey(keyCode)){if(!this.isEnabled()){return true;}if(this.isClickable() && this.isPressed() && this.mSelectedPosition >= 0 && this.mAdapter != null && this.mSelectedPosition < this.mAdapter.getCount()){var view=this.getChildAt(this.mSelectedPosition - this.mFirstPosition);if(view != null){this.performItemClick(view,this.mSelectedPosition,this.mSelectedRowId);view.setPressed(false);}this.setPressed(false);return true;}}return _get(Object.getPrototypeOf(AbsListView.prototype),"onKeyUp",this).call(this,keyCode,event);}},{key:"dispatchSetPressed",value:function dispatchSetPressed(pressed){}},{key:"pointToPosition",value:function pointToPosition(x,y){var frame=this.mTouchFrame;if(frame == null){this.mTouchFrame = new Rect();frame = this.mTouchFrame;}var count=this.getChildCount();for(var i=count - 1;i >= 0;i--) {var child=this.getChildAt(i);if(child.getVisibility() == View.VISIBLE){child.getHitRect(frame);if(frame.contains(x,y)){return this.mFirstPosition + i;}}}return AbsListView.INVALID_POSITION;}},{key:"pointToRowId",value:function pointToRowId(x,y){var position=this.pointToPosition(x,y);if(position >= 0){return this.mAdapter.getItemId(position);}return AbsListView.INVALID_ROW_ID;}},{key:"checkOverScrollStartScrollIfNeeded",value:function checkOverScrollStartScrollIfNeeded(){return this.mScrollY != 0;}},{key:"startScrollIfNeeded",value:function startScrollIfNeeded(y){var deltaY=y - this.mMotionY;var distance=Math.abs(deltaY);var overscroll=this.checkOverScrollStartScrollIfNeeded();if(overscroll || distance > this.mTouchSlop){this.createScrollingCache();if(this.mScrollY != 0){this.mTouchMode = AbsListView.TOUCH_MODE_OVERSCROLL;this.mMotionCorrection = 0;}else {this.mTouchMode = AbsListView.TOUCH_MODE_SCROLL;this.mMotionCorrection = deltaY > 0?this.mTouchSlop:-this.mTouchSlop;}this.removeCallbacks(this.mPendingCheckForLongPress_List);this.setPressed(false);var motionView=this.getChildAt(this.mMotionPosition - this.mFirstPosition);if(motionView != null){motionView.setPressed(false);}this.reportScrollStateChange(AbsListView.OnScrollListener.SCROLL_STATE_TOUCH_SCROLL);var _parent8=this.getParent();if(_parent8 != null){_parent8.requestDisallowInterceptTouchEvent(true);}this.scrollIfNeeded(y);return true;}return false;}},{key:"scrollIfNeeded",value:function scrollIfNeeded(y){var rawDeltaY=y - this.mMotionY;var deltaY=rawDeltaY - this.mMotionCorrection;var incrementalDeltaY=this.mLastY != Integer.MIN_VALUE?y - this.mLastY:deltaY;if(this.mTouchMode == AbsListView.TOUCH_MODE_SCROLL){if(AbsListView.PROFILE_SCROLLING){if(!this.mScrollProfilingStarted){this.mScrollProfilingStarted = true;}}if(y != this.mLastY){if((this.mGroupFlags & AbsListView.FLAG_DISALLOW_INTERCEPT) == 0 && Math.abs(rawDeltaY) > this.mTouchSlop){var _parent9=this.getParent();if(_parent9 != null){_parent9.requestDisallowInterceptTouchEvent(true);}}var motionIndex=undefined;if(this.mMotionPosition >= 0){motionIndex = this.mMotionPosition - this.mFirstPosition;}else {motionIndex = this.getChildCount() / 2;}var motionViewPrevTop=0;var motionView=this.getChildAt(motionIndex);if(motionView != null){motionViewPrevTop = motionView.getTop();}var atEdge=false;if(incrementalDeltaY != 0){atEdge = this.trackMotionScroll(deltaY,incrementalDeltaY);}motionView = this.getChildAt(motionIndex);if(motionView != null){var motionViewRealTop=motionView.getTop();if(atEdge){var overscroll=-incrementalDeltaY - (motionViewRealTop - motionViewPrevTop);this.overScrollBy(0,overscroll,0,this.mScrollY,0,0,0,this.mOverscrollDistance,true);if(Math.abs(this.mOverscrollDistance) == Math.abs(this.mScrollY)){if(this.mVelocityTracker != null){this.mVelocityTracker.clear();}}var overscrollMode=this.getOverScrollMode();if(overscrollMode == AbsListView.OVER_SCROLL_ALWAYS || overscrollMode == AbsListView.OVER_SCROLL_IF_CONTENT_SCROLLS && !this.contentFits()){this.mDirection = 0;this.mTouchMode = AbsListView.TOUCH_MODE_OVERSCROLL;if(rawDeltaY > 0){}else if(rawDeltaY < 0){}}}this.mMotionY = y;}this.mLastY = y;}}else if(this.mTouchMode == AbsListView.TOUCH_MODE_OVERSCROLL){if(y != this.mLastY){var oldScroll=this.mScrollY;var newScroll=oldScroll - incrementalDeltaY;var newDirection=y > this.mLastY?1:-1;if(this.mDirection == 0){this.mDirection = newDirection;}var overScrollDistance=-incrementalDeltaY;if(newScroll < 0 && oldScroll >= 0 || newScroll > 0 && oldScroll <= 0){overScrollDistance = -oldScroll;incrementalDeltaY += overScrollDistance;}else {incrementalDeltaY = 0;}if(overScrollDistance != 0){this.overScrollBy(0,overScrollDistance,0,this.mScrollY,0,0,0,this.mOverscrollDistance,true);}if(incrementalDeltaY != 0){if(this.mScrollY != 0){this.mScrollY = 0;this.invalidateParentIfNeeded();}this.trackMotionScroll(incrementalDeltaY,incrementalDeltaY);this.mTouchMode = AbsListView.TOUCH_MODE_SCROLL;var motionPosition=this.findClosestMotionRow(y);this.mMotionCorrection = 0;var motionView=this.getChildAt(motionPosition - this.mFirstPosition);this.mMotionViewOriginalTop = motionView != null?motionView.getTop():0;this.mMotionY = y;this.mMotionPosition = motionPosition;}this.mLastY = y;this.mDirection = newDirection;}}}},{key:"onTouchModeChanged",value:function onTouchModeChanged(isInTouchMode){if(isInTouchMode){this.hideSelector();if(this.getHeight() > 0 && this.getChildCount() > 0){this.layoutChildren();}this.updateSelectorState();}else {var touchMode=this.mTouchMode;if(touchMode == AbsListView.TOUCH_MODE_OVERSCROLL || touchMode == AbsListView.TOUCH_MODE_OVERFLING){if(this.mFlingRunnable != null){this.mFlingRunnable.endFling();}if(this.mPositionScroller != null){this.mPositionScroller.stop();}if(this.mScrollY != 0){this.mScrollY = 0;this.invalidateParentCaches();this.finishGlows();this.invalidate();}}}}},{key:"onTouchEvent",value:function onTouchEvent(ev){if(!this.isEnabled()){return this.isClickable() || this.isLongClickable();}if(this.mPositionScroller != null){this.mPositionScroller.stop();}if(!this.isAttachedToWindow()){return false;}this.initVelocityTrackerIfNotExists();this.mVelocityTracker.addMovement(ev);var actionMasked=ev.getActionMasked();switch(actionMasked){case MotionEvent.ACTION_DOWN:{this.onTouchDown(ev);break;}case MotionEvent.ACTION_MOVE:{this.onTouchMove(ev);break;}case MotionEvent.ACTION_UP:{this.onTouchUp(ev);break;}case MotionEvent.ACTION_CANCEL:{this.onTouchCancel();break;}case MotionEvent.ACTION_POINTER_UP:{this.onSecondaryPointerUp(ev);var x=this.mMotionX;var y=this.mMotionY;var motionPosition=this.pointToPosition(x,y);if(motionPosition >= 0){var child=this.getChildAt(motionPosition - this.mFirstPosition);this.mMotionViewOriginalTop = child.getTop();this.mMotionPosition = motionPosition;}this.mLastY = y;break;}case MotionEvent.ACTION_POINTER_DOWN:{var index=ev.getActionIndex();var id=ev.getPointerId(index);var x=Math.floor(ev.getX(index));var y=Math.floor(ev.getY(index));this.mMotionCorrection = 0;this.mActivePointerId = id;this.mMotionX = x;this.mMotionY = y;var motionPosition=this.pointToPosition(x,y);if(motionPosition >= 0){var child=this.getChildAt(motionPosition - this.mFirstPosition);this.mMotionViewOriginalTop = child.getTop();this.mMotionPosition = motionPosition;}this.mLastY = y;break;}}return true;}},{key:"onTouchDown",value:function onTouchDown(ev){this.mActivePointerId = ev.getPointerId(0);if(this.mTouchMode == AbsListView.TOUCH_MODE_OVERFLING){this.mFlingRunnable.endFling();if(this.mPositionScroller != null){this.mPositionScroller.stop();}this.mTouchMode = AbsListView.TOUCH_MODE_OVERSCROLL;this.mMotionX = Math.floor(ev.getX());this.mMotionY = Math.floor(ev.getY());this.mLastY = this.mMotionY;this.mMotionCorrection = 0;this.mDirection = 0;}else {var x=Math.floor(ev.getX());var y=Math.floor(ev.getY());var motionPosition=this.pointToPosition(x,y);if(!this.mDataChanged){if(this.mTouchMode == AbsListView.TOUCH_MODE_FLING){this.createScrollingCache();this.mTouchMode = AbsListView.TOUCH_MODE_SCROLL;this.mMotionCorrection = 0;motionPosition = this.findMotionRow(y);this.mFlingRunnable.flywheelTouch();}else if(motionPosition >= 0 && this.getAdapter().isEnabled(motionPosition)){this.mTouchMode = AbsListView.TOUCH_MODE_DOWN;if(this.mPendingCheckForTap_ == null){this.mPendingCheckForTap_ = new AbsListView.CheckForTap(this);}this.postDelayed(this.mPendingCheckForTap_,ViewConfiguration.getTapTimeout());}else if(motionPosition < 0){this.mTouchMode = AbsListView.TOUCH_MODE_DOWN;}}if(motionPosition >= 0){var v=this.getChildAt(motionPosition - this.mFirstPosition);this.mMotionViewOriginalTop = v.getTop();}this.mMotionX = x;this.mMotionY = y;this.mMotionPosition = motionPosition;this.mLastY = Integer.MIN_VALUE;}if(this.mTouchMode == AbsListView.TOUCH_MODE_DOWN && this.mMotionPosition != AbsListView.INVALID_POSITION && this.performButtonActionOnTouchDown(ev)){this.removeCallbacks(this.mPendingCheckForTap_);}}},{key:"onTouchMove",value:function onTouchMove(ev){var pointerIndex=ev.findPointerIndex(this.mActivePointerId);if(pointerIndex == -1){pointerIndex = 0;this.mActivePointerId = ev.getPointerId(pointerIndex);}if(this.mDataChanged){this.layoutChildren();}var y=Math.floor(ev.getY(pointerIndex));switch(this.mTouchMode){case AbsListView.TOUCH_MODE_DOWN:case AbsListView.TOUCH_MODE_TAP:case AbsListView.TOUCH_MODE_DONE_WAITING:if(this.startScrollIfNeeded(y)){break;}var x=ev.getX(pointerIndex);if(!this.pointInView(x,y,this.mTouchSlop)){this.setPressed(false);var motionView=this.getChildAt(this.mMotionPosition - this.mFirstPosition);if(motionView != null){motionView.setPressed(false);}this.removeCallbacks(this.mTouchMode == AbsListView.TOUCH_MODE_DOWN?this.mPendingCheckForTap_:this.mPendingCheckForLongPress_List);this.mTouchMode = AbsListView.TOUCH_MODE_DONE_WAITING;this.updateSelectorState();}break;case AbsListView.TOUCH_MODE_SCROLL:case AbsListView.TOUCH_MODE_OVERSCROLL:this.scrollIfNeeded(y);break;}}},{key:"onTouchUp",value:function onTouchUp(ev){var _this24=this;switch(this.mTouchMode){case AbsListView.TOUCH_MODE_DOWN:case AbsListView.TOUCH_MODE_TAP:case AbsListView.TOUCH_MODE_DONE_WAITING:var motionPosition=this.mMotionPosition;var child=this.getChildAt(motionPosition - this.mFirstPosition);if(child != null){if(this.mTouchMode != AbsListView.TOUCH_MODE_DOWN){child.setPressed(false);}var x=ev.getX();var inList=x > this.mListPadding.left && x < this.getWidth() - this.mListPadding.right;if(inList && !child.hasFocusable()){var _ret5=(function(){if(_this24.mPerformClick_ == null){_this24.mPerformClick_ = new AbsListView.PerformClick(_this24);}var performClick=_this24.mPerformClick_;performClick.mClickMotionPosition = motionPosition;performClick.rememberWindowAttachCount();_this24.mResurrectToPosition = motionPosition;if(_this24.mTouchMode == AbsListView.TOUCH_MODE_DOWN || _this24.mTouchMode == AbsListView.TOUCH_MODE_TAP){_this24.removeCallbacks(_this24.mTouchMode == AbsListView.TOUCH_MODE_DOWN?_this24.mPendingCheckForTap_:_this24.mPendingCheckForLongPress_List);_this24.mLayoutMode = AbsListView.LAYOUT_NORMAL;if(!_this24.mDataChanged && _this24.mAdapter.isEnabled(motionPosition)){_this24.mTouchMode = AbsListView.TOUCH_MODE_TAP;_this24.setSelectedPositionInt(_this24.mMotionPosition);_this24.layoutChildren();child.setPressed(true);_this24.positionSelector(_this24.mMotionPosition,child);_this24.setPressed(true);if(_this24.mSelector != null){var d=_this24.mSelector.getCurrent();}if(_this24.mTouchModeReset != null){_this24.removeCallbacks(_this24.mTouchModeReset);}_this24.mTouchModeReset = (function(){var _this=_this24;var _Inner=(function(){function _Inner(){_classCallCheck(this,_Inner);}_createClass(_Inner,[{key:"run",value:function run(){_this.mTouchModeReset = null;_this.mTouchMode = AbsListView.TOUCH_MODE_REST;child.setPressed(false);_this.setPressed(false);if(!_this.mDataChanged && _this.isAttachedToWindow()){performClick.run();}}}]);return _Inner;})();return new _Inner();})();_this24.postDelayed(_this24.mTouchModeReset,ViewConfiguration.getPressedStateDuration());}else {_this24.mTouchMode = AbsListView.TOUCH_MODE_REST;_this24.updateSelectorState();}return {v:undefined};}else if(!_this24.mDataChanged && _this24.mAdapter.isEnabled(motionPosition)){performClick.run();}})();if(typeof _ret5 === "object")return _ret5.v;}}this.mTouchMode = AbsListView.TOUCH_MODE_REST;this.updateSelectorState();break;case AbsListView.TOUCH_MODE_SCROLL:var childCount=this.getChildCount();if(childCount > 0){var firstChildTop=this.getChildAt(0).getTop();var lastChildBottom=this.getChildAt(childCount - 1).getBottom();var contentTop=this.mListPadding.top;var contentBottom=this.getHeight() - this.mListPadding.bottom;if(this.mFirstPosition == 0 && firstChildTop >= contentTop && this.mFirstPosition + childCount < this.mItemCount && lastChildBottom <= this.getHeight() - contentBottom){this.mTouchMode = AbsListView.TOUCH_MODE_REST;this.reportScrollStateChange(AbsListView.OnScrollListener.SCROLL_STATE_IDLE);}else {var _velocityTracker=this.mVelocityTracker;_velocityTracker.computeCurrentVelocity(1000,this.mMaximumVelocity);var _initialVelocity=Math.floor(_velocityTracker.getYVelocity(this.mActivePointerId) * this.mVelocityScale);if(Math.abs(_initialVelocity) > this.mMinimumVelocity && !(this.mFirstPosition == 0 && firstChildTop == contentTop - this.mOverscrollDistance || this.mFirstPosition + childCount == this.mItemCount && lastChildBottom == contentBottom + this.mOverscrollDistance)){if(this.mFlingRunnable == null){this.mFlingRunnable = new AbsListView.FlingRunnable(this);}this.reportScrollStateChange(AbsListView.OnScrollListener.SCROLL_STATE_FLING);this.mFlingRunnable.start(-_initialVelocity);}else {this.mTouchMode = AbsListView.TOUCH_MODE_REST;this.reportScrollStateChange(AbsListView.OnScrollListener.SCROLL_STATE_IDLE);if(this.mFlingRunnable != null){this.mFlingRunnable.endFling();}if(this.mPositionScroller != null){this.mPositionScroller.stop();}}}}else {this.mTouchMode = AbsListView.TOUCH_MODE_REST;this.reportScrollStateChange(AbsListView.OnScrollListener.SCROLL_STATE_IDLE);}break;case AbsListView.TOUCH_MODE_OVERSCROLL:if(this.mFlingRunnable == null){this.mFlingRunnable = new AbsListView.FlingRunnable(this);}var velocityTracker=this.mVelocityTracker;velocityTracker.computeCurrentVelocity(1000,this.mMaximumVelocity);var initialVelocity=Math.floor(velocityTracker.getYVelocity(this.mActivePointerId));this.reportScrollStateChange(AbsListView.OnScrollListener.SCROLL_STATE_FLING);if(Math.abs(initialVelocity) > this.mMinimumVelocity){this.mFlingRunnable.startOverfling(-initialVelocity);}else {this.mFlingRunnable.startSpringback();}break;}this.setPressed(false);this.invalidate();this.removeCallbacks(this.mPendingCheckForLongPress_List);this.recycleVelocityTracker();this.mActivePointerId = AbsListView.INVALID_POINTER;if(AbsListView.PROFILE_SCROLLING){if(this.mScrollProfilingStarted){this.mScrollProfilingStarted = false;}}}},{key:"onTouchCancel",value:function onTouchCancel(){switch(this.mTouchMode){case AbsListView.TOUCH_MODE_OVERSCROLL:if(this.mFlingRunnable == null){this.mFlingRunnable = new AbsListView.FlingRunnable(this);}this.mFlingRunnable.startSpringback();break;case AbsListView.TOUCH_MODE_OVERFLING:break;default:this.mTouchMode = AbsListView.TOUCH_MODE_REST;this.setPressed(false);var motionView=this.getChildAt(this.mMotionPosition - this.mFirstPosition);if(motionView != null){motionView.setPressed(false);}this.clearScrollingCache();this.removeCallbacks(this.mPendingCheckForLongPress_List);this.recycleVelocityTracker();}this.mActivePointerId = AbsListView.INVALID_POINTER;}},{key:"onOverScrolled",value:function onOverScrolled(scrollX,scrollY,clampedX,clampedY){if(this.mScrollY != scrollY){this.onScrollChanged(this.mScrollX,scrollY,this.mScrollX,this.mScrollY);this.mScrollY = scrollY;this.invalidateParentIfNeeded();this.awakenScrollBars();}}},{key:"onGenericMotionEvent",value:function onGenericMotionEvent(event){if(event.isPointerEvent()){switch(event.getAction()){case MotionEvent.ACTION_SCROLL:{if(this.mTouchMode == AbsListView.TOUCH_MODE_REST){var vscroll=event.getAxisValue(MotionEvent.AXIS_VSCROLL);if(vscroll != 0){var delta=Math.floor(vscroll * this.getVerticalScrollFactor());if(!this.trackMotionScroll(delta,delta)){return true;}}}}}}return _get(Object.getPrototypeOf(AbsListView.prototype),"onGenericMotionEvent",this).call(this,event);}},{key:"draw",value:function draw(canvas){_get(Object.getPrototypeOf(AbsListView.prototype),"draw",this).call(this,canvas);}},{key:"setOverScrollEffectPadding",value:function setOverScrollEffectPadding(leftPadding,rightPadding){this.mGlowPaddingLeft = leftPadding;this.mGlowPaddingRight = rightPadding;}},{key:"initOrResetVelocityTracker",value:function initOrResetVelocityTracker(){if(this.mVelocityTracker == null){this.mVelocityTracker = VelocityTracker.obtain();}else {this.mVelocityTracker.clear();}}},{key:"initVelocityTrackerIfNotExists",value:function initVelocityTrackerIfNotExists(){if(this.mVelocityTracker == null){this.mVelocityTracker = VelocityTracker.obtain();}}},{key:"recycleVelocityTracker",value:function recycleVelocityTracker(){if(this.mVelocityTracker != null){this.mVelocityTracker.recycle();this.mVelocityTracker = null;}}},{key:"requestDisallowInterceptTouchEvent",value:function requestDisallowInterceptTouchEvent(disallowIntercept){if(disallowIntercept){this.recycleVelocityTracker();}_get(Object.getPrototypeOf(AbsListView.prototype),"requestDisallowInterceptTouchEvent",this).call(this,disallowIntercept);}},{key:"onInterceptTouchEvent",value:function onInterceptTouchEvent(ev){var action=ev.getAction();var v=undefined;if(this.mPositionScroller != null){this.mPositionScroller.stop();}if(!this.isAttachedToWindow()){return false;}switch(action & MotionEvent.ACTION_MASK){case MotionEvent.ACTION_DOWN:{var touchMode=this.mTouchMode;if(touchMode == AbsListView.TOUCH_MODE_OVERFLING || touchMode == AbsListView.TOUCH_MODE_OVERSCROLL){this.mMotionCorrection = 0;return true;}var x=Math.floor(ev.getX());var y=Math.floor(ev.getY());this.mActivePointerId = ev.getPointerId(0);var motionPosition=this.findMotionRow(y);if(touchMode != AbsListView.TOUCH_MODE_FLING && motionPosition >= 0){v = this.getChildAt(motionPosition - this.mFirstPosition);this.mMotionViewOriginalTop = v.getTop();this.mMotionX = x;this.mMotionY = y;this.mMotionPosition = motionPosition;this.mTouchMode = AbsListView.TOUCH_MODE_DOWN;this.clearScrollingCache();}this.mLastY = Integer.MIN_VALUE;this.initOrResetVelocityTracker();this.mVelocityTracker.addMovement(ev);if(touchMode == AbsListView.TOUCH_MODE_FLING){return true;}break;}case MotionEvent.ACTION_MOVE:{switch(this.mTouchMode){case AbsListView.TOUCH_MODE_DOWN:var pointerIndex=ev.findPointerIndex(this.mActivePointerId);if(pointerIndex == -1){pointerIndex = 0;this.mActivePointerId = ev.getPointerId(pointerIndex);}var y=Math.floor(ev.getY(pointerIndex));this.initVelocityTrackerIfNotExists();this.mVelocityTracker.addMovement(ev);if(this.startScrollIfNeeded(y)){return true;}break;}break;}case MotionEvent.ACTION_CANCEL:case MotionEvent.ACTION_UP:{this.mTouchMode = AbsListView.TOUCH_MODE_REST;this.mActivePointerId = AbsListView.INVALID_POINTER;this.recycleVelocityTracker();this.reportScrollStateChange(AbsListView.OnScrollListener.SCROLL_STATE_IDLE);break;}case MotionEvent.ACTION_POINTER_UP:{this.onSecondaryPointerUp(ev);break;}}return false;}},{key:"onSecondaryPointerUp",value:function onSecondaryPointerUp(ev){var pointerIndex=(ev.getAction() & MotionEvent.ACTION_POINTER_INDEX_MASK) >> MotionEvent.ACTION_POINTER_INDEX_SHIFT;var pointerId=ev.getPointerId(pointerIndex);if(pointerId == this.mActivePointerId){var newPointerIndex=pointerIndex == 0?1:0;this.mMotionX = Math.floor(ev.getX(newPointerIndex));this.mMotionY = Math.floor(ev.getY(newPointerIndex));this.mMotionCorrection = 0;this.mActivePointerId = ev.getPointerId(newPointerIndex);}}},{key:"addTouchables",value:function addTouchables(views){var count=this.getChildCount();var firstPosition=this.mFirstPosition;var adapter=this.mAdapter;if(adapter == null){return;}for(var i=0;i < count;i++) {var child=this.getChildAt(i);if(adapter.isEnabled(firstPosition + i)){views.add(child);}child.addTouchables(views);}}},{key:"reportScrollStateChange",value:function reportScrollStateChange(newState){if(newState != this.mLastScrollState){if(this.mOnScrollListener != null){this.mLastScrollState = newState;this.mOnScrollListener.onScrollStateChanged(this,newState);}}}},{key:"setFriction",value:function setFriction(friction){if(this.mFlingRunnable == null){this.mFlingRunnable = new AbsListView.FlingRunnable(this);}this.mFlingRunnable.mScroller.setFriction(friction);}},{key:"setVelocityScale",value:function setVelocityScale(scale){this.mVelocityScale = scale;}},{key:"smoothScrollToPositionFromTop",value:function smoothScrollToPositionFromTop(position,offset,duration){if(this.mPositionScroller == null){this.mPositionScroller = new AbsListView.PositionScroller(this);}this.mPositionScroller.startWithOffset(position,offset,duration);}},{key:"smoothScrollToPosition",value:function smoothScrollToPosition(position,boundPosition){if(this.mPositionScroller == null){this.mPositionScroller = new AbsListView.PositionScroller(this);}this.mPositionScroller.start(position,boundPosition);}},{key:"smoothScrollBy",value:function smoothScrollBy(distance,duration){var linear=arguments.length <= 2 || arguments[2] === undefined?false:arguments[2];if(this.mFlingRunnable == null){this.mFlingRunnable = new AbsListView.FlingRunnable(this);}var firstPos=this.mFirstPosition;var childCount=this.getChildCount();var lastPos=firstPos + childCount;var topLimit=this.getPaddingTop();var bottomLimit=this.getHeight() - this.getPaddingBottom();if(distance == 0 || this.mItemCount == 0 || childCount == 0 || firstPos == 0 && this.getChildAt(0).getTop() == topLimit && distance < 0 || lastPos == this.mItemCount && this.getChildAt(childCount - 1).getBottom() == bottomLimit && distance > 0){this.mFlingRunnable.endFling();if(this.mPositionScroller != null){this.mPositionScroller.stop();}}else {this.reportScrollStateChange(AbsListView.OnScrollListener.SCROLL_STATE_FLING);this.mFlingRunnable.startScroll(distance,duration,linear);}}},{key:"smoothScrollByOffset",value:function smoothScrollByOffset(position){var index=-1;if(position < 0){index = this.getFirstVisiblePosition();}else if(position > 0){index = this.getLastVisiblePosition();}if(index > -1){var child=this.getChildAt(index - this.getFirstVisiblePosition());if(child != null){var visibleRect=new Rect();if(child.getGlobalVisibleRect(visibleRect)){var childRectArea=child.getWidth() * child.getHeight();var visibleRectArea=visibleRect.width() * visibleRect.height();var visibleArea=visibleRectArea / childRectArea;var visibleThreshold=0.75;if(position < 0 && visibleArea < visibleThreshold){++index;}else if(position > 0 && visibleArea < visibleThreshold){--index;}}this.smoothScrollToPosition(Math.max(0,Math.min(this.getCount(),index + position)));}}}},{key:"createScrollingCache",value:function createScrollingCache(){if(this.mScrollingCacheEnabled && !this.mCachingStarted && !this.isHardwareAccelerated()){this.setChildrenDrawnWithCacheEnabled(true);this.setChildrenDrawingCacheEnabled(true);this.mCachingStarted = this.mCachingActive = true;}}},{key:"clearScrollingCache",value:function clearScrollingCache(){var _this25=this;if(!this.isHardwareAccelerated()){if(this.mClearScrollingCache == null){this.mClearScrollingCache = (function(){var _this=_this25;var _Inner=(function(){function _Inner(){_classCallCheck(this,_Inner);}_createClass(_Inner,[{key:"run",value:function run(){if(_this.mCachingStarted){_this.mCachingStarted = _this.mCachingActive = false;_this.setChildrenDrawnWithCacheEnabled(false);if((_this.mPersistentDrawingCache & AbsListView.PERSISTENT_SCROLLING_CACHE) == 0){_this.setChildrenDrawingCacheEnabled(false);}if(!_this.isAlwaysDrawnWithCacheEnabled()){_this.invalidate();}}}}]);return _Inner;})();return new _Inner();})();}this.post(this.mClearScrollingCache);}}},{key:"scrollListBy",value:function scrollListBy(y){this.trackMotionScroll(-y,-y);}},{key:"canScrollList",value:function canScrollList(direction){var childCount=this.getChildCount();if(childCount == 0){return false;}var firstPosition=this.mFirstPosition;var listPadding=this.mListPadding;if(direction > 0){var lastBottom=this.getChildAt(childCount - 1).getBottom();var lastPosition=firstPosition + childCount;return lastPosition < this.mItemCount || lastBottom > this.getHeight() - listPadding.bottom;}else {var firstTop=this.getChildAt(0).getTop();return firstPosition > 0 || firstTop < listPadding.top;}}},{key:"trackMotionScroll",value:function trackMotionScroll(deltaY,incrementalDeltaY){var childCount=this.getChildCount();if(childCount == 0){return true;}var firstTop=this.getChildAt(0).getTop();var lastBottom=this.getChildAt(childCount - 1).getBottom();var listPadding=this.mListPadding;var effectivePaddingTop=0;var effectivePaddingBottom=0;if((this.mGroupFlags & AbsListView.CLIP_TO_PADDING_MASK) == AbsListView.CLIP_TO_PADDING_MASK){effectivePaddingTop = listPadding.top;effectivePaddingBottom = listPadding.bottom;}var spaceAbove=effectivePaddingTop - firstTop;var end=this.getHeight() - effectivePaddingBottom;var spaceBelow=lastBottom - end;var height=this.getHeight() - this.mPaddingBottom - this.mPaddingTop;if(deltaY < 0){deltaY = Math.max(-(height - 1),deltaY);}else {deltaY = Math.min(height - 1,deltaY);}if(incrementalDeltaY < 0){incrementalDeltaY = Math.max(-(height - 1),incrementalDeltaY);}else {incrementalDeltaY = Math.min(height - 1,incrementalDeltaY);}var firstPosition=this.mFirstPosition;if(firstPosition == 0){this.mFirstPositionDistanceGuess = firstTop - listPadding.top;}else {this.mFirstPositionDistanceGuess += incrementalDeltaY;}if(firstPosition + childCount == this.mItemCount){this.mLastPositionDistanceGuess = lastBottom + listPadding.bottom;}else {this.mLastPositionDistanceGuess += incrementalDeltaY;}var cannotScrollDown=firstPosition == 0 && firstTop >= listPadding.top && incrementalDeltaY >= 0;var cannotScrollUp=firstPosition + childCount == this.mItemCount && lastBottom <= this.getHeight() - listPadding.bottom && incrementalDeltaY <= 0;if(cannotScrollDown || cannotScrollUp){return incrementalDeltaY != 0;}var down=incrementalDeltaY < 0;var inTouchMode=this.isInTouchMode();if(inTouchMode){this.hideSelector();}var headerViewsCount=this.getHeaderViewsCount();var footerViewsStart=this.mItemCount - this.getFooterViewsCount();var start=0;var count=0;if(down){var _top16=-incrementalDeltaY;if((this.mGroupFlags & AbsListView.CLIP_TO_PADDING_MASK) == AbsListView.CLIP_TO_PADDING_MASK){_top16 += listPadding.top;}for(var i=0;i < childCount;i++) {var child=this.getChildAt(i);if(child.getBottom() >= _top16){break;}else {count++;var position=firstPosition + i;if(position >= headerViewsCount && position < footerViewsStart){this.mRecycler.addScrapView(child,position);}}}}else {var bottom=this.getHeight() - incrementalDeltaY;if((this.mGroupFlags & AbsListView.CLIP_TO_PADDING_MASK) == AbsListView.CLIP_TO_PADDING_MASK){bottom -= listPadding.bottom;}for(var i=childCount - 1;i >= 0;i--) {var child=this.getChildAt(i);if(child.getTop() <= bottom){break;}else {start = i;count++;var position=firstPosition + i;if(position >= headerViewsCount && position < footerViewsStart){this.mRecycler.addScrapView(child,position);}}}}this.mMotionViewNewTop = this.mMotionViewOriginalTop + deltaY;this.mBlockLayoutRequests = true;if(count > 0){this.detachViewsFromParent(start,count);this.mRecycler.removeSkippedScrap();}if(!this.awakenScrollBars()){this.invalidate();}this.offsetChildrenTopAndBottom(incrementalDeltaY);if(down){this.mFirstPosition += count;}var absIncrementalDeltaY=Math.abs(incrementalDeltaY);if(spaceAbove < absIncrementalDeltaY || spaceBelow < absIncrementalDeltaY){this.fillGap(down);}if(!inTouchMode && this.mSelectedPosition != AbsListView.INVALID_POSITION){var childIndex=this.mSelectedPosition - this.mFirstPosition;if(childIndex >= 0 && childIndex < this.getChildCount()){this.positionSelector(this.mSelectedPosition,this.getChildAt(childIndex));}}else if(this.mSelectorPosition != AbsListView.INVALID_POSITION){var childIndex=this.mSelectorPosition - this.mFirstPosition;if(childIndex >= 0 && childIndex < this.getChildCount()){this.positionSelector(AbsListView.INVALID_POSITION,this.getChildAt(childIndex));}}else {this.mSelectorRect.setEmpty();}this.mBlockLayoutRequests = false;this.invokeOnItemScrollListener();return false;}},{key:"getHeaderViewsCount",value:function getHeaderViewsCount(){return 0;}},{key:"getFooterViewsCount",value:function getFooterViewsCount(){return 0;}},{key:"hideSelector",value:function hideSelector(){if(this.mSelectedPosition != AbsListView.INVALID_POSITION){if(this.mLayoutMode != AbsListView.LAYOUT_SPECIFIC){this.mResurrectToPosition = this.mSelectedPosition;}if(this.mNextSelectedPosition >= 0 && this.mNextSelectedPosition != this.mSelectedPosition){this.mResurrectToPosition = this.mNextSelectedPosition;}this.setSelectedPositionInt(AbsListView.INVALID_POSITION);this.setNextSelectedPositionInt(AbsListView.INVALID_POSITION);this.mSelectedTop = 0;}}},{key:"reconcileSelectedPosition",value:function reconcileSelectedPosition(){var position=this.mSelectedPosition;if(position < 0){position = this.mResurrectToPosition;}position = Math.max(0,position);position = Math.min(position,this.mItemCount - 1);return position;}},{key:"findClosestMotionRow",value:function findClosestMotionRow(y){var childCount=this.getChildCount();if(childCount == 0){return AbsListView.INVALID_POSITION;}var motionRow=this.findMotionRow(y);return motionRow != AbsListView.INVALID_POSITION?motionRow:this.mFirstPosition + childCount - 1;}},{key:"invalidateViews",value:function invalidateViews(){this.mDataChanged = true;this.rememberSyncState();this.requestLayout();this.invalidate();}},{key:"resurrectSelectionIfNeeded",value:function resurrectSelectionIfNeeded(){if(this.mSelectedPosition < 0 && this.resurrectSelection()){this.updateSelectorState();return true;}return false;}},{key:"resurrectSelection",value:function resurrectSelection(){var childCount=this.getChildCount();if(childCount <= 0){return false;}var selectedTop=0;var selectedPos=undefined;var childrenTop=this.mListPadding.top;var childrenBottom=this.mBottom - this.mTop - this.mListPadding.bottom;var firstPosition=this.mFirstPosition;var toPosition=this.mResurrectToPosition;var down=true;if(toPosition >= firstPosition && toPosition < firstPosition + childCount){selectedPos = toPosition;var selected=this.getChildAt(selectedPos - this.mFirstPosition);selectedTop = selected.getTop();var selectedBottom=selected.getBottom();if(selectedTop < childrenTop){selectedTop = childrenTop + this.getVerticalFadingEdgeLength();}else if(selectedBottom > childrenBottom){selectedTop = childrenBottom - selected.getMeasuredHeight() - this.getVerticalFadingEdgeLength();}}else {if(toPosition < firstPosition){selectedPos = firstPosition;for(var i=0;i < childCount;i++) {var v=this.getChildAt(i);var _top17=v.getTop();if(i == 0){selectedTop = _top17;if(firstPosition > 0 || _top17 < childrenTop){childrenTop += this.getVerticalFadingEdgeLength();}}if(_top17 >= childrenTop){selectedPos = firstPosition + i;selectedTop = _top17;break;}}}else {var itemCount=this.mItemCount;down = false;selectedPos = firstPosition + childCount - 1;for(var i=childCount - 1;i >= 0;i--) {var v=this.getChildAt(i);var _top18=v.getTop();var bottom=v.getBottom();if(i == childCount - 1){selectedTop = _top18;if(firstPosition + childCount < itemCount || bottom > childrenBottom){childrenBottom -= this.getVerticalFadingEdgeLength();}}if(bottom <= childrenBottom){selectedPos = firstPosition + i;selectedTop = _top18;break;}}}}this.mResurrectToPosition = AbsListView.INVALID_POSITION;this.removeCallbacks(this.mFlingRunnable);if(this.mPositionScroller != null){this.mPositionScroller.stop();}this.mTouchMode = AbsListView.TOUCH_MODE_REST;this.clearScrollingCache();this.mSpecificTop = selectedTop;selectedPos = this.lookForSelectablePosition(selectedPos,down);if(selectedPos >= firstPosition && selectedPos <= this.getLastVisiblePosition()){this.mLayoutMode = AbsListView.LAYOUT_SPECIFIC;this.updateSelectorState();this.setSelectionInt(selectedPos);this.invokeOnItemScrollListener();}else {selectedPos = AbsListView.INVALID_POSITION;}this.reportScrollStateChange(AbsListView.OnScrollListener.SCROLL_STATE_IDLE);return selectedPos >= 0;}},{key:"confirmCheckedPositionsById",value:function confirmCheckedPositionsById(){this.mCheckStates.clear();var checkedCountChanged=false;for(var checkedIndex=0;checkedIndex < this.mCheckedIdStates.size();checkedIndex++) {var id=this.mCheckedIdStates.keyAt(checkedIndex);var lastPos=this.mCheckedIdStates.valueAt(checkedIndex);var lastPosId=this.mAdapter.getItemId(lastPos);if(id != lastPosId){var start=Math.max(0,lastPos - AbsListView.CHECK_POSITION_SEARCH_DISTANCE);var end=Math.min(lastPos + AbsListView.CHECK_POSITION_SEARCH_DISTANCE,this.mItemCount);var found=false;for(var searchPos=start;searchPos < end;searchPos++) {var searchId=this.mAdapter.getItemId(searchPos);if(id == searchId){found = true;this.mCheckStates.put(searchPos,true);this.mCheckedIdStates.setValueAt(checkedIndex,searchPos);break;}}if(!found){this.mCheckedIdStates["delete"](id);checkedIndex--;this.mCheckedItemCount--;checkedCountChanged = true;}}else {this.mCheckStates.put(lastPos,true);}}if(checkedCountChanged && this.mChoiceActionMode != null){this.mChoiceActionMode.invalidate();}}},{key:"handleDataChanged",value:function handleDataChanged(){var count=this.mItemCount;var lastHandledItemCount=this.mLastHandledItemCount;this.mLastHandledItemCount = this.mItemCount;if(this.mChoiceMode != AbsListView.CHOICE_MODE_NONE && this.mAdapter != null && this.mAdapter.hasStableIds()){this.confirmCheckedPositionsById();}this.mRecycler.clearTransientStateViews();if(count > 0){var newPos=undefined;var selectablePos=undefined;if(this.mNeedSync){this.mNeedSync = false;this.mPendingSync = null;if(this.mTranscriptMode == AbsListView.TRANSCRIPT_MODE_ALWAYS_SCROLL){this.mLayoutMode = AbsListView.LAYOUT_FORCE_BOTTOM;return;}else if(this.mTranscriptMode == AbsListView.TRANSCRIPT_MODE_NORMAL){if(this.mForceTranscriptScroll){this.mForceTranscriptScroll = false;this.mLayoutMode = AbsListView.LAYOUT_FORCE_BOTTOM;return;}var childCount=this.getChildCount();var listBottom=this.getHeight() - this.getPaddingBottom();var lastChild=this.getChildAt(childCount - 1);var lastBottom=lastChild != null?lastChild.getBottom():listBottom;if(this.mFirstPosition + childCount >= lastHandledItemCount && lastBottom <= listBottom){this.mLayoutMode = AbsListView.LAYOUT_FORCE_BOTTOM;return;}this.awakenScrollBars();}switch(this.mSyncMode){case AbsListView.SYNC_SELECTED_POSITION:if(this.isInTouchMode()){this.mLayoutMode = AbsListView.LAYOUT_SYNC;this.mSyncPosition = Math.min(Math.max(0,this.mSyncPosition),count - 1);return;}else {newPos = this.findSyncPosition();if(newPos >= 0){selectablePos = this.lookForSelectablePosition(newPos,true);if(selectablePos == newPos){this.mSyncPosition = newPos;if(this.mSyncHeight == this.getHeight()){this.mLayoutMode = AbsListView.LAYOUT_SYNC;}else {this.mLayoutMode = AbsListView.LAYOUT_SET_SELECTION;}this.setNextSelectedPositionInt(newPos);return;}}}break;case AbsListView.SYNC_FIRST_POSITION:this.mLayoutMode = AbsListView.LAYOUT_SYNC;this.mSyncPosition = Math.min(Math.max(0,this.mSyncPosition),count - 1);return;}}if(!this.isInTouchMode()){newPos = this.getSelectedItemPosition();if(newPos >= count){newPos = count - 1;}if(newPos < 0){newPos = 0;}selectablePos = this.lookForSelectablePosition(newPos,true);if(selectablePos >= 0){this.setNextSelectedPositionInt(selectablePos);return;}else {selectablePos = this.lookForSelectablePosition(newPos,false);if(selectablePos >= 0){this.setNextSelectedPositionInt(selectablePos);return;}}}else {if(this.mResurrectToPosition >= 0){return;}}}this.mLayoutMode = this.mStackFromBottom?AbsListView.LAYOUT_FORCE_BOTTOM:AbsListView.LAYOUT_FORCE_TOP;this.mSelectedPosition = AbsListView.INVALID_POSITION;this.mSelectedRowId = AbsListView.INVALID_ROW_ID;this.mNextSelectedPosition = AbsListView.INVALID_POSITION;this.mNextSelectedRowId = AbsListView.INVALID_ROW_ID;this.mNeedSync = false;this.mPendingSync = null;this.mSelectorPosition = AbsListView.INVALID_POSITION;this.checkSelectionChanged();}},{key:"onDisplayHint",value:function onDisplayHint(hint){_get(Object.getPrototypeOf(AbsListView.prototype),"onDisplayHint",this).call(this,hint);this.mPopupHidden = hint == AbsListView.INVISIBLE;}},{key:"dismissPopup",value:function dismissPopup(){}},{key:"showPopup",value:function showPopup(){}},{key:"positionPopup",value:function positionPopup(){}},{key:"isInFilterMode",value:function isInFilterMode(){return this.mFiltered;}},{key:"hasTextFilter",value:function hasTextFilter(){return this.mFiltered;}},{key:"onGlobalLayout",value:function onGlobalLayout(){if(this.isShown()){}else {}}},{key:"generateDefaultLayoutParams",value:function generateDefaultLayoutParams(){return new AbsListView.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,ViewGroup.LayoutParams.WRAP_CONTENT,0);}},{key:"generateLayoutParams",value:function generateLayoutParams(p){return new AbsListView.LayoutParams(p);}},{key:"checkLayoutParams",value:function checkLayoutParams(p){return p instanceof AbsListView.LayoutParams;}},{key:"setTranscriptMode",value:function setTranscriptMode(mode){this.mTranscriptMode = mode;}},{key:"getTranscriptMode",value:function getTranscriptMode(){return this.mTranscriptMode;}},{key:"getSolidColor",value:function getSolidColor(){return this.mCacheColorHint;}},{key:"setCacheColorHint",value:function setCacheColorHint(color){if(color != this.mCacheColorHint){this.mCacheColorHint = color;var count=this.getChildCount();for(var i=0;i < count;i++) {this.getChildAt(i).setDrawingCacheBackgroundColor(color);}this.mRecycler.setCacheColorHint(color);}}},{key:"getCacheColorHint",value:function getCacheColorHint(){return this.mCacheColorHint;}},{key:"reclaimViews",value:function reclaimViews(views){var childCount=this.getChildCount();var listener=this.mRecycler.mRecyclerListener;for(var i=0;i < childCount;i++) {var child=this.getChildAt(i);var lp=child.getLayoutParams();if(lp != null && this.mRecycler.shouldRecycleViewType(lp.viewType)){views.add(child);if(listener != null){listener.onMovedToScrapHeap(child);}}}this.mRecycler.reclaimScrapViews(views);this.removeAllViewsInLayout();}},{key:"finishGlows",value:function finishGlows(){}},{key:"setVisibleRangeHint",value:function setVisibleRangeHint(start,end){}},{key:"setRecyclerListener",value:function setRecyclerListener(listener){this.mRecycler.mRecyclerListener = listener;}},{key:"mOverflingDistance",get:function get(){if(this.mScrollY <= 0){if(this.mScrollY < -this._mOverflingDistance)return -this.mScrollY;return this._mOverflingDistance;}var overDistance=this.mScrollY;if(overDistance > this._mOverflingDistance)return overDistance;return this._mOverflingDistance;},set:function set(value){this._mOverflingDistance = value;}}],[{key:"getDistance",value:function getDistance(source,dest,direction){var sX=undefined,sY=undefined;var dX=undefined,dY=undefined;switch(direction){case View.FOCUS_RIGHT:sX = source.right;sY = source.top + source.height() / 2;dX = dest.left;dY = dest.top + dest.height() / 2;break;case View.FOCUS_DOWN:sX = source.left + source.width() / 2;sY = source.bottom;dX = dest.left + dest.width() / 2;dY = dest.top;break;case View.FOCUS_LEFT:sX = source.left;sY = source.top + source.height() / 2;dX = dest.right;dY = dest.top + dest.height() / 2;break;case View.FOCUS_UP:sX = source.left + source.width() / 2;sY = source.top;dX = dest.left + dest.width() / 2;dY = dest.bottom;break;case View.FOCUS_FORWARD:case View.FOCUS_BACKWARD:sX = source.right + source.width() / 2;sY = source.top + source.height() / 2;dX = dest.left + dest.width() / 2;dY = dest.top + dest.height() / 2;break;default:throw Error("new IllegalArgumentException(\"direction must be one of \" + \"{FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT, \" + \"FOCUS_FORWARD, FOCUS_BACKWARD}.\")");}var deltaX=dX - sX;var deltaY=dY - sY;return deltaY * deltaY + deltaX * deltaX;}},{key:"retrieveFromScrap",value:function retrieveFromScrap(scrapViews,position){var size=scrapViews.size();if(size > 0){for(var i=0;i < size;i++) {var view=scrapViews.get(i);if(view.getLayoutParams().scrappedFromPosition == position){scrapViews.remove(i);return view;}}return scrapViews.remove(size - 1);}else {return null;}}}]);return AbsListView;})(AdapterView);AbsListView.TAG_AbsListView = "AbsListView";AbsListView.TRANSCRIPT_MODE_DISABLED = 0;AbsListView.TRANSCRIPT_MODE_NORMAL = 1;AbsListView.TRANSCRIPT_MODE_ALWAYS_SCROLL = 2;AbsListView.TOUCH_MODE_REST = -1;AbsListView.TOUCH_MODE_DOWN = 0;AbsListView.TOUCH_MODE_TAP = 1;AbsListView.TOUCH_MODE_DONE_WAITING = 2;AbsListView.TOUCH_MODE_SCROLL = 3;AbsListView.TOUCH_MODE_FLING = 4;AbsListView.TOUCH_MODE_OVERSCROLL = 5;AbsListView.TOUCH_MODE_OVERFLING = 6;AbsListView.LAYOUT_NORMAL = 0;AbsListView.LAYOUT_FORCE_TOP = 1;AbsListView.LAYOUT_SET_SELECTION = 2;AbsListView.LAYOUT_FORCE_BOTTOM = 3;AbsListView.LAYOUT_SPECIFIC = 4;AbsListView.LAYOUT_SYNC = 5;AbsListView.LAYOUT_MOVE_SELECTION = 6;AbsListView.CHOICE_MODE_NONE = 0;AbsListView.CHOICE_MODE_SINGLE = 1;AbsListView.CHOICE_MODE_MULTIPLE = 2;AbsListView.CHOICE_MODE_MULTIPLE_MODAL = 3;AbsListView.OVERSCROLL_LIMIT_DIVISOR = 3;AbsListView.CHECK_POSITION_SEARCH_DISTANCE = 20;AbsListView.TOUCH_MODE_UNKNOWN = -1;AbsListView.TOUCH_MODE_ON = 0;AbsListView.TOUCH_MODE_OFF = 1;AbsListView.PROFILE_SCROLLING = false;AbsListView.PROFILE_FLINGING = false;AbsListView.INVALID_POINTER = -1;AbsListView.sLinearInterpolator = new LinearInterpolator();widget.AbsListView = AbsListView;(function(AbsListView){var OnScrollListener;(function(OnScrollListener){OnScrollListener.SCROLL_STATE_IDLE = 0;OnScrollListener.SCROLL_STATE_TOUCH_SCROLL = 1;OnScrollListener.SCROLL_STATE_FLING = 2;})(OnScrollListener = AbsListView.OnScrollListener || (AbsListView.OnScrollListener = {}));var WindowRunnnable=(function(){function WindowRunnnable(arg){_classCallCheck(this,WindowRunnnable);this._AbsListView_this = arg;}_createClass(WindowRunnnable,[{key:"rememberWindowAttachCount",value:function rememberWindowAttachCount(){this.mOriginalAttachCount = this._AbsListView_this.getWindowAttachCount();}},{key:"sameWindow",value:function sameWindow(){return this._AbsListView_this.getWindowAttachCount() == this.mOriginalAttachCount;}}]);return WindowRunnnable;})();AbsListView.WindowRunnnable = WindowRunnnable;var PerformClick=(function(_AbsListView$WindowRunnnable){_inherits(PerformClick,_AbsListView$WindowRunnnable);function PerformClick(arg){_classCallCheck(this,PerformClick);_get(Object.getPrototypeOf(PerformClick.prototype),"constructor",this).call(this,arg);this.mClickMotionPosition = 0;this._AbsListView_this = arg;}_createClass(PerformClick,[{key:"run",value:function run(){if(this._AbsListView_this.mDataChanged)return;var adapter=this._AbsListView_this.mAdapter;var motionPosition=this.mClickMotionPosition;if(adapter != null && this._AbsListView_this.mItemCount > 0 && motionPosition != AbsListView.INVALID_POSITION && motionPosition < adapter.getCount() && this.sameWindow()){var view=this._AbsListView_this.getChildAt(motionPosition - this._AbsListView_this.mFirstPosition);if(view != null){this._AbsListView_this.performItemClick(view,motionPosition,adapter.getItemId(motionPosition));}}}}]);return PerformClick;})(AbsListView.WindowRunnnable);AbsListView.PerformClick = PerformClick;var CheckForLongPress=(function(_AbsListView$WindowRunnnable2){_inherits(CheckForLongPress,_AbsListView$WindowRunnnable2);function CheckForLongPress(arg){_classCallCheck(this,CheckForLongPress);_get(Object.getPrototypeOf(CheckForLongPress.prototype),"constructor",this).call(this,arg);this._AbsListView_this = arg;}_createClass(CheckForLongPress,[{key:"run",value:function run(){var motionPosition=this._AbsListView_this.mMotionPosition;var child=this._AbsListView_this.getChildAt(motionPosition - this._AbsListView_this.mFirstPosition);if(child != null){var longPressPosition=this._AbsListView_this.mMotionPosition;var longPressId=this._AbsListView_this.mAdapter.getItemId(this._AbsListView_this.mMotionPosition);var handled=false;if(this.sameWindow() && !this._AbsListView_this.mDataChanged){handled = this._AbsListView_this.performLongPress(child,longPressPosition,longPressId);}if(handled){this._AbsListView_this.mTouchMode = AbsListView.TOUCH_MODE_REST;this._AbsListView_this.setPressed(false);child.setPressed(false);}else {this._AbsListView_this.mTouchMode = AbsListView.TOUCH_MODE_DONE_WAITING;}}}}]);return CheckForLongPress;})(AbsListView.WindowRunnnable);AbsListView.CheckForLongPress = CheckForLongPress;var CheckForKeyLongPress=(function(_AbsListView$WindowRunnnable3){_inherits(CheckForKeyLongPress,_AbsListView$WindowRunnnable3);function CheckForKeyLongPress(arg){_classCallCheck(this,CheckForKeyLongPress);_get(Object.getPrototypeOf(CheckForKeyLongPress.prototype),"constructor",this).call(this,arg);this._AbsListView_this = arg;}_createClass(CheckForKeyLongPress,[{key:"run",value:function run(){if(this._AbsListView_this.isPressed() && this._AbsListView_this.mSelectedPosition >= 0){var index=this._AbsListView_this.mSelectedPosition - this._AbsListView_this.mFirstPosition;var v=this._AbsListView_this.getChildAt(index);if(!this._AbsListView_this.mDataChanged){var handled=false;if(this.sameWindow()){handled = this._AbsListView_this.performLongPress(v,this._AbsListView_this.mSelectedPosition,this._AbsListView_this.mSelectedRowId);}if(handled){this._AbsListView_this.setPressed(false);v.setPressed(false);}}else {this._AbsListView_this.setPressed(false);if(v != null)v.setPressed(false);}}}}]);return CheckForKeyLongPress;})(AbsListView.WindowRunnnable);AbsListView.CheckForKeyLongPress = CheckForKeyLongPress;var CheckForTap=(function(){function CheckForTap(arg){_classCallCheck(this,CheckForTap);this._AbsListView_this = arg;}_createClass(CheckForTap,[{key:"run",value:function run(){if(this._AbsListView_this.mTouchMode == AbsListView.TOUCH_MODE_DOWN){this._AbsListView_this.mTouchMode = AbsListView.TOUCH_MODE_TAP;var child=this._AbsListView_this.getChildAt(this._AbsListView_this.mMotionPosition - this._AbsListView_this.mFirstPosition);if(child != null && !child.hasFocusable()){this._AbsListView_this.mLayoutMode = AbsListView.LAYOUT_NORMAL;if(!this._AbsListView_this.mDataChanged){child.setPressed(true);this._AbsListView_this.setPressed(true);this._AbsListView_this.layoutChildren();this._AbsListView_this.positionSelector(this._AbsListView_this.mMotionPosition,child);this._AbsListView_this.refreshDrawableState();var longPressTimeout=ViewConfiguration.getLongPressTimeout();var longClickable=this._AbsListView_this.isLongClickable();if(this._AbsListView_this.mSelector != null){var d=this._AbsListView_this.mSelector.getCurrent();}if(longClickable){if(this._AbsListView_this.mPendingCheckForLongPress_List == null){this._AbsListView_this.mPendingCheckForLongPress_List = new AbsListView.CheckForLongPress(this._AbsListView_this);}this._AbsListView_this.mPendingCheckForLongPress_List.rememberWindowAttachCount();this._AbsListView_this.postDelayed(this._AbsListView_this.mPendingCheckForLongPress_List,longPressTimeout);}else {this._AbsListView_this.mTouchMode = AbsListView.TOUCH_MODE_DONE_WAITING;}}else {this._AbsListView_this.mTouchMode = AbsListView.TOUCH_MODE_DONE_WAITING;}}}}}]);return CheckForTap;})();AbsListView.CheckForTap = CheckForTap;var FlingRunnable=(function(){function FlingRunnable(arg){var _this26=this;_classCallCheck(this,FlingRunnable);this.mLastFlingY = 0;this.mCheckFlywheel = (function(){var _this=_this26;var _Inner=(function(){function _Inner(){_classCallCheck(this,_Inner);}_createClass(_Inner,[{key:"run",value:function run(){var activeId=_this._AbsListView_this.mActivePointerId;var vt=_this._AbsListView_this.mVelocityTracker;var scroller=_this.mScroller;if(vt == null || activeId == AbsListView.INVALID_POINTER){return;}vt.computeCurrentVelocity(1000,_this._AbsListView_this.mMaximumVelocity);var yvel=-vt.getYVelocity(activeId);if(Math.abs(yvel) >= _this._AbsListView_this.mMinimumVelocity && scroller.isScrollingInDirection(0,yvel)){_this._AbsListView_this.postDelayed(_this,FlingRunnable.FLYWHEEL_TIMEOUT);}else {_this.endFling();_this._AbsListView_this.mTouchMode = AbsListView.TOUCH_MODE_SCROLL;_this._AbsListView_this.reportScrollStateChange(OnScrollListener.SCROLL_STATE_TOUCH_SCROLL);}}}]);return _Inner;})();return new _Inner();})();this._AbsListView_this = arg;this.mScroller = new OverScroller();}_createClass(FlingRunnable,[{key:"start",value:function start(initialVelocity){var initialY=initialVelocity < 0?Integer.MAX_VALUE:0;this.mLastFlingY = initialY;this.mScroller.setInterpolator(null);this.mScroller.fling(0,initialY,0,initialVelocity,0,Integer.MAX_VALUE,0,Integer.MAX_VALUE);this._AbsListView_this.mTouchMode = AbsListView.TOUCH_MODE_FLING;this._AbsListView_this.postOnAnimation(this);if(AbsListView.PROFILE_FLINGING){if(!this._AbsListView_this.mFlingProfilingStarted){this._AbsListView_this.mFlingProfilingStarted = true;}}}},{key:"startSpringback",value:function startSpringback(){if(this.mScroller.springBack(0,this._AbsListView_this.mScrollY,0,0,0,0)){this._AbsListView_this.mTouchMode = AbsListView.TOUCH_MODE_OVERFLING;this._AbsListView_this.invalidate();this._AbsListView_this.postOnAnimation(this);}else {this._AbsListView_this.mTouchMode = AbsListView.TOUCH_MODE_REST;this._AbsListView_this.reportScrollStateChange(OnScrollListener.SCROLL_STATE_IDLE);}}},{key:"startOverfling",value:function startOverfling(initialVelocity){this.mScroller.setInterpolator(null);var minY=Integer.MIN_VALUE,maxY=Integer.MAX_VALUE;if(this._AbsListView_this.mScrollY < 0)minY = 0;else if(this._AbsListView_this.mScrollY > 0)maxY = 0;this.mScroller.fling(0,this._AbsListView_this.mScrollY,0,initialVelocity,0,0,minY,maxY,0,this._AbsListView_this.getHeight());this._AbsListView_this.mTouchMode = AbsListView.TOUCH_MODE_OVERFLING;this._AbsListView_this.invalidate();this._AbsListView_this.postOnAnimation(this);}},{key:"edgeReached",value:function edgeReached(delta){this.mScroller.notifyVerticalEdgeReached(this._AbsListView_this.mScrollY,0,this._AbsListView_this.mOverflingDistance);var overscrollMode=this._AbsListView_this.getOverScrollMode();if(overscrollMode == AbsListView.OVER_SCROLL_ALWAYS || overscrollMode == AbsListView.OVER_SCROLL_IF_CONTENT_SCROLLS && !this._AbsListView_this.contentFits()){this._AbsListView_this.mTouchMode = AbsListView.TOUCH_MODE_OVERFLING;}else {this._AbsListView_this.mTouchMode = AbsListView.TOUCH_MODE_REST;if(this._AbsListView_this.mPositionScroller != null){this._AbsListView_this.mPositionScroller.stop();}}this._AbsListView_this.invalidate();this._AbsListView_this.postOnAnimation(this);}},{key:"startScroll",value:function startScroll(distance,duration,linear){var initialY=distance < 0?Integer.MAX_VALUE:0;this.mLastFlingY = initialY;this.mScroller.setInterpolator(linear?AbsListView.sLinearInterpolator:null);this.mScroller.startScroll(0,initialY,0,distance,duration);this._AbsListView_this.mTouchMode = AbsListView.TOUCH_MODE_FLING;this._AbsListView_this.postOnAnimation(this);}},{key:"endFling",value:function endFling(){this._AbsListView_this.mTouchMode = AbsListView.TOUCH_MODE_REST;this._AbsListView_this.removeCallbacks(this);this._AbsListView_this.removeCallbacks(this.mCheckFlywheel);this._AbsListView_this.reportScrollStateChange(OnScrollListener.SCROLL_STATE_IDLE);this._AbsListView_this.clearScrollingCache();this.mScroller.abortAnimation();}},{key:"flywheelTouch",value:function flywheelTouch(){this._AbsListView_this.postDelayed(this.mCheckFlywheel,FlingRunnable.FLYWHEEL_TIMEOUT);}},{key:"run",value:function run(){switch(this._AbsListView_this.mTouchMode){default:this.endFling();return;case AbsListView.TOUCH_MODE_SCROLL:if(this.mScroller.isFinished()){return;}case AbsListView.TOUCH_MODE_FLING:{if(this._AbsListView_this.mDataChanged){this._AbsListView_this.layoutChildren();}if(this._AbsListView_this.mItemCount == 0 || this._AbsListView_this.getChildCount() == 0){this.endFling();return;}var scroller=this.mScroller;var more=scroller.computeScrollOffset();var y=scroller.getCurrY();var delta=this.mLastFlingY - y;if(delta > 0){this._AbsListView_this.mMotionPosition = this._AbsListView_this.mFirstPosition;var firstView=this._AbsListView_this.getChildAt(0);this._AbsListView_this.mMotionViewOriginalTop = firstView.getTop();delta = Math.min(this._AbsListView_this.getHeight() - this._AbsListView_this.mPaddingBottom - this._AbsListView_this.mPaddingTop - 1,delta);}else {var offsetToLast=this._AbsListView_this.getChildCount() - 1;this._AbsListView_this.mMotionPosition = this._AbsListView_this.mFirstPosition + offsetToLast;var lastView=this._AbsListView_this.getChildAt(offsetToLast);this._AbsListView_this.mMotionViewOriginalTop = lastView.getTop();delta = Math.max(-(this._AbsListView_this.getHeight() - this._AbsListView_this.mPaddingBottom - this._AbsListView_this.mPaddingTop - 1),delta);}var motionView=this._AbsListView_this.getChildAt(this._AbsListView_this.mMotionPosition - this._AbsListView_this.mFirstPosition);var oldTop=0;if(motionView != null){oldTop = motionView.getTop();}var atEdge=this._AbsListView_this.trackMotionScroll(delta,delta);var atEnd=atEdge && delta != 0;if(atEnd){if(motionView != null){var overshoot=-(delta - (motionView.getTop() - oldTop));this._AbsListView_this.overScrollBy(0,overshoot,0,this._AbsListView_this.mScrollY,0,0,0,this._AbsListView_this.mOverflingDistance,false);}if(more){this.edgeReached(delta);}break;}if(more && !atEnd){if(atEdge)this._AbsListView_this.invalidate();this.mLastFlingY = y;this._AbsListView_this.postOnAnimation(this);}else {this.endFling();if(AbsListView.PROFILE_FLINGING){if(this._AbsListView_this.mFlingProfilingStarted){this._AbsListView_this.mFlingProfilingStarted = false;}}}break;}case AbsListView.TOUCH_MODE_OVERFLING:{var scroller=this.mScroller;if(scroller.computeScrollOffset()){var _scrollY8=this._AbsListView_this.mScrollY;var currY=scroller.getCurrY();var deltaY=currY - _scrollY8;var crossDown=_scrollY8 <= 0 && currY > 0;var crossUp=_scrollY8 >= 0 && currY < 0;if(crossDown || crossUp){var velocity=Math.floor(scroller.getCurrVelocity());if(crossUp)velocity = -velocity;scroller.abortAnimation();this.start(velocity);deltaY = -_scrollY8;}if(this._AbsListView_this.overScrollBy(0,deltaY,0,_scrollY8,0,0,0,this._AbsListView_this.mOverflingDistance,false)){this.startSpringback();}else {this._AbsListView_this.invalidate();this._AbsListView_this.postOnAnimation(this);}}else {this.endFling();}break;}}}}]);return FlingRunnable;})();FlingRunnable.FLYWHEEL_TIMEOUT = 40;AbsListView.FlingRunnable = FlingRunnable;var PositionScroller=(function(){function PositionScroller(arg){_classCallCheck(this,PositionScroller);this.mMode = 0;this.mTargetPos = 0;this.mBoundPos = 0;this.mLastSeenPos = 0;this.mScrollDuration = 0;this.mExtraScroll = 0;this.mOffsetFromTop = 0;this._AbsListView_this = arg;this.mExtraScroll = ViewConfiguration.get().getScaledFadingEdgeLength();}_createClass(PositionScroller,[{key:"start",value:function start(){for(var _len35=arguments.length,args=Array(_len35),_key35=0;_key35 < _len35;_key35++) {args[_key35] = arguments[_key35];}if(args.length === 1)this._start_1(args[0]);else if(args.length === 2)this._start_2(args[0],args[1]);}},{key:"_start_1",value:function _start_1(position){var _this27=this;this.stop();if(this._AbsListView_this.mDataChanged){this._AbsListView_this.mPositionScrollAfterLayout = (function(){var _this=_this27;var _Inner=(function(){function _Inner(){_classCallCheck(this,_Inner);}_createClass(_Inner,[{key:"run",value:function run(){_this.start(position);}}]);return _Inner;})();return new _Inner();})();return;}var childCount=this._AbsListView_this.getChildCount();if(childCount == 0){return;}var firstPos=this._AbsListView_this.mFirstPosition;var lastPos=firstPos + childCount - 1;var viewTravelCount=undefined;var clampedPosition=Math.max(0,Math.min(this._AbsListView_this.getCount() - 1,position));if(clampedPosition < firstPos){viewTravelCount = firstPos - clampedPosition + 1;this.mMode = PositionScroller.MOVE_UP_POS;}else if(clampedPosition > lastPos){viewTravelCount = clampedPosition - lastPos + 1;this.mMode = PositionScroller.MOVE_DOWN_POS;}else {this.scrollToVisible(clampedPosition,AbsListView.INVALID_POSITION,PositionScroller.SCROLL_DURATION);return;}if(viewTravelCount > 0){this.mScrollDuration = PositionScroller.SCROLL_DURATION / viewTravelCount;}else {this.mScrollDuration = PositionScroller.SCROLL_DURATION;}this.mTargetPos = clampedPosition;this.mBoundPos = AbsListView.INVALID_POSITION;this.mLastSeenPos = AbsListView.INVALID_POSITION;this._AbsListView_this.postOnAnimation(this);}},{key:"_start_2",value:function _start_2(position,boundPosition){var _this28=this;this.stop();if(boundPosition == AbsListView.INVALID_POSITION){this.start(position);return;}if(this._AbsListView_this.mDataChanged){this._AbsListView_this.mPositionScrollAfterLayout = (function(){var _this=_this28;var _Inner=(function(){function _Inner(){_classCallCheck(this,_Inner);}_createClass(_Inner,[{key:"run",value:function run(){_this.start(position,boundPosition);}}]);return _Inner;})();return new _Inner();})();return;}var childCount=this._AbsListView_this.getChildCount();if(childCount == 0){return;}var firstPos=this._AbsListView_this.mFirstPosition;var lastPos=firstPos + childCount - 1;var viewTravelCount=undefined;var clampedPosition=Math.max(0,Math.min(this._AbsListView_this.getCount() - 1,position));if(clampedPosition < firstPos){var boundPosFromLast=lastPos - boundPosition;if(boundPosFromLast < 1){return;}var posTravel=firstPos - clampedPosition + 1;var boundTravel=boundPosFromLast - 1;if(boundTravel < posTravel){viewTravelCount = boundTravel;this.mMode = PositionScroller.MOVE_UP_BOUND;}else {viewTravelCount = posTravel;this.mMode = PositionScroller.MOVE_UP_POS;}}else if(clampedPosition > lastPos){var boundPosFromFirst=boundPosition - firstPos;if(boundPosFromFirst < 1){return;}var posTravel=clampedPosition - lastPos + 1;var boundTravel=boundPosFromFirst - 1;if(boundTravel < posTravel){viewTravelCount = boundTravel;this.mMode = PositionScroller.MOVE_DOWN_BOUND;}else {viewTravelCount = posTravel;this.mMode = PositionScroller.MOVE_DOWN_POS;}}else {this.scrollToVisible(clampedPosition,boundPosition,PositionScroller.SCROLL_DURATION);return;}if(viewTravelCount > 0){this.mScrollDuration = PositionScroller.SCROLL_DURATION / viewTravelCount;}else {this.mScrollDuration = PositionScroller.SCROLL_DURATION;}this.mTargetPos = clampedPosition;this.mBoundPos = boundPosition;this.mLastSeenPos = AbsListView.INVALID_POSITION;this._AbsListView_this.postOnAnimation(this);}},{key:"startWithOffset",value:function startWithOffset(position,offset){var _this29=this;var duration=arguments.length <= 2 || arguments[2] === undefined?PositionScroller.SCROLL_DURATION:arguments[2];this.stop();if(this._AbsListView_this.mDataChanged){var _ret6=(function(){var postOffset=offset;_this29._AbsListView_this.mPositionScrollAfterLayout = (function(){var _this=_this29;var _Inner=(function(){function _Inner(){_classCallCheck(this,_Inner);}_createClass(_Inner,[{key:"run",value:function run(){_this.startWithOffset(position,postOffset,duration);}}]);return _Inner;})();return new _Inner();})();return {v:undefined};})();if(typeof _ret6 === "object")return _ret6.v;}var childCount=this._AbsListView_this.getChildCount();if(childCount == 0){return;}offset += this._AbsListView_this.getPaddingTop();this.mTargetPos = Math.max(0,Math.min(this._AbsListView_this.getCount() - 1,position));this.mOffsetFromTop = offset;this.mBoundPos = AbsListView.INVALID_POSITION;this.mLastSeenPos = AbsListView.INVALID_POSITION;this.mMode = PositionScroller.MOVE_OFFSET;var firstPos=this._AbsListView_this.mFirstPosition;var lastPos=firstPos + childCount - 1;var viewTravelCount=undefined;if(this.mTargetPos < firstPos){viewTravelCount = firstPos - this.mTargetPos;}else if(this.mTargetPos > lastPos){viewTravelCount = this.mTargetPos - lastPos;}else {var targetTop=this._AbsListView_this.getChildAt(this.mTargetPos - firstPos).getTop();this._AbsListView_this.smoothScrollBy(targetTop - offset,duration,true);return;}var screenTravelCount=viewTravelCount / childCount;this.mScrollDuration = screenTravelCount < 1?duration:Math.floor(duration / screenTravelCount);this.mLastSeenPos = AbsListView.INVALID_POSITION;this._AbsListView_this.postOnAnimation(this);}},{key:"scrollToVisible",value:function scrollToVisible(targetPos,boundPos,duration){var firstPos=this._AbsListView_this.mFirstPosition;var childCount=this._AbsListView_this.getChildCount();var lastPos=firstPos + childCount - 1;var paddedTop=this._AbsListView_this.mListPadding.top;var paddedBottom=this._AbsListView_this.getHeight() - this._AbsListView_this.mListPadding.bottom;if(targetPos < firstPos || targetPos > lastPos){Log.w(AbsListView.TAG_AbsListView,"scrollToVisible called with targetPos " + targetPos + " not visible [" + firstPos + ", " + lastPos + "]");}if(boundPos < firstPos || boundPos > lastPos){boundPos = AbsListView.INVALID_POSITION;}var targetChild=this._AbsListView_this.getChildAt(targetPos - firstPos);var targetTop=targetChild.getTop();var targetBottom=targetChild.getBottom();var scrollBy=0;if(targetBottom > paddedBottom){scrollBy = targetBottom - paddedBottom;}if(targetTop < paddedTop){scrollBy = targetTop - paddedTop;}if(scrollBy == 0){return;}if(boundPos >= 0){var boundChild=this._AbsListView_this.getChildAt(boundPos - firstPos);var boundTop=boundChild.getTop();var boundBottom=boundChild.getBottom();var absScroll=Math.abs(scrollBy);if(scrollBy < 0 && boundBottom + absScroll > paddedBottom){scrollBy = Math.max(0,boundBottom - paddedBottom);}else if(scrollBy > 0 && boundTop - absScroll < paddedTop){scrollBy = Math.min(0,boundTop - paddedTop);}}this._AbsListView_this.smoothScrollBy(scrollBy,duration);}},{key:"stop",value:function stop(){this._AbsListView_this.removeCallbacks(this);}},{key:"run",value:function run(){var listHeight=this._AbsListView_this.getHeight();var firstPos=this._AbsListView_this.mFirstPosition;switch(this.mMode){case PositionScroller.MOVE_DOWN_POS:{var lastViewIndex=this._AbsListView_this.getChildCount() - 1;var lastPos=firstPos + lastViewIndex;if(lastViewIndex < 0){return;}if(lastPos == this.mLastSeenPos){this._AbsListView_this.postOnAnimation(this);return;}var lastView=this._AbsListView_this.getChildAt(lastViewIndex);var lastViewHeight=lastView.getHeight();var lastViewTop=lastView.getTop();var lastViewPixelsShowing=listHeight - lastViewTop;var extraScroll=lastPos < this._AbsListView_this.mItemCount - 1?Math.max(this._AbsListView_this.mListPadding.bottom,this.mExtraScroll):this._AbsListView_this.mListPadding.bottom;var _scrollBy=lastViewHeight - lastViewPixelsShowing + extraScroll;this._AbsListView_this.smoothScrollBy(_scrollBy,this.mScrollDuration,true);this.mLastSeenPos = lastPos;if(lastPos < this.mTargetPos){this._AbsListView_this.postOnAnimation(this);}break;}case PositionScroller.MOVE_DOWN_BOUND:{var nextViewIndex=1;var childCount=this._AbsListView_this.getChildCount();if(firstPos == this.mBoundPos || childCount <= nextViewIndex || firstPos + childCount >= this._AbsListView_this.mItemCount){return;}var nextPos=firstPos + nextViewIndex;if(nextPos == this.mLastSeenPos){this._AbsListView_this.postOnAnimation(this);return;}var nextView=this._AbsListView_this.getChildAt(nextViewIndex);var nextViewHeight=nextView.getHeight();var nextViewTop=nextView.getTop();var extraScroll=Math.max(this._AbsListView_this.mListPadding.bottom,this.mExtraScroll);if(nextPos < this.mBoundPos){this._AbsListView_this.smoothScrollBy(Math.max(0,nextViewHeight + nextViewTop - extraScroll),this.mScrollDuration,true);this.mLastSeenPos = nextPos;this._AbsListView_this.postOnAnimation(this);}else {if(nextViewTop > extraScroll){this._AbsListView_this.smoothScrollBy(nextViewTop - extraScroll,this.mScrollDuration,true);}}break;}case PositionScroller.MOVE_UP_POS:{if(firstPos == this.mLastSeenPos){this._AbsListView_this.postOnAnimation(this);return;}var firstView=this._AbsListView_this.getChildAt(0);if(firstView == null){return;}var firstViewTop=firstView.getTop();var extraScroll=firstPos > 0?Math.max(this.mExtraScroll,this._AbsListView_this.mListPadding.top):this._AbsListView_this.mListPadding.top;this._AbsListView_this.smoothScrollBy(firstViewTop - extraScroll,this.mScrollDuration,true);this.mLastSeenPos = firstPos;if(firstPos > this.mTargetPos){this._AbsListView_this.postOnAnimation(this);}break;}case PositionScroller.MOVE_UP_BOUND:{var lastViewIndex=this._AbsListView_this.getChildCount() - 2;if(lastViewIndex < 0){return;}var lastPos=firstPos + lastViewIndex;if(lastPos == this.mLastSeenPos){this._AbsListView_this.postOnAnimation(this);return;}var lastView=this._AbsListView_this.getChildAt(lastViewIndex);var lastViewHeight=lastView.getHeight();var lastViewTop=lastView.getTop();var lastViewPixelsShowing=listHeight - lastViewTop;var extraScroll=Math.max(this._AbsListView_this.mListPadding.top,this.mExtraScroll);this.mLastSeenPos = lastPos;if(lastPos > this.mBoundPos){this._AbsListView_this.smoothScrollBy(-(lastViewPixelsShowing - extraScroll),this.mScrollDuration,true);this._AbsListView_this.postOnAnimation(this);}else {var bottom=listHeight - extraScroll;var lastViewBottom=lastViewTop + lastViewHeight;if(bottom > lastViewBottom){this._AbsListView_this.smoothScrollBy(-(bottom - lastViewBottom),this.mScrollDuration,true);}}break;}case PositionScroller.MOVE_OFFSET:{if(this.mLastSeenPos == firstPos){this._AbsListView_this.postOnAnimation(this);return;}this.mLastSeenPos = firstPos;var childCount=this._AbsListView_this.getChildCount();var position=this.mTargetPos;var lastPos=firstPos + childCount - 1;var viewTravelCount=0;if(position < firstPos){viewTravelCount = firstPos - position + 1;}else if(position > lastPos){viewTravelCount = position - lastPos;}var screenTravelCount=viewTravelCount / childCount;var modifier=Math.min(Math.abs(screenTravelCount),1.);if(position < firstPos){var distance=Math.floor(-this._AbsListView_this.getHeight() * modifier);var duration=Math.floor(this.mScrollDuration * modifier);this._AbsListView_this.smoothScrollBy(distance,duration,true);this._AbsListView_this.postOnAnimation(this);}else if(position > lastPos){var distance=Math.floor(this._AbsListView_this.getHeight() * modifier);var duration=Math.floor(this.mScrollDuration * modifier);this._AbsListView_this.smoothScrollBy(distance,duration,true);this._AbsListView_this.postOnAnimation(this);}else {var targetTop=this._AbsListView_this.getChildAt(position - firstPos).getTop();var distance=targetTop - this.mOffsetFromTop;var duration=Math.floor(this.mScrollDuration * (Math.abs(distance) / this._AbsListView_this.getHeight()));this._AbsListView_this.smoothScrollBy(distance,duration,true);}break;}default:break;}}}]);return PositionScroller;})();PositionScroller.SCROLL_DURATION = 200;PositionScroller.MOVE_DOWN_POS = 1;PositionScroller.MOVE_UP_POS = 2;PositionScroller.MOVE_DOWN_BOUND = 3;PositionScroller.MOVE_UP_BOUND = 4;PositionScroller.MOVE_OFFSET = 5;AbsListView.PositionScroller = PositionScroller;var AdapterDataSetObserver=(function(_AdapterView$AdapterDataSetObserver){_inherits(AdapterDataSetObserver,_AdapterView$AdapterDataSetObserver);function AdapterDataSetObserver(arg){_classCallCheck(this,AdapterDataSetObserver);_get(Object.getPrototypeOf(AdapterDataSetObserver.prototype),"constructor",this).call(this,arg);this._AbsListView_this = arg;}_createClass(AdapterDataSetObserver,[{key:"onChanged",value:function onChanged(){_get(Object.getPrototypeOf(AdapterDataSetObserver.prototype),"onChanged",this).call(this);}},{key:"onInvalidated",value:function onInvalidated(){_get(Object.getPrototypeOf(AdapterDataSetObserver.prototype),"onInvalidated",this).call(this);}}]);return AdapterDataSetObserver;})(AdapterView.AdapterDataSetObserver);AbsListView.AdapterDataSetObserver = AdapterDataSetObserver;var LayoutParams=(function(_ViewGroup$LayoutParams){_inherits(LayoutParams,_ViewGroup$LayoutParams);function LayoutParams(){_classCallCheck(this,LayoutParams);_get(Object.getPrototypeOf(LayoutParams.prototype),"constructor",this).call(this);this.viewType = 0;this.scrappedFromPosition = 0;this.itemId = -1;for(var _len36=arguments.length,args=Array(_len36),_key36=0;_key36 < _len36;_key36++) {args[_key36] = arguments[_key36];}if(args.length === 1){_get(Object.getPrototypeOf(LayoutParams.prototype),"constructor",this).call(this,args[0]);}else if(args.length === 2){_get(Object.getPrototypeOf(LayoutParams.prototype),"constructor",this).call(this,args[0],args[1]);}else if(args.length === 3){_get(Object.getPrototypeOf(LayoutParams.prototype),"constructor",this).call(this,args[0],args[1]);this.viewType = args[2];}}return LayoutParams;})(ViewGroup.LayoutParams);AbsListView.LayoutParams = LayoutParams;var RecycleBin=(function(){function RecycleBin(arg){_classCallCheck(this,RecycleBin);this.mFirstActivePosition = 0;this.mActiveViews = [];this.mViewTypeCount = 0;this._AbsListView_this = arg;}_createClass(RecycleBin,[{key:"setViewTypeCount",value:function setViewTypeCount(viewTypeCount){if(viewTypeCount < 1){throw Error("new IllegalArgumentException(\"Can't have a viewTypeCount < 1\")");}var scrapViews=new Array(viewTypeCount);for(var i=0;i < viewTypeCount;i++) {scrapViews[i] = new ArrayList();}this.mViewTypeCount = viewTypeCount;this.mCurrentScrap = scrapViews[0];this.mScrapViews = scrapViews;}},{key:"markChildrenDirty",value:function markChildrenDirty(){if(this.mViewTypeCount == 1){var scrap=this.mCurrentScrap;var scrapCount=scrap.size();for(var i=0;i < scrapCount;i++) {scrap.get(i).forceLayout();}}else {var typeCount=this.mViewTypeCount;for(var i=0;i < typeCount;i++) {var scrap=this.mScrapViews[i];var scrapCount=scrap.size();for(var j=0;j < scrapCount;j++) {scrap.get(j).forceLayout();}}}if(this.mTransientStateViews != null){var count=this.mTransientStateViews.size();for(var i=0;i < count;i++) {this.mTransientStateViews.valueAt(i).forceLayout();}}if(this.mTransientStateViewsById != null){var count=this.mTransientStateViewsById.size();for(var i=0;i < count;i++) {this.mTransientStateViewsById.valueAt(i).forceLayout();}}}},{key:"shouldRecycleViewType",value:function shouldRecycleViewType(viewType){return viewType >= 0;}},{key:"clear",value:function clear(){if(this.mViewTypeCount == 1){var scrap=this.mCurrentScrap;var scrapCount=scrap.size();for(var i=0;i < scrapCount;i++) {this._AbsListView_this.removeDetachedView(scrap.remove(scrapCount - 1 - i),false);}}else {var typeCount=this.mViewTypeCount;for(var i=0;i < typeCount;i++) {var scrap=this.mScrapViews[i];var scrapCount=scrap.size();for(var j=0;j < scrapCount;j++) {this._AbsListView_this.removeDetachedView(scrap.remove(scrapCount - 1 - j),false);}}}if(this.mTransientStateViews != null){this.mTransientStateViews.clear();}if(this.mTransientStateViewsById != null){this.mTransientStateViewsById.clear();}}},{key:"fillActiveViews",value:function fillActiveViews(childCount,firstActivePosition){if(this.mActiveViews.length < childCount){this.mActiveViews = new Array(childCount);}this.mFirstActivePosition = firstActivePosition;var activeViews=this.mActiveViews;for(var i=0;i < childCount;i++) {var child=this._AbsListView_this.getChildAt(i);var lp=child.getLayoutParams();if(lp != null && lp.viewType != AbsListView.ITEM_VIEW_TYPE_HEADER_OR_FOOTER){activeViews[i] = child;}}}},{key:"getActiveView",value:function getActiveView(position){var index=position - this.mFirstActivePosition;var activeViews=this.mActiveViews;if(index >= 0 && index < activeViews.length){var match=activeViews[index];activeViews[index] = null;return match;}return null;}},{key:"getTransientStateView",value:function getTransientStateView(position){if(this._AbsListView_this.mAdapter != null && this._AbsListView_this.mAdapterHasStableIds && this.mTransientStateViewsById != null){var id=this._AbsListView_this.mAdapter.getItemId(position);var result=this.mTransientStateViewsById.get(id);this.mTransientStateViewsById.remove(id);return result;}if(this.mTransientStateViews != null){var index=this.mTransientStateViews.indexOfKey(position);if(index >= 0){var result=this.mTransientStateViews.valueAt(index);this.mTransientStateViews.removeAt(index);return result;}}return null;}},{key:"clearTransientStateViews",value:function clearTransientStateViews(){if(this.mTransientStateViews != null){this.mTransientStateViews.clear();}if(this.mTransientStateViewsById != null){this.mTransientStateViewsById.clear();}}},{key:"getScrapView",value:function getScrapView(position){if(this.mViewTypeCount == 1){return AbsListView.retrieveFromScrap(this.mCurrentScrap,position);}else {var whichScrap=this._AbsListView_this.mAdapter.getItemViewType(position);if(whichScrap >= 0 && whichScrap < this.mScrapViews.length){return AbsListView.retrieveFromScrap(this.mScrapViews[whichScrap],position);}}return null;}},{key:"addScrapView",value:function addScrapView(scrap,position){var lp=scrap.getLayoutParams();if(lp == null){return;}lp.scrappedFromPosition = position;var viewType=lp.viewType;if(!this.shouldRecycleViewType(viewType)){return;}scrap.dispatchStartTemporaryDetach();var scrapHasTransientState=scrap.hasTransientState();if(scrapHasTransientState){if(this._AbsListView_this.mAdapter != null && this._AbsListView_this.mAdapterHasStableIds){if(this.mTransientStateViewsById == null){this.mTransientStateViewsById = new LongSparseArray();}this.mTransientStateViewsById.put(lp.itemId,scrap);}else if(!this._AbsListView_this.mDataChanged){if(this.mTransientStateViews == null){this.mTransientStateViews = new SparseArray();}this.mTransientStateViews.put(position,scrap);}else {if(this.mSkippedScrap == null){this.mSkippedScrap = new ArrayList();}this.mSkippedScrap.add(scrap);}}else {if(this.mViewTypeCount == 1){this.mCurrentScrap.add(scrap);}else {this.mScrapViews[viewType].add(scrap);}if(this.mRecyclerListener != null){this.mRecyclerListener.onMovedToScrapHeap(scrap);}}}},{key:"removeSkippedScrap",value:function removeSkippedScrap(){if(this.mSkippedScrap == null){return;}var count=this.mSkippedScrap.size();for(var i=0;i < count;i++) {this._AbsListView_this.removeDetachedView(this.mSkippedScrap.get(i),false);}this.mSkippedScrap.clear();}},{key:"scrapActiveViews",value:function scrapActiveViews(){var activeViews=this.mActiveViews;var hasListener=this.mRecyclerListener != null;var multipleScraps=this.mViewTypeCount > 1;var scrapViews=this.mCurrentScrap;var count=activeViews.length;for(var i=count - 1;i >= 0;i--) {var victim=activeViews[i];if(victim != null){var lp=victim.getLayoutParams();var whichScrap=lp.viewType;activeViews[i] = null;var scrapHasTransientState=victim.hasTransientState();if(!this.shouldRecycleViewType(whichScrap) || scrapHasTransientState){if(whichScrap != AbsListView.ITEM_VIEW_TYPE_HEADER_OR_FOOTER && scrapHasTransientState){this._AbsListView_this.removeDetachedView(victim,false);}if(scrapHasTransientState){if(this._AbsListView_this.mAdapter != null && this._AbsListView_this.mAdapterHasStableIds){if(this.mTransientStateViewsById == null){this.mTransientStateViewsById = new LongSparseArray();}var id=this._AbsListView_this.mAdapter.getItemId(this.mFirstActivePosition + i);this.mTransientStateViewsById.put(id,victim);}else {if(this.mTransientStateViews == null){this.mTransientStateViews = new SparseArray();}this.mTransientStateViews.put(this.mFirstActivePosition + i,victim);}}continue;}if(multipleScraps){scrapViews = this.mScrapViews[whichScrap];}victim.dispatchStartTemporaryDetach();lp.scrappedFromPosition = this.mFirstActivePosition + i;scrapViews.add(victim);if(hasListener){this.mRecyclerListener.onMovedToScrapHeap(victim);}}}this.pruneScrapViews();}},{key:"pruneScrapViews",value:function pruneScrapViews(){var maxViews=this.mActiveViews.length;var viewTypeCount=this.mViewTypeCount;var scrapViews=this.mScrapViews;for(var i=0;i < viewTypeCount;++i) {var scrapPile=scrapViews[i];var size=scrapPile.size();var extras=size - maxViews;size--;for(var j=0;j < extras;j++) {this._AbsListView_this.removeDetachedView(scrapPile.remove(size--),false);}}if(this.mTransientStateViews != null){for(var i=0;i < this.mTransientStateViews.size();i++) {var v=this.mTransientStateViews.valueAt(i);if(!v.hasTransientState()){this.mTransientStateViews.removeAt(i);i--;}}}if(this.mTransientStateViewsById != null){for(var i=0;i < this.mTransientStateViewsById.size();i++) {var v=this.mTransientStateViewsById.valueAt(i);if(!v.hasTransientState()){this.mTransientStateViewsById.removeAt(i);i--;}}}}},{key:"reclaimScrapViews",value:function reclaimScrapViews(views){if(this.mViewTypeCount == 1){views.addAll(this.mCurrentScrap);}else {var viewTypeCount=this.mViewTypeCount;var scrapViews=this.mScrapViews;for(var i=0;i < viewTypeCount;++i) {var scrapPile=scrapViews[i];views.addAll(scrapPile);}}}},{key:"setCacheColorHint",value:function setCacheColorHint(color){if(this.mViewTypeCount == 1){var scrap=this.mCurrentScrap;var scrapCount=scrap.size();for(var i=0;i < scrapCount;i++) {scrap.get(i).setDrawingCacheBackgroundColor(color);}}else {var typeCount=this.mViewTypeCount;for(var i=0;i < typeCount;i++) {var scrap=this.mScrapViews[i];var scrapCount=scrap.size();for(var j=0;j < scrapCount;j++) {scrap.get(j).setDrawingCacheBackgroundColor(color);}}}var activeViews=this.mActiveViews;var count=activeViews.length;for(var i=0;i < count;++i) {var victim=activeViews[i];if(victim != null){victim.setDrawingCacheBackgroundColor(color);}}}}]);return RecycleBin;})();AbsListView.RecycleBin = RecycleBin;})(AbsListView = widget.AbsListView || (widget.AbsListView = {}));})(widget = android.widget || (android.widget = {}));})(android || (android = {})); /*
 * Copyright (C) 2008 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ ///<reference path="../../android/widget/Adapter.ts"/>
///<reference path="../../android/widget/ListAdapter.ts"/>
///<reference path="../../android/widget/ListView.ts"/>
/*
 * Copyright (C) 2006 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ ///<reference path="../../android/database/DataSetObserver.ts"/>
///<reference path="../../android/view/View.ts"/>
///<reference path="../../android/view/ViewGroup.ts"/>
///<reference path="../../java/util/ArrayList.ts"/>
///<reference path="../../android/widget/Adapter.ts"/>
///<reference path="../../android/widget/AdapterView.ts"/>
///<reference path="../../android/widget/ListAdapter.ts"/>
///<reference path="../../android/widget/ListView.ts"/>
///<reference path="../../android/widget/WrapperListAdapter.ts"/>
var android;(function(android){var widget;(function(widget){var ArrayList=java.util.ArrayList;var AdapterView=android.widget.AdapterView;var HeaderViewListAdapter=(function(){function HeaderViewListAdapter(headerViewInfos,footerViewInfos,adapter){_classCallCheck(this,HeaderViewListAdapter);this.mAdapter = adapter;this.mIsFilterable = false;if(headerViewInfos == null){this.mHeaderViewInfos = HeaderViewListAdapter.EMPTY_INFO_LIST;}else {this.mHeaderViewInfos = headerViewInfos;}if(footerViewInfos == null){this.mFooterViewInfos = HeaderViewListAdapter.EMPTY_INFO_LIST;}else {this.mFooterViewInfos = footerViewInfos;}this.mAreAllFixedViewsSelectable = this.areAllListInfosSelectable(this.mHeaderViewInfos) && this.areAllListInfosSelectable(this.mFooterViewInfos);}_createClass(HeaderViewListAdapter,[{key:"getHeadersCount",value:function getHeadersCount(){return this.mHeaderViewInfos.size();}},{key:"getFootersCount",value:function getFootersCount(){return this.mFooterViewInfos.size();}},{key:"isEmpty",value:function isEmpty(){return this.mAdapter == null || this.mAdapter.isEmpty();}},{key:"areAllListInfosSelectable",value:function areAllListInfosSelectable(infos){if(infos != null){var _iteratorNormalCompletion34=true;var _didIteratorError34=false;var _iteratorError34=undefined;try{for(var _iterator34=infos.array[Symbol.iterator](),_step34;!(_iteratorNormalCompletion34 = (_step34 = _iterator34.next()).done);_iteratorNormalCompletion34 = true) {var info=_step34.value;if(!info.isSelectable){return false;}}}catch(err) {_didIteratorError34 = true;_iteratorError34 = err;}finally {try{if(!_iteratorNormalCompletion34 && _iterator34["return"]){_iterator34["return"]();}}finally {if(_didIteratorError34){throw _iteratorError34;}}}}return true;}},{key:"removeHeader",value:function removeHeader(v){for(var i=0;i < this.mHeaderViewInfos.size();i++) {var info=this.mHeaderViewInfos.get(i);if(info.view == v){this.mHeaderViewInfos.remove(i);this.mAreAllFixedViewsSelectable = this.areAllListInfosSelectable(this.mHeaderViewInfos) && this.areAllListInfosSelectable(this.mFooterViewInfos);return true;}}return false;}},{key:"removeFooter",value:function removeFooter(v){for(var i=0;i < this.mFooterViewInfos.size();i++) {var info=this.mFooterViewInfos.get(i);if(info.view == v){this.mFooterViewInfos.remove(i);this.mAreAllFixedViewsSelectable = this.areAllListInfosSelectable(this.mHeaderViewInfos) && this.areAllListInfosSelectable(this.mFooterViewInfos);return true;}}return false;}},{key:"getCount",value:function getCount(){if(this.mAdapter != null){return this.getFootersCount() + this.getHeadersCount() + this.mAdapter.getCount();}else {return this.getFootersCount() + this.getHeadersCount();}}},{key:"areAllItemsEnabled",value:function areAllItemsEnabled(){if(this.mAdapter != null){return this.mAreAllFixedViewsSelectable && this.mAdapter.areAllItemsEnabled();}else {return true;}}},{key:"isEnabled",value:function isEnabled(position){var numHeaders=this.getHeadersCount();if(position < numHeaders){return this.mHeaderViewInfos.get(position).isSelectable;}var adjPosition=position - numHeaders;var adapterCount=0;if(this.mAdapter != null){adapterCount = this.mAdapter.getCount();if(adjPosition < adapterCount){return this.mAdapter.isEnabled(adjPosition);}}return this.mFooterViewInfos.get(adjPosition - adapterCount).isSelectable;}},{key:"getItem",value:function getItem(position){var numHeaders=this.getHeadersCount();if(position < numHeaders){return this.mHeaderViewInfos.get(position).data;}var adjPosition=position - numHeaders;var adapterCount=0;if(this.mAdapter != null){adapterCount = this.mAdapter.getCount();if(adjPosition < adapterCount){return this.mAdapter.getItem(adjPosition);}}return this.mFooterViewInfos.get(adjPosition - adapterCount).data;}},{key:"getItemId",value:function getItemId(position){var numHeaders=this.getHeadersCount();if(this.mAdapter != null && position >= numHeaders){var adjPosition=position - numHeaders;var adapterCount=this.mAdapter.getCount();if(adjPosition < adapterCount){return this.mAdapter.getItemId(adjPosition);}}return -1;}},{key:"hasStableIds",value:function hasStableIds(){if(this.mAdapter != null){return this.mAdapter.hasStableIds();}return false;}},{key:"getView",value:function getView(position,convertView,parent){var numHeaders=this.getHeadersCount();if(position < numHeaders){return this.mHeaderViewInfos.get(position).view;}var adjPosition=position - numHeaders;var adapterCount=0;if(this.mAdapter != null){adapterCount = this.mAdapter.getCount();if(adjPosition < adapterCount){return this.mAdapter.getView(adjPosition,convertView,parent);}}return this.mFooterViewInfos.get(adjPosition - adapterCount).view;}},{key:"getItemViewType",value:function getItemViewType(position){var numHeaders=this.getHeadersCount();if(this.mAdapter != null && position >= numHeaders){var adjPosition=position - numHeaders;var adapterCount=this.mAdapter.getCount();if(adjPosition < adapterCount){return this.mAdapter.getItemViewType(adjPosition);}}return AdapterView.ITEM_VIEW_TYPE_HEADER_OR_FOOTER;}},{key:"getViewTypeCount",value:function getViewTypeCount(){if(this.mAdapter != null){return this.mAdapter.getViewTypeCount();}return 1;}},{key:"registerDataSetObserver",value:function registerDataSetObserver(observer){if(this.mAdapter != null){this.mAdapter.registerDataSetObserver(observer);}}},{key:"unregisterDataSetObserver",value:function unregisterDataSetObserver(observer){if(this.mAdapter != null){this.mAdapter.unregisterDataSetObserver(observer);}}},{key:"getFilter",value:function getFilter(){return null;}},{key:"getWrappedAdapter",value:function getWrappedAdapter(){return this.mAdapter;}}]);return HeaderViewListAdapter;})();HeaderViewListAdapter.EMPTY_INFO_LIST = new ArrayList();widget.HeaderViewListAdapter = HeaderViewListAdapter;})(widget = android.widget || (android.widget = {}));})(android || (android = {})); /**
 * Created by linfaxin on 15/11/5.
 */ ///<reference path="../../java/util/ArrayList.ts"/>
var android;(function(android){var database;(function(database){var ArrayList=java.util.ArrayList;var Observable=(function(){function Observable(){_classCallCheck(this,Observable);this.mObservers = new ArrayList();}_createClass(Observable,[{key:"registerObserver",value:function registerObserver(observer){if(observer == null){throw new Error("The observer is null.");}if(this.mObservers.contains(observer)){throw new Error("Observer " + observer + " is already registered.");}this.mObservers.add(observer);}},{key:"unregisterObserver",value:function unregisterObserver(observer){if(observer == null){throw new Error("The observer is null.");}var index=this.mObservers.indexOf(observer);if(index == -1){throw new Error("Observer " + observer + " was not registered.");}this.mObservers.remove(index);}},{key:"unregisterAll",value:function unregisterAll(){this.mObservers.clear();}}]);return Observable;})();database.Observable = Observable;})(database = android.database || (android.database = {}));})(android || (android = {})); /**
 * Created by linfaxin on 15/11/5.
 */ ///<reference path="Observable.ts"/>
///<reference path="DataSetObserver.ts"/>
///<reference path="../../java/util/ArrayList.ts"/>
var android;(function(android){var database;(function(database){var Observable=android.database.Observable;var DataSetObservable=(function(_Observable){_inherits(DataSetObservable,_Observable);function DataSetObservable(){_classCallCheck(this,DataSetObservable);_get(Object.getPrototypeOf(DataSetObservable.prototype),"constructor",this).apply(this,arguments);}_createClass(DataSetObservable,[{key:"notifyChanged",value:function notifyChanged(){for(var i=this.mObservers.size() - 1;i >= 0;i--) {this.mObservers.get(i).onChanged();}}},{key:"notifyInvalidated",value:function notifyInvalidated(){for(var i=this.mObservers.size() - 1;i >= 0;i--) {this.mObservers.get(i).onInvalidated();}}}]);return DataSetObservable;})(Observable);database.DataSetObservable = DataSetObservable;})(database = android.database || (android.database = {}));})(android || (android = {})); /*
 * Copyright (C) 2007 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ ///<reference path="../../android/view/View.ts"/>
///<reference path="../../android/view/ViewGroup.ts"/>
///<reference path="../../android/widget/Adapter.ts"/>
/*
 * Copyright (C) 2007 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ ///<reference path="../../android/database/DataSetObservable.ts"/>
///<reference path="../../android/database/DataSetObserver.ts"/>
///<reference path="../../android/view/View.ts"/>
///<reference path="../../android/view/ViewGroup.ts"/>
///<reference path="../../android/widget/Adapter.ts"/>
///<reference path="../../android/widget/ListAdapter.ts"/>
///<reference path="../../android/widget/ListView.ts"/>
///<reference path="../../android/widget/SpinnerAdapter.ts"/>
var android;(function(android){var widget;(function(widget){var DataSetObservable=android.database.DataSetObservable;var BaseAdapter=(function(){function BaseAdapter(){_classCallCheck(this,BaseAdapter);this.mDataSetObservable = new DataSetObservable();}_createClass(BaseAdapter,[{key:"hasStableIds",value:function hasStableIds(){return false;}},{key:"registerDataSetObserver",value:function registerDataSetObserver(observer){this.mDataSetObservable.registerObserver(observer);}},{key:"unregisterDataSetObserver",value:function unregisterDataSetObserver(observer){this.mDataSetObservable.unregisterObserver(observer);}},{key:"notifyDataSetChanged",value:function notifyDataSetChanged(){this.mDataSetObservable.notifyChanged();}},{key:"notifyDataSetInvalidated",value:function notifyDataSetInvalidated(){this.mDataSetObservable.notifyInvalidated();}},{key:"areAllItemsEnabled",value:function areAllItemsEnabled(){return true;}},{key:"isEnabled",value:function isEnabled(position){return true;}},{key:"getDropDownView",value:function getDropDownView(position,convertView,parent){return this.getView(position,convertView,parent);}},{key:"getItemViewType",value:function getItemViewType(position){return 0;}},{key:"getViewTypeCount",value:function getViewTypeCount(){return 1;}},{key:"isEmpty",value:function isEmpty(){return this.getCount() == 0;}}]);return BaseAdapter;})();widget.BaseAdapter = BaseAdapter;})(widget = android.widget || (android.widget = {}));})(android || (android = {})); /*
 * Copyright (C) 2006 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ ///<reference path="../../android/graphics/Canvas.ts"/>
///<reference path="../../android/graphics/Paint.ts"/>
///<reference path="../../android/graphics/PixelFormat.ts"/>
///<reference path="../../android/graphics/Rect.ts"/>
///<reference path="../../android/graphics/drawable/Drawable.ts"/>
///<reference path="../../android/util/MathUtils.ts"/>
///<reference path="../../android/util/SparseBooleanArray.ts"/>
///<reference path="../../android/view/FocusFinder.ts"/>
///<reference path="../../android/view/KeyEvent.ts"/>
///<reference path="../../android/view/SoundEffectConstants.ts"/>
///<reference path="../../android/view/View.ts"/>
///<reference path="../../android/view/ViewGroup.ts"/>
///<reference path="../../android/view/ViewParent.ts"/>
///<reference path="../../android/view/ViewRootImpl.ts"/>
///<reference path="../../android/os/Trace.ts"/>
///<reference path="../../java/util/ArrayList.ts"/>
///<reference path="../../java/lang/Integer.ts"/>
///<reference path="../../java/lang/System.ts"/>
///<reference path="../../java/lang/Runnable.ts"/>
///<reference path="../../android/widget/AbsListView.ts"/>
///<reference path="../../android/widget/Adapter.ts"/>
///<reference path="../../android/widget/AdapterView.ts"/>
///<reference path="../../android/widget/Checkable.ts"/>
///<reference path="../../android/widget/HeaderViewListAdapter.ts"/>
///<reference path="../../android/widget/ListAdapter.ts"/>
///<reference path="../../android/widget/WrapperListAdapter.ts"/>
///<reference path="../../android/widget/BaseAdapter.ts"/>
///<reference path="../../android/R/attr.ts"/>
var android;(function(android){var widget;(function(widget){var Paint=android.graphics.Paint;var PixelFormat=android.graphics.PixelFormat;var Rect=android.graphics.Rect;var MathUtils=android.util.MathUtils;var FocusFinder=android.view.FocusFinder;var KeyEvent=android.view.KeyEvent;var SoundEffectConstants=android.view.SoundEffectConstants;var View=android.view.View;var ViewGroup=android.view.ViewGroup;var Trace=android.os.Trace;var ArrayList=java.util.ArrayList;var Integer=java.lang.Integer;var System=java.lang.System;var AbsListView=android.widget.AbsListView;var AdapterView=android.widget.AdapterView;var HeaderViewListAdapter=android.widget.HeaderViewListAdapter;var ListView=(function(_AbsListView){_inherits(ListView,_AbsListView);function ListView(bindElement,rootElement){var _this30=this;_classCallCheck(this,ListView);_get(Object.getPrototypeOf(ListView.prototype),"constructor",this).call(this,bindElement,rootElement);this.mHeaderViewInfos = new ArrayList();this.mFooterViewInfos = new ArrayList();this.mDividerHeight = 0;this.mIsCacheColorOpaque = false;this.mDividerIsOpaque = false;this.mHeaderDividersEnabled = true;this.mFooterDividersEnabled = true;this.mAreAllItemsSelectable = true;this.mItemsCanFocus = false;this.mTempRect = new Rect();this.mArrowScrollFocusResult = new ListView.ArrowScrollFocusResult();this._attrBinder.addAttr('divider',function(value){var divider=_this30._attrBinder.parseDrawable(value);if(divider)_this30.setDivider(divider);});this._attrBinder.addAttr('overScrollHeader',function(value){var header=_this30._attrBinder.parseDrawable(value);if(header)_this30.setOverscrollHeader(header);});this._attrBinder.addAttr('overScrollFooter',function(value){var footer=_this30._attrBinder.parseDrawable(value);if(footer)_this30.setOverscrollFooter(footer);});this._attrBinder.addAttr('dividerHeight',function(value){var dividerHeight=_this30._attrBinder.parseNumber(value,-1);if(dividerHeight >= 0){_this30.setDividerHeight(dividerHeight);}});this._attrBinder.addAttr('headerDividersEnabled',function(value){_this30.setHeaderDividersEnabled(_this30._attrBinder.parseBoolean(value,true));});this._attrBinder.addAttr('footerDividersEnabled',function(value){_this30.setFooterDividersEnabled(_this30._attrBinder.parseBoolean(value,true));});this.applyDefaultAttributes(android.R.attr.listViewStyle);}_createClass(ListView,[{key:"getMaxScrollAmount",value:function getMaxScrollAmount(){return Math.floor(ListView.MAX_SCROLL_FACTOR * (this.mBottom - this.mTop));}},{key:"adjustViewsUpOrDown",value:function adjustViewsUpOrDown(){var childCount=this.getChildCount();var delta=undefined;if(childCount > 0){var child=undefined;if(!this.mStackFromBottom){child = this.getChildAt(0);delta = child.getTop() - this.mListPadding.top;if(this.mFirstPosition != 0){delta -= this.mDividerHeight;}if(delta < 0){delta = 0;}}else {child = this.getChildAt(childCount - 1);delta = child.getBottom() - (this.getHeight() - this.mListPadding.bottom);if(this.mFirstPosition + childCount < this.mItemCount){delta += this.mDividerHeight;}if(delta > 0){delta = 0;}}if(delta != 0){this.offsetChildrenTopAndBottom(-delta);}}}},{key:"addHeaderView",value:function addHeaderView(v){var data=arguments.length <= 1 || arguments[1] === undefined?null:arguments[1];var isSelectable=arguments.length <= 2 || arguments[2] === undefined?true:arguments[2];var info=new ListView.FixedViewInfo(this);info.view = v;info.data = data;info.isSelectable = isSelectable;this.mHeaderViewInfos.add(info);if(this.mAdapter != null){if(!(this.mAdapter instanceof HeaderViewListAdapter)){this.mAdapter = new HeaderViewListAdapter(this.mHeaderViewInfos,this.mFooterViewInfos,this.mAdapter);}if(this.mDataSetObserver != null){this.mDataSetObserver.onChanged();}}}},{key:"getHeaderViewsCount",value:function getHeaderViewsCount(){return this.mHeaderViewInfos.size();}},{key:"removeHeaderView",value:function removeHeaderView(v){if(this.mHeaderViewInfos.size() > 0){var result=false;if(this.mAdapter != null && this.mAdapter.removeHeader(v)){if(this.mDataSetObserver != null){this.mDataSetObserver.onChanged();}result = true;}this.removeFixedViewInfo(v,this.mHeaderViewInfos);return result;}return false;}},{key:"removeFixedViewInfo",value:function removeFixedViewInfo(v,where){var len=where.size();for(var i=0;i < len;++i) {var info=where.get(i);if(info.view == v){where.remove(i);break;}}}},{key:"addFooterView",value:function addFooterView(v){var data=arguments.length <= 1 || arguments[1] === undefined?null:arguments[1];var isSelectable=arguments.length <= 2 || arguments[2] === undefined?true:arguments[2];var info=new ListView.FixedViewInfo(this);info.view = v;info.data = data;info.isSelectable = isSelectable;this.mFooterViewInfos.add(info);if(this.mAdapter != null){if(!(this.mAdapter instanceof HeaderViewListAdapter)){this.mAdapter = new HeaderViewListAdapter(this.mHeaderViewInfos,this.mFooterViewInfos,this.mAdapter);}if(this.mDataSetObserver != null){this.mDataSetObserver.onChanged();}}}},{key:"getFooterViewsCount",value:function getFooterViewsCount(){return this.mFooterViewInfos.size();}},{key:"removeFooterView",value:function removeFooterView(v){if(this.mFooterViewInfos.size() > 0){var result=false;if(this.mAdapter != null && this.mAdapter.removeFooter(v)){if(this.mDataSetObserver != null){this.mDataSetObserver.onChanged();}result = true;}this.removeFixedViewInfo(v,this.mFooterViewInfos);return result;}return false;}},{key:"getAdapter",value:function getAdapter(){return this.mAdapter;}},{key:"setAdapter",value:function setAdapter(adapter){if(this.mAdapter != null && this.mDataSetObserver != null){this.mAdapter.unregisterDataSetObserver(this.mDataSetObserver);}this.resetList();this.mRecycler.clear();if(this.mHeaderViewInfos.size() > 0 || this.mFooterViewInfos.size() > 0){this.mAdapter = new HeaderViewListAdapter(this.mHeaderViewInfos,this.mFooterViewInfos,adapter);}else {this.mAdapter = adapter;}this.mOldSelectedPosition = ListView.INVALID_POSITION;this.mOldSelectedRowId = ListView.INVALID_ROW_ID;_get(Object.getPrototypeOf(ListView.prototype),"setAdapter",this).call(this,adapter);if(this.mAdapter != null){this.mAreAllItemsSelectable = this.mAdapter.areAllItemsEnabled();this.mOldItemCount = this.mItemCount;this.mItemCount = this.mAdapter.getCount();this.checkFocus();this.mDataSetObserver = new AbsListView.AdapterDataSetObserver(this);this.mAdapter.registerDataSetObserver(this.mDataSetObserver);this.mRecycler.setViewTypeCount(this.mAdapter.getViewTypeCount());var position=undefined;if(this.mStackFromBottom){position = this.lookForSelectablePosition(this.mItemCount - 1,false);}else {position = this.lookForSelectablePosition(0,true);}this.setSelectedPositionInt(position);this.setNextSelectedPositionInt(position);if(this.mItemCount == 0){this.checkSelectionChanged();}}else {this.mAreAllItemsSelectable = true;this.checkFocus();this.checkSelectionChanged();}this.requestLayout();}},{key:"resetList",value:function resetList(){this.clearRecycledState(this.mHeaderViewInfos);this.clearRecycledState(this.mFooterViewInfos);_get(Object.getPrototypeOf(ListView.prototype),"resetList",this).call(this);this.mLayoutMode = ListView.LAYOUT_NORMAL;}},{key:"clearRecycledState",value:function clearRecycledState(infos){if(infos != null){var count=infos.size();for(var i=0;i < count;i++) {var child=infos.get(i).view;var p=child.getLayoutParams();if(p != null){p.recycledHeaderFooter = false;}}}}},{key:"showingTopFadingEdge",value:function showingTopFadingEdge(){var listTop=this.mScrollY + this.mListPadding.top;return this.mFirstPosition > 0 || this.getChildAt(0).getTop() > listTop;}},{key:"showingBottomFadingEdge",value:function showingBottomFadingEdge(){var childCount=this.getChildCount();var bottomOfBottomChild=this.getChildAt(childCount - 1).getBottom();var lastVisiblePosition=this.mFirstPosition + childCount - 1;var listBottom=this.mScrollY + this.getHeight() - this.mListPadding.bottom;return lastVisiblePosition < this.mItemCount - 1 || bottomOfBottomChild < listBottom;}},{key:"requestChildRectangleOnScreen",value:function requestChildRectangleOnScreen(child,rect,immediate){var rectTopWithinChild=rect.top;rect.offset(child.getLeft(),child.getTop());rect.offset(-child.getScrollX(),-child.getScrollY());var height=this.getHeight();var listUnfadedTop=this.getScrollY();var listUnfadedBottom=listUnfadedTop + height;var fadingEdge=this.getVerticalFadingEdgeLength();if(this.showingTopFadingEdge()){if(this.mSelectedPosition > 0 || rectTopWithinChild > fadingEdge){listUnfadedTop += fadingEdge;}}var childCount=this.getChildCount();var bottomOfBottomChild=this.getChildAt(childCount - 1).getBottom();if(this.showingBottomFadingEdge()){if(this.mSelectedPosition < this.mItemCount - 1 || rect.bottom < bottomOfBottomChild - fadingEdge){listUnfadedBottom -= fadingEdge;}}var scrollYDelta=0;if(rect.bottom > listUnfadedBottom && rect.top > listUnfadedTop){if(rect.height() > height){scrollYDelta += rect.top - listUnfadedTop;}else {scrollYDelta += rect.bottom - listUnfadedBottom;}var distanceToBottom=bottomOfBottomChild - listUnfadedBottom;scrollYDelta = Math.min(scrollYDelta,distanceToBottom);}else if(rect.top < listUnfadedTop && rect.bottom < listUnfadedBottom){if(rect.height() > height){scrollYDelta -= listUnfadedBottom - rect.bottom;}else {scrollYDelta -= listUnfadedTop - rect.top;}var _top19=this.getChildAt(0).getTop();var deltaToTop=_top19 - listUnfadedTop;scrollYDelta = Math.max(scrollYDelta,deltaToTop);}var scroll=scrollYDelta != 0;if(scroll){this.scrollListItemsBy(-scrollYDelta);this.positionSelector(ListView.INVALID_POSITION,child);this.mSelectedTop = child.getTop();this.invalidate();}return scroll;}},{key:"fillGap",value:function fillGap(down){var count=this.getChildCount();if(down){var paddingTop=0;if((this.mGroupFlags & ListView.CLIP_TO_PADDING_MASK) == ListView.CLIP_TO_PADDING_MASK){paddingTop = this.getListPaddingTop();}var startOffset=count > 0?this.getChildAt(count - 1).getBottom() + this.mDividerHeight:paddingTop;this.fillDown(this.mFirstPosition + count,startOffset);this.correctTooHigh(this.getChildCount());}else {var paddingBottom=0;if((this.mGroupFlags & ListView.CLIP_TO_PADDING_MASK) == ListView.CLIP_TO_PADDING_MASK){paddingBottom = this.getListPaddingBottom();}var startOffset=count > 0?this.getChildAt(0).getTop() - this.mDividerHeight:this.getHeight() - paddingBottom;this.fillUp(this.mFirstPosition - 1,startOffset);this.correctTooLow(this.getChildCount());}}},{key:"fillDown",value:function fillDown(pos,nextTop){var selectedView=null;var end=this.mBottom - this.mTop;if((this.mGroupFlags & ListView.CLIP_TO_PADDING_MASK) == ListView.CLIP_TO_PADDING_MASK){end -= this.mListPadding.bottom;}while(nextTop < end && pos < this.mItemCount) {var selected=pos == this.mSelectedPosition;var child=this.makeAndAddView(pos,nextTop,true,this.mListPadding.left,selected);nextTop = child.getBottom() + this.mDividerHeight;if(selected){selectedView = child;}pos++;}this.setVisibleRangeHint(this.mFirstPosition,this.mFirstPosition + this.getChildCount() - 1);return selectedView;}},{key:"fillUp",value:function fillUp(pos,nextBottom){var selectedView=null;var end=0;if((this.mGroupFlags & ListView.CLIP_TO_PADDING_MASK) == ListView.CLIP_TO_PADDING_MASK){end = this.mListPadding.top;}while(nextBottom > end && pos >= 0) {var selected=pos == this.mSelectedPosition;var child=this.makeAndAddView(pos,nextBottom,false,this.mListPadding.left,selected);nextBottom = child.getTop() - this.mDividerHeight;if(selected){selectedView = child;}pos--;}this.mFirstPosition = pos + 1;this.setVisibleRangeHint(this.mFirstPosition,this.mFirstPosition + this.getChildCount() - 1);return selectedView;}},{key:"fillFromTop",value:function fillFromTop(nextTop){this.mFirstPosition = Math.min(this.mFirstPosition,this.mSelectedPosition);this.mFirstPosition = Math.min(this.mFirstPosition,this.mItemCount - 1);if(this.mFirstPosition < 0){this.mFirstPosition = 0;}return this.fillDown(this.mFirstPosition,nextTop);}},{key:"fillFromMiddle",value:function fillFromMiddle(childrenTop,childrenBottom){var height=childrenBottom - childrenTop;var position=this.reconcileSelectedPosition();var sel=this.makeAndAddView(position,childrenTop,true,this.mListPadding.left,true);this.mFirstPosition = position;var selHeight=sel.getMeasuredHeight();if(selHeight <= height){sel.offsetTopAndBottom((height - selHeight) / 2);}this.fillAboveAndBelow(sel,position);if(!this.mStackFromBottom){this.correctTooHigh(this.getChildCount());}else {this.correctTooLow(this.getChildCount());}return sel;}},{key:"fillAboveAndBelow",value:function fillAboveAndBelow(sel,position){var dividerHeight=this.mDividerHeight;if(!this.mStackFromBottom){this.fillUp(position - 1,sel.getTop() - dividerHeight);this.adjustViewsUpOrDown();this.fillDown(position + 1,sel.getBottom() + dividerHeight);}else {this.fillDown(position + 1,sel.getBottom() + dividerHeight);this.adjustViewsUpOrDown();this.fillUp(position - 1,sel.getTop() - dividerHeight);}}},{key:"fillFromSelection",value:function fillFromSelection(selectedTop,childrenTop,childrenBottom){var fadingEdgeLength=this.getVerticalFadingEdgeLength();var selectedPosition=this.mSelectedPosition;var sel=undefined;var topSelectionPixel=this.getTopSelectionPixel(childrenTop,fadingEdgeLength,selectedPosition);var bottomSelectionPixel=this.getBottomSelectionPixel(childrenBottom,fadingEdgeLength,selectedPosition);sel = this.makeAndAddView(selectedPosition,selectedTop,true,this.mListPadding.left,true);if(sel.getBottom() > bottomSelectionPixel){var spaceAbove=sel.getTop() - topSelectionPixel;var spaceBelow=sel.getBottom() - bottomSelectionPixel;var offset=Math.min(spaceAbove,spaceBelow);sel.offsetTopAndBottom(-offset);}else if(sel.getTop() < topSelectionPixel){var spaceAbove=topSelectionPixel - sel.getTop();var spaceBelow=bottomSelectionPixel - sel.getBottom();var offset=Math.min(spaceAbove,spaceBelow);sel.offsetTopAndBottom(offset);}this.fillAboveAndBelow(sel,selectedPosition);if(!this.mStackFromBottom){this.correctTooHigh(this.getChildCount());}else {this.correctTooLow(this.getChildCount());}return sel;}},{key:"getBottomSelectionPixel",value:function getBottomSelectionPixel(childrenBottom,fadingEdgeLength,selectedPosition){var bottomSelectionPixel=childrenBottom;if(selectedPosition != this.mItemCount - 1){bottomSelectionPixel -= fadingEdgeLength;}return bottomSelectionPixel;}},{key:"getTopSelectionPixel",value:function getTopSelectionPixel(childrenTop,fadingEdgeLength,selectedPosition){var topSelectionPixel=childrenTop;if(selectedPosition > 0){topSelectionPixel += fadingEdgeLength;}return topSelectionPixel;}},{key:"smoothScrollToPosition",value:function smoothScrollToPosition(position){_get(Object.getPrototypeOf(ListView.prototype),"smoothScrollToPosition",this).call(this,position);}},{key:"smoothScrollByOffset",value:function smoothScrollByOffset(offset){_get(Object.getPrototypeOf(ListView.prototype),"smoothScrollByOffset",this).call(this,offset);}},{key:"moveSelection",value:function moveSelection(oldSel,newSel,delta,childrenTop,childrenBottom){var fadingEdgeLength=this.getVerticalFadingEdgeLength();var selectedPosition=this.mSelectedPosition;var sel=undefined;var topSelectionPixel=this.getTopSelectionPixel(childrenTop,fadingEdgeLength,selectedPosition);var bottomSelectionPixel=this.getBottomSelectionPixel(childrenTop,fadingEdgeLength,selectedPosition);if(delta > 0){oldSel = this.makeAndAddView(selectedPosition - 1,oldSel.getTop(),true,this.mListPadding.left,false);var dividerHeight=this.mDividerHeight;sel = this.makeAndAddView(selectedPosition,oldSel.getBottom() + dividerHeight,true,this.mListPadding.left,true);if(sel.getBottom() > bottomSelectionPixel){var spaceAbove=sel.getTop() - topSelectionPixel;var spaceBelow=sel.getBottom() - bottomSelectionPixel;var halfVerticalSpace=(childrenBottom - childrenTop) / 2;var offset=Math.min(spaceAbove,spaceBelow);offset = Math.min(offset,halfVerticalSpace);oldSel.offsetTopAndBottom(-offset);sel.offsetTopAndBottom(-offset);}if(!this.mStackFromBottom){this.fillUp(this.mSelectedPosition - 2,sel.getTop() - dividerHeight);this.adjustViewsUpOrDown();this.fillDown(this.mSelectedPosition + 1,sel.getBottom() + dividerHeight);}else {this.fillDown(this.mSelectedPosition + 1,sel.getBottom() + dividerHeight);this.adjustViewsUpOrDown();this.fillUp(this.mSelectedPosition - 2,sel.getTop() - dividerHeight);}}else if(delta < 0){if(newSel != null){sel = this.makeAndAddView(selectedPosition,newSel.getTop(),true,this.mListPadding.left,true);}else {sel = this.makeAndAddView(selectedPosition,oldSel.getTop(),false,this.mListPadding.left,true);}if(sel.getTop() < topSelectionPixel){var spaceAbove=topSelectionPixel - sel.getTop();var spaceBelow=bottomSelectionPixel - sel.getBottom();var halfVerticalSpace=(childrenBottom - childrenTop) / 2;var offset=Math.min(spaceAbove,spaceBelow);offset = Math.min(offset,halfVerticalSpace);sel.offsetTopAndBottom(offset);}this.fillAboveAndBelow(sel,selectedPosition);}else {var oldTop=oldSel.getTop();sel = this.makeAndAddView(selectedPosition,oldTop,true,this.mListPadding.left,true);if(oldTop < childrenTop){var newBottom=sel.getBottom();if(newBottom < childrenTop + 20){sel.offsetTopAndBottom(childrenTop - sel.getTop());}}this.fillAboveAndBelow(sel,selectedPosition);}return sel;}},{key:"onSizeChanged",value:function onSizeChanged(w,h,oldw,oldh){if(this.getChildCount() > 0){var focusedChild=this.getFocusedChild();if(focusedChild != null){var childPosition=this.mFirstPosition + this.indexOfChild(focusedChild);var childBottom=focusedChild.getBottom();var offset=Math.max(0,childBottom - (h - this.mPaddingTop));var _top20=focusedChild.getTop() - offset;if(this.mFocusSelector == null){this.mFocusSelector = new ListView.FocusSelector(this);}this.post(this.mFocusSelector.setup(childPosition,_top20));}}_get(Object.getPrototypeOf(ListView.prototype),"onSizeChanged",this).call(this,w,h,oldw,oldh);}},{key:"onMeasure",value:function onMeasure(widthMeasureSpec,heightMeasureSpec){_get(Object.getPrototypeOf(ListView.prototype),"onMeasure",this).call(this,widthMeasureSpec,heightMeasureSpec);var widthMode=ListView.MeasureSpec.getMode(widthMeasureSpec);var heightMode=ListView.MeasureSpec.getMode(heightMeasureSpec);var widthSize=ListView.MeasureSpec.getSize(widthMeasureSpec);var heightSize=ListView.MeasureSpec.getSize(heightMeasureSpec);var childWidth=0;var childHeight=0;var childState=0;this.mItemCount = this.mAdapter == null?0:this.mAdapter.getCount();if(this.mItemCount > 0 && (widthMode == ListView.MeasureSpec.UNSPECIFIED || heightMode == ListView.MeasureSpec.UNSPECIFIED)){var child=this.obtainView(0,this.mIsScrap);this.measureScrapChild(child,0,widthMeasureSpec);childWidth = child.getMeasuredWidth();childHeight = child.getMeasuredHeight();childState = ListView.combineMeasuredStates(childState,child.getMeasuredState());if(this.recycleOnMeasure() && this.mRecycler.shouldRecycleViewType(child.getLayoutParams().viewType)){this.mRecycler.addScrapView(child,-1);}}if(widthMode == ListView.MeasureSpec.UNSPECIFIED){widthSize = this.mListPadding.left + this.mListPadding.right + childWidth + this.getVerticalScrollbarWidth();}else {widthSize |= childState & ListView.MEASURED_STATE_MASK;}if(heightMode == ListView.MeasureSpec.UNSPECIFIED){heightSize = this.mListPadding.top + this.mListPadding.bottom + childHeight + this.getVerticalFadingEdgeLength() * 2;}if(heightMode == ListView.MeasureSpec.AT_MOST){heightSize = this.measureHeightOfChildren(widthMeasureSpec,0,ListView.NO_POSITION,heightSize,-1);}this.setMeasuredDimension(widthSize,heightSize);this.mWidthMeasureSpec = widthMeasureSpec;}},{key:"measureScrapChild",value:function measureScrapChild(child,position,widthMeasureSpec){var p=child.getLayoutParams();if(p == null){p = this.generateDefaultLayoutParams();child.setLayoutParams(p);}p.viewType = this.mAdapter.getItemViewType(position);p.forceAdd = true;var childWidthSpec=ViewGroup.getChildMeasureSpec(widthMeasureSpec,this.mListPadding.left + this.mListPadding.right,p.width);var lpHeight=p.height;var childHeightSpec=undefined;if(lpHeight > 0){childHeightSpec = ListView.MeasureSpec.makeMeasureSpec(lpHeight,ListView.MeasureSpec.EXACTLY);}else {childHeightSpec = ListView.MeasureSpec.makeMeasureSpec(0,ListView.MeasureSpec.UNSPECIFIED);}child.measure(childWidthSpec,childHeightSpec);}},{key:"recycleOnMeasure",value:function recycleOnMeasure(){return true;}},{key:"measureHeightOfChildren",value:function measureHeightOfChildren(widthMeasureSpec,startPosition,endPosition,maxHeight,disallowPartialChildPosition){var adapter=this.mAdapter;if(adapter == null){return this.mListPadding.top + this.mListPadding.bottom;}var returnedHeight=this.mListPadding.top + this.mListPadding.bottom;var dividerHeight=this.mDividerHeight > 0 && this.mDivider != null?this.mDividerHeight:0;var prevHeightWithoutPartialChild=0;var i=undefined;var child=undefined;endPosition = endPosition == ListView.NO_POSITION?adapter.getCount() - 1:endPosition;var recycleBin=this.mRecycler;var recyle=this.recycleOnMeasure();var isScrap=this.mIsScrap;for(i = startPosition;i <= endPosition;++i) {child = this.obtainView(i,isScrap);this.measureScrapChild(child,i,widthMeasureSpec);if(i > 0){returnedHeight += dividerHeight;}if(recyle && recycleBin.shouldRecycleViewType(child.getLayoutParams().viewType)){recycleBin.addScrapView(child,-1);}returnedHeight += child.getMeasuredHeight();if(returnedHeight >= maxHeight){return disallowPartialChildPosition >= 0 && i > disallowPartialChildPosition && prevHeightWithoutPartialChild > 0 && returnedHeight != maxHeight?prevHeightWithoutPartialChild:maxHeight;}if(disallowPartialChildPosition >= 0 && i >= disallowPartialChildPosition){prevHeightWithoutPartialChild = returnedHeight;}}return returnedHeight;}},{key:"findMotionRow",value:function findMotionRow(y){var childCount=this.getChildCount();if(childCount > 0){if(!this.mStackFromBottom){for(var i=0;i < childCount;i++) {var v=this.getChildAt(i);if(y <= v.getBottom()){return this.mFirstPosition + i;}}}else {for(var i=childCount - 1;i >= 0;i--) {var v=this.getChildAt(i);if(y >= v.getTop()){return this.mFirstPosition + i;}}}}return ListView.INVALID_POSITION;}},{key:"fillSpecific",value:function fillSpecific(position,top){var tempIsSelected=position == this.mSelectedPosition;var temp=this.makeAndAddView(position,top,true,this.mListPadding.left,tempIsSelected);this.mFirstPosition = position;var above=undefined;var below=undefined;var dividerHeight=this.mDividerHeight;if(!this.mStackFromBottom){above = this.fillUp(position - 1,temp.getTop() - dividerHeight);this.adjustViewsUpOrDown();below = this.fillDown(position + 1,temp.getBottom() + dividerHeight);var childCount=this.getChildCount();if(childCount > 0){this.correctTooHigh(childCount);}}else {below = this.fillDown(position + 1,temp.getBottom() + dividerHeight);this.adjustViewsUpOrDown();above = this.fillUp(position - 1,temp.getTop() - dividerHeight);var childCount=this.getChildCount();if(childCount > 0){this.correctTooLow(childCount);}}if(tempIsSelected){return temp;}else if(above != null){return above;}else {return below;}}},{key:"correctTooHigh",value:function correctTooHigh(childCount){var lastPosition=this.mFirstPosition + childCount - 1;if(lastPosition == this.mItemCount - 1 && childCount > 0){var lastChild=this.getChildAt(childCount - 1);var lastBottom=lastChild.getBottom();var end=this.mBottom - this.mTop - this.mListPadding.bottom;var bottomOffset=end - lastBottom;var firstChild=this.getChildAt(0);var firstTop=firstChild.getTop();if(bottomOffset > 0 && (this.mFirstPosition > 0 || firstTop < this.mListPadding.top)){if(this.mFirstPosition == 0){bottomOffset = Math.min(bottomOffset,this.mListPadding.top - firstTop);}this.offsetChildrenTopAndBottom(bottomOffset);if(this.mFirstPosition > 0){this.fillUp(this.mFirstPosition - 1,firstChild.getTop() - this.mDividerHeight);this.adjustViewsUpOrDown();}}}}},{key:"correctTooLow",value:function correctTooLow(childCount){if(this.mFirstPosition == 0 && childCount > 0){var firstChild=this.getChildAt(0);var firstTop=firstChild.getTop();var start=this.mListPadding.top;var end=this.mBottom - this.mTop - this.mListPadding.bottom;var topOffset=firstTop - start;var lastChild=this.getChildAt(childCount - 1);var lastBottom=lastChild.getBottom();var lastPosition=this.mFirstPosition + childCount - 1;if(topOffset > 0){if(lastPosition < this.mItemCount - 1 || lastBottom > end){if(lastPosition == this.mItemCount - 1){topOffset = Math.min(topOffset,lastBottom - end);}this.offsetChildrenTopAndBottom(-topOffset);if(lastPosition < this.mItemCount - 1){this.fillDown(lastPosition + 1,lastChild.getBottom() + this.mDividerHeight);this.adjustViewsUpOrDown();}}else if(lastPosition == this.mItemCount - 1){this.adjustViewsUpOrDown();}}}}},{key:"layoutChildren",value:function layoutChildren(){var blockLayoutRequests=this.mBlockLayoutRequests;if(blockLayoutRequests){return;}this.mBlockLayoutRequests = true;try{_get(Object.getPrototypeOf(ListView.prototype),"layoutChildren",this).call(this);this.invalidate();if(this.mAdapter == null){this.resetList();this.invokeOnItemScrollListener();return;}var childrenTop=this.mListPadding.top;var childrenBottom=this.mBottom - this.mTop - this.mListPadding.bottom;var childCount=this.getChildCount();var index=0;var delta=0;var sel=undefined;var oldSel=null;var oldFirst=null;var newSel=null;switch(this.mLayoutMode){case ListView.LAYOUT_SET_SELECTION:index = this.mNextSelectedPosition - this.mFirstPosition;if(index >= 0 && index < childCount){newSel = this.getChildAt(index);}break;case ListView.LAYOUT_FORCE_TOP:case ListView.LAYOUT_FORCE_BOTTOM:case ListView.LAYOUT_SPECIFIC:case ListView.LAYOUT_SYNC:break;case ListView.LAYOUT_MOVE_SELECTION:default:index = this.mSelectedPosition - this.mFirstPosition;if(index >= 0 && index < childCount){oldSel = this.getChildAt(index);}oldFirst = this.getChildAt(0);if(this.mNextSelectedPosition >= 0){delta = this.mNextSelectedPosition - this.mSelectedPosition;}newSel = this.getChildAt(index + delta);}var dataChanged=this.mDataChanged;if(dataChanged){this.handleDataChanged();}if(this.mItemCount == 0){this.resetList();this.invokeOnItemScrollListener();return;}else if(this.mItemCount != this.mAdapter.getCount()){throw Error("IllegalStateException(\"The content of the adapter has changed but\n                ListView did not receive a notification. Make sure the content of\n                your adapter is not modified from a background thread, but only from\n                the UI thread. Make sure your adapter calls notifyDataSetChanged()\n                when its content changes. [in ListView(" + this.getId() + "," + this.constructor.name + ")\n                with Adapter(" + this.mAdapter.constructor.name + ")]\")");}this.setSelectedPositionInt(this.mNextSelectedPosition);var accessFocusedChild=null;var focusedChild=this.getFocusedChild();if(focusedChild != null){focusedChild.setHasTransientState(true);}var firstPosition=this.mFirstPosition;var recycleBin=this.mRecycler;if(dataChanged){for(var i=0;i < childCount;i++) {recycleBin.addScrapView(this.getChildAt(i),firstPosition + i);}}else {recycleBin.fillActiveViews(childCount,firstPosition);}this.detachAllViewsFromParent();recycleBin.removeSkippedScrap();switch(this.mLayoutMode){case ListView.LAYOUT_SET_SELECTION:if(newSel != null){sel = this.fillFromSelection(newSel.getTop(),childrenTop,childrenBottom);}else {sel = this.fillFromMiddle(childrenTop,childrenBottom);}break;case ListView.LAYOUT_SYNC:sel = this.fillSpecific(this.mSyncPosition,this.mSpecificTop);break;case ListView.LAYOUT_FORCE_BOTTOM:sel = this.fillUp(this.mItemCount - 1,childrenBottom);this.adjustViewsUpOrDown();break;case ListView.LAYOUT_FORCE_TOP:this.mFirstPosition = 0;sel = this.fillFromTop(childrenTop);this.adjustViewsUpOrDown();break;case ListView.LAYOUT_SPECIFIC:sel = this.fillSpecific(this.reconcileSelectedPosition(),this.mSpecificTop);break;case ListView.LAYOUT_MOVE_SELECTION:sel = this.moveSelection(oldSel,newSel,delta,childrenTop,childrenBottom);break;default:if(childCount == 0){if(!this.mStackFromBottom){var position=this.lookForSelectablePosition(0,true);this.setSelectedPositionInt(position);sel = this.fillFromTop(childrenTop);}else {var position=this.lookForSelectablePosition(this.mItemCount - 1,false);this.setSelectedPositionInt(position);sel = this.fillUp(this.mItemCount - 1,childrenBottom);}}else {if(this.mSelectedPosition >= 0 && this.mSelectedPosition < this.mItemCount){sel = this.fillSpecific(this.mSelectedPosition,oldSel == null?childrenTop:oldSel.getTop());}else if(this.mFirstPosition < this.mItemCount){sel = this.fillSpecific(this.mFirstPosition,oldFirst == null?childrenTop:oldFirst.getTop());}else {sel = this.fillSpecific(0,childrenTop);}}break;}recycleBin.scrapActiveViews();if(sel != null){var shouldPlaceFocus=this.mItemsCanFocus && this.hasFocus();var maintainedFocus=focusedChild != null && focusedChild.hasFocus();if(shouldPlaceFocus && !maintainedFocus && !sel.hasFocus()){if(sel.requestFocus()){sel.setSelected(false);this.mSelectorRect.setEmpty();}else {var focused=this.getFocusedChild();if(focused != null){focused.clearFocus();}this.positionSelector(ListView.INVALID_POSITION,sel);}}else {this.positionSelector(ListView.INVALID_POSITION,sel);}this.mSelectedTop = sel.getTop();}else {if(this.mTouchMode == ListView.TOUCH_MODE_TAP || this.mTouchMode == ListView.TOUCH_MODE_DONE_WAITING){var child=this.getChildAt(this.mMotionPosition - this.mFirstPosition);if(child != null){this.positionSelector(this.mMotionPosition,child);}}else {this.mSelectedTop = 0;this.mSelectorRect.setEmpty();}}if(accessFocusedChild != null){accessFocusedChild.setHasTransientState(false);}if(focusedChild != null){focusedChild.setHasTransientState(false);}this.mLayoutMode = ListView.LAYOUT_NORMAL;this.mDataChanged = false;if(this.mPositionScrollAfterLayout != null){this.post(this.mPositionScrollAfterLayout);this.mPositionScrollAfterLayout = null;}this.mNeedSync = false;this.setNextSelectedPositionInt(this.mSelectedPosition);this.updateScrollIndicators();if(this.mItemCount > 0){this.checkSelectionChanged();}this.invokeOnItemScrollListener();}finally {if(!blockLayoutRequests){this.mBlockLayoutRequests = false;}}}},{key:"makeAndAddView",value:function makeAndAddView(position,y,flow,childrenLeft,selected){var child=undefined;if(!this.mDataChanged){child = this.mRecycler.getActiveView(position);if(child != null){this.setupChild(child,position,y,flow,childrenLeft,selected,true);return child;}}child = this.obtainView(position,this.mIsScrap);this.setupChild(child,position,y,flow,childrenLeft,selected,this.mIsScrap[0]);return child;}},{key:"setupChild",value:function setupChild(child,position,y,flowDown,childrenLeft,selected,recycled){Trace.traceBegin(Trace.TRACE_TAG_VIEW,"setupListItem");var isSelected=selected && this.shouldShowSelector();var updateChildSelected=isSelected != child.isSelected();var mode=this.mTouchMode;var isPressed=mode > ListView.TOUCH_MODE_DOWN && mode < ListView.TOUCH_MODE_SCROLL && this.mMotionPosition == position;var updateChildPressed=isPressed != child.isPressed();var needToMeasure=!recycled || updateChildSelected || child.isLayoutRequested();var p=child.getLayoutParams();if(p == null){p = this.generateDefaultLayoutParams();}p.viewType = this.mAdapter.getItemViewType(position);if(recycled && !p.forceAdd || p.recycledHeaderFooter && p.viewType == AdapterView.ITEM_VIEW_TYPE_HEADER_OR_FOOTER){this.attachViewToParent(child,flowDown?-1:0,p);}else {p.forceAdd = false;if(p.viewType == AdapterView.ITEM_VIEW_TYPE_HEADER_OR_FOOTER){p.recycledHeaderFooter = true;}this.addViewInLayout(child,flowDown?-1:0,p,true);}if(updateChildSelected){child.setSelected(isSelected);}if(updateChildPressed){child.setPressed(isPressed);}if(this.mChoiceMode != ListView.CHOICE_MODE_NONE && this.mCheckStates != null){if(child['setChecked']){child.setChecked(this.mCheckStates.get(position));}else {child.setActivated(this.mCheckStates.get(position));}}if(needToMeasure){var childWidthSpec=ViewGroup.getChildMeasureSpec(this.mWidthMeasureSpec,this.mListPadding.left + this.mListPadding.right,p.width);var lpHeight=p.height;var childHeightSpec=undefined;if(lpHeight > 0){childHeightSpec = ListView.MeasureSpec.makeMeasureSpec(lpHeight,ListView.MeasureSpec.EXACTLY);}else {childHeightSpec = ListView.MeasureSpec.makeMeasureSpec(0,ListView.MeasureSpec.UNSPECIFIED);}child.measure(childWidthSpec,childHeightSpec);}else {this.cleanupLayoutState(child);}var w=child.getMeasuredWidth();var h=child.getMeasuredHeight();var childTop=flowDown?y:y - h;if(needToMeasure){var childRight=childrenLeft + w;var childBottom=childTop + h;child.layout(childrenLeft,childTop,childRight,childBottom);}else {child.offsetLeftAndRight(childrenLeft - child.getLeft());child.offsetTopAndBottom(childTop - child.getTop());}if(this.mCachingStarted && !child.isDrawingCacheEnabled()){child.setDrawingCacheEnabled(true);}if(recycled && child.getLayoutParams().scrappedFromPosition != position){child.jumpDrawablesToCurrentState();}Trace.traceEnd(Trace.TRACE_TAG_VIEW);}},{key:"canAnimate",value:function canAnimate(){return _get(Object.getPrototypeOf(ListView.prototype),"canAnimate",this).call(this) && this.mItemCount > 0;}},{key:"setSelection",value:function setSelection(position){this.setSelectionFromTop(position,0);}},{key:"setSelectionFromTop",value:function setSelectionFromTop(position,y){if(this.mAdapter == null){return;}if(!this.isInTouchMode()){position = this.lookForSelectablePosition(position,true);if(position >= 0){this.setNextSelectedPositionInt(position);}}else {this.mResurrectToPosition = position;}if(position >= 0){this.mLayoutMode = ListView.LAYOUT_SPECIFIC;this.mSpecificTop = this.mListPadding.top + y;if(this.mNeedSync){this.mSyncPosition = position;this.mSyncRowId = this.mAdapter.getItemId(position);}if(this.mPositionScroller != null){this.mPositionScroller.stop();}this.requestLayout();}}},{key:"setSelectionInt",value:function setSelectionInt(position){this.setNextSelectedPositionInt(position);var awakeScrollbars=false;var selectedPosition=this.mSelectedPosition;if(selectedPosition >= 0){if(position == selectedPosition - 1){awakeScrollbars = true;}else if(position == selectedPosition + 1){awakeScrollbars = true;}}if(this.mPositionScroller != null){this.mPositionScroller.stop();}this.layoutChildren();if(awakeScrollbars){this.awakenScrollBars();}}},{key:"lookForSelectablePosition",value:function lookForSelectablePosition(position,lookDown){var adapter=this.mAdapter;if(adapter == null || this.isInTouchMode()){return ListView.INVALID_POSITION;}var count=adapter.getCount();if(!this.mAreAllItemsSelectable){if(lookDown){position = Math.max(0,position);while(position < count && !adapter.isEnabled(position)) {position++;}}else {position = Math.min(position,count - 1);while(position >= 0 && !adapter.isEnabled(position)) {position--;}}}if(position < 0 || position >= count){return ListView.INVALID_POSITION;}return position;}},{key:"lookForSelectablePositionAfter",value:function lookForSelectablePositionAfter(current,position,lookDown){var adapter=this.mAdapter;if(adapter == null || this.isInTouchMode()){return ListView.INVALID_POSITION;}var after=this.lookForSelectablePosition(position,lookDown);if(after != ListView.INVALID_POSITION){return after;}var count=adapter.getCount();current = MathUtils.constrain(current,-1,count - 1);if(lookDown){position = Math.min(position - 1,count - 1);while(position > current && !adapter.isEnabled(position)) {position--;}if(position <= current){return ListView.INVALID_POSITION;}}else {position = Math.max(0,position + 1);while(position < current && !adapter.isEnabled(position)) {position++;}if(position >= current){return ListView.INVALID_POSITION;}}return position;}},{key:"setSelectionAfterHeaderView",value:function setSelectionAfterHeaderView(){var count=this.mHeaderViewInfos.size();if(count > 0){this.mNextSelectedPosition = 0;return;}if(this.mAdapter != null){this.setSelection(count);}else {this.mNextSelectedPosition = count;this.mLayoutMode = ListView.LAYOUT_SET_SELECTION;}}},{key:"dispatchKeyEvent",value:function dispatchKeyEvent(event){var handled=_get(Object.getPrototypeOf(ListView.prototype),"dispatchKeyEvent",this).call(this,event);if(!handled){var focused=this.getFocusedChild();if(focused != null && event.getAction() == KeyEvent.ACTION_DOWN){handled = this.onKeyDown(event.getKeyCode(),event);}}return handled;}},{key:"onKeyDown",value:function onKeyDown(keyCode,event){return this.commonKey(keyCode,1,event);}},{key:"onKeyMultiple",value:function onKeyMultiple(keyCode,repeatCount,event){return this.commonKey(keyCode,repeatCount,event);}},{key:"onKeyUp",value:function onKeyUp(keyCode,event){return this.commonKey(keyCode,1,event);}},{key:"commonKey",value:function commonKey(keyCode,count,event){if(this.mAdapter == null || !this.isAttachedToWindow()){return false;}if(this.mDataChanged){this.layoutChildren();}var handled=false;var action=event.getAction();if(action != KeyEvent.ACTION_UP){switch(keyCode){case KeyEvent.KEYCODE_DPAD_UP:if(event.hasNoModifiers()){handled = this.resurrectSelectionIfNeeded();if(!handled){while(count-- > 0) {if(this.arrowScroll(ListView.FOCUS_UP)){handled = true;}else {break;}}}}else if(event.hasModifiers(KeyEvent.META_ALT_ON)){handled = this.resurrectSelectionIfNeeded() || this.fullScroll(ListView.FOCUS_UP);}break;case KeyEvent.KEYCODE_DPAD_DOWN:if(event.hasNoModifiers()){handled = this.resurrectSelectionIfNeeded();if(!handled){while(count-- > 0) {if(this.arrowScroll(ListView.FOCUS_DOWN)){handled = true;}else {break;}}}}else if(event.hasModifiers(KeyEvent.META_ALT_ON)){handled = this.resurrectSelectionIfNeeded() || this.fullScroll(ListView.FOCUS_DOWN);}break;case KeyEvent.KEYCODE_DPAD_LEFT:if(event.hasNoModifiers()){handled = this.handleHorizontalFocusWithinListItem(View.FOCUS_LEFT);}break;case KeyEvent.KEYCODE_DPAD_RIGHT:if(event.hasNoModifiers()){handled = this.handleHorizontalFocusWithinListItem(View.FOCUS_RIGHT);}break;case KeyEvent.KEYCODE_DPAD_CENTER:case KeyEvent.KEYCODE_ENTER:if(event.hasNoModifiers()){handled = this.resurrectSelectionIfNeeded();if(!handled && event.getRepeatCount() == 0 && this.getChildCount() > 0){this.keyPressed();handled = true;}}break;case KeyEvent.KEYCODE_SPACE:if(event.hasNoModifiers()){handled = this.resurrectSelectionIfNeeded() || this.pageScroll(ListView.FOCUS_DOWN);}else if(event.hasModifiers(KeyEvent.META_SHIFT_ON)){handled = this.resurrectSelectionIfNeeded() || this.pageScroll(ListView.FOCUS_UP);}handled = true;break;case KeyEvent.KEYCODE_PAGE_UP:if(event.hasNoModifiers()){handled = this.resurrectSelectionIfNeeded() || this.pageScroll(ListView.FOCUS_UP);}else if(event.hasModifiers(KeyEvent.META_ALT_ON)){handled = this.resurrectSelectionIfNeeded() || this.fullScroll(ListView.FOCUS_UP);}break;case KeyEvent.KEYCODE_PAGE_DOWN:if(event.hasNoModifiers()){handled = this.resurrectSelectionIfNeeded() || this.pageScroll(ListView.FOCUS_DOWN);}else if(event.hasModifiers(KeyEvent.META_ALT_ON)){handled = this.resurrectSelectionIfNeeded() || this.fullScroll(ListView.FOCUS_DOWN);}break;case KeyEvent.KEYCODE_MOVE_HOME:if(event.hasNoModifiers()){handled = this.resurrectSelectionIfNeeded() || this.fullScroll(ListView.FOCUS_UP);}break;case KeyEvent.KEYCODE_MOVE_END:if(event.hasNoModifiers()){handled = this.resurrectSelectionIfNeeded() || this.fullScroll(ListView.FOCUS_DOWN);}break;case KeyEvent.KEYCODE_TAB:if(false){if(event.hasNoModifiers()){handled = this.resurrectSelectionIfNeeded() || this.arrowScroll(ListView.FOCUS_DOWN);}else if(event.hasModifiers(KeyEvent.META_SHIFT_ON)){handled = this.resurrectSelectionIfNeeded() || this.arrowScroll(ListView.FOCUS_UP);}}break;}}if(handled){return true;}switch(action){case KeyEvent.ACTION_DOWN:return _get(Object.getPrototypeOf(ListView.prototype),"onKeyDown",this).call(this,keyCode,event);case KeyEvent.ACTION_UP:return _get(Object.getPrototypeOf(ListView.prototype),"onKeyUp",this).call(this,keyCode,event);default:return false;}}},{key:"pageScroll",value:function pageScroll(direction){var nextPage=undefined;var down=undefined;if(direction == ListView.FOCUS_UP){nextPage = Math.max(0,this.mSelectedPosition - this.getChildCount() - 1);down = false;}else if(direction == ListView.FOCUS_DOWN){nextPage = Math.min(this.mItemCount - 1,this.mSelectedPosition + this.getChildCount() - 1);down = true;}else {return false;}if(nextPage >= 0){var position=this.lookForSelectablePositionAfter(this.mSelectedPosition,nextPage,down);if(position >= 0){this.mLayoutMode = ListView.LAYOUT_SPECIFIC;this.mSpecificTop = this.mPaddingTop + this.getVerticalFadingEdgeLength();if(down && position > this.mItemCount - this.getChildCount()){this.mLayoutMode = ListView.LAYOUT_FORCE_BOTTOM;}if(!down && position < this.getChildCount()){this.mLayoutMode = ListView.LAYOUT_FORCE_TOP;}this.setSelectionInt(position);this.invokeOnItemScrollListener();if(!this.awakenScrollBars()){this.invalidate();}return true;}}return false;}},{key:"fullScroll",value:function fullScroll(direction){var moved=false;if(direction == ListView.FOCUS_UP){if(this.mSelectedPosition != 0){var position=this.lookForSelectablePositionAfter(this.mSelectedPosition,0,true);if(position >= 0){this.mLayoutMode = ListView.LAYOUT_FORCE_TOP;this.setSelectionInt(position);this.invokeOnItemScrollListener();}moved = true;}}else if(direction == ListView.FOCUS_DOWN){var lastItem=this.mItemCount - 1;if(this.mSelectedPosition < lastItem){var position=this.lookForSelectablePositionAfter(this.mSelectedPosition,lastItem,false);if(position >= 0){this.mLayoutMode = ListView.LAYOUT_FORCE_BOTTOM;this.setSelectionInt(position);this.invokeOnItemScrollListener();}moved = true;}}if(moved && !this.awakenScrollBars()){this.awakenScrollBars();this.invalidate();}return moved;}},{key:"handleHorizontalFocusWithinListItem",value:function handleHorizontalFocusWithinListItem(direction){if(direction != View.FOCUS_LEFT && direction != View.FOCUS_RIGHT){throw Error("new IllegalArgumentException(\"direction must be one of\" + \" {View.FOCUS_LEFT, View.FOCUS_RIGHT}\")");}var numChildren=this.getChildCount();if(this.mItemsCanFocus && numChildren > 0 && this.mSelectedPosition != ListView.INVALID_POSITION){var selectedView=this.getSelectedView();if(selectedView != null && selectedView.hasFocus() && selectedView instanceof ViewGroup){var currentFocus=selectedView.findFocus();var nextFocus=FocusFinder.getInstance().findNextFocus(selectedView,currentFocus,direction);if(nextFocus != null){currentFocus.getFocusedRect(this.mTempRect);this.offsetDescendantRectToMyCoords(currentFocus,this.mTempRect);this.offsetRectIntoDescendantCoords(nextFocus,this.mTempRect);if(nextFocus.requestFocus(direction,this.mTempRect)){return true;}}var globalNextFocus=FocusFinder.getInstance().findNextFocus(this.getRootView(),currentFocus,direction);if(globalNextFocus != null){return this.isViewAncestorOf(globalNextFocus,this);}}}return false;}},{key:"arrowScroll",value:function arrowScroll(direction){try{this.mInLayout = true;var handled=this.arrowScrollImpl(direction);if(handled){this.playSoundEffect(SoundEffectConstants.getContantForFocusDirection(direction));}return handled;}finally {this.mInLayout = false;}}},{key:"nextSelectedPositionForDirection",value:function nextSelectedPositionForDirection(selectedView,selectedPos,direction){var nextSelected=undefined;if(direction == View.FOCUS_DOWN){var listBottom=this.getHeight() - this.mListPadding.bottom;if(selectedView != null && selectedView.getBottom() <= listBottom){nextSelected = selectedPos != ListView.INVALID_POSITION && selectedPos >= this.mFirstPosition?selectedPos + 1:this.mFirstPosition;}else {return ListView.INVALID_POSITION;}}else {var listTop=this.mListPadding.top;if(selectedView != null && selectedView.getTop() >= listTop){var lastPos=this.mFirstPosition + this.getChildCount() - 1;nextSelected = selectedPos != ListView.INVALID_POSITION && selectedPos <= lastPos?selectedPos - 1:lastPos;}else {return ListView.INVALID_POSITION;}}if(nextSelected < 0 || nextSelected >= this.mAdapter.getCount()){return ListView.INVALID_POSITION;}return this.lookForSelectablePosition(nextSelected,direction == View.FOCUS_DOWN);}},{key:"arrowScrollImpl",value:function arrowScrollImpl(direction){if(this.getChildCount() <= 0){return false;}var selectedView=this.getSelectedView();var selectedPos=this.mSelectedPosition;var nextSelectedPosition=this.nextSelectedPositionForDirection(selectedView,selectedPos,direction);var amountToScroll=this.amountToScroll(direction,nextSelectedPosition);var focusResult=this.mItemsCanFocus?this.arrowScrollFocused(direction):null;if(focusResult != null){nextSelectedPosition = focusResult.getSelectedPosition();amountToScroll = focusResult.getAmountToScroll();}var needToRedraw=focusResult != null;if(nextSelectedPosition != ListView.INVALID_POSITION){this.handleNewSelectionChange(selectedView,direction,nextSelectedPosition,focusResult != null);this.setSelectedPositionInt(nextSelectedPosition);this.setNextSelectedPositionInt(nextSelectedPosition);selectedView = this.getSelectedView();selectedPos = nextSelectedPosition;if(this.mItemsCanFocus && focusResult == null){var focused=this.getFocusedChild();if(focused != null){focused.clearFocus();}}needToRedraw = true;this.checkSelectionChanged();}if(amountToScroll > 0){this.scrollListItemsBy(direction == View.FOCUS_UP?amountToScroll:-amountToScroll);needToRedraw = true;}if(this.mItemsCanFocus && focusResult == null && selectedView != null && selectedView.hasFocus()){var focused=selectedView.findFocus();if(!this.isViewAncestorOf(focused,this) || this.distanceToView(focused) > 0){focused.clearFocus();}}if(nextSelectedPosition == ListView.INVALID_POSITION && selectedView != null && !this.isViewAncestorOf(selectedView,this)){selectedView = null;this.hideSelector();this.mResurrectToPosition = ListView.INVALID_POSITION;}if(needToRedraw){if(selectedView != null){this.positionSelector(selectedPos,selectedView);this.mSelectedTop = selectedView.getTop();}if(!this.awakenScrollBars()){this.invalidate();}this.invokeOnItemScrollListener();return true;}return false;}},{key:"handleNewSelectionChange",value:function handleNewSelectionChange(selectedView,direction,newSelectedPosition,newFocusAssigned){if(newSelectedPosition == ListView.INVALID_POSITION){throw Error("new IllegalArgumentException(\"newSelectedPosition needs to be valid\")");}var topView=undefined;var bottomView=undefined;var topViewIndex=undefined,bottomViewIndex=undefined;var topSelected=false;var selectedIndex=this.mSelectedPosition - this.mFirstPosition;var nextSelectedIndex=newSelectedPosition - this.mFirstPosition;if(direction == View.FOCUS_UP){topViewIndex = nextSelectedIndex;bottomViewIndex = selectedIndex;topView = this.getChildAt(topViewIndex);bottomView = selectedView;topSelected = true;}else {topViewIndex = selectedIndex;bottomViewIndex = nextSelectedIndex;topView = selectedView;bottomView = this.getChildAt(bottomViewIndex);}var numChildren=this.getChildCount();if(topView != null){topView.setSelected(!newFocusAssigned && topSelected);this.measureAndAdjustDown(topView,topViewIndex,numChildren);}if(bottomView != null){bottomView.setSelected(!newFocusAssigned && !topSelected);this.measureAndAdjustDown(bottomView,bottomViewIndex,numChildren);}}},{key:"measureAndAdjustDown",value:function measureAndAdjustDown(child,childIndex,numChildren){var oldHeight=child.getHeight();this.measureItem(child);if(child.getMeasuredHeight() != oldHeight){this.relayoutMeasuredItem(child);var heightDelta=child.getMeasuredHeight() - oldHeight;for(var i=childIndex + 1;i < numChildren;i++) {this.getChildAt(i).offsetTopAndBottom(heightDelta);}}}},{key:"measureItem",value:function measureItem(child){var p=child.getLayoutParams();if(p == null){p = new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,ViewGroup.LayoutParams.WRAP_CONTENT);}var childWidthSpec=ViewGroup.getChildMeasureSpec(this.mWidthMeasureSpec,this.mListPadding.left + this.mListPadding.right,p.width);var lpHeight=p.height;var childHeightSpec=undefined;if(lpHeight > 0){childHeightSpec = ListView.MeasureSpec.makeMeasureSpec(lpHeight,ListView.MeasureSpec.EXACTLY);}else {childHeightSpec = ListView.MeasureSpec.makeMeasureSpec(0,ListView.MeasureSpec.UNSPECIFIED);}child.measure(childWidthSpec,childHeightSpec);}},{key:"relayoutMeasuredItem",value:function relayoutMeasuredItem(child){var w=child.getMeasuredWidth();var h=child.getMeasuredHeight();var childLeft=this.mListPadding.left;var childRight=childLeft + w;var childTop=child.getTop();var childBottom=childTop + h;child.layout(childLeft,childTop,childRight,childBottom);}},{key:"getArrowScrollPreviewLength",value:function getArrowScrollPreviewLength(){return Math.max(ListView.MIN_SCROLL_PREVIEW_PIXELS,this.getVerticalFadingEdgeLength());}},{key:"amountToScroll",value:function amountToScroll(direction,nextSelectedPosition){var listBottom=this.getHeight() - this.mListPadding.bottom;var listTop=this.mListPadding.top;var numChildren=this.getChildCount();if(direction == View.FOCUS_DOWN){var indexToMakeVisible=numChildren - 1;if(nextSelectedPosition != ListView.INVALID_POSITION){indexToMakeVisible = nextSelectedPosition - this.mFirstPosition;}while(numChildren <= indexToMakeVisible) {this.addViewBelow(this.getChildAt(numChildren - 1),this.mFirstPosition + numChildren - 1);numChildren++;}var positionToMakeVisible=this.mFirstPosition + indexToMakeVisible;var viewToMakeVisible=this.getChildAt(indexToMakeVisible);var goalBottom=listBottom;if(positionToMakeVisible < this.mItemCount - 1){goalBottom -= this.getArrowScrollPreviewLength();}if(viewToMakeVisible.getBottom() <= goalBottom){return 0;}if(nextSelectedPosition != ListView.INVALID_POSITION && goalBottom - viewToMakeVisible.getTop() >= this.getMaxScrollAmount()){return 0;}var amountToScroll=viewToMakeVisible.getBottom() - goalBottom;if(this.mFirstPosition + numChildren == this.mItemCount){var max=this.getChildAt(numChildren - 1).getBottom() - listBottom;amountToScroll = Math.min(amountToScroll,max);}return Math.min(amountToScroll,this.getMaxScrollAmount());}else {var indexToMakeVisible=0;if(nextSelectedPosition != ListView.INVALID_POSITION){indexToMakeVisible = nextSelectedPosition - this.mFirstPosition;}while(indexToMakeVisible < 0) {this.addViewAbove(this.getChildAt(0),this.mFirstPosition);this.mFirstPosition--;indexToMakeVisible = nextSelectedPosition - this.mFirstPosition;}var positionToMakeVisible=this.mFirstPosition + indexToMakeVisible;var viewToMakeVisible=this.getChildAt(indexToMakeVisible);var goalTop=listTop;if(positionToMakeVisible > 0){goalTop += this.getArrowScrollPreviewLength();}if(viewToMakeVisible.getTop() >= goalTop){return 0;}if(nextSelectedPosition != ListView.INVALID_POSITION && viewToMakeVisible.getBottom() - goalTop >= this.getMaxScrollAmount()){return 0;}var amountToScroll=goalTop - viewToMakeVisible.getTop();if(this.mFirstPosition == 0){var max=listTop - this.getChildAt(0).getTop();amountToScroll = Math.min(amountToScroll,max);}return Math.min(amountToScroll,this.getMaxScrollAmount());}}},{key:"lookForSelectablePositionOnScreen",value:function lookForSelectablePositionOnScreen(direction){var firstPosition=this.mFirstPosition;if(direction == View.FOCUS_DOWN){var startPos=this.mSelectedPosition != ListView.INVALID_POSITION?this.mSelectedPosition + 1:firstPosition;if(startPos >= this.mAdapter.getCount()){return ListView.INVALID_POSITION;}if(startPos < firstPosition){startPos = firstPosition;}var lastVisiblePos=this.getLastVisiblePosition();var adapter=this.getAdapter();for(var pos=startPos;pos <= lastVisiblePos;pos++) {if(adapter.isEnabled(pos) && this.getChildAt(pos - firstPosition).getVisibility() == View.VISIBLE){return pos;}}}else {var last=firstPosition + this.getChildCount() - 1;var startPos=this.mSelectedPosition != ListView.INVALID_POSITION?this.mSelectedPosition - 1:firstPosition + this.getChildCount() - 1;if(startPos < 0 || startPos >= this.mAdapter.getCount()){return ListView.INVALID_POSITION;}if(startPos > last){startPos = last;}var adapter=this.getAdapter();for(var pos=startPos;pos >= firstPosition;pos--) {if(adapter.isEnabled(pos) && this.getChildAt(pos - firstPosition).getVisibility() == View.VISIBLE){return pos;}}}return ListView.INVALID_POSITION;}},{key:"arrowScrollFocused",value:function arrowScrollFocused(direction){var selectedView=this.getSelectedView();var newFocus=undefined;if(selectedView != null && selectedView.hasFocus()){var oldFocus=selectedView.findFocus();newFocus = FocusFinder.getInstance().findNextFocus(this,oldFocus,direction);}else {if(direction == View.FOCUS_DOWN){var topFadingEdgeShowing=this.mFirstPosition > 0;var listTop=this.mListPadding.top + (topFadingEdgeShowing?this.getArrowScrollPreviewLength():0);var ySearchPoint=selectedView != null && selectedView.getTop() > listTop?selectedView.getTop():listTop;this.mTempRect.set(0,ySearchPoint,0,ySearchPoint);}else {var bottomFadingEdgeShowing=this.mFirstPosition + this.getChildCount() - 1 < this.mItemCount;var listBottom=this.getHeight() - this.mListPadding.bottom - (bottomFadingEdgeShowing?this.getArrowScrollPreviewLength():0);var ySearchPoint=selectedView != null && selectedView.getBottom() < listBottom?selectedView.getBottom():listBottom;this.mTempRect.set(0,ySearchPoint,0,ySearchPoint);}newFocus = FocusFinder.getInstance().findNextFocusFromRect(this,this.mTempRect,direction);}if(newFocus != null){var positionOfNewFocus=this.positionOfNewFocus(newFocus);if(this.mSelectedPosition != ListView.INVALID_POSITION && positionOfNewFocus != this.mSelectedPosition){var selectablePosition=this.lookForSelectablePositionOnScreen(direction);if(selectablePosition != ListView.INVALID_POSITION && (direction == View.FOCUS_DOWN && selectablePosition < positionOfNewFocus || direction == View.FOCUS_UP && selectablePosition > positionOfNewFocus)){return null;}}var focusScroll=this.amountToScrollToNewFocus(direction,newFocus,positionOfNewFocus);var maxScrollAmount=this.getMaxScrollAmount();if(focusScroll < maxScrollAmount){newFocus.requestFocus(direction);this.mArrowScrollFocusResult.populate(positionOfNewFocus,focusScroll);return this.mArrowScrollFocusResult;}else if(this.distanceToView(newFocus) < maxScrollAmount){newFocus.requestFocus(direction);this.mArrowScrollFocusResult.populate(positionOfNewFocus,maxScrollAmount);return this.mArrowScrollFocusResult;}}return null;}},{key:"positionOfNewFocus",value:function positionOfNewFocus(newFocus){var numChildren=this.getChildCount();for(var i=0;i < numChildren;i++) {var child=this.getChildAt(i);if(this.isViewAncestorOf(newFocus,child)){return this.mFirstPosition + i;}}throw Error("new IllegalArgumentException(\"newFocus is not a child of any of the\" + \" children of the list!\")");}},{key:"isViewAncestorOf",value:function isViewAncestorOf(child,parent){if(child == parent){return true;}var theParent=child.getParent();return theParent instanceof ViewGroup && this.isViewAncestorOf(theParent,parent);}},{key:"amountToScrollToNewFocus",value:function amountToScrollToNewFocus(direction,newFocus,positionOfNewFocus){var amountToScroll=0;newFocus.getDrawingRect(this.mTempRect);this.offsetDescendantRectToMyCoords(newFocus,this.mTempRect);if(direction == View.FOCUS_UP){if(this.mTempRect.top < this.mListPadding.top){amountToScroll = this.mListPadding.top - this.mTempRect.top;if(positionOfNewFocus > 0){amountToScroll += this.getArrowScrollPreviewLength();}}}else {var listBottom=this.getHeight() - this.mListPadding.bottom;if(this.mTempRect.bottom > listBottom){amountToScroll = this.mTempRect.bottom - listBottom;if(positionOfNewFocus < this.mItemCount - 1){amountToScroll += this.getArrowScrollPreviewLength();}}}return amountToScroll;}},{key:"distanceToView",value:function distanceToView(descendant){var distance=0;descendant.getDrawingRect(this.mTempRect);this.offsetDescendantRectToMyCoords(descendant,this.mTempRect);var listBottom=this.mBottom - this.mTop - this.mListPadding.bottom;if(this.mTempRect.bottom < this.mListPadding.top){distance = this.mListPadding.top - this.mTempRect.bottom;}else if(this.mTempRect.top > listBottom){distance = this.mTempRect.top - listBottom;}return distance;}},{key:"scrollListItemsBy",value:function scrollListItemsBy(amount){this.offsetChildrenTopAndBottom(amount);var listBottom=this.getHeight() - this.mListPadding.bottom;var listTop=this.mListPadding.top;var recycleBin=this.mRecycler;if(amount < 0){var numChildren=this.getChildCount();var last=this.getChildAt(numChildren - 1);while(last.getBottom() < listBottom) {var lastVisiblePosition=this.mFirstPosition + numChildren - 1;if(lastVisiblePosition < this.mItemCount - 1){last = this.addViewBelow(last,lastVisiblePosition);numChildren++;}else {break;}}if(last.getBottom() < listBottom){this.offsetChildrenTopAndBottom(listBottom - last.getBottom());}var first=this.getChildAt(0);while(first.getBottom() < listTop) {var layoutParams=first.getLayoutParams();if(recycleBin.shouldRecycleViewType(layoutParams.viewType)){recycleBin.addScrapView(first,this.mFirstPosition);}this.detachViewFromParent(first);first = this.getChildAt(0);this.mFirstPosition++;}}else {var first=this.getChildAt(0);while(first.getTop() > listTop && this.mFirstPosition > 0) {first = this.addViewAbove(first,this.mFirstPosition);this.mFirstPosition--;}if(first.getTop() > listTop){this.offsetChildrenTopAndBottom(listTop - first.getTop());}var lastIndex=this.getChildCount() - 1;var last=this.getChildAt(lastIndex);while(last.getTop() > listBottom) {var layoutParams=last.getLayoutParams();if(recycleBin.shouldRecycleViewType(layoutParams.viewType)){recycleBin.addScrapView(last,this.mFirstPosition + lastIndex);}this.detachViewFromParent(last);last = this.getChildAt(--lastIndex);}}}},{key:"addViewAbove",value:function addViewAbove(theView,position){var abovePosition=position - 1;var view=this.obtainView(abovePosition,this.mIsScrap);var edgeOfNewChild=theView.getTop() - this.mDividerHeight;this.setupChild(view,abovePosition,edgeOfNewChild,false,this.mListPadding.left,false,this.mIsScrap[0]);return view;}},{key:"addViewBelow",value:function addViewBelow(theView,position){var belowPosition=position + 1;var view=this.obtainView(belowPosition,this.mIsScrap);var edgeOfNewChild=theView.getBottom() + this.mDividerHeight;this.setupChild(view,belowPosition,edgeOfNewChild,true,this.mListPadding.left,false,this.mIsScrap[0]);return view;}},{key:"setItemsCanFocus",value:function setItemsCanFocus(itemsCanFocus){this.mItemsCanFocus = itemsCanFocus;if(!itemsCanFocus){this.setDescendantFocusability(ViewGroup.FOCUS_BLOCK_DESCENDANTS);}}},{key:"getItemsCanFocus",value:function getItemsCanFocus(){return this.mItemsCanFocus;}},{key:"isOpaque",value:function isOpaque(){var retValue=this.mCachingActive && this.mIsCacheColorOpaque && this.mDividerIsOpaque && this.hasOpaqueScrollbars() || _get(Object.getPrototypeOf(ListView.prototype),"isOpaque",this).call(this);if(retValue){var listTop=this.mListPadding != null?this.mListPadding.top:this.mPaddingTop;var first=this.getChildAt(0);if(first == null || first.getTop() > listTop){return false;}var listBottom=this.getHeight() - (this.mListPadding != null?this.mListPadding.bottom:this.mPaddingBottom);var last=this.getChildAt(this.getChildCount() - 1);if(last == null || last.getBottom() < listBottom){return false;}}return retValue;}},{key:"setCacheColorHint",value:function setCacheColorHint(color){var opaque=color >>> 24 == 0xFF;this.mIsCacheColorOpaque = opaque;if(opaque){if(this.mDividerPaint == null){this.mDividerPaint = new Paint();}this.mDividerPaint.setColor(color);}_get(Object.getPrototypeOf(ListView.prototype),"setCacheColorHint",this).call(this,color);}},{key:"drawOverscrollHeader",value:function drawOverscrollHeader(canvas,drawable,bounds){var height=drawable.getMinimumHeight();canvas.save();canvas.clipRect(bounds);var span=bounds.bottom - bounds.top;if(span < height){bounds.top = bounds.bottom - height;}drawable.setBounds(bounds);drawable.draw(canvas);canvas.restore();}},{key:"drawOverscrollFooter",value:function drawOverscrollFooter(canvas,drawable,bounds){var height=drawable.getMinimumHeight();canvas.save();canvas.clipRect(bounds);var span=bounds.bottom - bounds.top;if(span < height){bounds.bottom = bounds.top + height;}drawable.setBounds(bounds);drawable.draw(canvas);canvas.restore();}},{key:"dispatchDraw",value:function dispatchDraw(canvas){if(this.mCachingStarted){this.mCachingActive = true;}var dividerHeight=this.mDividerHeight;var overscrollHeader=this.mOverScrollHeader;var overscrollFooter=this.mOverScrollFooter;var drawOverscrollHeader=overscrollHeader != null;var drawOverscrollFooter=overscrollFooter != null;var drawDividers=dividerHeight > 0 && this.mDivider != null;if(drawDividers || drawOverscrollHeader || drawOverscrollFooter){var bounds=this.mTempRect;bounds.left = this.mPaddingLeft;bounds.right = this.mRight - this.mLeft - this.mPaddingRight;var count=this.getChildCount();var headerCount=this.mHeaderViewInfos.size();var itemCount=this.mItemCount;var footerLimit=itemCount - this.mFooterViewInfos.size();var headerDividers=this.mHeaderDividersEnabled;var footerDividers=this.mFooterDividersEnabled;var first=this.mFirstPosition;var areAllItemsSelectable=this.mAreAllItemsSelectable;var adapter=this.mAdapter;var fillForMissingDividers=this.isOpaque() && !_get(Object.getPrototypeOf(ListView.prototype),"isOpaque",this).call(this);if(fillForMissingDividers && this.mDividerPaint == null && this.mIsCacheColorOpaque){this.mDividerPaint = new Paint();this.mDividerPaint.setColor(this.getCacheColorHint());}var paint=this.mDividerPaint;var effectivePaddingTop=0;var effectivePaddingBottom=0;if((this.mGroupFlags & ListView.CLIP_TO_PADDING_MASK) == ListView.CLIP_TO_PADDING_MASK){effectivePaddingTop = this.mListPadding.top;effectivePaddingBottom = this.mListPadding.bottom;}var listBottom=this.mBottom - this.mTop - effectivePaddingBottom + this.mScrollY;if(!this.mStackFromBottom){var bottom=0;var _scrollY9=this.mScrollY;if(count > 0 && _scrollY9 < 0){if(drawOverscrollHeader){bounds.bottom = 0;bounds.top = _scrollY9;this.drawOverscrollHeader(canvas,overscrollHeader,bounds);}else if(drawDividers){bounds.bottom = 0;bounds.top = -dividerHeight;this.drawDivider(canvas,bounds,-1);}}for(var i=0;i < count;i++) {var itemIndex=first + i;var isHeader=itemIndex < headerCount;var isFooter=itemIndex >= footerLimit;if((headerDividers || !isHeader) && (footerDividers || !isFooter)){var child=this.getChildAt(i);bottom = child.getBottom();var isLastItem=i == count - 1;if(drawDividers && bottom < listBottom && !(drawOverscrollFooter && isLastItem)){var nextIndex=itemIndex + 1;if(areAllItemsSelectable || (adapter.isEnabled(itemIndex) || headerDividers && isHeader || footerDividers && isFooter) && (isLastItem || adapter.isEnabled(nextIndex) || headerDividers && nextIndex < headerCount || footerDividers && nextIndex >= footerLimit)){bounds.top = bottom;bounds.bottom = bottom + dividerHeight;this.drawDivider(canvas,bounds,i);}else if(fillForMissingDividers){bounds.top = bottom;bounds.bottom = bottom + dividerHeight;canvas.drawRect(bounds,paint);}}}}var overFooterBottom=this.mBottom + this.mScrollY;if(drawOverscrollFooter && first + count == itemCount && overFooterBottom > bottom){bounds.top = bottom;bounds.bottom = overFooterBottom;this.drawOverscrollFooter(canvas,overscrollFooter,bounds);}}else {var _top21=undefined;var _scrollY10=this.mScrollY;if(count > 0 && drawOverscrollHeader){bounds.top = _scrollY10;bounds.bottom = this.getChildAt(0).getTop();this.drawOverscrollHeader(canvas,overscrollHeader,bounds);}var start=drawOverscrollHeader?1:0;for(var i=start;i < count;i++) {var itemIndex=first + i;var isHeader=itemIndex < headerCount;var isFooter=itemIndex >= footerLimit;if((headerDividers || !isHeader) && (footerDividers || !isFooter)){var child=this.getChildAt(i);_top21 = child.getTop();if(drawDividers && _top21 > effectivePaddingTop){var isFirstItem=i == start;var previousIndex=itemIndex - 1;if(areAllItemsSelectable || (adapter.isEnabled(itemIndex) || headerDividers && isHeader || footerDividers && isFooter) && (isFirstItem || adapter.isEnabled(previousIndex) || headerDividers && previousIndex < headerCount || footerDividers && previousIndex >= footerLimit)){bounds.top = _top21 - dividerHeight;bounds.bottom = _top21;this.drawDivider(canvas,bounds,i - 1);}else if(fillForMissingDividers){bounds.top = _top21 - dividerHeight;bounds.bottom = _top21;canvas.drawRect(bounds,paint);}}}}if(count > 0 && _scrollY10 > 0){if(drawOverscrollFooter){var absListBottom=this.mBottom;bounds.top = absListBottom;bounds.bottom = absListBottom + _scrollY10;this.drawOverscrollFooter(canvas,overscrollFooter,bounds);}else if(drawDividers){bounds.top = listBottom;bounds.bottom = listBottom + dividerHeight;this.drawDivider(canvas,bounds,-1);}}}}_get(Object.getPrototypeOf(ListView.prototype),"dispatchDraw",this).call(this,canvas);}},{key:"drawChild",value:function drawChild(canvas,child,drawingTime){var more=_get(Object.getPrototypeOf(ListView.prototype),"drawChild",this).call(this,canvas,child,drawingTime);if(this.mCachingActive && child.mCachingFailed){this.mCachingActive = false;}return more;}},{key:"drawDivider",value:function drawDivider(canvas,bounds,childIndex){var divider=this.mDivider;divider.setBounds(bounds);divider.draw(canvas);}},{key:"getDivider",value:function getDivider(){return this.mDivider;}},{key:"setDivider",value:function setDivider(divider){if(divider != null){this.mDividerHeight = divider.getIntrinsicHeight();}else {this.mDividerHeight = 0;}this.mDivider = divider;this.mDividerIsOpaque = divider == null || divider.getOpacity() == PixelFormat.OPAQUE;this.requestLayout();this.invalidate();}},{key:"getDividerHeight",value:function getDividerHeight(){return this.mDividerHeight;}},{key:"setDividerHeight",value:function setDividerHeight(height){this.mDividerHeight = height;this.requestLayout();this.invalidate();}},{key:"setHeaderDividersEnabled",value:function setHeaderDividersEnabled(headerDividersEnabled){this.mHeaderDividersEnabled = headerDividersEnabled;this.invalidate();}},{key:"areHeaderDividersEnabled",value:function areHeaderDividersEnabled(){return this.mHeaderDividersEnabled;}},{key:"setFooterDividersEnabled",value:function setFooterDividersEnabled(footerDividersEnabled){this.mFooterDividersEnabled = footerDividersEnabled;this.invalidate();}},{key:"areFooterDividersEnabled",value:function areFooterDividersEnabled(){return this.mFooterDividersEnabled;}},{key:"setOverscrollHeader",value:function setOverscrollHeader(header){this.mOverScrollHeader = header;if(this.mScrollY < 0){this.invalidate();}}},{key:"getOverscrollHeader",value:function getOverscrollHeader(){return this.mOverScrollHeader;}},{key:"setOverscrollFooter",value:function setOverscrollFooter(footer){this.mOverScrollFooter = footer;this.invalidate();}},{key:"getOverscrollFooter",value:function getOverscrollFooter(){return this.mOverScrollFooter;}},{key:"onFocusChanged",value:function onFocusChanged(gainFocus,direction,previouslyFocusedRect){_get(Object.getPrototypeOf(ListView.prototype),"onFocusChanged",this).call(this,gainFocus,direction,previouslyFocusedRect);var adapter=this.mAdapter;var closetChildIndex=-1;var closestChildTop=0;if(adapter != null && gainFocus && previouslyFocusedRect != null){previouslyFocusedRect.offset(this.mScrollX,this.mScrollY);if(adapter.getCount() < this.getChildCount() + this.mFirstPosition){this.mLayoutMode = ListView.LAYOUT_NORMAL;this.layoutChildren();}var otherRect=this.mTempRect;var minDistance=Integer.MAX_VALUE;var childCount=this.getChildCount();var firstPosition=this.mFirstPosition;for(var i=0;i < childCount;i++) {if(!adapter.isEnabled(firstPosition + i)){continue;}var other=this.getChildAt(i);other.getDrawingRect(otherRect);this.offsetDescendantRectToMyCoords(other,otherRect);var distance=ListView.getDistance(previouslyFocusedRect,otherRect,direction);if(distance < minDistance){minDistance = distance;closetChildIndex = i;closestChildTop = other.getTop();}}}if(closetChildIndex >= 0){this.setSelectionFromTop(closetChildIndex + this.mFirstPosition,closestChildTop);}else {this.requestLayout();}}},{key:"onFinishInflate",value:function onFinishInflate(){_get(Object.getPrototypeOf(ListView.prototype),"onFinishInflate",this).call(this);var count=this.getChildCount();if(count > 0){for(var i=0;i < count;++i) {this.addHeaderView(this.getChildAt(i));}this.removeAllViews();}}},{key:"findViewTraversal",value:function findViewTraversal(id){var v=undefined;v = _get(Object.getPrototypeOf(ListView.prototype),"findViewTraversal",this).call(this,id);if(v == null){v = this.findViewInHeadersOrFooters(this.mHeaderViewInfos,id);if(v != null){return v;}v = this.findViewInHeadersOrFooters(this.mFooterViewInfos,id);if(v != null){return v;}}return v;}},{key:"findViewInHeadersOrFooters",value:function findViewInHeadersOrFooters(where,id){if(where != null){var len=where.size();var v=undefined;for(var i=0;i < len;i++) {v = where.get(i).view;if(!v.isRootNamespace()){v = v.findViewById(id);if(v != null){return v;}}}}return null;}},{key:"findViewByPredicateTraversal",value:function findViewByPredicateTraversal(predicate,childToSkip){var v=undefined;v = _get(Object.getPrototypeOf(ListView.prototype),"findViewByPredicateTraversal",this).call(this,predicate,childToSkip);if(v == null){v = this.findViewByPredicateInHeadersOrFooters(this.mHeaderViewInfos,predicate,childToSkip);if(v != null){return v;}v = this.findViewByPredicateInHeadersOrFooters(this.mFooterViewInfos,predicate,childToSkip);if(v != null){return v;}}return v;}},{key:"findViewByPredicateInHeadersOrFooters",value:function findViewByPredicateInHeadersOrFooters(where,predicate,childToSkip){if(where != null){var len=where.size();var v=undefined;for(var i=0;i < len;i++) {v = where.get(i).view;if(v != childToSkip && !v.isRootNamespace()){v = v.findViewByPredicate(predicate);if(v != null){return v;}}}}return null;}},{key:"getCheckItemIds",value:function getCheckItemIds(){if(this.mAdapter != null && this.mAdapter.hasStableIds()){return this.getCheckedItemIds();}if(this.mChoiceMode != ListView.CHOICE_MODE_NONE && this.mCheckStates != null && this.mAdapter != null){var states=this.mCheckStates;var count=states.size();var ids=new Array(count);var adapter=this.mAdapter;var checkedCount=0;for(var i=0;i < count;i++) {if(states.valueAt(i)){ids[checkedCount++] = adapter.getItemId(states.keyAt(i));}}if(checkedCount == count){return ids;}else {var result=new Array(checkedCount);System.arraycopy(ids,0,result,0,checkedCount);return result;}}return new Array(0);}}]);return ListView;})(AbsListView);ListView.NO_POSITION = -1;ListView.MAX_SCROLL_FACTOR = 0.33;ListView.MIN_SCROLL_PREVIEW_PIXELS = 2;widget.ListView = ListView;(function(ListView){var FixedViewInfo=function FixedViewInfo(arg){_classCallCheck(this,FixedViewInfo);this._ListView_this = arg;};ListView.FixedViewInfo = FixedViewInfo;var FocusSelector=(function(){function FocusSelector(arg){_classCallCheck(this,FocusSelector);this.mPosition = 0;this.mPositionTop = 0;this._ListView_this = arg;}_createClass(FocusSelector,[{key:"setup",value:function setup(position,top){this.mPosition = position;this.mPositionTop = top;return this;}},{key:"run",value:function run(){this._ListView_this.setSelectionFromTop(this.mPosition,this.mPositionTop);}}]);return FocusSelector;})();ListView.FocusSelector = FocusSelector;var ArrowScrollFocusResult=(function(){function ArrowScrollFocusResult(){_classCallCheck(this,ArrowScrollFocusResult);this.mSelectedPosition = 0;this.mAmountToScroll = 0;}_createClass(ArrowScrollFocusResult,[{key:"populate",value:function populate(selectedPosition,amountToScroll){this.mSelectedPosition = selectedPosition;this.mAmountToScroll = amountToScroll;}},{key:"getSelectedPosition",value:function getSelectedPosition(){return this.mSelectedPosition;}},{key:"getAmountToScroll",value:function getAmountToScroll(){return this.mAmountToScroll;}}]);return ArrowScrollFocusResult;})();ListView.ArrowScrollFocusResult = ArrowScrollFocusResult;})(ListView = widget.ListView || (widget.ListView = {}));})(widget = android.widget || (android.widget = {}));})(android || (android = {})); /*
 * Copyright (C) 2007 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ ///<reference path="../../android/graphics/Rect.ts"/>
///<reference path="../../android/os/Trace.ts"/>
///<reference path="../../android/view/Gravity.ts"/>
///<reference path="../../android/view/KeyEvent.ts"/>
///<reference path="../../android/view/SoundEffectConstants.ts"/>
///<reference path="../../android/view/View.ts"/>
///<reference path="../../android/view/ViewGroup.ts"/>
///<reference path="../../java/lang/Integer.ts"/>
///<reference path="../../android/widget/AbsListView.ts"/>
///<reference path="../../android/widget/Adapter.ts"/>
///<reference path="../../android/widget/Checkable.ts"/>
///<reference path="../../android/widget/ListAdapter.ts"/>
///<reference path="../../android/widget/ListView.ts"/>
///<reference path="../../android/R/attr.ts"/>
var android;(function(android){var widget;(function(widget){var Rect=android.graphics.Rect;var Trace=android.os.Trace;var Gravity=android.view.Gravity;var KeyEvent=android.view.KeyEvent;var SoundEffectConstants=android.view.SoundEffectConstants;var View=android.view.View;var ViewGroup=android.view.ViewGroup;var Integer=java.lang.Integer;var AbsListView=android.widget.AbsListView;var GridView=(function(_AbsListView2){_inherits(GridView,_AbsListView2);function GridView(bindElement,rootElement){var _this31=this;_classCallCheck(this,GridView);_get(Object.getPrototypeOf(GridView.prototype),"constructor",this).call(this,bindElement,rootElement);this.mNumColumns = GridView.AUTO_FIT;this.mHorizontalSpacing = 0;this.mRequestedHorizontalSpacing = 0;this.mVerticalSpacing = 0;this.mStretchMode = GridView.STRETCH_COLUMN_WIDTH;this.mColumnWidth = 0;this.mRequestedColumnWidth = 0;this.mRequestedNumColumns = 0;this.mReferenceView = null;this.mReferenceViewInSelectedRow = null;this.mGravity = Gravity.LEFT;this.mTempRect = new Rect();this._attrBinder.addAttr('horizontalSpacing',function(value){_this31.setHorizontalSpacing(_this31._attrBinder.parseNumber(value,0));});this._attrBinder.addAttr('verticalSpacing',function(value){_this31.setVerticalSpacing(_this31._attrBinder.parseNumber(value,0));});this._attrBinder.addAttr('stretchMode',function(value){var strechMode=_this31._attrBinder.parseNumber(value,-1);if(strechMode >= 0){_this31.setStretchMode(strechMode);}});this._attrBinder.addAttr('columnWidth',function(value){var columnWidth=_this31._attrBinder.parseNumber(value,-1);if(columnWidth > 0){_this31.setColumnWidth(columnWidth);}});this._attrBinder.addAttr('numColumns',function(value){_this31.setNumColumns(_this31._attrBinder.parseNumber(value,1));});this._attrBinder.addAttr('gravity',function(value){_this31.setNumColumns(_this31._attrBinder.parseNumber(value,1));});this.applyDefaultAttributes(android.R.attr.gridViewStyle);}_createClass(GridView,[{key:"getAdapter",value:function getAdapter(){return this.mAdapter;}},{key:"setAdapter",value:function setAdapter(adapter){if(this.mAdapter != null && this.mDataSetObserver != null){this.mAdapter.unregisterDataSetObserver(this.mDataSetObserver);}this.resetList();this.mRecycler.clear();this.mAdapter = adapter;this.mOldSelectedPosition = GridView.INVALID_POSITION;this.mOldSelectedRowId = GridView.INVALID_ROW_ID;_get(Object.getPrototypeOf(GridView.prototype),"setAdapter",this).call(this,adapter);if(this.mAdapter != null){this.mOldItemCount = this.mItemCount;this.mItemCount = this.mAdapter.getCount();this.mDataChanged = true;this.checkFocus();this.mDataSetObserver = new AbsListView.AdapterDataSetObserver(this);this.mAdapter.registerDataSetObserver(this.mDataSetObserver);this.mRecycler.setViewTypeCount(this.mAdapter.getViewTypeCount());var position=undefined;if(this.mStackFromBottom){position = this.lookForSelectablePosition(this.mItemCount - 1,false);}else {position = this.lookForSelectablePosition(0,true);}this.setSelectedPositionInt(position);this.setNextSelectedPositionInt(position);this.checkSelectionChanged();}else {this.checkFocus();this.checkSelectionChanged();}this.requestLayout();}},{key:"lookForSelectablePosition",value:function lookForSelectablePosition(position,lookDown){var adapter=this.mAdapter;if(adapter == null || this.isInTouchMode()){return GridView.INVALID_POSITION;}if(position < 0 || position >= this.mItemCount){return GridView.INVALID_POSITION;}return position;}},{key:"fillGap",value:function fillGap(down){var numColumns=this.mNumColumns;var verticalSpacing=this.mVerticalSpacing;var count=this.getChildCount();if(down){var paddingTop=0;if((this.mGroupFlags & GridView.CLIP_TO_PADDING_MASK) == GridView.CLIP_TO_PADDING_MASK){paddingTop = this.getListPaddingTop();}var startOffset=count > 0?this.getChildAt(count - 1).getBottom() + verticalSpacing:paddingTop;var position=this.mFirstPosition + count;if(this.mStackFromBottom){position += numColumns - 1;}this.fillDown(position,startOffset);this.correctTooHigh(numColumns,verticalSpacing,this.getChildCount());}else {var paddingBottom=0;if((this.mGroupFlags & GridView.CLIP_TO_PADDING_MASK) == GridView.CLIP_TO_PADDING_MASK){paddingBottom = this.getListPaddingBottom();}var startOffset=count > 0?this.getChildAt(0).getTop() - verticalSpacing:this.getHeight() - paddingBottom;var position=this.mFirstPosition;if(!this.mStackFromBottom){position -= numColumns;}else {position--;}this.fillUp(position,startOffset);this.correctTooLow(numColumns,verticalSpacing,this.getChildCount());}}},{key:"fillDown",value:function fillDown(pos,nextTop){var selectedView=null;var end=this.mBottom - this.mTop;if((this.mGroupFlags & GridView.CLIP_TO_PADDING_MASK) == GridView.CLIP_TO_PADDING_MASK){end -= this.mListPadding.bottom;}while(nextTop < end && pos < this.mItemCount) {var temp=this.makeRow(pos,nextTop,true);if(temp != null){selectedView = temp;}nextTop = this.mReferenceView.getBottom() + this.mVerticalSpacing;pos += this.mNumColumns;}this.setVisibleRangeHint(this.mFirstPosition,this.mFirstPosition + this.getChildCount() - 1);return selectedView;}},{key:"makeRow",value:function makeRow(startPos,y,flow){var columnWidth=this.mColumnWidth;var horizontalSpacing=this.mHorizontalSpacing;var isLayoutRtl=this.isLayoutRtl();var last=undefined;var nextLeft=undefined;if(isLayoutRtl){nextLeft = this.getWidth() - this.mListPadding.right - columnWidth - (this.mStretchMode == GridView.STRETCH_SPACING_UNIFORM?horizontalSpacing:0);}else {nextLeft = this.mListPadding.left + (this.mStretchMode == GridView.STRETCH_SPACING_UNIFORM?horizontalSpacing:0);}if(!this.mStackFromBottom){last = Math.min(startPos + this.mNumColumns,this.mItemCount);}else {last = startPos + 1;startPos = Math.max(0,startPos - this.mNumColumns + 1);if(last - startPos < this.mNumColumns){var deltaLeft=(this.mNumColumns - (last - startPos)) * (columnWidth + horizontalSpacing);nextLeft += (isLayoutRtl?-1:+1) * deltaLeft;}}var selectedView=null;var hasFocus=this.shouldShowSelector();var inClick=this.touchModeDrawsInPressedState();var selectedPosition=this.mSelectedPosition;var child=null;for(var pos=startPos;pos < last;pos++) {var selected=pos == selectedPosition;var where=flow?-1:pos - startPos;child = this.makeAndAddView(pos,y,flow,nextLeft,selected,where);nextLeft += (isLayoutRtl?-1:+1) * columnWidth;if(pos < last - 1){nextLeft += horizontalSpacing;}if(selected && (hasFocus || inClick)){selectedView = child;}}this.mReferenceView = child;if(selectedView != null){this.mReferenceViewInSelectedRow = this.mReferenceView;}return selectedView;}},{key:"fillUp",value:function fillUp(pos,nextBottom){var selectedView=null;var end=0;if((this.mGroupFlags & GridView.CLIP_TO_PADDING_MASK) == GridView.CLIP_TO_PADDING_MASK){end = this.mListPadding.top;}while(nextBottom > end && pos >= 0) {var temp=this.makeRow(pos,nextBottom,false);if(temp != null){selectedView = temp;}nextBottom = this.mReferenceView.getTop() - this.mVerticalSpacing;this.mFirstPosition = pos;pos -= this.mNumColumns;}if(this.mStackFromBottom){this.mFirstPosition = Math.max(0,pos + 1);}this.setVisibleRangeHint(this.mFirstPosition,this.mFirstPosition + this.getChildCount() - 1);return selectedView;}},{key:"fillFromTop",value:function fillFromTop(nextTop){this.mFirstPosition = Math.min(this.mFirstPosition,this.mSelectedPosition);this.mFirstPosition = Math.min(this.mFirstPosition,this.mItemCount - 1);if(this.mFirstPosition < 0){this.mFirstPosition = 0;}this.mFirstPosition -= this.mFirstPosition % this.mNumColumns;return this.fillDown(this.mFirstPosition,nextTop);}},{key:"fillFromBottom",value:function fillFromBottom(lastPosition,nextBottom){lastPosition = Math.max(lastPosition,this.mSelectedPosition);lastPosition = Math.min(lastPosition,this.mItemCount - 1);var invertedPosition=this.mItemCount - 1 - lastPosition;lastPosition = this.mItemCount - 1 - (invertedPosition - invertedPosition % this.mNumColumns);return this.fillUp(lastPosition,nextBottom);}},{key:"fillSelection",value:function fillSelection(childrenTop,childrenBottom){var selectedPosition=this.reconcileSelectedPosition();var numColumns=this.mNumColumns;var verticalSpacing=this.mVerticalSpacing;var rowStart=undefined;var rowEnd=-1;if(!this.mStackFromBottom){rowStart = selectedPosition - selectedPosition % numColumns;}else {var invertedSelection=this.mItemCount - 1 - selectedPosition;rowEnd = this.mItemCount - 1 - (invertedSelection - invertedSelection % numColumns);rowStart = Math.max(0,rowEnd - numColumns + 1);}var fadingEdgeLength=this.getVerticalFadingEdgeLength();var topSelectionPixel=this.getTopSelectionPixel(childrenTop,fadingEdgeLength,rowStart);var sel=this.makeRow(this.mStackFromBottom?rowEnd:rowStart,topSelectionPixel,true);this.mFirstPosition = rowStart;var referenceView=this.mReferenceView;if(!this.mStackFromBottom){this.fillDown(rowStart + numColumns,referenceView.getBottom() + verticalSpacing);this.pinToBottom(childrenBottom);this.fillUp(rowStart - numColumns,referenceView.getTop() - verticalSpacing);this.adjustViewsUpOrDown();}else {var bottomSelectionPixel=this.getBottomSelectionPixel(childrenBottom,fadingEdgeLength,numColumns,rowStart);var offset=bottomSelectionPixel - referenceView.getBottom();this.offsetChildrenTopAndBottom(offset);this.fillUp(rowStart - 1,referenceView.getTop() - verticalSpacing);this.pinToTop(childrenTop);this.fillDown(rowEnd + numColumns,referenceView.getBottom() + verticalSpacing);this.adjustViewsUpOrDown();}return sel;}},{key:"pinToTop",value:function pinToTop(childrenTop){if(this.mFirstPosition == 0){var _top22=this.getChildAt(0).getTop();var offset=childrenTop - _top22;if(offset < 0){this.offsetChildrenTopAndBottom(offset);}}}},{key:"pinToBottom",value:function pinToBottom(childrenBottom){var count=this.getChildCount();if(this.mFirstPosition + count == this.mItemCount){var bottom=this.getChildAt(count - 1).getBottom();var offset=childrenBottom - bottom;if(offset > 0){this.offsetChildrenTopAndBottom(offset);}}}},{key:"findMotionRow",value:function findMotionRow(y){var childCount=this.getChildCount();if(childCount > 0){var numColumns=this.mNumColumns;if(!this.mStackFromBottom){for(var i=0;i < childCount;i += numColumns) {if(y <= this.getChildAt(i).getBottom()){return this.mFirstPosition + i;}}}else {for(var i=childCount - 1;i >= 0;i -= numColumns) {if(y >= this.getChildAt(i).getTop()){return this.mFirstPosition + i;}}}}return GridView.INVALID_POSITION;}},{key:"fillSpecific",value:function fillSpecific(position,top){var numColumns=this.mNumColumns;var motionRowStart=undefined;var motionRowEnd=-1;if(!this.mStackFromBottom){motionRowStart = position - position % numColumns;}else {var invertedSelection=this.mItemCount - 1 - position;motionRowEnd = this.mItemCount - 1 - (invertedSelection - invertedSelection % numColumns);motionRowStart = Math.max(0,motionRowEnd - numColumns + 1);}var temp=this.makeRow(this.mStackFromBottom?motionRowEnd:motionRowStart,top,true);this.mFirstPosition = motionRowStart;var referenceView=this.mReferenceView;if(referenceView == null){return null;}var verticalSpacing=this.mVerticalSpacing;var above=undefined;var below=undefined;if(!this.mStackFromBottom){above = this.fillUp(motionRowStart - numColumns,referenceView.getTop() - verticalSpacing);this.adjustViewsUpOrDown();below = this.fillDown(motionRowStart + numColumns,referenceView.getBottom() + verticalSpacing);var childCount=this.getChildCount();if(childCount > 0){this.correctTooHigh(numColumns,verticalSpacing,childCount);}}else {below = this.fillDown(motionRowEnd + numColumns,referenceView.getBottom() + verticalSpacing);this.adjustViewsUpOrDown();above = this.fillUp(motionRowStart - 1,referenceView.getTop() - verticalSpacing);var childCount=this.getChildCount();if(childCount > 0){this.correctTooLow(numColumns,verticalSpacing,childCount);}}if(temp != null){return temp;}else if(above != null){return above;}else {return below;}}},{key:"correctTooHigh",value:function correctTooHigh(numColumns,verticalSpacing,childCount){var lastPosition=this.mFirstPosition + childCount - 1;if(lastPosition == this.mItemCount - 1 && childCount > 0){var lastChild=this.getChildAt(childCount - 1);var lastBottom=lastChild.getBottom();var end=this.mBottom - this.mTop - this.mListPadding.bottom;var bottomOffset=end - lastBottom;var firstChild=this.getChildAt(0);var firstTop=firstChild.getTop();if(bottomOffset > 0 && (this.mFirstPosition > 0 || firstTop < this.mListPadding.top)){if(this.mFirstPosition == 0){bottomOffset = Math.min(bottomOffset,this.mListPadding.top - firstTop);}this.offsetChildrenTopAndBottom(bottomOffset);if(this.mFirstPosition > 0){this.fillUp(this.mFirstPosition - (this.mStackFromBottom?1:numColumns),firstChild.getTop() - verticalSpacing);this.adjustViewsUpOrDown();}}}}},{key:"correctTooLow",value:function correctTooLow(numColumns,verticalSpacing,childCount){if(this.mFirstPosition == 0 && childCount > 0){var firstChild=this.getChildAt(0);var firstTop=firstChild.getTop();var start=this.mListPadding.top;var end=this.mBottom - this.mTop - this.mListPadding.bottom;var topOffset=firstTop - start;var lastChild=this.getChildAt(childCount - 1);var lastBottom=lastChild.getBottom();var lastPosition=this.mFirstPosition + childCount - 1;if(topOffset > 0 && (lastPosition < this.mItemCount - 1 || lastBottom > end)){if(lastPosition == this.mItemCount - 1){topOffset = Math.min(topOffset,lastBottom - end);}this.offsetChildrenTopAndBottom(-topOffset);if(lastPosition < this.mItemCount - 1){this.fillDown(lastPosition + (!this.mStackFromBottom?1:numColumns),lastChild.getBottom() + verticalSpacing);this.adjustViewsUpOrDown();}}}}},{key:"fillFromSelection",value:function fillFromSelection(selectedTop,childrenTop,childrenBottom){var fadingEdgeLength=this.getVerticalFadingEdgeLength();var selectedPosition=this.mSelectedPosition;var numColumns=this.mNumColumns;var verticalSpacing=this.mVerticalSpacing;var rowStart=undefined;var rowEnd=-1;if(!this.mStackFromBottom){rowStart = selectedPosition - selectedPosition % numColumns;}else {var invertedSelection=this.mItemCount - 1 - selectedPosition;rowEnd = this.mItemCount - 1 - (invertedSelection - invertedSelection % numColumns);rowStart = Math.max(0,rowEnd - numColumns + 1);}var sel=undefined;var referenceView=undefined;var topSelectionPixel=this.getTopSelectionPixel(childrenTop,fadingEdgeLength,rowStart);var bottomSelectionPixel=this.getBottomSelectionPixel(childrenBottom,fadingEdgeLength,numColumns,rowStart);sel = this.makeRow(this.mStackFromBottom?rowEnd:rowStart,selectedTop,true);this.mFirstPosition = rowStart;referenceView = this.mReferenceView;this.adjustForTopFadingEdge(referenceView,topSelectionPixel,bottomSelectionPixel);this.adjustForBottomFadingEdge(referenceView,topSelectionPixel,bottomSelectionPixel);if(!this.mStackFromBottom){this.fillUp(rowStart - numColumns,referenceView.getTop() - verticalSpacing);this.adjustViewsUpOrDown();this.fillDown(rowStart + numColumns,referenceView.getBottom() + verticalSpacing);}else {this.fillDown(rowEnd + numColumns,referenceView.getBottom() + verticalSpacing);this.adjustViewsUpOrDown();this.fillUp(rowStart - 1,referenceView.getTop() - verticalSpacing);}return sel;}},{key:"getBottomSelectionPixel",value:function getBottomSelectionPixel(childrenBottom,fadingEdgeLength,numColumns,rowStart){var bottomSelectionPixel=childrenBottom;if(rowStart + numColumns - 1 < this.mItemCount - 1){bottomSelectionPixel -= fadingEdgeLength;}return bottomSelectionPixel;}},{key:"getTopSelectionPixel",value:function getTopSelectionPixel(childrenTop,fadingEdgeLength,rowStart){var topSelectionPixel=childrenTop;if(rowStart > 0){topSelectionPixel += fadingEdgeLength;}return topSelectionPixel;}},{key:"adjustForBottomFadingEdge",value:function adjustForBottomFadingEdge(childInSelectedRow,topSelectionPixel,bottomSelectionPixel){if(childInSelectedRow.getBottom() > bottomSelectionPixel){var spaceAbove=childInSelectedRow.getTop() - topSelectionPixel;var spaceBelow=childInSelectedRow.getBottom() - bottomSelectionPixel;var offset=Math.min(spaceAbove,spaceBelow);this.offsetChildrenTopAndBottom(-offset);}}},{key:"adjustForTopFadingEdge",value:function adjustForTopFadingEdge(childInSelectedRow,topSelectionPixel,bottomSelectionPixel){if(childInSelectedRow.getTop() < topSelectionPixel){var spaceAbove=topSelectionPixel - childInSelectedRow.getTop();var spaceBelow=bottomSelectionPixel - childInSelectedRow.getBottom();var offset=Math.min(spaceAbove,spaceBelow);this.offsetChildrenTopAndBottom(offset);}}},{key:"smoothScrollToPosition",value:function smoothScrollToPosition(position){_get(Object.getPrototypeOf(GridView.prototype),"smoothScrollToPosition",this).call(this,position);}},{key:"smoothScrollByOffset",value:function smoothScrollByOffset(offset){_get(Object.getPrototypeOf(GridView.prototype),"smoothScrollByOffset",this).call(this,offset);}},{key:"moveSelection",value:function moveSelection(delta,childrenTop,childrenBottom){var fadingEdgeLength=this.getVerticalFadingEdgeLength();var selectedPosition=this.mSelectedPosition;var numColumns=this.mNumColumns;var verticalSpacing=this.mVerticalSpacing;var oldRowStart=undefined;var rowStart=undefined;var rowEnd=-1;if(!this.mStackFromBottom){oldRowStart = selectedPosition - delta - (selectedPosition - delta) % numColumns;rowStart = selectedPosition - selectedPosition % numColumns;}else {var invertedSelection=this.mItemCount - 1 - selectedPosition;rowEnd = this.mItemCount - 1 - (invertedSelection - invertedSelection % numColumns);rowStart = Math.max(0,rowEnd - numColumns + 1);invertedSelection = this.mItemCount - 1 - (selectedPosition - delta);oldRowStart = this.mItemCount - 1 - (invertedSelection - invertedSelection % numColumns);oldRowStart = Math.max(0,oldRowStart - numColumns + 1);}var rowDelta=rowStart - oldRowStart;var topSelectionPixel=this.getTopSelectionPixel(childrenTop,fadingEdgeLength,rowStart);var bottomSelectionPixel=this.getBottomSelectionPixel(childrenBottom,fadingEdgeLength,numColumns,rowStart);this.mFirstPosition = rowStart;var sel=undefined;var referenceView=undefined;if(rowDelta > 0){var oldBottom=this.mReferenceViewInSelectedRow == null?0:this.mReferenceViewInSelectedRow.getBottom();sel = this.makeRow(this.mStackFromBottom?rowEnd:rowStart,oldBottom + verticalSpacing,true);referenceView = this.mReferenceView;this.adjustForBottomFadingEdge(referenceView,topSelectionPixel,bottomSelectionPixel);}else if(rowDelta < 0){var oldTop=this.mReferenceViewInSelectedRow == null?0:this.mReferenceViewInSelectedRow.getTop();sel = this.makeRow(this.mStackFromBottom?rowEnd:rowStart,oldTop - verticalSpacing,false);referenceView = this.mReferenceView;this.adjustForTopFadingEdge(referenceView,topSelectionPixel,bottomSelectionPixel);}else {var oldTop=this.mReferenceViewInSelectedRow == null?0:this.mReferenceViewInSelectedRow.getTop();sel = this.makeRow(this.mStackFromBottom?rowEnd:rowStart,oldTop,true);referenceView = this.mReferenceView;}if(!this.mStackFromBottom){this.fillUp(rowStart - numColumns,referenceView.getTop() - verticalSpacing);this.adjustViewsUpOrDown();this.fillDown(rowStart + numColumns,referenceView.getBottom() + verticalSpacing);}else {this.fillDown(rowEnd + numColumns,referenceView.getBottom() + verticalSpacing);this.adjustViewsUpOrDown();this.fillUp(rowStart - 1,referenceView.getTop() - verticalSpacing);}return sel;}},{key:"determineColumns",value:function determineColumns(availableSpace){var requestedHorizontalSpacing=this.mRequestedHorizontalSpacing;var stretchMode=this.mStretchMode;var requestedColumnWidth=this.mRequestedColumnWidth;var didNotInitiallyFit=false;if(this.mRequestedNumColumns == GridView.AUTO_FIT){if(requestedColumnWidth > 0){this.mNumColumns = (availableSpace + requestedHorizontalSpacing) / (requestedColumnWidth + requestedHorizontalSpacing);}else {this.mNumColumns = 2;}}else {this.mNumColumns = this.mRequestedNumColumns;}if(this.mNumColumns <= 0){this.mNumColumns = 1;}switch(stretchMode){case GridView.NO_STRETCH:this.mColumnWidth = requestedColumnWidth;this.mHorizontalSpacing = requestedHorizontalSpacing;break;default:var spaceLeftOver=availableSpace - this.mNumColumns * requestedColumnWidth - (this.mNumColumns - 1) * requestedHorizontalSpacing;if(spaceLeftOver < 0){didNotInitiallyFit = true;}switch(stretchMode){case GridView.STRETCH_COLUMN_WIDTH:this.mColumnWidth = requestedColumnWidth + spaceLeftOver / this.mNumColumns;this.mHorizontalSpacing = requestedHorizontalSpacing;break;case GridView.STRETCH_SPACING:this.mColumnWidth = requestedColumnWidth;if(this.mNumColumns > 1){this.mHorizontalSpacing = requestedHorizontalSpacing + spaceLeftOver / (this.mNumColumns - 1);}else {this.mHorizontalSpacing = requestedHorizontalSpacing + spaceLeftOver;}break;case GridView.STRETCH_SPACING_UNIFORM:this.mColumnWidth = requestedColumnWidth;if(this.mNumColumns > 1){this.mHorizontalSpacing = requestedHorizontalSpacing + spaceLeftOver / (this.mNumColumns + 1);}else {this.mHorizontalSpacing = requestedHorizontalSpacing + spaceLeftOver;}break;}break;}return didNotInitiallyFit;}},{key:"onMeasure",value:function onMeasure(widthMeasureSpec,heightMeasureSpec){_get(Object.getPrototypeOf(GridView.prototype),"onMeasure",this).call(this,widthMeasureSpec,heightMeasureSpec);var widthMode=GridView.MeasureSpec.getMode(widthMeasureSpec);var heightMode=GridView.MeasureSpec.getMode(heightMeasureSpec);var widthSize=GridView.MeasureSpec.getSize(widthMeasureSpec);var heightSize=GridView.MeasureSpec.getSize(heightMeasureSpec);if(widthMode == GridView.MeasureSpec.UNSPECIFIED){if(this.mColumnWidth > 0){widthSize = this.mColumnWidth + this.mListPadding.left + this.mListPadding.right;}else {widthSize = this.mListPadding.left + this.mListPadding.right;}widthSize += this.getVerticalScrollbarWidth();}var childWidth=widthSize - this.mListPadding.left - this.mListPadding.right;var didNotInitiallyFit=this.determineColumns(childWidth);var childHeight=0;var childState=0;this.mItemCount = this.mAdapter == null?0:this.mAdapter.getCount();var count=this.mItemCount;if(count > 0){var child=this.obtainView(0,this.mIsScrap);var p=child.getLayoutParams();if(p == null){p = this.generateDefaultLayoutParams();child.setLayoutParams(p);}p.viewType = this.mAdapter.getItemViewType(0);p.forceAdd = true;var childHeightSpec=GridView.getChildMeasureSpec(GridView.MeasureSpec.makeMeasureSpec(0,GridView.MeasureSpec.UNSPECIFIED),0,p.height);var childWidthSpec=GridView.getChildMeasureSpec(GridView.MeasureSpec.makeMeasureSpec(this.mColumnWidth,GridView.MeasureSpec.EXACTLY),0,p.width);child.measure(childWidthSpec,childHeightSpec);childHeight = child.getMeasuredHeight();childState = GridView.combineMeasuredStates(childState,child.getMeasuredState());if(this.mRecycler.shouldRecycleViewType(p.viewType)){this.mRecycler.addScrapView(child,-1);}}if(heightMode == GridView.MeasureSpec.UNSPECIFIED){heightSize = this.mListPadding.top + this.mListPadding.bottom + childHeight + this.getVerticalFadingEdgeLength() * 2;}if(heightMode == GridView.MeasureSpec.AT_MOST){var ourSize=this.mListPadding.top + this.mListPadding.bottom;var numColumns=this.mNumColumns;for(var i=0;i < count;i += numColumns) {ourSize += childHeight;if(i + numColumns < count){ourSize += this.mVerticalSpacing;}if(ourSize >= heightSize){ourSize = heightSize;break;}}heightSize = ourSize;}if(widthMode == GridView.MeasureSpec.AT_MOST && this.mRequestedNumColumns != GridView.AUTO_FIT){var ourSize=this.mRequestedNumColumns * this.mColumnWidth + (this.mRequestedNumColumns - 1) * this.mHorizontalSpacing + this.mListPadding.left + this.mListPadding.right;if(ourSize > widthSize || didNotInitiallyFit){widthSize |= GridView.MEASURED_STATE_TOO_SMALL;}}this.setMeasuredDimension(widthSize,heightSize);this.mWidthMeasureSpec = widthMeasureSpec;}},{key:"layoutChildren",value:function layoutChildren(){var blockLayoutRequests=this.mBlockLayoutRequests;if(!blockLayoutRequests){this.mBlockLayoutRequests = true;}try{_get(Object.getPrototypeOf(GridView.prototype),"layoutChildren",this).call(this);this.invalidate();if(this.mAdapter == null){this.resetList();this.invokeOnItemScrollListener();return;}var childrenTop=this.mListPadding.top;var childrenBottom=this.mBottom - this.mTop - this.mListPadding.bottom;var childCount=this.getChildCount();var index=undefined;var delta=0;var sel=undefined;var oldSel=null;var oldFirst=null;var newSel=null;switch(this.mLayoutMode){case GridView.LAYOUT_SET_SELECTION:index = this.mNextSelectedPosition - this.mFirstPosition;if(index >= 0 && index < childCount){newSel = this.getChildAt(index);}break;case GridView.LAYOUT_FORCE_TOP:case GridView.LAYOUT_FORCE_BOTTOM:case GridView.LAYOUT_SPECIFIC:case GridView.LAYOUT_SYNC:break;case GridView.LAYOUT_MOVE_SELECTION:if(this.mNextSelectedPosition >= 0){delta = this.mNextSelectedPosition - this.mSelectedPosition;}break;default:index = this.mSelectedPosition - this.mFirstPosition;if(index >= 0 && index < childCount){oldSel = this.getChildAt(index);}oldFirst = this.getChildAt(0);}var dataChanged=this.mDataChanged;if(dataChanged){this.handleDataChanged();}if(this.mItemCount == 0){this.resetList();this.invokeOnItemScrollListener();return;}this.setSelectedPositionInt(this.mNextSelectedPosition);var firstPosition=this.mFirstPosition;var recycleBin=this.mRecycler;if(dataChanged){for(var i=0;i < childCount;i++) {recycleBin.addScrapView(this.getChildAt(i),firstPosition + i);}}else {recycleBin.fillActiveViews(childCount,firstPosition);}this.detachAllViewsFromParent();recycleBin.removeSkippedScrap();switch(this.mLayoutMode){case GridView.LAYOUT_SET_SELECTION:if(newSel != null){sel = this.fillFromSelection(newSel.getTop(),childrenTop,childrenBottom);}else {sel = this.fillSelection(childrenTop,childrenBottom);}break;case GridView.LAYOUT_FORCE_TOP:this.mFirstPosition = 0;sel = this.fillFromTop(childrenTop);this.adjustViewsUpOrDown();break;case GridView.LAYOUT_FORCE_BOTTOM:sel = this.fillUp(this.mItemCount - 1,childrenBottom);this.adjustViewsUpOrDown();break;case GridView.LAYOUT_SPECIFIC:sel = this.fillSpecific(this.mSelectedPosition,this.mSpecificTop);break;case GridView.LAYOUT_SYNC:sel = this.fillSpecific(this.mSyncPosition,this.mSpecificTop);break;case GridView.LAYOUT_MOVE_SELECTION:sel = this.moveSelection(delta,childrenTop,childrenBottom);break;default:if(childCount == 0){if(!this.mStackFromBottom){this.setSelectedPositionInt(this.mAdapter == null || this.isInTouchMode()?GridView.INVALID_POSITION:0);sel = this.fillFromTop(childrenTop);}else {var last=this.mItemCount - 1;this.setSelectedPositionInt(this.mAdapter == null || this.isInTouchMode()?GridView.INVALID_POSITION:last);sel = this.fillFromBottom(last,childrenBottom);}}else {if(this.mSelectedPosition >= 0 && this.mSelectedPosition < this.mItemCount){sel = this.fillSpecific(this.mSelectedPosition,oldSel == null?childrenTop:oldSel.getTop());}else if(this.mFirstPosition < this.mItemCount){sel = this.fillSpecific(this.mFirstPosition,oldFirst == null?childrenTop:oldFirst.getTop());}else {sel = this.fillSpecific(0,childrenTop);}}break;}recycleBin.scrapActiveViews();if(sel != null){this.positionSelector(GridView.INVALID_POSITION,sel);this.mSelectedTop = sel.getTop();}else if(this.mTouchMode > GridView.TOUCH_MODE_DOWN && this.mTouchMode < GridView.TOUCH_MODE_SCROLL){var child=this.getChildAt(this.mMotionPosition - this.mFirstPosition);if(child != null)this.positionSelector(this.mMotionPosition,child);}else {this.mSelectedTop = 0;this.mSelectorRect.setEmpty();}this.mLayoutMode = GridView.LAYOUT_NORMAL;this.mDataChanged = false;if(this.mPositionScrollAfterLayout != null){this.post(this.mPositionScrollAfterLayout);this.mPositionScrollAfterLayout = null;}this.mNeedSync = false;this.setNextSelectedPositionInt(this.mSelectedPosition);this.updateScrollIndicators();if(this.mItemCount > 0){this.checkSelectionChanged();}this.invokeOnItemScrollListener();}finally {if(!blockLayoutRequests){this.mBlockLayoutRequests = false;}}}},{key:"makeAndAddView",value:function makeAndAddView(position,y,flow,childrenLeft,selected,where){var child=undefined;if(!this.mDataChanged){child = this.mRecycler.getActiveView(position);if(child != null){this.setupChild(child,position,y,flow,childrenLeft,selected,true,where);return child;}}child = this.obtainView(position,this.mIsScrap);this.setupChild(child,position,y,flow,childrenLeft,selected,this.mIsScrap[0],where);return child;}},{key:"setupChild",value:function setupChild(child,position,y,flow,childrenLeft,selected,recycled,where){Trace.traceBegin(Trace.TRACE_TAG_VIEW,"setupGridItem");var isSelected=selected && this.shouldShowSelector();var updateChildSelected=isSelected != child.isSelected();var mode=this.mTouchMode;var isPressed=mode > GridView.TOUCH_MODE_DOWN && mode < GridView.TOUCH_MODE_SCROLL && this.mMotionPosition == position;var updateChildPressed=isPressed != child.isPressed();var needToMeasure=!recycled || updateChildSelected || child.isLayoutRequested();var p=child.getLayoutParams();if(p == null){p = this.generateDefaultLayoutParams();}p.viewType = this.mAdapter.getItemViewType(position);if(recycled && !p.forceAdd){this.attachViewToParent(child,where,p);}else {p.forceAdd = false;this.addViewInLayout(child,where,p,true);}if(updateChildSelected){child.setSelected(isSelected);if(isSelected){this.requestFocus();}}if(updateChildPressed){child.setPressed(isPressed);}if(this.mChoiceMode != GridView.CHOICE_MODE_NONE && this.mCheckStates != null){if(child['setChecked']){child.setChecked(this.mCheckStates.get(position));}else {child.setActivated(this.mCheckStates.get(position));}}if(needToMeasure){var childHeightSpec=ViewGroup.getChildMeasureSpec(GridView.MeasureSpec.makeMeasureSpec(0,GridView.MeasureSpec.UNSPECIFIED),0,p.height);var childWidthSpec=ViewGroup.getChildMeasureSpec(GridView.MeasureSpec.makeMeasureSpec(this.mColumnWidth,GridView.MeasureSpec.EXACTLY),0,p.width);child.measure(childWidthSpec,childHeightSpec);}else {this.cleanupLayoutState(child);}var w=child.getMeasuredWidth();var h=child.getMeasuredHeight();var childLeft=undefined;var childTop=flow?y:y - h;var absoluteGravity=this.mGravity;switch(absoluteGravity & Gravity.HORIZONTAL_GRAVITY_MASK){case Gravity.LEFT:childLeft = childrenLeft;break;case Gravity.CENTER_HORIZONTAL:childLeft = childrenLeft + (this.mColumnWidth - w) / 2;break;case Gravity.RIGHT:childLeft = childrenLeft + this.mColumnWidth - w;break;default:childLeft = childrenLeft;break;}if(needToMeasure){var childRight=childLeft + w;var childBottom=childTop + h;child.layout(childLeft,childTop,childRight,childBottom);}else {child.offsetLeftAndRight(childLeft - child.getLeft());child.offsetTopAndBottom(childTop - child.getTop());}if(this.mCachingStarted){child.setDrawingCacheEnabled(true);}if(recycled && child.getLayoutParams().scrappedFromPosition != position){child.jumpDrawablesToCurrentState();}Trace.traceEnd(Trace.TRACE_TAG_VIEW);}},{key:"setSelection",value:function setSelection(position){if(!this.isInTouchMode()){this.setNextSelectedPositionInt(position);}else {this.mResurrectToPosition = position;}this.mLayoutMode = GridView.LAYOUT_SET_SELECTION;if(this.mPositionScroller != null){this.mPositionScroller.stop();}this.requestLayout();}},{key:"setSelectionInt",value:function setSelectionInt(position){var previousSelectedPosition=this.mNextSelectedPosition;if(this.mPositionScroller != null){this.mPositionScroller.stop();}this.setNextSelectedPositionInt(position);this.layoutChildren();var next=this.mStackFromBottom?this.mItemCount - 1 - this.mNextSelectedPosition:this.mNextSelectedPosition;var previous=this.mStackFromBottom?this.mItemCount - 1 - previousSelectedPosition:previousSelectedPosition;var nextRow=next / this.mNumColumns;var previousRow=previous / this.mNumColumns;if(nextRow != previousRow){this.awakenScrollBars();}}},{key:"onKeyDown",value:function onKeyDown(keyCode,event){return this.commonKey(keyCode,1,event);}},{key:"onKeyMultiple",value:function onKeyMultiple(keyCode,repeatCount,event){return this.commonKey(keyCode,repeatCount,event);}},{key:"onKeyUp",value:function onKeyUp(keyCode,event){return this.commonKey(keyCode,1,event);}},{key:"commonKey",value:function commonKey(keyCode,count,event){if(this.mAdapter == null){return false;}if(this.mDataChanged){this.layoutChildren();}var handled=false;var action=event.getAction();if(action != KeyEvent.ACTION_UP){switch(keyCode){case KeyEvent.KEYCODE_DPAD_LEFT:if(event.hasNoModifiers()){handled = this.resurrectSelectionIfNeeded() || this.arrowScroll(GridView.FOCUS_LEFT);}break;case KeyEvent.KEYCODE_DPAD_RIGHT:if(event.hasNoModifiers()){handled = this.resurrectSelectionIfNeeded() || this.arrowScroll(GridView.FOCUS_RIGHT);}break;case KeyEvent.KEYCODE_DPAD_UP:if(event.hasNoModifiers()){handled = this.resurrectSelectionIfNeeded() || this.arrowScroll(GridView.FOCUS_UP);}else if(event.hasModifiers(KeyEvent.META_ALT_ON)){handled = this.resurrectSelectionIfNeeded() || this.fullScroll(GridView.FOCUS_UP);}break;case KeyEvent.KEYCODE_DPAD_DOWN:if(event.hasNoModifiers()){handled = this.resurrectSelectionIfNeeded() || this.arrowScroll(GridView.FOCUS_DOWN);}else if(event.hasModifiers(KeyEvent.META_ALT_ON)){handled = this.resurrectSelectionIfNeeded() || this.fullScroll(GridView.FOCUS_DOWN);}break;case KeyEvent.KEYCODE_DPAD_CENTER:case KeyEvent.KEYCODE_ENTER:if(event.hasNoModifiers()){handled = this.resurrectSelectionIfNeeded();if(!handled && event.getRepeatCount() == 0 && this.getChildCount() > 0){this.keyPressed();handled = true;}}break;case KeyEvent.KEYCODE_SPACE:if(event.hasNoModifiers()){handled = this.resurrectSelectionIfNeeded() || this.pageScroll(GridView.FOCUS_DOWN);}else if(event.hasModifiers(KeyEvent.META_SHIFT_ON)){handled = this.resurrectSelectionIfNeeded() || this.pageScroll(GridView.FOCUS_UP);}break;case KeyEvent.KEYCODE_PAGE_UP:if(event.hasNoModifiers()){handled = this.resurrectSelectionIfNeeded() || this.pageScroll(GridView.FOCUS_UP);}else if(event.hasModifiers(KeyEvent.META_ALT_ON)){handled = this.resurrectSelectionIfNeeded() || this.fullScroll(GridView.FOCUS_UP);}break;case KeyEvent.KEYCODE_PAGE_DOWN:if(event.hasNoModifiers()){handled = this.resurrectSelectionIfNeeded() || this.pageScroll(GridView.FOCUS_DOWN);}else if(event.hasModifiers(KeyEvent.META_ALT_ON)){handled = this.resurrectSelectionIfNeeded() || this.fullScroll(GridView.FOCUS_DOWN);}break;case KeyEvent.KEYCODE_MOVE_HOME:if(event.hasNoModifiers()){handled = this.resurrectSelectionIfNeeded() || this.fullScroll(GridView.FOCUS_UP);}break;case KeyEvent.KEYCODE_MOVE_END:if(event.hasNoModifiers()){handled = this.resurrectSelectionIfNeeded() || this.fullScroll(GridView.FOCUS_DOWN);}break;case KeyEvent.KEYCODE_TAB:if(false){if(event.hasNoModifiers()){handled = this.resurrectSelectionIfNeeded() || this.sequenceScroll(GridView.FOCUS_FORWARD);}else if(event.hasModifiers(KeyEvent.META_SHIFT_ON)){handled = this.resurrectSelectionIfNeeded() || this.sequenceScroll(GridView.FOCUS_BACKWARD);}}break;}}if(handled){return true;}switch(action){case KeyEvent.ACTION_DOWN:return _get(Object.getPrototypeOf(GridView.prototype),"onKeyDown",this).call(this,keyCode,event);case KeyEvent.ACTION_UP:return _get(Object.getPrototypeOf(GridView.prototype),"onKeyUp",this).call(this,keyCode,event);default:return false;}}},{key:"pageScroll",value:function pageScroll(direction){var nextPage=-1;if(direction == GridView.FOCUS_UP){nextPage = Math.max(0,this.mSelectedPosition - this.getChildCount());}else if(direction == GridView.FOCUS_DOWN){nextPage = Math.min(this.mItemCount - 1,this.mSelectedPosition + this.getChildCount());}if(nextPage >= 0){this.setSelectionInt(nextPage);this.invokeOnItemScrollListener();this.awakenScrollBars();return true;}return false;}},{key:"fullScroll",value:function fullScroll(direction){var moved=false;if(direction == GridView.FOCUS_UP){this.mLayoutMode = GridView.LAYOUT_SET_SELECTION;this.setSelectionInt(0);this.invokeOnItemScrollListener();moved = true;}else if(direction == GridView.FOCUS_DOWN){this.mLayoutMode = GridView.LAYOUT_SET_SELECTION;this.setSelectionInt(this.mItemCount - 1);this.invokeOnItemScrollListener();moved = true;}if(moved){this.awakenScrollBars();}return moved;}},{key:"arrowScroll",value:function arrowScroll(direction){var selectedPosition=this.mSelectedPosition;var numColumns=this.mNumColumns;var startOfRowPos=undefined;var endOfRowPos=undefined;var moved=false;if(!this.mStackFromBottom){startOfRowPos = Math.floor(selectedPosition / numColumns) * numColumns;endOfRowPos = Math.min(startOfRowPos + numColumns - 1,this.mItemCount - 1);}else {var invertedSelection=this.mItemCount - 1 - selectedPosition;endOfRowPos = this.mItemCount - 1 - invertedSelection / numColumns * numColumns;startOfRowPos = Math.max(0,endOfRowPos - numColumns + 1);}switch(direction){case GridView.FOCUS_UP:if(startOfRowPos > 0){this.mLayoutMode = GridView.LAYOUT_MOVE_SELECTION;this.setSelectionInt(Math.max(0,selectedPosition - numColumns));moved = true;}break;case GridView.FOCUS_DOWN:if(endOfRowPos < this.mItemCount - 1){this.mLayoutMode = GridView.LAYOUT_MOVE_SELECTION;this.setSelectionInt(Math.min(selectedPosition + numColumns,this.mItemCount - 1));moved = true;}break;case GridView.FOCUS_LEFT:if(selectedPosition > startOfRowPos){this.mLayoutMode = GridView.LAYOUT_MOVE_SELECTION;this.setSelectionInt(Math.max(0,selectedPosition - 1));moved = true;}break;case GridView.FOCUS_RIGHT:if(selectedPosition < endOfRowPos){this.mLayoutMode = GridView.LAYOUT_MOVE_SELECTION;this.setSelectionInt(Math.min(selectedPosition + 1,this.mItemCount - 1));moved = true;}break;}if(moved){this.playSoundEffect(SoundEffectConstants.getContantForFocusDirection(direction));this.invokeOnItemScrollListener();}if(moved){this.awakenScrollBars();}return moved;}},{key:"sequenceScroll",value:function sequenceScroll(direction){var selectedPosition=this.mSelectedPosition;var numColumns=this.mNumColumns;var count=this.mItemCount;var startOfRow=undefined;var endOfRow=undefined;if(!this.mStackFromBottom){startOfRow = selectedPosition / numColumns * numColumns;endOfRow = Math.min(startOfRow + numColumns - 1,count - 1);}else {var invertedSelection=count - 1 - selectedPosition;endOfRow = count - 1 - invertedSelection / numColumns * numColumns;startOfRow = Math.max(0,endOfRow - numColumns + 1);}var moved=false;var showScroll=false;switch(direction){case GridView.FOCUS_FORWARD:if(selectedPosition < count - 1){this.mLayoutMode = GridView.LAYOUT_MOVE_SELECTION;this.setSelectionInt(selectedPosition + 1);moved = true;showScroll = selectedPosition == endOfRow;}break;case GridView.FOCUS_BACKWARD:if(selectedPosition > 0){this.mLayoutMode = GridView.LAYOUT_MOVE_SELECTION;this.setSelectionInt(selectedPosition - 1);moved = true;showScroll = selectedPosition == startOfRow;}break;}if(moved){this.playSoundEffect(SoundEffectConstants.getContantForFocusDirection(direction));this.invokeOnItemScrollListener();}if(showScroll){this.awakenScrollBars();}return moved;}},{key:"onFocusChanged",value:function onFocusChanged(gainFocus,direction,previouslyFocusedRect){_get(Object.getPrototypeOf(GridView.prototype),"onFocusChanged",this).call(this,gainFocus,direction,previouslyFocusedRect);var closestChildIndex=-1;if(gainFocus && previouslyFocusedRect != null){previouslyFocusedRect.offset(this.mScrollX,this.mScrollY);var otherRect=this.mTempRect;var minDistance=Integer.MAX_VALUE;var childCount=this.getChildCount();for(var i=0;i < childCount;i++) {if(!this.isCandidateSelection(i,direction)){continue;}var other=this.getChildAt(i);other.getDrawingRect(otherRect);this.offsetDescendantRectToMyCoords(other,otherRect);var distance=GridView.getDistance(previouslyFocusedRect,otherRect,direction);if(distance < minDistance){minDistance = distance;closestChildIndex = i;}}}if(closestChildIndex >= 0){this.setSelection(closestChildIndex + this.mFirstPosition);}else {this.requestLayout();}}},{key:"isCandidateSelection",value:function isCandidateSelection(childIndex,direction){var count=this.getChildCount();var invertedIndex=count - 1 - childIndex;var rowStart=undefined;var rowEnd=undefined;if(!this.mStackFromBottom){rowStart = childIndex - childIndex % this.mNumColumns;rowEnd = Math.max(rowStart + this.mNumColumns - 1,count);}else {rowEnd = count - 1 - (invertedIndex - invertedIndex % this.mNumColumns);rowStart = Math.max(0,rowEnd - this.mNumColumns + 1);}switch(direction){case View.FOCUS_RIGHT:return childIndex == rowStart;case View.FOCUS_DOWN:return rowStart == 0;case View.FOCUS_LEFT:return childIndex == rowEnd;case View.FOCUS_UP:return rowEnd == count - 1;case View.FOCUS_FORWARD:return childIndex == rowStart && rowStart == 0;case View.FOCUS_BACKWARD:return childIndex == rowEnd && rowEnd == count - 1;default:throw Error("new IllegalArgumentException(\"direction must be one of \" + \"{FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT, \" + \"FOCUS_FORWARD, FOCUS_BACKWARD}.\")");}}},{key:"setGravity",value:function setGravity(gravity){if(this.mGravity != gravity){this.mGravity = gravity;this.requestLayoutIfNecessary();}}},{key:"getGravity",value:function getGravity(){return this.mGravity;}},{key:"setHorizontalSpacing",value:function setHorizontalSpacing(horizontalSpacing){if(horizontalSpacing != this.mRequestedHorizontalSpacing){this.mRequestedHorizontalSpacing = horizontalSpacing;this.requestLayoutIfNecessary();}}},{key:"getHorizontalSpacing",value:function getHorizontalSpacing(){return this.mHorizontalSpacing;}},{key:"getRequestedHorizontalSpacing",value:function getRequestedHorizontalSpacing(){return this.mRequestedHorizontalSpacing;}},{key:"setVerticalSpacing",value:function setVerticalSpacing(verticalSpacing){if(verticalSpacing != this.mVerticalSpacing){this.mVerticalSpacing = verticalSpacing;this.requestLayoutIfNecessary();}}},{key:"getVerticalSpacing",value:function getVerticalSpacing(){return this.mVerticalSpacing;}},{key:"setStretchMode",value:function setStretchMode(stretchMode){if(stretchMode != this.mStretchMode){this.mStretchMode = stretchMode;this.requestLayoutIfNecessary();}}},{key:"getStretchMode",value:function getStretchMode(){return this.mStretchMode;}},{key:"setColumnWidth",value:function setColumnWidth(columnWidth){if(columnWidth != this.mRequestedColumnWidth){this.mRequestedColumnWidth = columnWidth;this.requestLayoutIfNecessary();}}},{key:"getColumnWidth",value:function getColumnWidth(){return this.mColumnWidth;}},{key:"getRequestedColumnWidth",value:function getRequestedColumnWidth(){return this.mRequestedColumnWidth;}},{key:"setNumColumns",value:function setNumColumns(numColumns){if(numColumns != this.mRequestedNumColumns){this.mRequestedNumColumns = numColumns;this.requestLayoutIfNecessary();}}},{key:"getNumColumns",value:function getNumColumns(){return this.mNumColumns;}},{key:"adjustViewsUpOrDown",value:function adjustViewsUpOrDown(){var childCount=this.getChildCount();if(childCount > 0){var delta=undefined;var child=undefined;if(!this.mStackFromBottom){child = this.getChildAt(0);delta = child.getTop() - this.mListPadding.top;if(this.mFirstPosition != 0){delta -= this.mVerticalSpacing;}if(delta < 0){delta = 0;}}else {child = this.getChildAt(childCount - 1);delta = child.getBottom() - (this.getHeight() - this.mListPadding.bottom);if(this.mFirstPosition + childCount < this.mItemCount){delta += this.mVerticalSpacing;}if(delta > 0){delta = 0;}}if(delta != 0){this.offsetChildrenTopAndBottom(-delta);}}}},{key:"computeVerticalScrollExtent",value:function computeVerticalScrollExtent(){var count=this.getChildCount();if(count > 0){var numColumns=this.mNumColumns;var rowCount=(count + numColumns - 1) / numColumns;var extent=rowCount * 100;var view=this.getChildAt(0);var _top23=view.getTop();var height=view.getHeight();if(height > 0){extent += _top23 * 100 / height;}view = this.getChildAt(count - 1);var bottom=view.getBottom();height = view.getHeight();if(height > 0){extent -= (bottom - this.getHeight()) * 100 / height;}return extent;}return 0;}},{key:"computeVerticalScrollOffset",value:function computeVerticalScrollOffset(){if(this.mFirstPosition >= 0 && this.getChildCount() > 0){var view=this.getChildAt(0);var _top24=view.getTop();var height=view.getHeight();if(height > 0){var numColumns=this.mNumColumns;var rowCount=(this.mItemCount + numColumns - 1) / numColumns;var oddItemsOnFirstRow=this.isStackFromBottom()?rowCount * numColumns - this.mItemCount:0;var whichRow=(this.mFirstPosition + oddItemsOnFirstRow) / numColumns;return Math.max(whichRow * 100 - _top24 * 100 / height + Math.floor(this.mScrollY / this.getHeight() * rowCount * 100),0);}}return 0;}},{key:"computeVerticalScrollRange",value:function computeVerticalScrollRange(){var numColumns=this.mNumColumns;var rowCount=(this.mItemCount + numColumns - 1) / numColumns;var result=Math.max(rowCount * 100,0);if(this.mScrollY != 0){result += Math.abs(Math.floor(this.mScrollY / this.getHeight() * rowCount * 100));}return result;}}]);return GridView;})(AbsListView);GridView.NO_STRETCH = 0;GridView.STRETCH_SPACING = 1;GridView.STRETCH_COLUMN_WIDTH = 2;GridView.STRETCH_SPACING_UNIFORM = 3;GridView.AUTO_FIT = -1;widget.GridView = GridView;})(widget = android.widget || (android.widget = {}));})(android || (android = {})); /*
 * Copyright (C) 2009 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ ///<reference path="../../android/graphics/Canvas.ts"/>
///<reference path="../../android/graphics/Rect.ts"/>
///<reference path="../../android/util/Log.ts"/>
///<reference path="../../android/view/FocusFinder.ts"/>
///<reference path="../../android/view/KeyEvent.ts"/>
///<reference path="../../android/view/MotionEvent.ts"/>
///<reference path="../../android/view/VelocityTracker.ts"/>
///<reference path="../../android/view/View.ts"/>
///<reference path="../../android/view/ViewConfiguration.ts"/>
///<reference path="../../android/view/ViewGroup.ts"/>
///<reference path="../../android/view/ViewParent.ts"/>
///<reference path="../../android/view/animation/AnimationUtils.ts"/>
///<reference path="../../java/util/List.ts"/>
///<reference path="../../java/lang/Integer.ts"/>
///<reference path="../../java/lang/System.ts"/>
///<reference path="../../android/widget/FrameLayout.ts"/>
///<reference path="../../android/widget/LinearLayout.ts"/>
///<reference path="../../android/widget/ListView.ts"/>
///<reference path="../../android/widget/OverScroller.ts"/>
///<reference path="../../android/widget/ScrollView.ts"/>
///<reference path="../../android/widget/TextView.ts"/>
var android;(function(android){var widget;(function(widget){var Rect=android.graphics.Rect;var Log=android.util.Log;var FocusFinder=android.view.FocusFinder;var KeyEvent=android.view.KeyEvent;var MotionEvent=android.view.MotionEvent;var VelocityTracker=android.view.VelocityTracker;var View=android.view.View;var ViewConfiguration=android.view.ViewConfiguration;var ViewGroup=android.view.ViewGroup;var AnimationUtils=android.view.animation.AnimationUtils;var FrameLayout=android.widget.FrameLayout;var OverScroller=android.widget.OverScroller;var ScrollView=android.widget.ScrollView;var HorizontalScrollView=(function(_FrameLayout){_inherits(HorizontalScrollView,_FrameLayout);function HorizontalScrollView(bindElement,rootElement){var _this32=this;_classCallCheck(this,HorizontalScrollView);_get(Object.getPrototypeOf(HorizontalScrollView.prototype),"constructor",this).call(this,bindElement,rootElement);this.mLastScroll = 0;this.mTempRect = new Rect();this.mLastMotionX = 0;this.mIsLayoutDirty = true;this.mChildToScrollTo = null;this.mIsBeingDragged = false;this.mSmoothScrollingEnabled = true;this.mMinimumVelocity = 0;this.mMaximumVelocity = 0;this.mOverscrollDistance = 0;this._mOverflingDistance = 0;this.mActivePointerId = HorizontalScrollView.INVALID_POINTER;this.initScrollView();this._attrBinder.addAttr('fillViewport',function(value){_this32.setFillViewport(_this32._attrBinder.parseBoolean(value));});}_createClass(HorizontalScrollView,[{key:"getLeftFadingEdgeStrength",value:function getLeftFadingEdgeStrength(){if(this.getChildCount() == 0){return 0.0;}var length=this.getHorizontalFadingEdgeLength();if(this.mScrollX < length){return this.mScrollX / length;}return 1.0;}},{key:"getRightFadingEdgeStrength",value:function getRightFadingEdgeStrength(){if(this.getChildCount() == 0){return 0.0;}var length=this.getHorizontalFadingEdgeLength();var rightEdge=this.getWidth() - this.mPaddingRight;var span=this.getChildAt(0).getRight() - this.mScrollX - rightEdge;if(span < length){return span / length;}return 1.0;}},{key:"getMaxScrollAmount",value:function getMaxScrollAmount(){return Math.floor(HorizontalScrollView.MAX_SCROLL_FACTOR * (this.mRight - this.mLeft));}},{key:"initScrollView",value:function initScrollView(){this.mScroller = new OverScroller();this.setFocusable(true);this.setDescendantFocusability(HorizontalScrollView.FOCUS_AFTER_DESCENDANTS);this.setWillNotDraw(false);var configuration=ViewConfiguration.get();this.mTouchSlop = configuration.getScaledTouchSlop();this.mMinimumVelocity = configuration.getScaledMinimumFlingVelocity();this.mMaximumVelocity = configuration.getScaledMaximumFlingVelocity();this.mOverscrollDistance = configuration.getScaledOverscrollDistance();this._mOverflingDistance = configuration.getScaledOverflingDistance();this.initScrollCache();this.setHorizontalScrollBarEnabled(true);}},{key:"addView",value:function addView(){if(this.getChildCount() > 0){throw new Error("ScrollView can host only one direct child");}for(var _len37=arguments.length,args=Array(_len37),_key37=0;_key37 < _len37;_key37++) {args[_key37] = arguments[_key37];}return _get(Object.getPrototypeOf(HorizontalScrollView.prototype),"addView",this).apply(this,args);}},{key:"canScroll",value:function canScroll(){var child=this.getChildAt(0);if(child != null){var childWidth=child.getWidth();return this.getWidth() < childWidth + this.mPaddingLeft + this.mPaddingRight;}return false;}},{key:"isFillViewport",value:function isFillViewport(){return this.mFillViewport;}},{key:"setFillViewport",value:function setFillViewport(fillViewport){if(fillViewport != this.mFillViewport){this.mFillViewport = fillViewport;this.requestLayout();}}},{key:"isSmoothScrollingEnabled",value:function isSmoothScrollingEnabled(){return this.mSmoothScrollingEnabled;}},{key:"setSmoothScrollingEnabled",value:function setSmoothScrollingEnabled(smoothScrollingEnabled){this.mSmoothScrollingEnabled = smoothScrollingEnabled;}},{key:"onMeasure",value:function onMeasure(widthMeasureSpec,heightMeasureSpec){_get(Object.getPrototypeOf(HorizontalScrollView.prototype),"onMeasure",this).call(this,widthMeasureSpec,heightMeasureSpec);if(!this.mFillViewport){return;}var widthMode=HorizontalScrollView.MeasureSpec.getMode(widthMeasureSpec);if(widthMode == HorizontalScrollView.MeasureSpec.UNSPECIFIED){return;}if(this.getChildCount() > 0){var child=this.getChildAt(0);var width=this.getMeasuredWidth();if(child.getMeasuredWidth() < width){var lp=child.getLayoutParams();var childHeightMeasureSpec=HorizontalScrollView.getChildMeasureSpec(heightMeasureSpec,this.mPaddingTop + this.mPaddingBottom,lp.height);width -= this.mPaddingLeft;width -= this.mPaddingRight;var childWidthMeasureSpec=HorizontalScrollView.MeasureSpec.makeMeasureSpec(width,HorizontalScrollView.MeasureSpec.EXACTLY);child.measure(childWidthMeasureSpec,childHeightMeasureSpec);}}}},{key:"dispatchKeyEvent",value:function dispatchKeyEvent(event){return _get(Object.getPrototypeOf(HorizontalScrollView.prototype),"dispatchKeyEvent",this).call(this,event) || this.executeKeyEvent(event);}},{key:"executeKeyEvent",value:function executeKeyEvent(event){this.mTempRect.setEmpty();if(!this.canScroll()){if(this.isFocused()){var currentFocused=this.findFocus();if(currentFocused == this)currentFocused = null;var nextFocused=FocusFinder.getInstance().findNextFocus(this,currentFocused,View.FOCUS_RIGHT);return nextFocused != null && nextFocused != this && nextFocused.requestFocus(View.FOCUS_RIGHT);}return false;}var handled=false;if(event.getAction() == KeyEvent.ACTION_DOWN){switch(event.getKeyCode()){case KeyEvent.KEYCODE_DPAD_LEFT:if(!event.isAltPressed()){handled = this.arrowScroll(View.FOCUS_LEFT);}else {handled = this.fullScroll(View.FOCUS_LEFT);}break;case KeyEvent.KEYCODE_DPAD_RIGHT:if(!event.isAltPressed()){handled = this.arrowScroll(View.FOCUS_RIGHT);}else {handled = this.fullScroll(View.FOCUS_RIGHT);}break;case KeyEvent.KEYCODE_SPACE:this.pageScroll(event.isShiftPressed()?View.FOCUS_LEFT:View.FOCUS_RIGHT);break;}}return handled;}},{key:"inChild",value:function inChild(x,y){if(this.getChildCount() > 0){var _scrollX6=this.mScrollX;var child=this.getChildAt(0);return !(y < child.getTop() || y >= child.getBottom() || x < child.getLeft() - _scrollX6 || x >= child.getRight() - _scrollX6);}return false;}},{key:"initOrResetVelocityTracker",value:function initOrResetVelocityTracker(){if(this.mVelocityTracker == null){this.mVelocityTracker = VelocityTracker.obtain();}else {this.mVelocityTracker.clear();}}},{key:"initVelocityTrackerIfNotExists",value:function initVelocityTrackerIfNotExists(){if(this.mVelocityTracker == null){this.mVelocityTracker = VelocityTracker.obtain();}}},{key:"recycleVelocityTracker",value:function recycleVelocityTracker(){if(this.mVelocityTracker != null){this.mVelocityTracker.recycle();this.mVelocityTracker = null;}}},{key:"requestDisallowInterceptTouchEvent",value:function requestDisallowInterceptTouchEvent(disallowIntercept){if(disallowIntercept){this.recycleVelocityTracker();}_get(Object.getPrototypeOf(HorizontalScrollView.prototype),"requestDisallowInterceptTouchEvent",this).call(this,disallowIntercept);}},{key:"onInterceptTouchEvent",value:function onInterceptTouchEvent(ev){var action=ev.getAction();if(action == MotionEvent.ACTION_MOVE && this.mIsBeingDragged){return true;}switch(action & MotionEvent.ACTION_MASK){case MotionEvent.ACTION_MOVE:{var activePointerId=this.mActivePointerId;if(activePointerId == HorizontalScrollView.INVALID_POINTER){break;}var pointerIndex=ev.findPointerIndex(activePointerId);if(pointerIndex == -1){Log.e(HorizontalScrollView.TAG,"Invalid pointerId=" + activePointerId + " in onInterceptTouchEvent");break;}var x=Math.floor(ev.getX(pointerIndex));var xDiff=Math.floor(Math.abs(x - this.mLastMotionX));if(xDiff > this.mTouchSlop){this.mIsBeingDragged = true;this.mLastMotionX = x;this.initVelocityTrackerIfNotExists();this.mVelocityTracker.addMovement(ev);if(this.mParent != null)this.mParent.requestDisallowInterceptTouchEvent(true);}break;}case MotionEvent.ACTION_DOWN:{var x=Math.floor(ev.getX());if(!this.inChild(Math.floor(x),Math.floor(ev.getY()))){this.mIsBeingDragged = false;this.recycleVelocityTracker();break;}this.mLastMotionX = x;this.mActivePointerId = ev.getPointerId(0);this.initOrResetVelocityTracker();this.mVelocityTracker.addMovement(ev);this.mIsBeingDragged = !this.mScroller.isFinished();break;}case MotionEvent.ACTION_CANCEL:case MotionEvent.ACTION_UP:this.mIsBeingDragged = false;this.mActivePointerId = HorizontalScrollView.INVALID_POINTER;if(this.mScroller.springBack(this.mScrollX,this.mScrollY,0,this.getScrollRange(),0,0)){this.postInvalidateOnAnimation();}break;case MotionEvent.ACTION_POINTER_DOWN:{var index=ev.getActionIndex();this.mLastMotionX = Math.floor(ev.getX(index));this.mActivePointerId = ev.getPointerId(index);break;}case MotionEvent.ACTION_POINTER_UP:this.onSecondaryPointerUp(ev);this.mLastMotionX = Math.floor(ev.getX(ev.findPointerIndex(this.mActivePointerId)));break;}return this.mIsBeingDragged;}},{key:"onTouchEvent",value:function onTouchEvent(ev){this.initVelocityTrackerIfNotExists();this.mVelocityTracker.addMovement(ev);var action=ev.getAction();switch(action & MotionEvent.ACTION_MASK){case MotionEvent.ACTION_DOWN:{if(this.getChildCount() == 0){return false;}if(this.mIsBeingDragged = !this.mScroller.isFinished()){var _parent10=this.getParent();if(_parent10 != null){_parent10.requestDisallowInterceptTouchEvent(true);}}if(!this.mScroller.isFinished()){this.mScroller.abortAnimation();}this.mLastMotionX = Math.floor(ev.getX());this.mActivePointerId = ev.getPointerId(0);break;}case MotionEvent.ACTION_MOVE:var activePointerIndex=ev.findPointerIndex(this.mActivePointerId);if(activePointerIndex == -1){Log.e(HorizontalScrollView.TAG,"Invalid pointerId=" + this.mActivePointerId + " in onTouchEvent");break;}var x=Math.floor(ev.getX(activePointerIndex));var deltaX=this.mLastMotionX - x;if(!this.mIsBeingDragged && Math.abs(deltaX) > this.mTouchSlop){var _parent11=this.getParent();if(_parent11 != null){_parent11.requestDisallowInterceptTouchEvent(true);}this.mIsBeingDragged = true;if(deltaX > 0){deltaX -= this.mTouchSlop;}else {deltaX += this.mTouchSlop;}}if(this.mIsBeingDragged){this.mLastMotionX = x;var oldX=this.mScrollX;var oldY=this.mScrollY;var range=this.getScrollRange();var overscrollMode=this.getOverScrollMode();var canOverscroll=overscrollMode == HorizontalScrollView.OVER_SCROLL_ALWAYS || overscrollMode == HorizontalScrollView.OVER_SCROLL_IF_CONTENT_SCROLLS && range > 0;if(this.overScrollBy(deltaX,0,this.mScrollX,0,range,0,this.mOverscrollDistance,0,true)){this.mVelocityTracker.clear();}if(canOverscroll){}}break;case MotionEvent.ACTION_UP:if(this.mIsBeingDragged){var velocityTracker=this.mVelocityTracker;velocityTracker.computeCurrentVelocity(1000,this.mMaximumVelocity);var initialVelocity=Math.floor(velocityTracker.getXVelocity(this.mActivePointerId));if(this.getChildCount() > 0){var isOverDrag=this.mScrollX < 0 || this.mScrollX > this.getScrollRange();if(!isOverDrag && Math.abs(initialVelocity) > this.mMinimumVelocity){this.fling(-initialVelocity);}else {if(this.mScroller.springBack(this.mScrollX,this.mScrollY,0,this.getScrollRange(),0,0)){this.postInvalidateOnAnimation();}}}this.mActivePointerId = HorizontalScrollView.INVALID_POINTER;this.mIsBeingDragged = false;this.recycleVelocityTracker();}break;case MotionEvent.ACTION_CANCEL:if(this.mIsBeingDragged && this.getChildCount() > 0){if(this.mScroller.springBack(this.mScrollX,this.mScrollY,0,this.getScrollRange(),0,0)){this.postInvalidateOnAnimation();}this.mActivePointerId = HorizontalScrollView.INVALID_POINTER;this.mIsBeingDragged = false;this.recycleVelocityTracker();}break;case MotionEvent.ACTION_POINTER_UP:this.onSecondaryPointerUp(ev);break;}return true;}},{key:"onSecondaryPointerUp",value:function onSecondaryPointerUp(ev){var pointerIndex=(ev.getAction() & MotionEvent.ACTION_POINTER_INDEX_MASK) >> MotionEvent.ACTION_POINTER_INDEX_SHIFT;var pointerId=ev.getPointerId(pointerIndex);if(pointerId == this.mActivePointerId){var newPointerIndex=pointerIndex == 0?1:0;this.mLastMotionX = Math.floor(ev.getX(newPointerIndex));this.mActivePointerId = ev.getPointerId(newPointerIndex);if(this.mVelocityTracker != null){this.mVelocityTracker.clear();}}}},{key:"onGenericMotionEvent",value:function onGenericMotionEvent(event){if(event.isPointerEvent()){switch(event.getAction()){case MotionEvent.ACTION_SCROLL:{if(!this.mIsBeingDragged){var hscroll=undefined;hscroll = event.getAxisValue(MotionEvent.AXIS_HSCROLL);if(hscroll != 0){var delta=Math.floor(hscroll * this.getHorizontalScrollFactor());var range=this.getScrollRange();var oldScrollX=this.mScrollX;var newScrollX=oldScrollX + delta;if(newScrollX < 0){newScrollX = 0;}else if(newScrollX > range){newScrollX = range;}if(newScrollX != oldScrollX){_get(Object.getPrototypeOf(HorizontalScrollView.prototype),"scrollTo",this).call(this,newScrollX,this.mScrollY);return true;}}}}}}return _get(Object.getPrototypeOf(HorizontalScrollView.prototype),"onGenericMotionEvent",this).call(this,event);}},{key:"shouldDelayChildPressedState",value:function shouldDelayChildPressedState(){return true;}},{key:"onOverScrolled",value:function onOverScrolled(scrollX,scrollY,clampedX,clampedY){if(!this.mScroller.isFinished()){var oldX=this.mScrollX;var oldY=this.mScrollY;this.mScrollX = scrollX;this.mScrollY = scrollY;this.invalidateParentIfNeeded();this.onScrollChanged(this.mScrollX,this.mScrollY,oldX,oldY);if(clampedX){this.mScroller.springBack(this.mScrollX,this.mScrollY,0,this.getScrollRange(),0,0);}}else {_get(Object.getPrototypeOf(HorizontalScrollView.prototype),"scrollTo",this).call(this,scrollX,scrollY);}this.awakenScrollBars();}},{key:"getScrollRange",value:function getScrollRange(){var scrollRange=0;if(this.getChildCount() > 0){var child=this.getChildAt(0);scrollRange = Math.max(0,child.getWidth() - (this.getWidth() - this.mPaddingLeft - this.mPaddingRight));}return scrollRange;}},{key:"findFocusableViewInMyBounds",value:function findFocusableViewInMyBounds(leftFocus,left,preferredFocusable){var fadingEdgeLength=this.getHorizontalFadingEdgeLength() / 2;var leftWithoutFadingEdge=left + fadingEdgeLength;var rightWithoutFadingEdge=left + this.getWidth() - fadingEdgeLength;if(preferredFocusable != null && preferredFocusable.getLeft() < rightWithoutFadingEdge && preferredFocusable.getRight() > leftWithoutFadingEdge){return preferredFocusable;}return this.findFocusableViewInBounds(leftFocus,leftWithoutFadingEdge,rightWithoutFadingEdge);}},{key:"findFocusableViewInBounds",value:function findFocusableViewInBounds(leftFocus,left,right){var focusables=this.getFocusables(View.FOCUS_FORWARD);var focusCandidate=null;var foundFullyContainedFocusable=false;var count=focusables.size();for(var i=0;i < count;i++) {var view=focusables.get(i);var viewLeft=view.getLeft();var viewRight=view.getRight();if(left < viewRight && viewLeft < right){var viewIsFullyContained=left < viewLeft && viewRight < right;if(focusCandidate == null){focusCandidate = view;foundFullyContainedFocusable = viewIsFullyContained;}else {var viewIsCloserToBoundary=leftFocus && viewLeft < focusCandidate.getLeft() || !leftFocus && viewRight > focusCandidate.getRight();if(foundFullyContainedFocusable){if(viewIsFullyContained && viewIsCloserToBoundary){focusCandidate = view;}}else {if(viewIsFullyContained){focusCandidate = view;foundFullyContainedFocusable = true;}else if(viewIsCloserToBoundary){focusCandidate = view;}}}}}return focusCandidate;}},{key:"pageScroll",value:function pageScroll(direction){var right=direction == View.FOCUS_RIGHT;var width=this.getWidth();if(right){this.mTempRect.left = this.getScrollX() + width;var count=this.getChildCount();if(count > 0){var view=this.getChildAt(0);if(this.mTempRect.left + width > view.getRight()){this.mTempRect.left = view.getRight() - width;}}}else {this.mTempRect.left = this.getScrollX() - width;if(this.mTempRect.left < 0){this.mTempRect.left = 0;}}this.mTempRect.right = this.mTempRect.left + width;return this.scrollAndFocus(direction,this.mTempRect.left,this.mTempRect.right);}},{key:"fullScroll",value:function fullScroll(direction){var right=direction == View.FOCUS_RIGHT;var width=this.getWidth();this.mTempRect.left = 0;this.mTempRect.right = width;if(right){var count=this.getChildCount();if(count > 0){var view=this.getChildAt(0);this.mTempRect.right = view.getRight();this.mTempRect.left = this.mTempRect.right - width;}}return this.scrollAndFocus(direction,this.mTempRect.left,this.mTempRect.right);}},{key:"scrollAndFocus",value:function scrollAndFocus(direction,left,right){var handled=true;var width=this.getWidth();var containerLeft=this.getScrollX();var containerRight=containerLeft + width;var goLeft=direction == View.FOCUS_LEFT;var newFocused=this.findFocusableViewInBounds(goLeft,left,right);if(newFocused == null){newFocused = this;}if(left >= containerLeft && right <= containerRight){handled = false;}else {var delta=goLeft?left - containerLeft:right - containerRight;this.doScrollX(delta);}if(newFocused != this.findFocus())newFocused.requestFocus(direction);return handled;}},{key:"arrowScroll",value:function arrowScroll(direction){var currentFocused=this.findFocus();if(currentFocused == this)currentFocused = null;var nextFocused=FocusFinder.getInstance().findNextFocus(this,currentFocused,direction);var maxJump=this.getMaxScrollAmount();if(nextFocused != null && this.isWithinDeltaOfScreen(nextFocused,maxJump)){nextFocused.getDrawingRect(this.mTempRect);this.offsetDescendantRectToMyCoords(nextFocused,this.mTempRect);var scrollDelta=this.computeScrollDeltaToGetChildRectOnScreen(this.mTempRect);this.doScrollX(scrollDelta);nextFocused.requestFocus(direction);}else {var scrollDelta=maxJump;if(direction == View.FOCUS_LEFT && this.getScrollX() < scrollDelta){scrollDelta = this.getScrollX();}else if(direction == View.FOCUS_RIGHT && this.getChildCount() > 0){var daRight=this.getChildAt(0).getRight();var screenRight=this.getScrollX() + this.getWidth();if(daRight - screenRight < maxJump){scrollDelta = daRight - screenRight;}}if(scrollDelta == 0){return false;}this.doScrollX(direction == View.FOCUS_RIGHT?scrollDelta:-scrollDelta);}if(currentFocused != null && currentFocused.isFocused() && this.isOffScreen(currentFocused)){var descendantFocusability=this.getDescendantFocusability();this.setDescendantFocusability(ViewGroup.FOCUS_BEFORE_DESCENDANTS);this.requestFocus();this.setDescendantFocusability(descendantFocusability);}return true;}},{key:"isOffScreen",value:function isOffScreen(descendant){return !this.isWithinDeltaOfScreen(descendant,0);}},{key:"isWithinDeltaOfScreen",value:function isWithinDeltaOfScreen(descendant,delta){descendant.getDrawingRect(this.mTempRect);this.offsetDescendantRectToMyCoords(descendant,this.mTempRect);return this.mTempRect.right + delta >= this.getScrollX() && this.mTempRect.left - delta <= this.getScrollX() + this.getWidth();}},{key:"doScrollX",value:function doScrollX(delta){if(delta != 0){if(this.mSmoothScrollingEnabled){this.smoothScrollBy(delta,0);}else {this.scrollBy(delta,0);}}}},{key:"smoothScrollBy",value:function smoothScrollBy(dx,dy){if(this.getChildCount() == 0){return;}var duration=AnimationUtils.currentAnimationTimeMillis() - this.mLastScroll;if(duration > HorizontalScrollView.ANIMATED_SCROLL_GAP){var width=this.getWidth() - this.mPaddingRight - this.mPaddingLeft;var right=this.getChildAt(0).getWidth();var maxX=Math.max(0,right - width);var _scrollX7=this.mScrollX;dx = Math.max(0,Math.min(_scrollX7 + dx,maxX)) - _scrollX7;this.mScroller.startScroll(_scrollX7,this.mScrollY,dx,0);this.postInvalidateOnAnimation();}else {if(!this.mScroller.isFinished()){this.mScroller.abortAnimation();}this.scrollBy(dx,dy);}this.mLastScroll = AnimationUtils.currentAnimationTimeMillis();}},{key:"smoothScrollTo",value:function smoothScrollTo(x,y){this.smoothScrollBy(x - this.mScrollX,y - this.mScrollY);}},{key:"computeHorizontalScrollRange",value:function computeHorizontalScrollRange(){var count=this.getChildCount();var contentWidth=this.getWidth() - this.mPaddingLeft - this.mPaddingRight;if(count == 0){return contentWidth;}var scrollRange=this.getChildAt(0).getRight();var scrollX=this.mScrollX;var overscrollRight=Math.max(0,scrollRange - contentWidth);if(scrollX < 0){scrollRange -= scrollX;}else if(scrollX > overscrollRight){scrollRange += scrollX - overscrollRight;}return scrollRange;}},{key:"computeHorizontalScrollOffset",value:function computeHorizontalScrollOffset(){return Math.max(0,_get(Object.getPrototypeOf(HorizontalScrollView.prototype),"computeHorizontalScrollOffset",this).call(this));}},{key:"measureChild",value:function measureChild(child,parentWidthMeasureSpec,parentHeightMeasureSpec){var lp=child.getLayoutParams();var childWidthMeasureSpec=undefined;var childHeightMeasureSpec=undefined;childHeightMeasureSpec = HorizontalScrollView.getChildMeasureSpec(parentHeightMeasureSpec,this.mPaddingTop + this.mPaddingBottom,lp.height);childWidthMeasureSpec = HorizontalScrollView.MeasureSpec.makeMeasureSpec(0,HorizontalScrollView.MeasureSpec.UNSPECIFIED);child.measure(childWidthMeasureSpec,childHeightMeasureSpec);}},{key:"measureChildWithMargins",value:function measureChildWithMargins(child,parentWidthMeasureSpec,widthUsed,parentHeightMeasureSpec,heightUsed){var lp=child.getLayoutParams();var childHeightMeasureSpec=HorizontalScrollView.getChildMeasureSpec(parentHeightMeasureSpec,this.mPaddingTop + this.mPaddingBottom + lp.topMargin + lp.bottomMargin + heightUsed,lp.height);var childWidthMeasureSpec=HorizontalScrollView.MeasureSpec.makeMeasureSpec(lp.leftMargin + lp.rightMargin,HorizontalScrollView.MeasureSpec.UNSPECIFIED);child.measure(childWidthMeasureSpec,childHeightMeasureSpec);}},{key:"computeScroll",value:function computeScroll(){if(this.mScroller.computeScrollOffset()){var oldX=this.mScrollX;var oldY=this.mScrollY;var x=this.mScroller.getCurrX();var y=this.mScroller.getCurrY();if(oldX != x || oldY != y){var range=this.getScrollRange();var overscrollMode=this.getOverScrollMode();var canOverscroll=overscrollMode == HorizontalScrollView.OVER_SCROLL_ALWAYS || overscrollMode == HorizontalScrollView.OVER_SCROLL_IF_CONTENT_SCROLLS && range > 0;this.overScrollBy(x - oldX,y - oldY,oldX,oldY,range,0,this.mOverflingDistance,0,false);this.onScrollChanged(this.mScrollX,this.mScrollY,oldX,oldY);if(canOverscroll){}}if(!this.awakenScrollBars()){this.postInvalidateOnAnimation();}}}},{key:"scrollToChild",value:function scrollToChild(child){child.getDrawingRect(this.mTempRect);this.offsetDescendantRectToMyCoords(child,this.mTempRect);var scrollDelta=this.computeScrollDeltaToGetChildRectOnScreen(this.mTempRect);if(scrollDelta != 0){this.scrollBy(scrollDelta,0);}}},{key:"scrollToChildRect",value:function scrollToChildRect(rect,immediate){var delta=this.computeScrollDeltaToGetChildRectOnScreen(rect);var scroll=delta != 0;if(scroll){if(immediate){this.scrollBy(delta,0);}else {this.smoothScrollBy(delta,0);}}return scroll;}},{key:"computeScrollDeltaToGetChildRectOnScreen",value:function computeScrollDeltaToGetChildRectOnScreen(rect){if(this.getChildCount() == 0)return 0;var width=this.getWidth();var screenLeft=this.getScrollX();var screenRight=screenLeft + width;var fadingEdge=this.getHorizontalFadingEdgeLength();if(rect.left > 0){screenLeft += fadingEdge;}if(rect.right < this.getChildAt(0).getWidth()){screenRight -= fadingEdge;}var scrollXDelta=0;if(rect.right > screenRight && rect.left > screenLeft){if(rect.width() > width){scrollXDelta += rect.left - screenLeft;}else {scrollXDelta += rect.right - screenRight;}var right=this.getChildAt(0).getRight();var distanceToRight=right - screenRight;scrollXDelta = Math.min(scrollXDelta,distanceToRight);}else if(rect.left < screenLeft && rect.right < screenRight){if(rect.width() > width){scrollXDelta -= screenRight - rect.right;}else {scrollXDelta -= screenLeft - rect.left;}scrollXDelta = Math.max(scrollXDelta,-this.getScrollX());}return scrollXDelta;}},{key:"requestChildFocus",value:function requestChildFocus(child,focused){if(!this.mIsLayoutDirty){this.scrollToChild(focused);}else {this.mChildToScrollTo = focused;}_get(Object.getPrototypeOf(HorizontalScrollView.prototype),"requestChildFocus",this).call(this,child,focused);}},{key:"onRequestFocusInDescendants",value:function onRequestFocusInDescendants(direction,previouslyFocusedRect){if(direction == View.FOCUS_FORWARD){direction = View.FOCUS_RIGHT;}else if(direction == View.FOCUS_BACKWARD){direction = View.FOCUS_LEFT;}var nextFocus=previouslyFocusedRect == null?FocusFinder.getInstance().findNextFocus(this,null,direction):FocusFinder.getInstance().findNextFocusFromRect(this,previouslyFocusedRect,direction);if(nextFocus == null){return false;}if(this.isOffScreen(nextFocus)){return false;}return nextFocus.requestFocus(direction,previouslyFocusedRect);}},{key:"requestChildRectangleOnScreen",value:function requestChildRectangleOnScreen(child,rectangle,immediate){rectangle.offset(child.getLeft() - child.getScrollX(),child.getTop() - child.getScrollY());return this.scrollToChildRect(rectangle,immediate);}},{key:"requestLayout",value:function requestLayout(){this.mIsLayoutDirty = true;_get(Object.getPrototypeOf(HorizontalScrollView.prototype),"requestLayout",this).call(this);}},{key:"onLayout",value:function onLayout(changed,l,t,r,b){var childWidth=0;var childMargins=0;if(this.getChildCount() > 0){childWidth = this.getChildAt(0).getMeasuredWidth();var childParams=this.getChildAt(0).getLayoutParams();childMargins = childParams.leftMargin + childParams.rightMargin;}var available=r - l - this.getPaddingLeftWithForeground() - this.getPaddingRightWithForeground() - childMargins;var forceLeftGravity=childWidth > available;this.layoutChildren(l,t,r,b,forceLeftGravity);this.mIsLayoutDirty = false;if(this.mChildToScrollTo != null && HorizontalScrollView.isViewDescendantOf(this.mChildToScrollTo,this)){this.scrollToChild(this.mChildToScrollTo);}this.mChildToScrollTo = null;if(!this.isLaidOut()){var scrollRange=Math.max(0,childWidth - (r - l - this.mPaddingLeft - this.mPaddingRight));{if(this.isLayoutRtl()){this.mScrollX = scrollRange - this.mScrollX;}}if(this.mScrollX > scrollRange){this.mScrollX = scrollRange;}else if(this.mScrollX < 0){this.mScrollX = 0;}}this.scrollTo(this.mScrollX,this.mScrollY);}},{key:"onSizeChanged",value:function onSizeChanged(w,h,oldw,oldh){_get(Object.getPrototypeOf(HorizontalScrollView.prototype),"onSizeChanged",this).call(this,w,h,oldw,oldh);var currentFocused=this.findFocus();if(null == currentFocused || this == currentFocused)return;var maxJump=this.mRight - this.mLeft;if(this.isWithinDeltaOfScreen(currentFocused,maxJump)){currentFocused.getDrawingRect(this.mTempRect);this.offsetDescendantRectToMyCoords(currentFocused,this.mTempRect);var scrollDelta=this.computeScrollDeltaToGetChildRectOnScreen(this.mTempRect);this.doScrollX(scrollDelta);}}},{key:"fling",value:function fling(velocityX){if(this.getChildCount() > 0){var width=this.getWidth() - this.mPaddingRight - this.mPaddingLeft;var right=this.getChildAt(0).getWidth();this.mScroller.fling(this.mScrollX,this.mScrollY,velocityX,0,0,Math.max(0,right - width),0,0,width / 2,0);var movingRight=velocityX > 0;var currentFocused=this.findFocus();var newFocused=this.findFocusableViewInMyBounds(movingRight,this.mScroller.getFinalX(),currentFocused);if(newFocused == null){newFocused = this;}if(newFocused != currentFocused){newFocused.requestFocus(movingRight?View.FOCUS_RIGHT:View.FOCUS_LEFT);}this.postInvalidateOnAnimation();}}},{key:"scrollTo",value:function scrollTo(x,y){if(this.getChildCount() > 0){var child=this.getChildAt(0);x = HorizontalScrollView.clamp(x,this.getWidth() - this.mPaddingRight - this.mPaddingLeft,child.getWidth());y = HorizontalScrollView.clamp(y,this.getHeight() - this.mPaddingBottom - this.mPaddingTop,child.getHeight());if(x != this.mScrollX || y != this.mScrollY){_get(Object.getPrototypeOf(HorizontalScrollView.prototype),"scrollTo",this).call(this,x,y);}}}},{key:"setOverScrollMode",value:function setOverScrollMode(mode){_get(Object.getPrototypeOf(HorizontalScrollView.prototype),"setOverScrollMode",this).call(this,mode);}},{key:"draw",value:function draw(canvas){_get(Object.getPrototypeOf(HorizontalScrollView.prototype),"draw",this).call(this,canvas);}},{key:"mOverflingDistance",get:function get(){if(this.mScrollX < -this._mOverflingDistance)return -this.mScrollX;var overDistance=this.mScrollX - this.getScrollRange();if(overDistance > this._mOverflingDistance)return overDistance;return this._mOverflingDistance;},set:function set(value){this._mOverflingDistance = value;}}],[{key:"isViewDescendantOf",value:function isViewDescendantOf(child,parent){if(child == parent){return true;}var theParent=child.getParent();return theParent instanceof ViewGroup && HorizontalScrollView.isViewDescendantOf(theParent,parent);}},{key:"clamp",value:function clamp(n,my,child){if(my >= child || n < 0){return 0;}if(my + n > child){return child - my;}return n;}}]);return HorizontalScrollView;})(FrameLayout);HorizontalScrollView.ANIMATED_SCROLL_GAP = ScrollView.ANIMATED_SCROLL_GAP;HorizontalScrollView.MAX_SCROLL_FACTOR = ScrollView.MAX_SCROLL_FACTOR;HorizontalScrollView.TAG = "HorizontalScrollView";HorizontalScrollView.INVALID_POINTER = -1;widget.HorizontalScrollView = HorizontalScrollView;})(widget = android.widget || (android.widget = {}));})(android || (android = {})); /**
 * Created by linfaxin on 15/11/1.
 */ ///<reference path="Interpolator.ts"/>
var android;(function(android){var view;(function(view){var animation;(function(animation){var DecelerateInterpolator=(function(){function DecelerateInterpolator(){var factor=arguments.length <= 0 || arguments[0] === undefined?1:arguments[0];_classCallCheck(this,DecelerateInterpolator);this.mFactor = factor;}_createClass(DecelerateInterpolator,[{key:"getInterpolation",value:function getInterpolation(input){var result=undefined;if(this.mFactor == 1.0){result = 1.0 - (1.0 - input) * (1.0 - input);}else {result = 1.0 - Math.pow(1.0 - input,2 * this.mFactor);}return result;}}]);return DecelerateInterpolator;})();animation.DecelerateInterpolator = DecelerateInterpolator;})(animation = view.animation || (view.animation = {}));})(view = android.view || (android.view = {}));})(android || (android = {})); /**
 * Created by linfaxin on 15/11/28.
 */ ///<reference path="List.ts"/>
///<reference path="ArrayList.ts"/>
var java;(function(java){var util;(function(util){var Collections=(function(){function Collections(){_classCallCheck(this,Collections);}_createClass(Collections,null,[{key:"emptyList",value:function emptyList(){return Collections.EMPTY_LIST;}}]);return Collections;})();Collections.EMPTY_LIST = new util.ArrayList();util.Collections = Collections;})(util = java.util || (java.util = {}));})(java || (java = {}));var android;(function(android){var R;(function(R){var div=document.createElement('div');function stringToElement(html){div.innerHTML = html;return div.firstElementChild;}var layout=(function(){function layout(){_classCallCheck(this,layout);}_createClass(layout,null,[{key:"number_picker",get:function get(){return stringToElement("\n                    <merge>\n                        <ImageButton android:id=\"@+id/increment\"\n                            android:layout_width=\"fill_parent\"\n                            android:layout_height=\"wrap_content\"\n                            android:background=\"transparent\"\n                            android:state_pressed=\"#ddd\"\n                            android:paddingTop=\"22dip\"\n                            android:paddingBottom=\"22dip\"\n                            android:contentDescription=\"@string/number_picker_increment_button\" ></ImageButton>\n\n                        <View\n                            android:id=\"@+id/numberpicker_input\"\n                            android:layout_width=\"fill_parent\"\n                            android:layout_height=\"wrap_content\"></View>\n\n                        <ImageButton android:id=\"@+id/decrement\"\n                            android:layout_width=\"fill_parent\"\n                            android:layout_height=\"wrap_content\"\n                            android:background=\"transparent\"\n                            android:state_pressed=\"#ddd\"\n                            android:paddingTop=\"22dip\"\n                            android:paddingBottom=\"22dip\"\n                            android:contentDescription=\"@string/number_picker_decrement_button\" ></ImageButton>\n                    </merge>").cloneNode(true);}}]);return layout;})();R.layout = layout;})(R = android.R || (android.R = {}));})(android || (android = {})); /*
 * Copyright (C) 2008 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ ///<reference path="../../android/content/res/ColorStateList.ts"/>
///<reference path="../../android/graphics/Canvas.ts"/>
///<reference path="../../android/graphics/Color.ts"/>
///<reference path="../../android/graphics/Paint.ts"/>
///<reference path="../../android/graphics/Rect.ts"/>
///<reference path="../../android/graphics/drawable/Drawable.ts"/>
///<reference path="../../android/text/TextUtils.ts"/>
///<reference path="../../android/util/SparseArray.ts"/>
///<reference path="../../android/util/TypedValue.ts"/>
///<reference path="../../android/view/KeyEvent.ts"/>
///<reference path="../../android/view/MotionEvent.ts"/>
///<reference path="../../android/view/VelocityTracker.ts"/>
///<reference path="../../android/view/View.ts"/>
///<reference path="../../android/view/ViewConfiguration.ts"/>
///<reference path="../../android/view/animation/DecelerateInterpolator.ts"/>
///<reference path="../../java/util/ArrayList.ts"/>
///<reference path="../../java/util/Collections.ts"/>
///<reference path="../../java/util/List.ts"/>
///<reference path="../../java/lang/Integer.ts"/>
///<reference path="../../java/lang/StringBuilder.ts"/>
///<reference path="../../java/lang/Runnable.ts"/>
///<reference path="../../android/widget/Button.ts"/>
///<reference path="../../android/widget/ImageButton.ts"/>
///<reference path="../../android/widget/LinearLayout.ts"/>
///<reference path="../../android/widget/OverScroller.ts"/>
///<reference path="../../android/widget/TextView.ts"/>
///<reference path="../../android/R/layout.ts"/>
var android;(function(android){var widget;(function(widget){var Color=android.graphics.Color;var Paint=android.graphics.Paint;var Align=android.graphics.Paint.Align;var SparseArray=android.util.SparseArray;var KeyEvent=android.view.KeyEvent;var MotionEvent=android.view.MotionEvent;var VelocityTracker=android.view.VelocityTracker;var ViewConfiguration=android.view.ViewConfiguration;var DecelerateInterpolator=android.view.animation.DecelerateInterpolator;var Integer=java.lang.Integer;var LinearLayout=android.widget.LinearLayout;var OverScroller=android.widget.OverScroller;var R=android.R;var NumberPicker=(function(_LinearLayout){_inherits(NumberPicker,_LinearLayout);function NumberPicker(bindElement,rootElement){var _this33=this;_classCallCheck(this,NumberPicker);_get(Object.getPrototypeOf(NumberPicker.prototype),"constructor",this).call(this,bindElement,rootElement);this.SELECTOR_WHEEL_ITEM_COUNT = 3;this.SELECTOR_MIDDLE_ITEM_INDEX = Math.floor(this.SELECTOR_WHEEL_ITEM_COUNT / 2);this.mSelectionDividersDistance = 0;this.mMinHeight_ = NumberPicker.SIZE_UNSPECIFIED;this.mMaxHeight = NumberPicker.SIZE_UNSPECIFIED;this.mMinWidth_ = NumberPicker.SIZE_UNSPECIFIED;this.mMaxWidth = NumberPicker.SIZE_UNSPECIFIED;this.mTextSize = 0;this.mSelectorTextGapHeight = 0;this.mMinValue = 0;this.mMaxValue = 0;this.mValue = 0;this.mLongPressUpdateInterval = NumberPicker.DEFAULT_LONG_PRESS_UPDATE_INTERVAL;this.mSelectorIndexToStringCache = new SparseArray();this.mSelectorElementHeight = 0;this.mInitialScrollOffset = Integer.MIN_VALUE;this.mCurrentScrollOffset = 0;this.mPreviousScrollerY = 0;this.mLastDownEventY = 0;this.mLastDownEventTime = 0;this.mLastDownOrMoveEventY = 0;this.mMinimumFlingVelocity = 0;this.mMaximumFlingVelocity = 0;this.mSolidColor = 0;this.mSelectionDividerHeight = 0;this.mScrollState = NumberPicker.OnScrollListener.SCROLL_STATE_IDLE;this.mTopSelectionDividerTop = 0;this.mBottomSelectionDividerBottom = 0;this.mLastHoveredChildVirtualViewId = 0;this.mLastHandledDownDpadKeyCode = -1;this.mHasSelectorWheel = true;this._attrBinder.addAttr('solidColor',function(value){_this33.mSolidColor = _this33._attrBinder.parseColor(value) || 0;});this._attrBinder.addAttr('selectionDivider',function(value){_this33.mSelectionDivider = _this33._attrBinder.parseDrawable(value);});this._attrBinder.addAttr('selectionDividerHeight',function(value){var defSelectionDividerHeight=NumberPicker.UNSCALED_DEFAULT_SELECTION_DIVIDER_HEIGHT * _this33.getResources().getDisplayMetrics().density;_this33.mSelectionDividerHeight = _this33._attrBinder.parseNumber(value,defSelectionDividerHeight);});this._attrBinder.addAttr('selectionDividersDistance',function(value){var defSelectionDividerDistance=NumberPicker.UNSCALED_DEFAULT_SELECTION_DIVIDERS_DISTANCE * _this33.getResources().getDisplayMetrics().density;_this33.mSelectionDividersDistance = _this33._attrBinder.parseNumber(value,defSelectionDividerDistance);});this._attrBinder.addAttr('internalMinHeight',function(value){_this33.mMinHeight_ = _this33._attrBinder.parseNumber(value,NumberPicker.SIZE_UNSPECIFIED);});this._attrBinder.addAttr('internalMaxHeight',function(value){_this33.mMaxHeight = _this33._attrBinder.parseNumber(value,NumberPicker.SIZE_UNSPECIFIED);});this._attrBinder.addAttr('internalMinWidth',function(value){_this33.mMinWidth_ = _this33._attrBinder.parseNumber(value,NumberPicker.SIZE_UNSPECIFIED);});this._attrBinder.addAttr('internalMaxWidth',function(value){_this33.mMaxWidth = _this33._attrBinder.parseNumber(value,NumberPicker.SIZE_UNSPECIFIED);});this._attrBinder.addAttr('internalMaxWidth',function(value){_this33.mMaxWidth = _this33._attrBinder.parseNumber(value,NumberPicker.SIZE_UNSPECIFIED);});this._attrBinder.addAttr('virtualButtonPressedDrawable',function(value){_this33.mVirtualButtonPressedDrawable = _this33._attrBinder.parseDrawable(value);});this._attrBinder.addAttr('textSize',function(value){_this33.mTextSize = _this33._attrBinder.parseNumber(value,_this33.mTextSize);_this33.mSelectorWheelPaint.setTextSize(_this33.mTextSize);});this._attrBinder.addAttr('textColor',function(value){_this33.mSelectorWheelPaint.setColor(_this33._attrBinder.parseColor(value,_this33.mSelectorWheelPaint.getColor()));});this._attrBinder.addAttr('minValue',function(value){_this33.setMinValue(_this33._attrBinder.parseNumber(value,_this33.mMinValue));});this._attrBinder.addAttr('maxValue',function(value){_this33.setMaxValue(_this33._attrBinder.parseNumber(value,_this33.mMaxValue));});this._attrBinder.addAttr('itemCount',function(value){_this33.SELECTOR_WHEEL_ITEM_COUNT = _this33._attrBinder.parseNumber(value,_this33.SELECTOR_WHEEL_ITEM_COUNT);_this33.SELECTOR_MIDDLE_ITEM_INDEX = Math.floor(_this33.SELECTOR_WHEEL_ITEM_COUNT / 2);_this33.mSelectorIndices = new Array(_this33.SELECTOR_WHEEL_ITEM_COUNT);});this.mTextSize = Math.floor(16 * this.getResources().getDisplayMetrics().density);var paint=new Paint();paint.setAntiAlias(true);paint.setTextAlign(Align.CENTER);paint.setTextSize(this.mTextSize);paint.setColor(Color.DKGRAY);this.mSelectorWheelPaint = paint;this.mSelectorIndices = new Array(this.SELECTOR_WHEEL_ITEM_COUNT);this.applyDefaultAttributes(R.attr.numberPickerStyle);if(this.mMinHeight_ != NumberPicker.SIZE_UNSPECIFIED && this.mMaxHeight != NumberPicker.SIZE_UNSPECIFIED && this.mMinHeight_ > this.mMaxHeight){throw Error("new IllegalArgumentException(\"minHeight > maxHeight\")");}if(this.mMinWidth_ != NumberPicker.SIZE_UNSPECIFIED && this.mMaxWidth != NumberPicker.SIZE_UNSPECIFIED && this.mMinWidth_ > this.mMaxWidth){throw Error("new IllegalArgumentException(\"minWidth > maxWidth\")");}this.mComputeMaxWidth = this.mMaxWidth == NumberPicker.SIZE_UNSPECIFIED;this.mPressedStateHelper = new NumberPicker.PressedStateHelper(this);this.setWillNotDraw(!this.mHasSelectorWheel);var configuration=ViewConfiguration.get();this.mMinimumFlingVelocity = configuration.getScaledMinimumFlingVelocity();this.mMaximumFlingVelocity = configuration.getScaledMaximumFlingVelocity() / NumberPicker.SELECTOR_MAX_FLING_VELOCITY_ADJUSTMENT;this.mFlingScroller = new OverScroller(null,true);this.mAdjustScroller = new OverScroller(new DecelerateInterpolator(2.5));this.updateInputTextView();}_createClass(NumberPicker,[{key:"onLayout",value:function onLayout(changed,left,top,right,bottom){if(!this.mHasSelectorWheel){_get(Object.getPrototypeOf(NumberPicker.prototype),"onLayout",this).call(this,changed,left,top,right,bottom);return;}var msrdWdth=this.getMeasuredWidth();var msrdHght=this.getMeasuredHeight();if(changed){this.initializeSelectorWheel();this.initializeFadingEdges();this.mTopSelectionDividerTop = (this.getHeight() - this.mSelectionDividersDistance) / 2 - this.mSelectionDividerHeight;this.mBottomSelectionDividerBottom = this.mTopSelectionDividerTop + 2 * this.mSelectionDividerHeight + this.mSelectionDividersDistance;}}},{key:"onMeasure",value:function onMeasure(widthMeasureSpec,heightMeasureSpec){if(!this.mHasSelectorWheel){_get(Object.getPrototypeOf(NumberPicker.prototype),"onMeasure",this).call(this,widthMeasureSpec,heightMeasureSpec);return;}var newWidthMeasureSpec=this.makeMeasureSpec(widthMeasureSpec,this.mMaxWidth);var newHeightMeasureSpec=this.makeMeasureSpec(heightMeasureSpec,this.mMaxHeight);_get(Object.getPrototypeOf(NumberPicker.prototype),"onMeasure",this).call(this,newWidthMeasureSpec,newHeightMeasureSpec);var widthSize=this.resolveSizeAndStateRespectingMinSize(this.mMinWidth_,this.getMeasuredWidth(),widthMeasureSpec);var heightSize=this.resolveSizeAndStateRespectingMinSize(this.mMinHeight_,this.getMeasuredHeight(),heightMeasureSpec);this.setMeasuredDimension(widthSize,heightSize);}},{key:"moveToFinalScrollerPosition",value:function moveToFinalScrollerPosition(scroller){scroller.forceFinished(true);var amountToScroll=scroller.getFinalY() - scroller.getCurrY();var futureScrollOffset=(this.mCurrentScrollOffset + amountToScroll) % this.mSelectorElementHeight;var overshootAdjustment=this.mInitialScrollOffset - futureScrollOffset;if(overshootAdjustment != 0){if(Math.abs(overshootAdjustment) > this.mSelectorElementHeight / 2){if(overshootAdjustment > 0){overshootAdjustment -= this.mSelectorElementHeight;}else {overshootAdjustment += this.mSelectorElementHeight;}}amountToScroll += overshootAdjustment;this.scrollBy(0,amountToScroll);return true;}return false;}},{key:"onInterceptTouchEvent",value:function onInterceptTouchEvent(event){if(!this.mHasSelectorWheel || !this.isEnabled()){return false;}var action=event.getActionMasked();switch(action){case MotionEvent.ACTION_DOWN:{this.removeAllCallbacks();this.mLastDownOrMoveEventY = this.mLastDownEventY = event.getY();this.mLastDownEventTime = event.getEventTime();this.mIngonreMoveEvents = false;this.mShowSoftInputOnTap = false;if(this.mLastDownEventY < this.mTopSelectionDividerTop){if(this.mScrollState == NumberPicker.OnScrollListener.SCROLL_STATE_IDLE){this.mPressedStateHelper.buttonPressDelayed(NumberPicker.PressedStateHelper.BUTTON_DECREMENT);}}else if(this.mLastDownEventY > this.mBottomSelectionDividerBottom){if(this.mScrollState == NumberPicker.OnScrollListener.SCROLL_STATE_IDLE){this.mPressedStateHelper.buttonPressDelayed(NumberPicker.PressedStateHelper.BUTTON_INCREMENT);}}this.getParent().requestDisallowInterceptTouchEvent(true);if(!this.mFlingScroller.isFinished()){this.mFlingScroller.forceFinished(true);this.mAdjustScroller.forceFinished(true);this.onScrollStateChange(NumberPicker.OnScrollListener.SCROLL_STATE_IDLE);}else if(!this.mAdjustScroller.isFinished()){this.mFlingScroller.forceFinished(true);this.mAdjustScroller.forceFinished(true);}else if(this.mLastDownEventY < this.mTopSelectionDividerTop){this.hideSoftInput();this.postChangeCurrentByOneFromLongPress(false,ViewConfiguration.getLongPressTimeout());}else if(this.mLastDownEventY > this.mBottomSelectionDividerBottom){this.hideSoftInput();this.postChangeCurrentByOneFromLongPress(true,ViewConfiguration.getLongPressTimeout());}else {this.mShowSoftInputOnTap = true;this.postBeginSoftInputOnLongPressCommand();}return true;}}return false;}},{key:"onTouchEvent",value:function onTouchEvent(event){if(!this.isEnabled() || !this.mHasSelectorWheel){return false;}if(this.mVelocityTracker == null){this.mVelocityTracker = VelocityTracker.obtain();}this.mVelocityTracker.addMovement(event);var action=event.getActionMasked();switch(action){case MotionEvent.ACTION_MOVE:{if(this.mIngonreMoveEvents){break;}var currentMoveY=event.getY();if(this.mScrollState != NumberPicker.OnScrollListener.SCROLL_STATE_TOUCH_SCROLL){var deltaDownY=Math.floor(Math.abs(currentMoveY - this.mLastDownEventY));if(deltaDownY > this.mTouchSlop){this.removeAllCallbacks();this.onScrollStateChange(NumberPicker.OnScrollListener.SCROLL_STATE_TOUCH_SCROLL);}}else {var deltaMoveY=Math.floor(currentMoveY - this.mLastDownOrMoveEventY);this.scrollBy(0,deltaMoveY);this.invalidate();}this.mLastDownOrMoveEventY = currentMoveY;}break;case MotionEvent.ACTION_UP:{this.removeBeginSoftInputCommand();this.removeChangeCurrentByOneFromLongPress();this.mPressedStateHelper.cancel();var velocityTracker=this.mVelocityTracker;velocityTracker.computeCurrentVelocity(1000,this.mMaximumFlingVelocity);var initialVelocity=Math.floor(velocityTracker.getYVelocity());if(Math.abs(initialVelocity) > this.mMinimumFlingVelocity){this.fling(initialVelocity);this.onScrollStateChange(NumberPicker.OnScrollListener.SCROLL_STATE_FLING);}else {var eventY=Math.floor(event.getY());var deltaMoveY=Math.floor(Math.abs(eventY - this.mLastDownEventY));var deltaTime=event.getEventTime() - this.mLastDownEventTime;if(deltaMoveY <= this.mTouchSlop && deltaTime < ViewConfiguration.getTapTimeout()){if(this.mShowSoftInputOnTap){this.mShowSoftInputOnTap = false;this.showSoftInput();}else {var selectorIndexOffset=eventY / this.mSelectorElementHeight - this.SELECTOR_MIDDLE_ITEM_INDEX;if(selectorIndexOffset > 0){this.changeValueByOne(true);this.mPressedStateHelper.buttonTapped(NumberPicker.PressedStateHelper.BUTTON_INCREMENT);}else if(selectorIndexOffset < 0){this.changeValueByOne(false);this.mPressedStateHelper.buttonTapped(NumberPicker.PressedStateHelper.BUTTON_DECREMENT);}}}else {this.ensureScrollWheelAdjusted();}this.onScrollStateChange(NumberPicker.OnScrollListener.SCROLL_STATE_IDLE);}this.mVelocityTracker.recycle();this.mVelocityTracker = null;}break;}return true;}},{key:"dispatchTouchEvent",value:function dispatchTouchEvent(event){var action=event.getActionMasked();switch(action){case MotionEvent.ACTION_CANCEL:case MotionEvent.ACTION_UP:this.removeAllCallbacks();break;}return _get(Object.getPrototypeOf(NumberPicker.prototype),"dispatchTouchEvent",this).call(this,event);}},{key:"dispatchKeyEvent",value:function dispatchKeyEvent(event){var keyCode=event.getKeyCode();switch(keyCode){case KeyEvent.KEYCODE_DPAD_CENTER:case KeyEvent.KEYCODE_ENTER:this.removeAllCallbacks();break;case KeyEvent.KEYCODE_DPAD_DOWN:case KeyEvent.KEYCODE_DPAD_UP:if(!this.mHasSelectorWheel){break;}switch(event.getAction()){case KeyEvent.ACTION_DOWN:if(this.mWrapSelectorWheel || keyCode == KeyEvent.KEYCODE_DPAD_DOWN?this.getValue() < this.getMaxValue():this.getValue() > this.getMinValue()){this.requestFocus();this.mLastHandledDownDpadKeyCode = keyCode;this.removeAllCallbacks();if(this.mFlingScroller.isFinished()){this.changeValueByOne(keyCode == KeyEvent.KEYCODE_DPAD_DOWN);}return true;}break;case KeyEvent.ACTION_UP:if(this.mLastHandledDownDpadKeyCode == keyCode){this.mLastHandledDownDpadKeyCode = -1;return true;}break;}}return _get(Object.getPrototypeOf(NumberPicker.prototype),"dispatchKeyEvent",this).call(this,event);}},{key:"computeScroll",value:function computeScroll(){var scroller=this.mFlingScroller;if(scroller.isFinished()){scroller = this.mAdjustScroller;if(scroller.isFinished()){return;}}scroller.computeScrollOffset();var currentScrollerY=scroller.getCurrY();if(this.mPreviousScrollerY == 0){this.mPreviousScrollerY = scroller.getStartY();}this.scrollBy(0,currentScrollerY - this.mPreviousScrollerY);this.mPreviousScrollerY = currentScrollerY;if(scroller.isFinished()){this.onScrollerFinished(scroller);}else {this.invalidate();}}},{key:"setEnabled",value:function setEnabled(enabled){_get(Object.getPrototypeOf(NumberPicker.prototype),"setEnabled",this).call(this,enabled);if(!this.mHasSelectorWheel){}if(!this.mHasSelectorWheel){}}},{key:"scrollBy",value:function scrollBy(x,y){var selectorIndices=this.mSelectorIndices;if(!this.mWrapSelectorWheel && y > 0 && selectorIndices[this.SELECTOR_MIDDLE_ITEM_INDEX] <= this.mMinValue){this.mCurrentScrollOffset = this.mInitialScrollOffset;return;}if(!this.mWrapSelectorWheel && y < 0 && selectorIndices[this.SELECTOR_MIDDLE_ITEM_INDEX] >= this.mMaxValue){this.mCurrentScrollOffset = this.mInitialScrollOffset;return;}this.mCurrentScrollOffset += y;while(this.mCurrentScrollOffset - this.mInitialScrollOffset > this.mSelectorTextGapHeight) {this.mCurrentScrollOffset -= this.mSelectorElementHeight;this.decrementSelectorIndices(selectorIndices);this.setValueInternal(selectorIndices[this.SELECTOR_MIDDLE_ITEM_INDEX],true);if(!this.mWrapSelectorWheel && selectorIndices[this.SELECTOR_MIDDLE_ITEM_INDEX] <= this.mMinValue){this.mCurrentScrollOffset = this.mInitialScrollOffset;}}while(this.mCurrentScrollOffset - this.mInitialScrollOffset < -this.mSelectorTextGapHeight) {this.mCurrentScrollOffset += this.mSelectorElementHeight;this.incrementSelectorIndices(selectorIndices);this.setValueInternal(selectorIndices[this.SELECTOR_MIDDLE_ITEM_INDEX],true);if(!this.mWrapSelectorWheel && selectorIndices[this.SELECTOR_MIDDLE_ITEM_INDEX] >= this.mMaxValue){this.mCurrentScrollOffset = this.mInitialScrollOffset;}}}},{key:"computeVerticalScrollOffset",value:function computeVerticalScrollOffset(){return this.mCurrentScrollOffset;}},{key:"computeVerticalScrollRange",value:function computeVerticalScrollRange(){return (this.mMaxValue - this.mMinValue + 1) * this.mSelectorElementHeight;}},{key:"computeVerticalScrollExtent",value:function computeVerticalScrollExtent(){return this.getHeight();}},{key:"getSolidColor",value:function getSolidColor(){return this.mSolidColor;}},{key:"setOnValueChangedListener",value:function setOnValueChangedListener(onValueChangedListener){this.mOnValueChangeListener = onValueChangedListener;}},{key:"setOnScrollListener",value:function setOnScrollListener(onScrollListener){this.mOnScrollListener = onScrollListener;}},{key:"setFormatter",value:function setFormatter(formatter){if(formatter == this.mFormatter){return;}this.mFormatter = formatter;this.initializeSelectorWheelIndices();this.updateInputTextView();}},{key:"setValue",value:function setValue(value){this.setValueInternal(value,false);}},{key:"showSoftInput",value:function showSoftInput(){}},{key:"hideSoftInput",value:function hideSoftInput(){}},{key:"tryComputeMaxWidth",value:function tryComputeMaxWidth(){if(!this.mComputeMaxWidth){return;}var maxTextWidth=0;if(this.mDisplayedValues == null){var maxDigitWidth=0;for(var i=0;i <= 9;i++) {var digitWidth=this.mSelectorWheelPaint.measureText(NumberPicker.formatNumberWithLocale(i));if(digitWidth > maxDigitWidth){maxDigitWidth = digitWidth;}}var numberOfDigits=0;var current=this.mMaxValue;while(current > 0) {numberOfDigits++;current = current / 10;}maxTextWidth = Math.floor(numberOfDigits * maxDigitWidth);}else {var valueCount=this.mDisplayedValues.length;for(var i=0;i < valueCount;i++) {var textWidth=this.mSelectorWheelPaint.measureText(this.mDisplayedValues[i]);if(textWidth > maxTextWidth){maxTextWidth = Math.floor(textWidth);}}}if(this.mMaxWidth != maxTextWidth){if(maxTextWidth > this.mMinWidth_){this.mMaxWidth = maxTextWidth;}else {this.mMaxWidth = this.mMinWidth_;}this.invalidate();}}},{key:"getWrapSelectorWheel",value:function getWrapSelectorWheel(){return this.mWrapSelectorWheel;}},{key:"setWrapSelectorWheel",value:function setWrapSelectorWheel(wrapSelectorWheel){var wrappingAllowed=this.mMaxValue - this.mMinValue >= this.mSelectorIndices.length;if((!wrapSelectorWheel || wrappingAllowed) && wrapSelectorWheel != this.mWrapSelectorWheel){this.mWrapSelectorWheel = wrapSelectorWheel;}}},{key:"setOnLongPressUpdateInterval",value:function setOnLongPressUpdateInterval(intervalMillis){this.mLongPressUpdateInterval = intervalMillis;}},{key:"getValue",value:function getValue(){return this.mValue;}},{key:"getMinValue",value:function getMinValue(){return this.mMinValue;}},{key:"setMinValue",value:function setMinValue(minValue){if(this.mMinValue == minValue){return;}if(minValue < 0){throw Error("new IllegalArgumentException(\"minValue must be >= 0\")");}this.mMinValue = minValue;if(this.mMinValue > this.mValue){this.mValue = this.mMinValue;}var wrapSelectorWheel=this.mMaxValue - this.mMinValue > this.mSelectorIndices.length;this.setWrapSelectorWheel(wrapSelectorWheel);this.initializeSelectorWheelIndices();this.updateInputTextView();this.tryComputeMaxWidth();this.invalidate();}},{key:"getMaxValue",value:function getMaxValue(){return this.mMaxValue;}},{key:"setMaxValue",value:function setMaxValue(maxValue){if(this.mMaxValue == maxValue){return;}if(maxValue < 0){throw Error("new IllegalArgumentException(\"maxValue must be >= 0\")");}this.mMaxValue = maxValue;if(this.mMaxValue < this.mValue){this.mValue = this.mMaxValue;}var wrapSelectorWheel=this.mMaxValue - this.mMinValue > this.mSelectorIndices.length;this.setWrapSelectorWheel(wrapSelectorWheel);this.initializeSelectorWheelIndices();this.updateInputTextView();this.tryComputeMaxWidth();this.invalidate();}},{key:"getDisplayedValues",value:function getDisplayedValues(){return this.mDisplayedValues;}},{key:"setDisplayedValues",value:function setDisplayedValues(displayedValues){if(this.mDisplayedValues == displayedValues){return;}this.mDisplayedValues = displayedValues;if(this.mDisplayedValues != null){}else {}this.updateInputTextView();this.initializeSelectorWheelIndices();this.tryComputeMaxWidth();}},{key:"getTopFadingEdgeStrength",value:function getTopFadingEdgeStrength(){return NumberPicker.TOP_AND_BOTTOM_FADING_EDGE_STRENGTH;}},{key:"getBottomFadingEdgeStrength",value:function getBottomFadingEdgeStrength(){return NumberPicker.TOP_AND_BOTTOM_FADING_EDGE_STRENGTH;}},{key:"onDetachedFromWindow",value:function onDetachedFromWindow(){_get(Object.getPrototypeOf(NumberPicker.prototype),"onDetachedFromWindow",this).call(this);this.removeAllCallbacks();}},{key:"onDraw",value:function onDraw(canvas){if(!this.mHasSelectorWheel){_get(Object.getPrototypeOf(NumberPicker.prototype),"onDraw",this).call(this,canvas);return;}var x=(this.mRight - this.mLeft) / 2;var y=this.mCurrentScrollOffset;if(this.mVirtualButtonPressedDrawable != null && this.mScrollState == NumberPicker.OnScrollListener.SCROLL_STATE_IDLE){if(this.mDecrementVirtualButtonPressed){this.mVirtualButtonPressedDrawable.setState(NumberPicker.PRESSED_STATE_SET);this.mVirtualButtonPressedDrawable.setBounds(0,0,this.mRight,this.mTopSelectionDividerTop);this.mVirtualButtonPressedDrawable.draw(canvas);}if(this.mIncrementVirtualButtonPressed){this.mVirtualButtonPressedDrawable.setState(NumberPicker.PRESSED_STATE_SET);this.mVirtualButtonPressedDrawable.setBounds(0,this.mBottomSelectionDividerBottom,this.mRight,this.mBottom);this.mVirtualButtonPressedDrawable.draw(canvas);}}var selectorIndices=this.mSelectorIndices;for(var i=0;i < selectorIndices.length;i++) {var selectorIndex=selectorIndices[i];var scrollSelectorValue=this.mSelectorIndexToStringCache.get(selectorIndex);canvas.drawText(scrollSelectorValue,x,y,this.mSelectorWheelPaint);y += this.mSelectorElementHeight;}if(this.mSelectionDivider != null){var topOfTopDivider=this.mTopSelectionDividerTop;var bottomOfTopDivider=topOfTopDivider + this.mSelectionDividerHeight;this.mSelectionDivider.setBounds(0,topOfTopDivider,this.mRight,bottomOfTopDivider);this.mSelectionDivider.draw(canvas);var bottomOfBottomDivider=this.mBottomSelectionDividerBottom;var topOfBottomDivider=bottomOfBottomDivider - this.mSelectionDividerHeight;this.mSelectionDivider.setBounds(0,topOfBottomDivider,this.mRight,bottomOfBottomDivider);this.mSelectionDivider.draw(canvas);}}},{key:"makeMeasureSpec",value:function makeMeasureSpec(measureSpec,maxSize){if(maxSize == NumberPicker.SIZE_UNSPECIFIED){return measureSpec;}var size=NumberPicker.MeasureSpec.getSize(measureSpec);var mode=NumberPicker.MeasureSpec.getMode(measureSpec);switch(mode){case NumberPicker.MeasureSpec.EXACTLY:return measureSpec;case NumberPicker.MeasureSpec.AT_MOST:return NumberPicker.MeasureSpec.makeMeasureSpec(Math.min(size,maxSize),NumberPicker.MeasureSpec.EXACTLY);case NumberPicker.MeasureSpec.UNSPECIFIED:return NumberPicker.MeasureSpec.makeMeasureSpec(maxSize,NumberPicker.MeasureSpec.EXACTLY);default:throw Error("new IllegalArgumentException(\"Unknown measure mode: \" + mode)");}}},{key:"resolveSizeAndStateRespectingMinSize",value:function resolveSizeAndStateRespectingMinSize(minSize,measuredSize,measureSpec){if(minSize != NumberPicker.SIZE_UNSPECIFIED){var desiredWidth=Math.max(minSize,measuredSize);return NumberPicker.resolveSizeAndState(desiredWidth,measureSpec,0);}else {return measuredSize;}}},{key:"initializeSelectorWheelIndices",value:function initializeSelectorWheelIndices(){this.mSelectorIndexToStringCache.clear();var selectorIndices=this.mSelectorIndices;var current=this.getValue();for(var i=0;i < this.mSelectorIndices.length;i++) {var selectorIndex=Math.floor(current + (i - this.SELECTOR_MIDDLE_ITEM_INDEX));if(this.mWrapSelectorWheel){selectorIndex = this.getWrappedSelectorIndex(selectorIndex);}selectorIndices[i] = selectorIndex;this.ensureCachedScrollSelectorValue(selectorIndices[i]);}}},{key:"setValueInternal",value:function setValueInternal(current,notifyChange){if(this.mValue == current){return;}if(this.mWrapSelectorWheel){current = this.getWrappedSelectorIndex(current);}else {current = Math.max(current,this.mMinValue);current = Math.min(current,this.mMaxValue);}var previous=this.mValue;this.mValue = current;this.updateInputTextView();if(notifyChange){this.notifyChange(previous,current);}this.initializeSelectorWheelIndices();this.invalidate();}},{key:"changeValueByOne",value:function changeValueByOne(increment){if(this.mHasSelectorWheel){if(!this.moveToFinalScrollerPosition(this.mFlingScroller)){this.moveToFinalScrollerPosition(this.mAdjustScroller);}this.mPreviousScrollerY = 0;if(increment){this.mFlingScroller.startScroll(0,0,0,-this.mSelectorElementHeight,NumberPicker.SNAP_SCROLL_DURATION);}else {this.mFlingScroller.startScroll(0,0,0,this.mSelectorElementHeight,NumberPicker.SNAP_SCROLL_DURATION);}this.invalidate();}else {if(increment){this.setValueInternal(this.mValue + 1,true);}else {this.setValueInternal(this.mValue - 1,true);}}}},{key:"initializeSelectorWheel",value:function initializeSelectorWheel(){this.initializeSelectorWheelIndices();var selectorIndices=this.mSelectorIndices;var totalTextHeight=selectorIndices.length * this.mTextSize;var totalTextGapHeight=this.mBottom - this.mTop - totalTextHeight;var textGapCount=selectorIndices.length;this.mSelectorTextGapHeight = Math.floor(totalTextGapHeight / textGapCount + 0.5);this.mSelectorElementHeight = this.mTextSize + this.mSelectorTextGapHeight;var editTextTextPosition=this.getHeight() / 2 + this.mTextSize / 2;this.mInitialScrollOffset = editTextTextPosition - this.mSelectorElementHeight * this.SELECTOR_MIDDLE_ITEM_INDEX;this.mCurrentScrollOffset = this.mInitialScrollOffset;this.updateInputTextView();}},{key:"initializeFadingEdges",value:function initializeFadingEdges(){this.setVerticalFadingEdgeEnabled(true);this.setFadingEdgeLength((this.mBottom - this.mTop - this.mTextSize) / 2);}},{key:"onScrollerFinished",value:function onScrollerFinished(scroller){if(scroller == this.mFlingScroller){if(!this.ensureScrollWheelAdjusted()){this.updateInputTextView();}this.onScrollStateChange(NumberPicker.OnScrollListener.SCROLL_STATE_IDLE);}else {if(this.mScrollState != NumberPicker.OnScrollListener.SCROLL_STATE_TOUCH_SCROLL){this.updateInputTextView();}}}},{key:"onScrollStateChange",value:function onScrollStateChange(scrollState){if(this.mScrollState == scrollState){return;}this.mScrollState = scrollState;if(this.mOnScrollListener != null){this.mOnScrollListener.onScrollStateChange(this,scrollState);}}},{key:"fling",value:function fling(velocityY){this.mPreviousScrollerY = 0;if(velocityY > 0){this.mFlingScroller.fling(0,0,0,velocityY,0,0,0,Integer.MAX_VALUE);}else {this.mFlingScroller.fling(0,Integer.MAX_VALUE,0,velocityY,0,0,0,Integer.MAX_VALUE);}this.invalidate();}},{key:"getWrappedSelectorIndex",value:function getWrappedSelectorIndex(selectorIndex){if(selectorIndex > this.mMaxValue){return this.mMinValue + (selectorIndex - this.mMaxValue) % (this.mMaxValue - this.mMinValue) - 1;}else if(selectorIndex < this.mMinValue){return this.mMaxValue - (this.mMinValue - selectorIndex) % (this.mMaxValue - this.mMinValue) + 1;}return selectorIndex;}},{key:"incrementSelectorIndices",value:function incrementSelectorIndices(selectorIndices){for(var i=0;i < selectorIndices.length - 1;i++) {selectorIndices[i] = selectorIndices[i + 1];}var nextScrollSelectorIndex=selectorIndices[selectorIndices.length - 2] + 1;if(this.mWrapSelectorWheel && nextScrollSelectorIndex > this.mMaxValue){nextScrollSelectorIndex = this.mMinValue;}selectorIndices[selectorIndices.length - 1] = nextScrollSelectorIndex;this.ensureCachedScrollSelectorValue(nextScrollSelectorIndex);}},{key:"decrementSelectorIndices",value:function decrementSelectorIndices(selectorIndices){for(var i=selectorIndices.length - 1;i > 0;i--) {selectorIndices[i] = selectorIndices[i - 1];}var nextScrollSelectorIndex=selectorIndices[1] - 1;if(this.mWrapSelectorWheel && nextScrollSelectorIndex < this.mMinValue){nextScrollSelectorIndex = this.mMaxValue;}selectorIndices[0] = nextScrollSelectorIndex;this.ensureCachedScrollSelectorValue(nextScrollSelectorIndex);}},{key:"ensureCachedScrollSelectorValue",value:function ensureCachedScrollSelectorValue(selectorIndex){var cache=this.mSelectorIndexToStringCache;var scrollSelectorValue=cache.get(selectorIndex);if(scrollSelectorValue != null){return;}if(selectorIndex < this.mMinValue || selectorIndex > this.mMaxValue){scrollSelectorValue = "";}else {if(this.mDisplayedValues != null){var displayedValueIndex=selectorIndex - this.mMinValue;scrollSelectorValue = this.mDisplayedValues[displayedValueIndex];}else {scrollSelectorValue = this.formatNumber(selectorIndex);}}cache.put(selectorIndex,scrollSelectorValue);}},{key:"formatNumber",value:function formatNumber(value){return this.mFormatter != null?this.mFormatter.format(value):NumberPicker.formatNumberWithLocale(value);}},{key:"validateInputTextView",value:function validateInputTextView(v){}},{key:"updateInputTextView",value:function updateInputTextView(){return false;}},{key:"notifyChange",value:function notifyChange(previous,current){if(this.mOnValueChangeListener != null){this.mOnValueChangeListener.onValueChange(this,previous,this.mValue);}}},{key:"postChangeCurrentByOneFromLongPress",value:function postChangeCurrentByOneFromLongPress(increment,delayMillis){if(this.mChangeCurrentByOneFromLongPressCommand == null){this.mChangeCurrentByOneFromLongPressCommand = new NumberPicker.ChangeCurrentByOneFromLongPressCommand(this);}else {this.removeCallbacks(this.mChangeCurrentByOneFromLongPressCommand);}this.mChangeCurrentByOneFromLongPressCommand.setStep(increment);this.postDelayed(this.mChangeCurrentByOneFromLongPressCommand,delayMillis);}},{key:"removeChangeCurrentByOneFromLongPress",value:function removeChangeCurrentByOneFromLongPress(){if(this.mChangeCurrentByOneFromLongPressCommand != null){this.removeCallbacks(this.mChangeCurrentByOneFromLongPressCommand);}}},{key:"postBeginSoftInputOnLongPressCommand",value:function postBeginSoftInputOnLongPressCommand(){if(this.mBeginSoftInputOnLongPressCommand == null){this.mBeginSoftInputOnLongPressCommand = new NumberPicker.BeginSoftInputOnLongPressCommand(this);}else {this.removeCallbacks(this.mBeginSoftInputOnLongPressCommand);}this.postDelayed(this.mBeginSoftInputOnLongPressCommand,ViewConfiguration.getLongPressTimeout());}},{key:"removeBeginSoftInputCommand",value:function removeBeginSoftInputCommand(){if(this.mBeginSoftInputOnLongPressCommand != null){this.removeCallbacks(this.mBeginSoftInputOnLongPressCommand);}}},{key:"removeAllCallbacks",value:function removeAllCallbacks(){if(this.mChangeCurrentByOneFromLongPressCommand != null){this.removeCallbacks(this.mChangeCurrentByOneFromLongPressCommand);}if(this.mSetSelectionCommand != null){this.removeCallbacks(this.mSetSelectionCommand);}if(this.mBeginSoftInputOnLongPressCommand != null){this.removeCallbacks(this.mBeginSoftInputOnLongPressCommand);}this.mPressedStateHelper.cancel();}},{key:"getSelectedPos",value:function getSelectedPos(value){if(this.mDisplayedValues == null){try{return Integer.parseInt(value);}catch(e) {}}else {for(var i=0;i < this.mDisplayedValues.length;i++) {value = value.toLowerCase();if(this.mDisplayedValues[i].toLowerCase().startsWith(value)){return this.mMinValue + i;}}try{return Integer.parseInt(value);}catch(e) {}}return this.mMinValue;}},{key:"postSetSelectionCommand",value:function postSetSelectionCommand(selectionStart,selectionEnd){if(this.mSetSelectionCommand == null){this.mSetSelectionCommand = new NumberPicker.SetSelectionCommand(this);}else {this.removeCallbacks(this.mSetSelectionCommand);}this.mSetSelectionCommand.mSelectionStart = selectionStart;this.mSetSelectionCommand.mSelectionEnd = selectionEnd;this.post(this.mSetSelectionCommand);}},{key:"ensureScrollWheelAdjusted",value:function ensureScrollWheelAdjusted(){var deltaY=this.mInitialScrollOffset - this.mCurrentScrollOffset;if(deltaY != 0){this.mPreviousScrollerY = 0;if(Math.abs(deltaY) > this.mSelectorElementHeight / 2){deltaY += deltaY > 0?-this.mSelectorElementHeight:this.mSelectorElementHeight;}this.mAdjustScroller.startScroll(0,0,0,deltaY,NumberPicker.SELECTOR_ADJUSTMENT_DURATION_MILLIS);this.invalidate();return true;}return false;}}],[{key:"getTwoDigitFormatter",value:function getTwoDigitFormatter(){if(!NumberPicker.sTwoDigitFormatter){NumberPicker.sTwoDigitFormatter = new NumberPicker.TwoDigitFormatter();}return NumberPicker.sTwoDigitFormatter;}},{key:"formatNumberWithLocale",value:function formatNumberWithLocale(value){return value + '';}}]);return NumberPicker;})(LinearLayout);NumberPicker.DEFAULT_LONG_PRESS_UPDATE_INTERVAL = 300;NumberPicker.SELECTOR_MAX_FLING_VELOCITY_ADJUSTMENT = 8;NumberPicker.SELECTOR_ADJUSTMENT_DURATION_MILLIS = 800;NumberPicker.SNAP_SCROLL_DURATION = 300;NumberPicker.TOP_AND_BOTTOM_FADING_EDGE_STRENGTH = 0.9;NumberPicker.UNSCALED_DEFAULT_SELECTION_DIVIDER_HEIGHT = 2;NumberPicker.UNSCALED_DEFAULT_SELECTION_DIVIDERS_DISTANCE = 48;NumberPicker.SIZE_UNSPECIFIED = -1;widget.NumberPicker = NumberPicker;(function(NumberPicker){var TwoDigitFormatter=(function(){function TwoDigitFormatter(){_classCallCheck(this,TwoDigitFormatter);}_createClass(TwoDigitFormatter,[{key:"format",value:function format(value){var s=value + '';if(s.length === 1)s = '0' + s;return s;}}]);return TwoDigitFormatter;})();NumberPicker.TwoDigitFormatter = TwoDigitFormatter;var OnScrollListener;(function(OnScrollListener){OnScrollListener.SCROLL_STATE_IDLE = 0;OnScrollListener.SCROLL_STATE_TOUCH_SCROLL = 1;OnScrollListener.SCROLL_STATE_FLING = 2;})(OnScrollListener = NumberPicker.OnScrollListener || (NumberPicker.OnScrollListener = {}));var PressedStateHelper=(function(){function PressedStateHelper(arg){_classCallCheck(this,PressedStateHelper);this.MODE_PRESS = 1;this.MODE_TAPPED = 2;this.mManagedButton = 0;this.mMode = 0;this._NumberPicker_this = arg;}_createClass(PressedStateHelper,[{key:"cancel",value:function cancel(){this.mMode = 0;this.mManagedButton = 0;this._NumberPicker_this.removeCallbacks(this);if(this._NumberPicker_this.mIncrementVirtualButtonPressed){this._NumberPicker_this.mIncrementVirtualButtonPressed = false;this._NumberPicker_this.invalidate(0,this._NumberPicker_this.mBottomSelectionDividerBottom,this._NumberPicker_this.mRight,this._NumberPicker_this.mBottom);}if(this._NumberPicker_this.mDecrementVirtualButtonPressed){this._NumberPicker_this.mDecrementVirtualButtonPressed = false;this._NumberPicker_this.invalidate(0,0,this._NumberPicker_this.mRight,this._NumberPicker_this.mTopSelectionDividerTop);}}},{key:"buttonPressDelayed",value:function buttonPressDelayed(button){this.cancel();this.mMode = this.MODE_PRESS;this.mManagedButton = button;this._NumberPicker_this.postDelayed(this,ViewConfiguration.getTapTimeout());}},{key:"buttonTapped",value:function buttonTapped(button){this.cancel();this.mMode = this.MODE_TAPPED;this.mManagedButton = button;this._NumberPicker_this.post(this);}},{key:"run",value:function run(){switch(this.mMode){case this.MODE_PRESS:{switch(this.mManagedButton){case PressedStateHelper.BUTTON_INCREMENT:{this._NumberPicker_this.mIncrementVirtualButtonPressed = true;this._NumberPicker_this.invalidate(0,this._NumberPicker_this.mBottomSelectionDividerBottom,this._NumberPicker_this.mRight,this._NumberPicker_this.mBottom);}break;case PressedStateHelper.BUTTON_DECREMENT:{this._NumberPicker_this.mDecrementVirtualButtonPressed = true;this._NumberPicker_this.invalidate(0,0,this._NumberPicker_this.mRight,this._NumberPicker_this.mTopSelectionDividerTop);}}}break;case this.MODE_TAPPED:{switch(this.mManagedButton){case PressedStateHelper.BUTTON_INCREMENT:{if(!this._NumberPicker_this.mIncrementVirtualButtonPressed){this._NumberPicker_this.postDelayed(this,ViewConfiguration.getPressedStateDuration());}this._NumberPicker_this.mIncrementVirtualButtonPressed = !this._NumberPicker_this.mIncrementVirtualButtonPressed;this._NumberPicker_this.invalidate(0,this._NumberPicker_this.mBottomSelectionDividerBottom,this._NumberPicker_this.mRight,this._NumberPicker_this.mBottom);}break;case PressedStateHelper.BUTTON_DECREMENT:{if(!this._NumberPicker_this.mDecrementVirtualButtonPressed){this._NumberPicker_this.postDelayed(this,ViewConfiguration.getPressedStateDuration());}this._NumberPicker_this.mDecrementVirtualButtonPressed = !this._NumberPicker_this.mDecrementVirtualButtonPressed;this._NumberPicker_this.invalidate(0,0,this._NumberPicker_this.mRight,this._NumberPicker_this.mTopSelectionDividerTop);}}}break;}}}]);return PressedStateHelper;})();PressedStateHelper.BUTTON_INCREMENT = 1;PressedStateHelper.BUTTON_DECREMENT = 2;NumberPicker.PressedStateHelper = PressedStateHelper;var SetSelectionCommand=(function(){function SetSelectionCommand(arg){_classCallCheck(this,SetSelectionCommand);this.mSelectionStart = 0;this.mSelectionEnd = 0;this._NumberPicker_this = arg;}_createClass(SetSelectionCommand,[{key:"run",value:function run(){}}]);return SetSelectionCommand;})();NumberPicker.SetSelectionCommand = SetSelectionCommand;var ChangeCurrentByOneFromLongPressCommand=(function(){function ChangeCurrentByOneFromLongPressCommand(arg){_classCallCheck(this,ChangeCurrentByOneFromLongPressCommand);this._NumberPicker_this = arg;}_createClass(ChangeCurrentByOneFromLongPressCommand,[{key:"setStep",value:function setStep(increment){this.mIncrement = increment;}},{key:"run",value:function run(){this._NumberPicker_this.changeValueByOne(this.mIncrement);this._NumberPicker_this.postDelayed(this,this._NumberPicker_this.mLongPressUpdateInterval);}}]);return ChangeCurrentByOneFromLongPressCommand;})();NumberPicker.ChangeCurrentByOneFromLongPressCommand = ChangeCurrentByOneFromLongPressCommand;var BeginSoftInputOnLongPressCommand=(function(){function BeginSoftInputOnLongPressCommand(arg){_classCallCheck(this,BeginSoftInputOnLongPressCommand);this._NumberPicker_this = arg;}_createClass(BeginSoftInputOnLongPressCommand,[{key:"run",value:function run(){this._NumberPicker_this.showSoftInput();this._NumberPicker_this.mIngonreMoveEvents = true;}}]);return BeginSoftInputOnLongPressCommand;})();NumberPicker.BeginSoftInputOnLongPressCommand = BeginSoftInputOnLongPressCommand;})(NumberPicker = widget.NumberPicker || (widget.NumberPicker = {}));})(widget = android.widget || (android.widget = {}));})(android || (android = {})); /**
 * Created by linfaxin on 15/11/5.
 */ ///<reference path="../../../database/DataSetObservable.ts"/>
///<reference path="../../../database/Observable.ts"/>
///<reference path="../../../database/DataSetObserver.ts"/>
///<reference path="../../../view/ViewGroup.ts"/>
var android;(function(android){var support;(function(support){var v4;(function(v4){var view;(function(view_5){var DataSetObservable=android.database.DataSetObservable;var PagerAdapter=(function(){function PagerAdapter(){_classCallCheck(this,PagerAdapter);this.mObservable = new DataSetObservable();}_createClass(PagerAdapter,[{key:"startUpdate",value:function startUpdate(container){}},{key:"instantiateItem",value:function instantiateItem(container,position){throw new Error("Required method instantiateItem was not overridden");}},{key:"destroyItem",value:function destroyItem(container,position,object){throw new Error("Required method destroyItem was not overridden");}},{key:"setPrimaryItem",value:function setPrimaryItem(container,position,object){}},{key:"finishUpdate",value:function finishUpdate(container){}},{key:"getItemPosition",value:function getItemPosition(object){return PagerAdapter.POSITION_UNCHANGED;}},{key:"notifyDataSetChanged",value:function notifyDataSetChanged(){this.mObservable.notifyChanged();}},{key:"registerDataSetObserver",value:function registerDataSetObserver(observer){this.mObservable.registerObserver(observer);}},{key:"unregisterDataSetObserver",value:function unregisterDataSetObserver(observer){this.mObservable.unregisterObserver(observer);}},{key:"getPageTitle",value:function getPageTitle(position){return null;}},{key:"getPageWidth",value:function getPageWidth(position){return 1;}}]);return PagerAdapter;})();PagerAdapter.POSITION_UNCHANGED = -1;PagerAdapter.POSITION_NONE = -2;view_5.PagerAdapter = PagerAdapter;})(view = v4.view || (v4.view = {}));})(v4 = support.v4 || (support.v4 = {}));})(support = android.support || (android.support = {}));})(android || (android = {})); /**
 * Created by linfaxin on 15/11/5.
 */ ///<reference path="../../../view/View.ts"/>
///<reference path="../../../view/VelocityTracker.ts"/>
///<reference path="../../../widget/OverScroller.ts"/>
///<reference path="../../../view/ViewGroup.ts"/>
///<reference path="../../../view/MotionEvent.ts"/>
///<reference path="../../../view/animation/Interpolator.ts"/>
///<reference path="../../../../java/util/ArrayList.ts"/>
///<reference path="../../../database/DataSetObservable.ts"/>
///<reference path="../../../database/Observable.ts"/>
///<reference path="../../../database/DataSetObserver.ts"/>
///<reference path="PagerAdapter.ts"/>
var android;(function(android){var support;(function(support){var v4;(function(v4){var view;(function(view_6){var View=android.view.View;var Gravity=android.view.Gravity;var MeasureSpec=View.MeasureSpec;var OverScroller=android.widget.OverScroller;var ViewGroup=android.view.ViewGroup;var ArrayList=java.util.ArrayList;var Rect=android.graphics.Rect;var PagerAdapter=android.support.v4.view.PagerAdapter;var DataSetObserver=android.database.DataSetObserver;var VelocityTracker=android.view.VelocityTracker;var ViewConfiguration=android.view.ViewConfiguration;var Resources=android.content.res.Resources;var Log=android.util.Log;var MotionEvent=android.view.MotionEvent;var KeyEvent=android.view.KeyEvent;var TAG="ViewPager";var DEBUG=false;var SymbolDecor=Symbol();var ViewPager=(function(_ViewGroup4){_inherits(ViewPager,_ViewGroup4);function ViewPager(bindElement,rootElement){var _this34=this;_classCallCheck(this,ViewPager);_get(Object.getPrototypeOf(ViewPager.prototype),"constructor",this).call(this,bindElement,rootElement);this.mExpectedAdapterCount = 0;this.mItems = new ArrayList();this.mTempItem = new ItemInfo();this.mTempRect = new Rect();this.mCurItem = 0;this.mRestoredCurItem = -1;this.mPageMargin = 0;this.mTopPageBounds = 0;this.mBottomPageBounds = 0;this.mFirstOffset = -Number.MAX_VALUE;this.mLastOffset = Number.MAX_VALUE;this.mChildWidthMeasureSpec = 0;this.mChildHeightMeasureSpec = 0;this.mInLayout = false;this.mScrollingCacheEnabled = false;this.mPopulatePending = false;this.mOffscreenPageLimit = ViewPager.DEFAULT_OFFSCREEN_PAGES;this.mIsBeingDragged = false;this.mIsUnableToDrag = false;this.mDefaultGutterSize = 0;this.mGutterSize = 0;this.mLastMotionX = 0;this.mLastMotionY = 0;this.mInitialMotionX = 0;this.mInitialMotionY = 0;this.mActivePointerId = ViewPager.INVALID_POINTER;this.mMinimumVelocity = 0;this.mMaximumVelocity = 0;this.mFlingDistance = 0;this.mCloseEnough = 0;this.mFakeDragging = false;this.mFakeDragBeginTime = 0;this.mFirstLayout = true;this.mNeedCalculatePageOffsets = false;this.mCalledSuper = false;this.mDecorChildCount = 0;this.mDrawingOrder = 0;this.mEndScrollRunnable = (function(){var ViewPager_this=_this34;var InnerClass=(function(){function InnerClass(){_classCallCheck(this,InnerClass);}_createClass(InnerClass,[{key:"run",value:function run(){ViewPager_this.setScrollState(ViewPager.SCROLL_STATE_IDLE);ViewPager_this.populate();}}]);return InnerClass;})();return new InnerClass();})();this.mScrollState = ViewPager.SCROLL_STATE_IDLE;this.initViewPager();}_createClass(ViewPager,[{key:"initViewPager",value:function initViewPager(){this.setWillNotDraw(false);this.setDescendantFocusability(ViewGroup.FOCUS_AFTER_DESCENDANTS);this.setFocusable(true);this.mScroller = new OverScroller(ViewPager.sInterpolator);var density=Resources.getDisplayMetrics().density;this.mTouchSlop = ViewConfiguration.get().getScaledPagingTouchSlop();this.mMinimumVelocity = Math.floor(ViewPager.MIN_FLING_VELOCITY * density);this.mMaximumVelocity = ViewConfiguration.get().getScaledMaximumFlingVelocity();this.mFlingDistance = Math.floor(ViewPager.MIN_DISTANCE_FOR_FLING * density);this.mCloseEnough = Math.floor(ViewPager.CLOSE_ENOUGH * density);this.mDefaultGutterSize = Math.floor(ViewPager.DEFAULT_GUTTER_SIZE * density);}},{key:"onDetachedFromWindow",value:function onDetachedFromWindow(){this.removeCallbacks(this.mEndScrollRunnable);_get(Object.getPrototypeOf(ViewPager.prototype),"onDetachedFromWindow",this).call(this);}},{key:"setScrollState",value:function setScrollState(newState){if(this.mScrollState == newState){return;}this.mScrollState = newState;if(this.mPageTransformer != null){this.enableLayers(newState != ViewPager.SCROLL_STATE_IDLE);}this.dispatchOnScrollStateChanged(newState);}},{key:"setAdapter",value:function setAdapter(adapter){if(this.mAdapter != null){this.mAdapter.unregisterDataSetObserver(this.mObserver);this.mAdapter.startUpdate(this);for(var i=0;i < this.mItems.size();i++) {var ii=this.mItems.get(i);this.mAdapter.destroyItem(this,ii.position,ii.object);}this.mAdapter.finishUpdate(this);this.mItems.clear();this.removeNonDecorViews();this.mCurItem = 0;this.scrollTo(0,0);}var oldAdapter=this.mAdapter;this.mAdapter = adapter;this.mExpectedAdapterCount = 0;if(this.mAdapter != null){if(this.mObserver == null){this.mObserver = new PagerObserver(this);}this.mAdapter.registerDataSetObserver(this.mObserver);this.mPopulatePending = false;var wasFirstLayout=this.mFirstLayout;this.mFirstLayout = true;this.mExpectedAdapterCount = this.mAdapter.getCount();if(this.mRestoredCurItem >= 0){this.setCurrentItemInternal(this.mRestoredCurItem,false,true);this.mRestoredCurItem = -1;}else if(!wasFirstLayout){this.populate();}else {this.requestLayout();}}if(this.mAdapterChangeListener != null && oldAdapter != adapter){this.mAdapterChangeListener.onAdapterChanged(oldAdapter,adapter);}}},{key:"removeNonDecorViews",value:function removeNonDecorViews(){for(var i=0;i < this.getChildCount();i++) {var child=this.getChildAt(i);var lp=child.getLayoutParams();if(!lp.isDecor){this.removeViewAt(i);i--;}}}},{key:"getAdapter",value:function getAdapter(){return this.mAdapter;}},{key:"setOnAdapterChangeListener",value:function setOnAdapterChangeListener(listener){this.mAdapterChangeListener = listener;}},{key:"getClientWidth",value:function getClientWidth(){return this.getMeasuredWidth() - this.getPaddingLeft() - this.getPaddingRight();}},{key:"setCurrentItem",value:function setCurrentItem(item){var smoothScroll=arguments.length <= 1 || arguments[1] === undefined?!this.mFirstLayout:arguments[1];this.mPopulatePending = false;this.setCurrentItemInternal(item,smoothScroll,false);}},{key:"getCurrentItem",value:function getCurrentItem(){return this.mCurItem;}},{key:"setCurrentItemInternal",value:function setCurrentItemInternal(item,smoothScroll,always){var velocity=arguments.length <= 3 || arguments[3] === undefined?0:arguments[3];if(this.mAdapter == null || this.mAdapter.getCount() <= 0){this.setScrollingCacheEnabled(false);return;}if(!always && this.mCurItem == item && this.mItems.size() != 0){this.setScrollingCacheEnabled(false);return;}if(item < 0){item = 0;}else if(item >= this.mAdapter.getCount()){item = this.mAdapter.getCount() - 1;}var pageLimit=this.mOffscreenPageLimit;if(item > this.mCurItem + pageLimit || item < this.mCurItem - pageLimit){for(var i=0;i < this.mItems.size();i++) {this.mItems.get(i).scrolling = true;}}var dispatchSelected=this.mCurItem != item;if(this.mFirstLayout){this.mCurItem = item;if(dispatchSelected){this.dispatchOnPageSelected(item);}this.requestLayout();}else {this.populate(item);this.scrollToItem(item,smoothScroll,velocity,dispatchSelected);}}},{key:"scrollToItem",value:function scrollToItem(item,smoothScroll,velocity,dispatchSelected){var curInfo=this.infoForPosition(item);var destX=0;if(curInfo != null){var width=this.getClientWidth();destX = Math.floor(width * Math.max(this.mFirstOffset,Math.min(curInfo.offset,this.mLastOffset)));}if(smoothScroll){this.smoothScrollTo(destX,0,velocity);if(dispatchSelected){this.dispatchOnPageSelected(item);}}else {if(dispatchSelected){this.dispatchOnPageSelected(item);}this.completeScroll(false);this.scrollTo(destX,0);this.pageScrolled(destX);}}},{key:"setOnPageChangeListener",value:function setOnPageChangeListener(listener){this.mOnPageChangeListener = listener;}},{key:"addOnPageChangeListener",value:function addOnPageChangeListener(listener){if(this.mOnPageChangeListeners == null){this.mOnPageChangeListeners = new ArrayList();}this.mOnPageChangeListeners.add(listener);}},{key:"removeOnPageChangeListener",value:function removeOnPageChangeListener(listener){if(this.mOnPageChangeListeners != null){this.mOnPageChangeListeners.remove(listener);}}},{key:"clearOnPageChangeListeners",value:function clearOnPageChangeListeners(){if(this.mOnPageChangeListeners != null){this.mOnPageChangeListeners.clear();}}},{key:"setPageTransformer",value:function setPageTransformer(reverseDrawingOrder,transformer){var hasTransformer=transformer != null;var needsPopulate=hasTransformer != (this.mPageTransformer != null);this.mPageTransformer = transformer;this.setChildrenDrawingOrderEnabledCompat(hasTransformer);if(hasTransformer){this.mDrawingOrder = reverseDrawingOrder?ViewPager.DRAW_ORDER_REVERSE:ViewPager.DRAW_ORDER_FORWARD;}else {this.mDrawingOrder = ViewPager.DRAW_ORDER_DEFAULT;}if(needsPopulate)this.populate();}},{key:"setChildrenDrawingOrderEnabledCompat",value:function setChildrenDrawingOrderEnabledCompat(){var enable=arguments.length <= 0 || arguments[0] === undefined?true:arguments[0];this.setChildrenDrawingOrderEnabled(enable);}},{key:"getChildDrawingOrder",value:function getChildDrawingOrder(childCount,i){var index=this.mDrawingOrder == ViewPager.DRAW_ORDER_REVERSE?childCount - 1 - i:i;var result=this.mDrawingOrderedChildren.get(index).getLayoutParams().childIndex;return result;}},{key:"setInternalPageChangeListener",value:function setInternalPageChangeListener(listener){var oldListener=this.mInternalPageChangeListener;this.mInternalPageChangeListener = listener;return oldListener;}},{key:"getOffscreenPageLimit",value:function getOffscreenPageLimit(){return this.mOffscreenPageLimit;}},{key:"setOffscreenPageLimit",value:function setOffscreenPageLimit(limit){if(limit < ViewPager.DEFAULT_OFFSCREEN_PAGES){Log.w(TAG,"Requested offscreen page limit " + limit + " too small; defaulting to " + ViewPager.DEFAULT_OFFSCREEN_PAGES);limit = ViewPager.DEFAULT_OFFSCREEN_PAGES;}if(limit != this.mOffscreenPageLimit){this.mOffscreenPageLimit = limit;this.populate();}}},{key:"setPageMargin",value:function setPageMargin(marginPixels){var oldMargin=this.mPageMargin;this.mPageMargin = marginPixels;var width=this.getWidth();this.recomputeScrollPosition(width,width,marginPixels,oldMargin);this.requestLayout();}},{key:"getPageMargin",value:function getPageMargin(){return this.mPageMargin;}},{key:"setPageMarginDrawable",value:function setPageMarginDrawable(d){this.mMarginDrawable = d;if(d != null)this.refreshDrawableState();this.setWillNotDraw(d == null);this.invalidate();}},{key:"verifyDrawable",value:function verifyDrawable(who){return _get(Object.getPrototypeOf(ViewPager.prototype),"verifyDrawable",this).call(this,who) || who == this.mMarginDrawable;}},{key:"drawableStateChanged",value:function drawableStateChanged(){_get(Object.getPrototypeOf(ViewPager.prototype),"drawableStateChanged",this).call(this);var d=this.mMarginDrawable;if(d != null && d.isStateful()){d.setState(this.getDrawableState());}}},{key:"distanceInfluenceForSnapDuration",value:function distanceInfluenceForSnapDuration(f){f -= 0.5;f *= 0.3 * Math.PI / 2.0;return Math.sin(f);}},{key:"smoothScrollTo",value:function smoothScrollTo(x,y){var velocity=arguments.length <= 2 || arguments[2] === undefined?0:arguments[2];if(this.getChildCount() == 0){this.setScrollingCacheEnabled(false);return;}var sx=this.getScrollX();var sy=this.getScrollY();var dx=x - sx;var dy=y - sy;if(dx == 0 && dy == 0){this.completeScroll(false);this.populate();this.setScrollState(ViewPager.SCROLL_STATE_IDLE);return;}this.setScrollingCacheEnabled(true);this.setScrollState(ViewPager.SCROLL_STATE_SETTLING);var width=this.getClientWidth();var halfWidth=width / 2;var distanceRatio=Math.min(1,1.0 * Math.abs(dx) / width);var distance=halfWidth + halfWidth * this.distanceInfluenceForSnapDuration(distanceRatio);var duration=0;velocity = Math.abs(velocity);if(velocity > 0){duration = 4 * Math.round(1000 * Math.abs(distance / velocity));}else {var pageWidth=width * this.mAdapter.getPageWidth(this.mCurItem);var pageDelta=Math.abs(dx) / (pageWidth + this.mPageMargin);duration = Math.floor((pageDelta + 1) * 100);}duration = Math.min(duration,ViewPager.MAX_SETTLE_DURATION);this.mScroller.startScroll(sx,sy,dx,dy,duration);this.postInvalidateOnAnimation();}},{key:"addNewItem",value:function addNewItem(position,index){var ii=new ItemInfo();ii.position = position;ii.object = this.mAdapter.instantiateItem(this,position);ii.widthFactor = this.mAdapter.getPageWidth(position);if(index < 0 || index >= this.mItems.size()){this.mItems.add(ii);}else {this.mItems.add(index,ii);}return ii;}},{key:"dataSetChanged",value:function dataSetChanged(){ // This method only gets called if our observer is attached, so mAdapter is non-null.
var adapterCount=this.mAdapter.getCount();this.mExpectedAdapterCount = adapterCount;var needPopulate=this.mItems.size() < this.mOffscreenPageLimit * 2 + 1 && this.mItems.size() < adapterCount;var newCurrItem=this.mCurItem;var isUpdating=false;for(var i=0;i < this.mItems.size();i++) {var ii=this.mItems.get(i);var newPos=this.mAdapter.getItemPosition(ii.object);if(newPos == PagerAdapter.POSITION_UNCHANGED){continue;}if(newPos == PagerAdapter.POSITION_NONE){this.mItems.remove(i);i--;if(!isUpdating){this.mAdapter.startUpdate(this);isUpdating = true;}this.mAdapter.destroyItem(this,ii.position,ii.object);needPopulate = true;if(this.mCurItem == ii.position){newCurrItem = Math.max(0,Math.min(this.mCurItem,adapterCount - 1));needPopulate = true;}continue;}if(ii.position != newPos){if(ii.position == this.mCurItem){newCurrItem = newPos;}ii.position = newPos;needPopulate = true;}}if(isUpdating){this.mAdapter.finishUpdate(this);}this.mItems.sort(ViewPager.COMPARATOR);if(needPopulate){var childCount=this.getChildCount();for(var i=0;i < childCount;i++) {var child=this.getChildAt(i);var lp=child.getLayoutParams();if(!lp.isDecor){lp.widthFactor = 0;}}this.setCurrentItemInternal(newCurrItem,false,true);this.requestLayout();}}},{key:"populate",value:function populate(){var newCurrentItem=arguments.length <= 0 || arguments[0] === undefined?this.mCurItem:arguments[0];var oldCurInfo=null;var focusDirection=View.FOCUS_FORWARD;if(this.mCurItem != newCurrentItem){focusDirection = this.mCurItem < newCurrentItem?View.FOCUS_RIGHT:View.FOCUS_LEFT;oldCurInfo = this.infoForPosition(this.mCurItem);this.mCurItem = newCurrentItem;}if(this.mAdapter == null){this.sortChildDrawingOrder();return;}if(this.mPopulatePending){if(DEBUG)Log.i(TAG,"populate is pending, skipping for now...");this.sortChildDrawingOrder();return;}if(!this.isAttachedToWindow()){return;}this.mAdapter.startUpdate(this);var pageLimit=this.mOffscreenPageLimit;var startPos=Math.max(0,this.mCurItem - pageLimit);var N=this.mAdapter.getCount();var endPos=Math.min(N - 1,this.mCurItem + pageLimit);if(N != this.mExpectedAdapterCount){throw new Error("The application's PagerAdapter changed the adapter's" + " contents without calling PagerAdapter#notifyDataSetChanged!" + " Expected adapter item count: " + this.mExpectedAdapterCount + ", found: " + N + " Pager id: " + this.getId() + " Pager class: " + this.constructor.name + " Problematic adapter: " + this.mAdapter.constructor.name);}var curIndex=-1;var curItem=null;for(curIndex = 0;curIndex < this.mItems.size();curIndex++) {var ii=this.mItems.get(curIndex);if(ii.position >= this.mCurItem){if(ii.position == this.mCurItem)curItem = ii;break;}}if(curItem == null && N > 0){curItem = this.addNewItem(this.mCurItem,curIndex);}if(curItem != null){var extraWidthLeft=0;var itemIndex=curIndex - 1;var ii=itemIndex >= 0?this.mItems.get(itemIndex):null;var clientWidth=this.getClientWidth();var leftWidthNeeded=clientWidth <= 0?0:2 - curItem.widthFactor + this.getPaddingLeft() / clientWidth;for(var pos=this.mCurItem - 1;pos >= 0;pos--) {if(extraWidthLeft >= leftWidthNeeded && pos < startPos){if(ii == null){break;}if(pos == ii.position && !ii.scrolling){this.mItems.remove(itemIndex);this.mAdapter.destroyItem(this,pos,ii.object);if(DEBUG){Log.i(TAG,"populate() - destroyItem() with pos: " + pos + " view: " + ii.object);}itemIndex--;curIndex--;ii = itemIndex >= 0?this.mItems.get(itemIndex):null;}}else if(ii != null && pos == ii.position){extraWidthLeft += ii.widthFactor;itemIndex--;ii = itemIndex >= 0?this.mItems.get(itemIndex):null;}else {ii = this.addNewItem(pos,itemIndex + 1);extraWidthLeft += ii.widthFactor;curIndex++;ii = itemIndex >= 0?this.mItems.get(itemIndex):null;}}var extraWidthRight=curItem.widthFactor;itemIndex = curIndex + 1;if(extraWidthRight < 2){ii = itemIndex < this.mItems.size()?this.mItems.get(itemIndex):null;var rightWidthNeeded=clientWidth <= 0?0:this.getPaddingRight() / clientWidth + 2;for(var pos=this.mCurItem + 1;pos < N;pos++) {if(extraWidthRight >= rightWidthNeeded && pos > endPos){if(ii == null){break;}if(pos == ii.position && !ii.scrolling){this.mItems.remove(itemIndex);this.mAdapter.destroyItem(this,pos,ii.object);if(DEBUG){Log.i(TAG,"populate() - destroyItem() with pos: " + pos + " view: " + ii.object);}ii = itemIndex < this.mItems.size()?this.mItems.get(itemIndex):null;}}else if(ii != null && pos == ii.position){extraWidthRight += ii.widthFactor;itemIndex++;ii = itemIndex < this.mItems.size()?this.mItems.get(itemIndex):null;}else {ii = this.addNewItem(pos,itemIndex);itemIndex++;extraWidthRight += ii.widthFactor;ii = itemIndex < this.mItems.size()?this.mItems.get(itemIndex):null;}}}this.calculatePageOffsets(curItem,curIndex,oldCurInfo);}if(DEBUG){Log.i(TAG,"Current page list:");for(var i=0;i < this.mItems.size();i++) {Log.i(TAG,"#" + i + ": page " + this.mItems.get(i).position);}}this.mAdapter.setPrimaryItem(this,this.mCurItem,curItem != null?curItem.object:null);this.mAdapter.finishUpdate(this);var childCount=this.getChildCount();for(var i=0;i < childCount;i++) {var child=this.getChildAt(i);var lp=child.getLayoutParams();lp.childIndex = i;if(!lp.isDecor && lp.widthFactor == 0){var ii=this.infoForChild(child);if(ii != null){lp.widthFactor = ii.widthFactor;lp.position = ii.position;}}}this.sortChildDrawingOrder();if(this.hasFocus()){var currentFocused=this.findFocus();var ii=currentFocused != null?this.infoForAnyChild(currentFocused):null;if(ii == null || ii.position != this.mCurItem){for(var i=0;i < this.getChildCount();i++) {var child=this.getChildAt(i);ii = this.infoForChild(child);if(ii != null && ii.position == this.mCurItem){if(child.requestFocus(focusDirection)){break;}}}}}}},{key:"sortChildDrawingOrder",value:function sortChildDrawingOrder(){if(this.mDrawingOrder != ViewPager.DRAW_ORDER_DEFAULT){if(this.mDrawingOrderedChildren == null){this.mDrawingOrderedChildren = new ArrayList();}else {this.mDrawingOrderedChildren.clear();}var childCount=this.getChildCount();for(var i=0;i < childCount;i++) {var child=this.getChildAt(i);this.mDrawingOrderedChildren.add(child);}this.mDrawingOrderedChildren.sort(ViewPager.sPositionComparator);}}},{key:"calculatePageOffsets",value:function calculatePageOffsets(curItem,curIndex,oldCurInfo){var N=this.mAdapter.getCount();var width=this.getClientWidth();var marginOffset=width > 0?this.mPageMargin / width:0;if(oldCurInfo != null){var oldCurPosition=oldCurInfo.position;if(oldCurPosition < curItem.position){var itemIndex=0;var ii=null;var _offset=oldCurInfo.offset + oldCurInfo.widthFactor + marginOffset;for(var _pos=oldCurPosition + 1;_pos <= curItem.position && itemIndex < this.mItems.size();_pos++) {ii = this.mItems.get(itemIndex);while(_pos > ii.position && itemIndex < this.mItems.size() - 1) {itemIndex++;ii = this.mItems.get(itemIndex);}while(_pos < ii.position) {_offset += this.mAdapter.getPageWidth(_pos) + marginOffset;_pos++;}ii.offset = _offset;_offset += ii.widthFactor + marginOffset;}}else if(oldCurPosition > curItem.position){var itemIndex=this.mItems.size() - 1;var ii=null;var _offset2=oldCurInfo.offset;for(var _pos2=oldCurPosition - 1;_pos2 >= curItem.position && itemIndex >= 0;_pos2--) {ii = this.mItems.get(itemIndex);while(_pos2 < ii.position && itemIndex > 0) {itemIndex--;ii = this.mItems.get(itemIndex);}while(_pos2 > ii.position) {_offset2 -= this.mAdapter.getPageWidth(_pos2) + marginOffset;_pos2--;}_offset2 -= ii.widthFactor + marginOffset;ii.offset = _offset2;}}}var itemCount=this.mItems.size();var offset=curItem.offset;var pos=curItem.position - 1;this.mFirstOffset = curItem.position == 0?curItem.offset:-Number.MAX_VALUE;this.mLastOffset = curItem.position == N - 1?curItem.offset + curItem.widthFactor - 1:Number.MAX_VALUE;for(var i=curIndex - 1;i >= 0;i--,pos--) {var ii=this.mItems.get(i);while(pos > ii.position) {offset -= this.mAdapter.getPageWidth(pos--) + marginOffset;}offset -= ii.widthFactor + marginOffset;ii.offset = offset;if(ii.position == 0)this.mFirstOffset = offset;}offset = curItem.offset + curItem.widthFactor + marginOffset;pos = curItem.position + 1;for(var i=curIndex + 1;i < itemCount;i++,pos++) {var ii=this.mItems.get(i);while(pos < ii.position) {offset += this.mAdapter.getPageWidth(pos++) + marginOffset;}if(ii.position == N - 1){this.mLastOffset = offset + ii.widthFactor - 1;}ii.offset = offset;offset += ii.widthFactor + marginOffset;}this.mNeedCalculatePageOffsets = false;}},{key:"addView",value:function addView(){for(var _len38=arguments.length,args=Array(_len38),_key38=0;_key38 < _len38;_key38++) {args[_key38] = arguments[_key38];}if(args.length === 3 && args[2] instanceof ViewGroup.LayoutParams){this._addViewOverride(args[0],args[1],args[2]);}else {_get(Object.getPrototypeOf(ViewPager.prototype),"addView",this).apply(this,args);}}},{key:"_addViewOverride",value:function _addViewOverride(child,index,params){if(!this.checkLayoutParams(params)){params = this.generateLayoutParams(params);}var lp=params;lp.isDecor = lp.isDecor || ViewPager.isImplDecor(child);if(this.mInLayout){if(lp != null && lp.isDecor){throw new Error("Cannot add pager decor view during layout");}lp.needsMeasure = true;this.addViewInLayout(child,index,params);}else {_get(Object.getPrototypeOf(ViewPager.prototype),"addView",this).call(this,child,index,params);}if(ViewPager.USE_CACHE){if(child.getVisibility() != View.GONE){child.setDrawingCacheEnabled(this.mScrollingCacheEnabled);}else {child.setDrawingCacheEnabled(false);}}}},{key:"removeView",value:function removeView(view){if(this.mInLayout){this.removeViewInLayout(view);}else {_get(Object.getPrototypeOf(ViewPager.prototype),"removeView",this).call(this,view);}}},{key:"infoForChild",value:function infoForChild(child){for(var i=0;i < this.mItems.size();i++) {var ii=this.mItems.get(i);if(this.mAdapter.isViewFromObject(child,ii.object)){return ii;}}return null;}},{key:"infoForAnyChild",value:function infoForAnyChild(child){var parent=undefined;while((parent = child.getParent()) != this) {if(parent == null || !(parent instanceof View)){return null;}child = parent;}return this.infoForChild(child);}},{key:"infoForPosition",value:function infoForPosition(position){for(var i=0;i < this.mItems.size();i++) {var ii=this.mItems.get(i);if(ii.position == position){return ii;}}return null;}},{key:"onAttachedToWindow",value:function onAttachedToWindow(){_get(Object.getPrototypeOf(ViewPager.prototype),"onAttachedToWindow",this).call(this);this.mFirstLayout = true;}},{key:"onMeasure",value:function onMeasure(widthMeasureSpec,heightMeasureSpec){this.setMeasuredDimension(ViewPager.getDefaultSize(0,widthMeasureSpec),ViewPager.getDefaultSize(0,heightMeasureSpec));var measuredWidth=this.getMeasuredWidth();var maxGutterSize=measuredWidth / 10;this.mGutterSize = Math.min(maxGutterSize,this.mDefaultGutterSize);var childWidthSize=measuredWidth - this.getPaddingLeft() - this.getPaddingRight();var childHeightSize=this.getMeasuredHeight() - this.getPaddingTop() - this.getPaddingBottom();var size=this.getChildCount();for(var i=0;i < size;++i) {var child=this.getChildAt(i);if(child.getVisibility() != View.GONE){var lp=child.getLayoutParams();if(lp != null && lp.isDecor){var hgrav=lp.gravity & Gravity.HORIZONTAL_GRAVITY_MASK;var vgrav=lp.gravity & Gravity.VERTICAL_GRAVITY_MASK;var widthMode=MeasureSpec.AT_MOST;var heightMode=MeasureSpec.AT_MOST;var consumeVertical=vgrav == Gravity.TOP || vgrav == Gravity.BOTTOM;var consumeHorizontal=hgrav == Gravity.LEFT || hgrav == Gravity.RIGHT;if(consumeVertical){widthMode = MeasureSpec.EXACTLY;}else if(consumeHorizontal){heightMode = MeasureSpec.EXACTLY;}var widthSize=childWidthSize;var heightSize=childHeightSize;if(lp.width != ViewPager.LayoutParams.WRAP_CONTENT){widthMode = MeasureSpec.EXACTLY;if(lp.width != ViewPager.LayoutParams.FILL_PARENT){widthSize = lp.width;}}if(lp.height != ViewPager.LayoutParams.WRAP_CONTENT){heightMode = MeasureSpec.EXACTLY;if(lp.height != ViewPager.LayoutParams.FILL_PARENT){heightSize = lp.height;}}var widthSpec=MeasureSpec.makeMeasureSpec(widthSize,widthMode);var heightSpec=MeasureSpec.makeMeasureSpec(heightSize,heightMode);child.measure(widthSpec,heightSpec);if(consumeVertical){childHeightSize -= child.getMeasuredHeight();}else if(consumeHorizontal){childWidthSize -= child.getMeasuredWidth();}}}}this.mChildWidthMeasureSpec = MeasureSpec.makeMeasureSpec(childWidthSize,MeasureSpec.EXACTLY);this.mChildHeightMeasureSpec = MeasureSpec.makeMeasureSpec(childHeightSize,MeasureSpec.EXACTLY);this.mInLayout = true;this.populate();this.mInLayout = false;size = this.getChildCount();for(var i=0;i < size;++i) {var child=this.getChildAt(i);if(child.getVisibility() != View.GONE){if(DEBUG)Log.v(TAG,"Measuring #" + i + " " + child + ": " + this.mChildWidthMeasureSpec);var lp=child.getLayoutParams();if(lp == null || !lp.isDecor){var widthSpec=MeasureSpec.makeMeasureSpec(childWidthSize * lp.widthFactor,MeasureSpec.EXACTLY);child.measure(widthSpec,this.mChildHeightMeasureSpec);}}}}},{key:"onSizeChanged",value:function onSizeChanged(w,h,oldw,oldh){_get(Object.getPrototypeOf(ViewPager.prototype),"onSizeChanged",this).call(this,w,h,oldw,oldh);if(w != oldw){this.recomputeScrollPosition(w,oldw,this.mPageMargin,this.mPageMargin);}}},{key:"recomputeScrollPosition",value:function recomputeScrollPosition(width,oldWidth,margin,oldMargin){if(oldWidth > 0 && !this.mItems.isEmpty()){var widthWithMargin=width - this.getPaddingLeft() - this.getPaddingRight() + margin;var oldWidthWithMargin=oldWidth - this.getPaddingLeft() - this.getPaddingRight() + oldMargin;var xpos=this.getScrollX();var pageOffset=xpos / oldWidthWithMargin;var newOffsetPixels=Math.floor(pageOffset * widthWithMargin);this.scrollTo(newOffsetPixels,this.getScrollY());if(!this.mScroller.isFinished()){var newDuration=this.mScroller.getDuration() - this.mScroller.timePassed();var targetInfo=this.infoForPosition(this.mCurItem);this.mScroller.startScroll(newOffsetPixels,0,Math.floor(targetInfo.offset * width),0,newDuration);}}else {var ii=this.infoForPosition(this.mCurItem);var scrollOffset=ii != null?Math.min(ii.offset,this.mLastOffset):0;var scrollPos=Math.floor(scrollOffset * (width - this.getPaddingLeft() - this.getPaddingRight()));if(scrollPos != this.getScrollX()){this.completeScroll(false);this.scrollTo(scrollPos,this.getScrollY());}}}},{key:"onLayout",value:function onLayout(changed,l,t,r,b){var count=this.getChildCount();var width=r - l;var height=b - t;var paddingLeft=this.getPaddingLeft();var paddingTop=this.getPaddingTop();var paddingRight=this.getPaddingRight();var paddingBottom=this.getPaddingBottom();var scrollX=this.getScrollX();var decorCount=0;for(var i=0;i < count;i++) {var child=this.getChildAt(i);if(child.getVisibility() != View.GONE){var lp=child.getLayoutParams();var childLeft=0;var childTop=0;if(lp.isDecor){var hgrav=lp.gravity & Gravity.HORIZONTAL_GRAVITY_MASK;var vgrav=lp.gravity & Gravity.VERTICAL_GRAVITY_MASK;switch(hgrav){default:childLeft = paddingLeft;break;case Gravity.LEFT:childLeft = paddingLeft;paddingLeft += child.getMeasuredWidth();break;case Gravity.CENTER_HORIZONTAL:childLeft = Math.max((width - child.getMeasuredWidth()) / 2,paddingLeft);break;case Gravity.RIGHT:childLeft = width - paddingRight - child.getMeasuredWidth();paddingRight += child.getMeasuredWidth();break;}switch(vgrav){default:childTop = paddingTop;break;case Gravity.TOP:childTop = paddingTop;paddingTop += child.getMeasuredHeight();break;case Gravity.CENTER_VERTICAL:childTop = Math.max((height - child.getMeasuredHeight()) / 2,paddingTop);break;case Gravity.BOTTOM:childTop = height - paddingBottom - child.getMeasuredHeight();paddingBottom += child.getMeasuredHeight();break;}childLeft += scrollX;child.layout(childLeft,childTop,childLeft + child.getMeasuredWidth(),childTop + child.getMeasuredHeight());decorCount++;}}}var childWidth=width - paddingLeft - paddingRight;for(var i=0;i < count;i++) {var child=this.getChildAt(i);if(child.getVisibility() != View.GONE){var lp=child.getLayoutParams();var ii=undefined;if(!lp.isDecor && (ii = this.infoForChild(child)) != null){var loff=Math.floor(childWidth * ii.offset);var childLeft=paddingLeft + loff;var childTop=paddingTop;if(lp.needsMeasure){lp.needsMeasure = false;var widthSpec=MeasureSpec.makeMeasureSpec(Math.floor(childWidth * lp.widthFactor),MeasureSpec.EXACTLY);var heightSpec=MeasureSpec.makeMeasureSpec(Math.floor(height - paddingTop - paddingBottom),MeasureSpec.EXACTLY);child.measure(widthSpec,heightSpec);}if(DEBUG)Log.v(TAG,"Positioning #" + i + " " + child + " f=" + ii.object + ":" + childLeft + "," + childTop + " " + child.getMeasuredWidth() + "x" + child.getMeasuredHeight());child.layout(childLeft,childTop,childLeft + child.getMeasuredWidth(),childTop + child.getMeasuredHeight());}}}this.mTopPageBounds = paddingTop;this.mBottomPageBounds = height - paddingBottom;this.mDecorChildCount = decorCount;if(this.mFirstLayout){this.scrollToItem(this.mCurItem,false,0,false);}this.mFirstLayout = false;}},{key:"computeScroll",value:function computeScroll(){if(!this.mScroller.isFinished() && this.mScroller.computeScrollOffset()){var oldX=this.getScrollX();var oldY=this.getScrollY();var x=this.mScroller.getCurrX();var y=this.mScroller.getCurrY();if(oldX != x || oldY != y){this.scrollTo(x,y);if(!this.pageScrolled(x)){this.mScroller.abortAnimation();this.scrollTo(0,y);}}this.postInvalidateOnAnimation();return;}this.completeScroll(true);}},{key:"pageScrolled",value:function pageScrolled(xpos){if(this.mItems.size() == 0){this.mCalledSuper = false;this.onPageScrolled(0,0,0);if(!this.mCalledSuper){throw new Error("onPageScrolled did not call superclass implementation");}return false;}var ii=this.infoForCurrentScrollPosition();var width=this.getClientWidth();var widthWithMargin=width + this.mPageMargin;var marginOffset=this.mPageMargin / width;var currentPage=ii.position;var pageOffset=(xpos / width - ii.offset) / (ii.widthFactor + marginOffset);var offsetPixels=Math.floor(pageOffset * widthWithMargin);this.mCalledSuper = false;this.onPageScrolled(currentPage,pageOffset,offsetPixels);if(!this.mCalledSuper){throw new Error("onPageScrolled did not call superclass implementation");}return true;}},{key:"onPageScrolled",value:function onPageScrolled(position,offset,offsetPixels){if(this.mDecorChildCount > 0){var _scrollX8=this.getScrollX();var paddingLeft=this.getPaddingLeft();var paddingRight=this.getPaddingRight();var width=this.getWidth();var childCount=this.getChildCount();for(var i=0;i < childCount;i++) {var child=this.getChildAt(i);var lp=child.getLayoutParams();if(!lp.isDecor)continue;var hgrav=lp.gravity & Gravity.HORIZONTAL_GRAVITY_MASK;var childLeft=0;switch(hgrav){default:childLeft = paddingLeft;break;case Gravity.LEFT:childLeft = paddingLeft;paddingLeft += child.getWidth();break;case Gravity.CENTER_HORIZONTAL:childLeft = Math.max((width - child.getMeasuredWidth()) / 2,paddingLeft);break;case Gravity.RIGHT:childLeft = width - paddingRight - child.getMeasuredWidth();paddingRight += child.getMeasuredWidth();break;}childLeft += _scrollX8;var childOffset=childLeft - child.getLeft();if(childOffset != 0){child.offsetLeftAndRight(childOffset);}}}this.dispatchOnPageScrolled(position,offset,offsetPixels);if(this.mPageTransformer != null){var _scrollX9=this.getScrollX();var childCount=this.getChildCount();for(var i=0;i < childCount;i++) {var child=this.getChildAt(i);var lp=child.getLayoutParams();if(lp.isDecor)continue;var transformPos=(child.getLeft() - _scrollX9) / this.getClientWidth();this.mPageTransformer.transformPage(child,transformPos);}}this.mCalledSuper = true;}},{key:"dispatchOnPageScrolled",value:function dispatchOnPageScrolled(position,offset,offsetPixels){if(this.mOnPageChangeListener != null){this.mOnPageChangeListener.onPageScrolled(position,offset,offsetPixels);}if(this.mOnPageChangeListeners != null){for(var i=0,z=this.mOnPageChangeListeners.size();i < z;i++) {var listener=this.mOnPageChangeListeners.get(i);if(listener != null){listener.onPageScrolled(position,offset,offsetPixels);}}}if(this.mInternalPageChangeListener != null){this.mInternalPageChangeListener.onPageScrolled(position,offset,offsetPixels);}}},{key:"dispatchOnPageSelected",value:function dispatchOnPageSelected(position){if(this.mOnPageChangeListener != null){this.mOnPageChangeListener.onPageSelected(position);}if(this.mOnPageChangeListeners != null){for(var i=0,z=this.mOnPageChangeListeners.size();i < z;i++) {var listener=this.mOnPageChangeListeners.get(i);if(listener != null){listener.onPageSelected(position);}}}if(this.mInternalPageChangeListener != null){this.mInternalPageChangeListener.onPageSelected(position);}}},{key:"dispatchOnScrollStateChanged",value:function dispatchOnScrollStateChanged(state){if(this.mOnPageChangeListener != null){this.mOnPageChangeListener.onPageScrollStateChanged(state);}if(this.mOnPageChangeListeners != null){for(var i=0,z=this.mOnPageChangeListeners.size();i < z;i++) {var listener=this.mOnPageChangeListeners.get(i);if(listener != null){listener.onPageScrollStateChanged(state);}}}if(this.mInternalPageChangeListener != null){this.mInternalPageChangeListener.onPageScrollStateChanged(state);}}},{key:"completeScroll",value:function completeScroll(postEvents){var needPopulate=this.mScrollState == ViewPager.SCROLL_STATE_SETTLING;if(needPopulate){this.setScrollingCacheEnabled(false);this.mScroller.abortAnimation();var oldX=this.getScrollX();var oldY=this.getScrollY();var x=this.mScroller.getCurrX();var y=this.mScroller.getCurrY();if(oldX != x || oldY != y){this.scrollTo(x,y);if(x != oldX){this.pageScrolled(x);}}}this.mPopulatePending = false;for(var i=0;i < this.mItems.size();i++) {var ii=this.mItems.get(i);if(ii.scrolling){needPopulate = true;ii.scrolling = false;}}if(needPopulate){if(postEvents){this.postOnAnimation(this.mEndScrollRunnable);}else {this.mEndScrollRunnable.run();}}}},{key:"isGutterDrag",value:function isGutterDrag(x,dx){return x < this.mGutterSize && dx > 0 || x > this.getWidth() - this.mGutterSize && dx < 0;}},{key:"enableLayers",value:function enableLayers(enable){}},{key:"onInterceptTouchEvent",value:function onInterceptTouchEvent(ev){ /*
                         * This method JUST determines whether we want to intercept the motion.
                         * If we return true, onMotionEvent will be called and we do the actual
                         * scrolling there.
                         */var action=ev.getAction() & MotionEvent.ACTION_MASK;if(action == MotionEvent.ACTION_CANCEL || action == MotionEvent.ACTION_UP){if(DEBUG)Log.v(TAG,"Intercept done!");this.resetTouch();return false;}if(action != MotionEvent.ACTION_DOWN){if(this.mIsBeingDragged){if(DEBUG)Log.v(TAG,"Intercept returning true!");return true;}if(this.mIsUnableToDrag){if(DEBUG)Log.v(TAG,"Intercept returning false!");return false;}}switch(action){case MotionEvent.ACTION_MOVE:{var activePointerId=this.mActivePointerId;if(activePointerId == ViewPager.INVALID_POINTER){break;}var pointerIndex=ev.findPointerIndex(activePointerId);var x=ev.getX(pointerIndex);var dx=x - this.mLastMotionX;var xDiff=Math.abs(dx);var y=ev.getY(pointerIndex);var yDiff=Math.abs(y - this.mInitialMotionY);if(DEBUG)Log.v(TAG,"Moved x to " + x + "," + y + " diff=" + xDiff + "," + yDiff);if(dx != 0 && !this.isGutterDrag(this.mLastMotionX,dx) && this.canScroll(this,false,Math.floor(dx),Math.floor(x),Math.floor(y))){this.mLastMotionX = x;this.mLastMotionY = y;this.mIsUnableToDrag = true;return false;}if(xDiff > this.mTouchSlop && xDiff * 0.5 > yDiff){if(DEBUG)Log.v(TAG,"Starting drag!");this.mIsBeingDragged = true;this.requestParentDisallowInterceptTouchEvent(true);this.setScrollState(ViewPager.SCROLL_STATE_DRAGGING);this.mLastMotionX = dx > 0?this.mInitialMotionX + this.mTouchSlop:this.mInitialMotionX - this.mTouchSlop;this.mLastMotionY = y;this.setScrollingCacheEnabled(true);}else if(yDiff > this.mTouchSlop){if(DEBUG)Log.v(TAG,"Starting unable to drag!");this.mIsUnableToDrag = true;}if(this.mIsBeingDragged){if(this.performDrag(x)){this.postInvalidateOnAnimation();}}break;}case MotionEvent.ACTION_DOWN:{this.mLastMotionX = this.mInitialMotionX = ev.getX();this.mLastMotionY = this.mInitialMotionY = ev.getY();this.mActivePointerId = ev.getPointerId(0);this.mIsUnableToDrag = false;this.mScroller.computeScrollOffset();if(this.mScrollState == ViewPager.SCROLL_STATE_SETTLING && Math.abs(this.mScroller.getFinalX() - this.mScroller.getCurrX()) > this.mCloseEnough){this.mScroller.abortAnimation();this.mPopulatePending = false;this.populate();this.mIsBeingDragged = true;this.requestParentDisallowInterceptTouchEvent(true);this.setScrollState(ViewPager.SCROLL_STATE_DRAGGING);}else {this.completeScroll(false);this.mIsBeingDragged = false;}if(DEBUG)Log.v(TAG,"Down at " + this.mLastMotionX + "," + this.mLastMotionY + " mIsBeingDragged=" + this.mIsBeingDragged + "mIsUnableToDrag=" + this.mIsUnableToDrag);break;}case MotionEvent.ACTION_POINTER_UP:this.onSecondaryPointerUp(ev);break;}if(this.mVelocityTracker == null){this.mVelocityTracker = VelocityTracker.obtain();}this.mVelocityTracker.addMovement(ev);return this.mIsBeingDragged;}},{key:"onTouchEvent",value:function onTouchEvent(ev){if(this.mFakeDragging){return true;}if(ev.getAction() == MotionEvent.ACTION_DOWN && ev.getEdgeFlags() != 0){return false;}if(this.mAdapter == null || this.mAdapter.getCount() == 0){return false;}if(this.mVelocityTracker == null){this.mVelocityTracker = VelocityTracker.obtain();}this.mVelocityTracker.addMovement(ev);var action=ev.getAction();var needsInvalidate=false;switch(action & MotionEvent.ACTION_MASK){case MotionEvent.ACTION_DOWN:{this.mScroller.abortAnimation();this.mPopulatePending = false;this.populate();this.mLastMotionX = this.mInitialMotionX = ev.getX();this.mLastMotionY = this.mInitialMotionY = ev.getY();this.mActivePointerId = ev.getPointerId(0);break;}case MotionEvent.ACTION_MOVE:if(!this.mIsBeingDragged){var pointerIndex=ev.findPointerIndex(this.mActivePointerId);if(pointerIndex == -1){needsInvalidate = this.resetTouch();break;}var x=ev.getX(pointerIndex);var xDiff=Math.abs(x - this.mLastMotionX);var y=ev.getY(pointerIndex);var yDiff=Math.abs(y - this.mLastMotionY);if(DEBUG)Log.v(TAG,"Moved x to " + x + "," + y + " diff=" + xDiff + "," + yDiff);if(xDiff > this.mTouchSlop && xDiff > yDiff){if(DEBUG)Log.v(TAG,"Starting drag!");this.mIsBeingDragged = true;this.requestParentDisallowInterceptTouchEvent(true);this.mLastMotionX = x - this.mInitialMotionX > 0?this.mInitialMotionX + this.mTouchSlop:this.mInitialMotionX - this.mTouchSlop;this.mLastMotionY = y;this.setScrollState(ViewPager.SCROLL_STATE_DRAGGING);this.setScrollingCacheEnabled(true);var _parent12=this.getParent();if(_parent12 != null){_parent12.requestDisallowInterceptTouchEvent(true);}}}if(this.mIsBeingDragged){var activePointerIndex=ev.findPointerIndex(this.mActivePointerId);var x=ev.getX(activePointerIndex);needsInvalidate = needsInvalidate || this.performDrag(x);}break;case MotionEvent.ACTION_UP:if(this.mIsBeingDragged){var velocityTracker=this.mVelocityTracker;velocityTracker.computeCurrentVelocity(1000,this.mMaximumVelocity);var initialVelocity=velocityTracker.getXVelocity(this.mActivePointerId);this.mPopulatePending = true;var width=this.getClientWidth();var _scrollX10=this.getScrollX();var ii=this.infoForCurrentScrollPosition();var currentPage=ii.position;var pageOffset=(_scrollX10 / width - ii.offset) / ii.widthFactor;var activePointerIndex=ev.findPointerIndex(this.mActivePointerId);var x=ev.getX(activePointerIndex);var totalDelta=x - this.mInitialMotionX;var nextPage=this.determineTargetPage(currentPage,pageOffset,initialVelocity,totalDelta);this.setCurrentItemInternal(nextPage,true,true,initialVelocity);needsInvalidate = this.resetTouch();}break;case MotionEvent.ACTION_CANCEL:if(this.mIsBeingDragged){this.scrollToItem(this.mCurItem,true,0,false);needsInvalidate = this.resetTouch();}break;case MotionEvent.ACTION_POINTER_DOWN:{var index=ev.getActionIndex();var x=ev.getX(index);this.mLastMotionX = x;this.mActivePointerId = ev.getPointerId(index);break;}case MotionEvent.ACTION_POINTER_UP:this.onSecondaryPointerUp(ev);this.mLastMotionX = ev.getX(ev.findPointerIndex(this.mActivePointerId));break;}if(needsInvalidate){this.postInvalidateOnAnimation();}return true;}},{key:"resetTouch",value:function resetTouch(){var needsInvalidate=false;this.mActivePointerId = ViewPager.INVALID_POINTER;this.endDrag();return needsInvalidate;}},{key:"requestParentDisallowInterceptTouchEvent",value:function requestParentDisallowInterceptTouchEvent(disallowIntercept){var parent=this.getParent();if(parent != null){parent.requestDisallowInterceptTouchEvent(disallowIntercept);}}},{key:"performDrag",value:function performDrag(x){var needsInvalidate=false;var deltaX=this.mLastMotionX - x;this.mLastMotionX = x;var oldScrollX=this.getScrollX();var scrollX=oldScrollX + deltaX;var width=this.getClientWidth();var leftBound=width * this.mFirstOffset;var rightBound=width * this.mLastOffset;var leftAbsolute=true;var rightAbsolute=true;var firstItem=this.mItems.get(0);var lastItem=this.mItems.get(this.mItems.size() - 1);if(firstItem.position != 0){leftAbsolute = false;leftBound = firstItem.offset * width;}if(lastItem.position != this.mAdapter.getCount() - 1){rightAbsolute = false;rightBound = lastItem.offset * width;}if(scrollX < leftBound){if(leftAbsolute){var over=leftBound - scrollX;needsInvalidate = false;}scrollX -= deltaX / 2;}else if(scrollX > rightBound){if(rightAbsolute){var over=scrollX - rightBound;needsInvalidate = false;}scrollX -= deltaX / 2;}this.mLastMotionX += scrollX - Math.floor(scrollX);this.scrollTo(scrollX,this.getScrollY());this.pageScrolled(scrollX);return needsInvalidate;}},{key:"infoForCurrentScrollPosition",value:function infoForCurrentScrollPosition(){var width=this.getClientWidth();var scrollOffset=width > 0?this.getScrollX() / width:0;var marginOffset=width > 0?this.mPageMargin / width:0;var lastPos=-1;var lastOffset=0;var lastWidth=0;var first=true;var lastItem=null;for(var i=0;i < this.mItems.size();i++) {var ii=this.mItems.get(i);var offset=undefined;if(!first && ii.position != lastPos + 1){ii = this.mTempItem;ii.offset = lastOffset + lastWidth + marginOffset;ii.position = lastPos + 1;ii.widthFactor = this.mAdapter.getPageWidth(ii.position);i--;}offset = ii.offset;var leftBound=offset;var rightBound=offset + ii.widthFactor + marginOffset;if(first || scrollOffset >= leftBound){if(scrollOffset < rightBound || i == this.mItems.size() - 1){return ii;}}else {return lastItem;}first = false;lastPos = ii.position;lastOffset = offset;lastWidth = ii.widthFactor;lastItem = ii;}return lastItem;}},{key:"determineTargetPage",value:function determineTargetPage(currentPage,pageOffset,velocity,deltaX){var targetPage=undefined;if(Math.abs(deltaX) > this.mFlingDistance && Math.abs(velocity) > this.mMinimumVelocity){targetPage = velocity > 0?currentPage:currentPage + 1;}else {var truncator=currentPage >= this.mCurItem?0.4:0.6;targetPage = Math.floor(currentPage + pageOffset + truncator);}if(this.mItems.size() > 0){var firstItem=this.mItems.get(0);var lastItem=this.mItems.get(this.mItems.size() - 1);targetPage = Math.max(firstItem.position,Math.min(targetPage,lastItem.position));}return targetPage;}},{key:"draw",value:function draw(canvas){_get(Object.getPrototypeOf(ViewPager.prototype),"draw",this).call(this,canvas);var needsInvalidate=false;if(needsInvalidate){this.postInvalidateOnAnimation();}}},{key:"onDraw",value:function onDraw(canvas){_get(Object.getPrototypeOf(ViewPager.prototype),"onDraw",this).call(this,canvas);if(this.mPageMargin > 0 && this.mMarginDrawable != null && this.mItems.size() > 0 && this.mAdapter != null){var _scrollX11=this.getScrollX();var width=this.getWidth();var marginOffset=this.mPageMargin / width;var itemIndex=0;var ii=this.mItems.get(0);var offset=ii.offset;var itemCount=this.mItems.size();var firstPos=ii.position;var lastPos=this.mItems.get(itemCount - 1).position;for(var pos=firstPos;pos < lastPos;pos++) {while(pos > ii.position && itemIndex < itemCount) {ii = this.mItems.get(++itemIndex);}var drawAt=undefined;if(pos == ii.position){drawAt = (ii.offset + ii.widthFactor) * width;offset = ii.offset + ii.widthFactor + marginOffset;}else {var widthFactor=this.mAdapter.getPageWidth(pos);drawAt = (offset + widthFactor) * width;offset += widthFactor + marginOffset;}if(drawAt + this.mPageMargin > _scrollX11){this.mMarginDrawable.setBounds(drawAt,this.mTopPageBounds,drawAt + this.mPageMargin,this.mBottomPageBounds);this.mMarginDrawable.draw(canvas);}if(drawAt > _scrollX11 + width){break;}}}}},{key:"beginFakeDrag",value:function beginFakeDrag(){if(this.mIsBeingDragged){return false;}this.mFakeDragging = true;this.setScrollState(ViewPager.SCROLL_STATE_DRAGGING);this.mInitialMotionX = this.mLastMotionX = 0;if(this.mVelocityTracker == null){this.mVelocityTracker = VelocityTracker.obtain();}else {this.mVelocityTracker.clear();}var time=android.os.SystemClock.uptimeMillis();var ev=MotionEvent.obtainWithAction(time,time,MotionEvent.ACTION_DOWN,0,0,0);this.mVelocityTracker.addMovement(ev);ev.recycle();this.mFakeDragBeginTime = time;return true;}},{key:"endFakeDrag",value:function endFakeDrag(){if(!this.mFakeDragging){throw new Error("No fake drag in progress. Call beginFakeDrag first.");}var velocityTracker=this.mVelocityTracker;velocityTracker.computeCurrentVelocity(1000,this.mMaximumVelocity);var initialVelocity=Math.floor(velocityTracker.getXVelocity(this.mActivePointerId));this.mPopulatePending = true;var width=this.getClientWidth();var scrollX=this.getScrollX();var ii=this.infoForCurrentScrollPosition();var currentPage=ii.position;var pageOffset=(scrollX / width - ii.offset) / ii.widthFactor;var totalDelta=Math.floor(this.mLastMotionX - this.mInitialMotionX);var nextPage=this.determineTargetPage(currentPage,pageOffset,initialVelocity,totalDelta);this.setCurrentItemInternal(nextPage,true,true,initialVelocity);this.endDrag();this.mFakeDragging = false;}},{key:"fakeDragBy",value:function fakeDragBy(xOffset){if(!this.mFakeDragging){throw new Error("No fake drag in progress. Call beginFakeDrag first.");}this.mLastMotionX += xOffset;var oldScrollX=this.getScrollX();var scrollX=oldScrollX - xOffset;var width=this.getClientWidth();var leftBound=width * this.mFirstOffset;var rightBound=width * this.mLastOffset;var firstItem=this.mItems.get(0);var lastItem=this.mItems.get(this.mItems.size() - 1);if(firstItem.position != 0){leftBound = firstItem.offset * width;}if(lastItem.position != this.mAdapter.getCount() - 1){rightBound = lastItem.offset * width;}if(scrollX < leftBound){scrollX = leftBound;}else if(scrollX > rightBound){scrollX = rightBound;}this.mLastMotionX += scrollX - Math.floor(scrollX);this.scrollTo(Math.floor(scrollX),this.getScrollY());this.pageScrolled(Math.floor(scrollX));var time=android.os.SystemClock.uptimeMillis();var ev=MotionEvent.obtainWithAction(this.mFakeDragBeginTime,time,MotionEvent.ACTION_MOVE,this.mLastMotionX,0,0);this.mVelocityTracker.addMovement(ev);ev.recycle();}},{key:"isFakeDragging",value:function isFakeDragging(){return this.mFakeDragging;}},{key:"onSecondaryPointerUp",value:function onSecondaryPointerUp(ev){var pointerIndex=ev.getActionIndex();var pointerId=ev.getPointerId(pointerIndex);if(pointerId == this.mActivePointerId){var newPointerIndex=pointerIndex == 0?1:0;this.mLastMotionX = ev.getX(newPointerIndex);this.mActivePointerId = ev.getPointerId(newPointerIndex);if(this.mVelocityTracker != null){this.mVelocityTracker.clear();}}}},{key:"endDrag",value:function endDrag(){this.mIsBeingDragged = false;this.mIsUnableToDrag = false;if(this.mVelocityTracker != null){this.mVelocityTracker.recycle();this.mVelocityTracker = null;}}},{key:"setScrollingCacheEnabled",value:function setScrollingCacheEnabled(enabled){if(this.mScrollingCacheEnabled != enabled){this.mScrollingCacheEnabled = enabled;if(ViewPager.USE_CACHE){var size=this.getChildCount();for(var i=0;i < size;++i) {var child=this.getChildAt(i);if(child.getVisibility() != View.GONE){child.setDrawingCacheEnabled(enabled);}}}}}},{key:"canScrollHorizontally",value:function canScrollHorizontally(direction){if(this.mAdapter == null){return false;}var width=this.getClientWidth();var scrollX=this.getScrollX();if(direction < 0){return scrollX > width * this.mFirstOffset;}else if(direction > 0){return scrollX < width * this.mLastOffset;}else {return false;}}},{key:"canScroll",value:function canScroll(v,checkV,dx,x,y){if(v instanceof ViewGroup){var group=v;var _scrollX12=v.getScrollX();var _scrollY11=v.getScrollY();var count=group.getChildCount();for(var i=count - 1;i >= 0;i--) {var child=group.getChildAt(i);if(x + _scrollX12 >= child.getLeft() && x + _scrollX12 < child.getRight() && y + _scrollY11 >= child.getTop() && y + _scrollY11 < child.getBottom() && this.canScroll(child,true,dx,x + _scrollX12 - child.getLeft(),y + _scrollY11 - child.getTop())){return true;}}}return checkV && v.canScrollHorizontally(-dx);}},{key:"dispatchKeyEvent",value:function dispatchKeyEvent(event){return _get(Object.getPrototypeOf(ViewPager.prototype),"dispatchKeyEvent",this).call(this,event) || this.executeKeyEvent(event);}},{key:"executeKeyEvent",value:function executeKeyEvent(event){var handled=false;if(event.getAction() == KeyEvent.ACTION_DOWN){switch(event.getKeyCode()){case KeyEvent.KEYCODE_DPAD_LEFT:handled = this.arrowScroll(View.FOCUS_LEFT);break;case KeyEvent.KEYCODE_DPAD_RIGHT:handled = this.arrowScroll(View.FOCUS_RIGHT);break;case KeyEvent.KEYCODE_TAB:if(event.isShiftPressed()){handled = this.arrowScroll(View.FOCUS_BACKWARD);}else {handled = this.arrowScroll(View.FOCUS_FORWARD);}break;}}return handled;}},{key:"arrowScroll",value:function arrowScroll(direction){var currentFocused=this.findFocus();if(currentFocused == this){currentFocused = null;}else if(currentFocused != null){var isChild=false;for(var _parent13=currentFocused.getParent();_parent13 instanceof ViewGroup;_parent13 = _parent13.getParent()) {if(_parent13 == this){isChild = true;break;}}if(!isChild){var sb=new java.lang.StringBuilder();sb.append(currentFocused.toString());for(var _parent14=currentFocused.getParent();_parent14 instanceof ViewGroup;_parent14 = _parent14.getParent()) {sb.append(" => ").append(_parent14.toString());}Log.e(TAG,"arrowScroll tried to find focus based on non-child " + "current focused view " + sb.toString());currentFocused = null;}}var handled=false;var nextFocused=android.view.FocusFinder.getInstance().findNextFocus(this,currentFocused,direction);if(nextFocused != null && nextFocused != currentFocused){if(direction == View.FOCUS_LEFT){var nextLeft=this.getChildRectInPagerCoordinates(this.mTempRect,nextFocused).left;var currLeft=this.getChildRectInPagerCoordinates(this.mTempRect,currentFocused).left;if(currentFocused != null && nextLeft >= currLeft){handled = this.pageLeft();}else {handled = nextFocused.requestFocus();}}else if(direction == View.FOCUS_RIGHT){var nextLeft=this.getChildRectInPagerCoordinates(this.mTempRect,nextFocused).left;var currLeft=this.getChildRectInPagerCoordinates(this.mTempRect,currentFocused).left;if(currentFocused != null && nextLeft <= currLeft){handled = this.pageRight();}else {handled = nextFocused.requestFocus();}}}else if(direction == View.FOCUS_LEFT || direction == View.FOCUS_BACKWARD){handled = this.pageLeft();}else if(direction == View.FOCUS_RIGHT || direction == View.FOCUS_FORWARD){handled = this.pageRight();}return handled;}},{key:"getChildRectInPagerCoordinates",value:function getChildRectInPagerCoordinates(outRect,child){if(outRect == null){outRect = new Rect();}if(child == null){outRect.set(0,0,0,0);return outRect;}outRect.left = child.getLeft();outRect.right = child.getRight();outRect.top = child.getTop();outRect.bottom = child.getBottom();var parent=child.getParent();while(parent instanceof ViewGroup && parent != this) {var group=parent;outRect.left += group.getLeft();outRect.right += group.getRight();outRect.top += group.getTop();outRect.bottom += group.getBottom();parent = group.getParent();}return outRect;}},{key:"pageLeft",value:function pageLeft(){if(this.mCurItem > 0){this.setCurrentItem(this.mCurItem - 1,true);return true;}return false;}},{key:"pageRight",value:function pageRight(){if(this.mAdapter != null && this.mCurItem < this.mAdapter.getCount() - 1){this.setCurrentItem(this.mCurItem + 1,true);return true;}return false;}},{key:"addFocusables",value:function addFocusables(views,direction,focusableMode){var focusableCount=views.size();var descendantFocusability=this.getDescendantFocusability();if(descendantFocusability != ViewGroup.FOCUS_BLOCK_DESCENDANTS){for(var i=0;i < this.getChildCount();i++) {var child=this.getChildAt(i);if(child.getVisibility() == View.VISIBLE){var ii=this.infoForChild(child);if(ii != null && ii.position == this.mCurItem){child.addFocusables(views,direction,focusableMode);}}}}if(descendantFocusability != ViewGroup.FOCUS_AFTER_DESCENDANTS || focusableCount == views.size()){if(!this.isFocusable()){return;}if((focusableMode & ViewGroup.FOCUSABLES_TOUCH_MODE) == ViewGroup.FOCUSABLES_TOUCH_MODE && this.isInTouchMode() && !this.isFocusableInTouchMode()){return;}if(views != null){views.add(this);}}}},{key:"addTouchables",value:function addTouchables(views){for(var i=0;i < this.getChildCount();i++) {var child=this.getChildAt(i);if(child.getVisibility() == View.VISIBLE){var ii=this.infoForChild(child);if(ii != null && ii.position == this.mCurItem){child.addTouchables(views);}}}}},{key:"onRequestFocusInDescendants",value:function onRequestFocusInDescendants(direction,previouslyFocusedRect){var index=undefined;var increment=undefined;var end=undefined;var count=this.getChildCount();if((direction & View.FOCUS_FORWARD) != 0){index = 0;increment = 1;end = count;}else {index = count - 1;increment = -1;end = -1;}for(var i=index;i != end;i += increment) {var child=this.getChildAt(i);if(child.getVisibility() == View.VISIBLE){var ii=this.infoForChild(child);if(ii != null && ii.position == this.mCurItem){if(child.requestFocus(direction,previouslyFocusedRect)){return true;}}}}return false;}},{key:"generateDefaultLayoutParams",value:function generateDefaultLayoutParams(){return new ViewPager.LayoutParams();}},{key:"generateLayoutParams",value:function generateLayoutParams(p){return this.generateDefaultLayoutParams();}},{key:"checkLayoutParams",value:function checkLayoutParams(p){return p instanceof ViewPager.LayoutParams && _get(Object.getPrototypeOf(ViewPager.prototype),"checkLayoutParams",this).call(this,p);}}],[{key:"isImplDecor",value:function isImplDecor(view){return view[SymbolDecor] || view.constructor[SymbolDecor];}},{key:"setClassImplDecor",value:function setClassImplDecor(clazz){clazz[SymbolDecor] = true;}}]);return ViewPager;})(ViewGroup);ViewPager.COMPARATOR = function(lhs,rhs){return lhs.position - rhs.position;};ViewPager.USE_CACHE = false;ViewPager.DEFAULT_OFFSCREEN_PAGES = 1;ViewPager.MAX_SETTLE_DURATION = 600;ViewPager.MIN_DISTANCE_FOR_FLING = 25;ViewPager.DEFAULT_GUTTER_SIZE = 16;ViewPager.MIN_FLING_VELOCITY = 400;ViewPager.sInterpolator = {getInterpolation:function getInterpolation(t){t -= 1.0;return t * t * t * t * t + 1.0;}};ViewPager.INVALID_POINTER = -1;ViewPager.CLOSE_ENOUGH = 2;ViewPager.DRAW_ORDER_DEFAULT = 0;ViewPager.DRAW_ORDER_FORWARD = 1;ViewPager.DRAW_ORDER_REVERSE = 2;ViewPager.sPositionComparator = function(lhs,rhs){var llp=lhs.getLayoutParams();var rlp=rhs.getLayoutParams();if(llp.isDecor != rlp.isDecor){return llp.isDecor?1:-1;}return llp.position - rlp.position;};ViewPager.SCROLL_STATE_IDLE = 0;ViewPager.SCROLL_STATE_DRAGGING = 1;ViewPager.SCROLL_STATE_SETTLING = 2;view_6.ViewPager = ViewPager;(function(ViewPager){var SimpleOnPageChangeListener=(function(){function SimpleOnPageChangeListener(){_classCallCheck(this,SimpleOnPageChangeListener);}_createClass(SimpleOnPageChangeListener,[{key:"onPageScrolled",value:function onPageScrolled(position,positionOffset,positionOffsetPixels){}},{key:"onPageSelected",value:function onPageSelected(position){}},{key:"onPageScrollStateChanged",value:function onPageScrollStateChanged(state){}}]);return SimpleOnPageChangeListener;})();ViewPager.SimpleOnPageChangeListener = SimpleOnPageChangeListener;var LayoutParams=(function(_ViewGroup$LayoutParams2){_inherits(LayoutParams,_ViewGroup$LayoutParams2);function LayoutParams(){var _this35=this;_classCallCheck(this,LayoutParams);_get(Object.getPrototypeOf(LayoutParams.prototype),"constructor",this).call(this,LayoutParams.MATCH_PARENT,LayoutParams.MATCH_PARENT);this.isDecor = false;this.gravity = 0;this.widthFactor = 0;this.needsMeasure = false;this.position = 0;this.childIndex = 0;this._attrBinder.addAttr('gravity',function(value){_this35.gravity = _this35._attrBinder.parseGravity(value,_this35.gravity);},function(){return _this35.gravity;});}return LayoutParams;})(ViewGroup.LayoutParams);ViewPager.LayoutParams = LayoutParams;})(ViewPager = view_6.ViewPager || (view_6.ViewPager = {}));var ItemInfo=function ItemInfo(){_classCallCheck(this,ItemInfo);this.position = 0;this.scrolling = false;this.widthFactor = 0;this.offset = 0;};var PagerObserver=(function(_DataSetObserver2){_inherits(PagerObserver,_DataSetObserver2);function PagerObserver(viewPager){_classCallCheck(this,PagerObserver);_get(Object.getPrototypeOf(PagerObserver.prototype),"constructor",this).call(this);this.ViewPager_this = viewPager;}_createClass(PagerObserver,[{key:"onChanged",value:function onChanged(){this.ViewPager_this.dataSetChanged();}},{key:"onInvalidated",value:function onInvalidated(){this.ViewPager_this.dataSetChanged();}}]);return PagerObserver;})(DataSetObserver);})(view = v4.view || (v4.view = {}));})(v4 = support.v4 || (support.v4 = {}));})(support = android.support || (android.support = {}));})(android || (android = {})); /*
 * Copyright (C) 2013 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ ///<reference path="../../../../android/view/MotionEvent.ts"/>
///<reference path="../../../../android/view/VelocityTracker.ts"/>
///<reference path="../../../../android/view/View.ts"/>
///<reference path="../../../../android/view/ViewConfiguration.ts"/>
///<reference path="../../../../android/view/ViewGroup.ts"/>
///<reference path="../../../../android/widget/OverScroller.ts"/>
///<reference path="../../../../android/view/animation/Interpolator.ts"/>
///<reference path="../../../../java/lang/System.ts"/>
var android;(function(android){var support;(function(support){var v4;(function(v4){var widget;(function(widget){var MotionEvent=android.view.MotionEvent;var VelocityTracker=android.view.VelocityTracker;var ViewConfiguration=android.view.ViewConfiguration;var ViewGroup=android.view.ViewGroup;var OverScroller=android.widget.OverScroller;var System=java.lang.System;var ViewDragHelper=(function(){function ViewDragHelper(forParent,cb){var _this36=this;_classCallCheck(this,ViewDragHelper);this.mDragState = 0;this.mTouchSlop = 0;this.mActivePointerId = ViewDragHelper.INVALID_POINTER;this.mPointersDown = 0;this.mMaxVelocity = 0;this.mMinVelocity = 0;this.mEdgeSize = 0;this.mTrackingEdges = 0;this.mSetIdleRunnable = (function(){var _this=_this36;var _Inner=(function(){function _Inner(){_classCallCheck(this,_Inner);}_createClass(_Inner,[{key:"run",value:function run(){_this.setDragState(ViewDragHelper.STATE_IDLE);}}]);return _Inner;})();return new _Inner();})();if(forParent == null){throw Error("new IllegalArgumentException(\"Parent view may not be null\")");}if(cb == null){throw Error("new IllegalArgumentException(\"Callback may not be null\")");}this.mParentView = forParent;this.mCallback = cb;var vc=ViewConfiguration.get();var density=android.content.res.Resources.getDisplayMetrics().density;this.mEdgeSize = Math.floor(ViewDragHelper.EDGE_SIZE * density + 0.5);this.mTouchSlop = vc.getScaledTouchSlop();this.mMaxVelocity = vc.getScaledMaximumFlingVelocity();this.mMinVelocity = vc.getScaledMinimumFlingVelocity();this.mScroller = new OverScroller(ViewDragHelper.sInterpolator);}_createClass(ViewDragHelper,[{key:"setMinVelocity",value:function setMinVelocity(minVel){this.mMinVelocity = minVel;}},{key:"getMinVelocity",value:function getMinVelocity(){return this.mMinVelocity;}},{key:"getViewDragState",value:function getViewDragState(){return this.mDragState;}},{key:"setEdgeTrackingEnabled",value:function setEdgeTrackingEnabled(edgeFlags){this.mTrackingEdges = edgeFlags;}},{key:"getEdgeSize",value:function getEdgeSize(){return this.mEdgeSize;}},{key:"captureChildView",value:function captureChildView(childView,activePointerId){if(childView.getParent() != this.mParentView){throw Error("new IllegalArgumentException(\"captureChildView: parameter must be a descendant \" + \"of the ViewDragHelper's tracked parent view (\" + this.mParentView + \")\")");}this.mCapturedView = childView;this.mActivePointerId = activePointerId;this.mCallback.onViewCaptured(childView,activePointerId);this.setDragState(ViewDragHelper.STATE_DRAGGING);}},{key:"getCapturedView",value:function getCapturedView(){return this.mCapturedView;}},{key:"getActivePointerId",value:function getActivePointerId(){return this.mActivePointerId;}},{key:"getTouchSlop",value:function getTouchSlop(){return this.mTouchSlop;}},{key:"cancel",value:function cancel(){this.mActivePointerId = ViewDragHelper.INVALID_POINTER;this.clearMotionHistory();if(this.mVelocityTracker != null){this.mVelocityTracker.recycle();this.mVelocityTracker = null;}}},{key:"abort",value:function abort(){this.cancel();if(this.mDragState == ViewDragHelper.STATE_SETTLING){var oldX=this.mScroller.getCurrX();var oldY=this.mScroller.getCurrY();this.mScroller.abortAnimation();var newX=this.mScroller.getCurrX();var newY=this.mScroller.getCurrY();this.mCallback.onViewPositionChanged(this.mCapturedView,newX,newY,newX - oldX,newY - oldY);}this.setDragState(ViewDragHelper.STATE_IDLE);}},{key:"smoothSlideViewTo",value:function smoothSlideViewTo(child,finalLeft,finalTop){this.mCapturedView = child;this.mActivePointerId = ViewDragHelper.INVALID_POINTER;return this.forceSettleCapturedViewAt(finalLeft,finalTop,0,0);}},{key:"settleCapturedViewAt",value:function settleCapturedViewAt(finalLeft,finalTop){if(!this.mReleaseInProgress){throw Error("new IllegalStateException(\"Cannot settleCapturedViewAt outside of a call to \" + \"Callback#onViewReleased\")");}return this.forceSettleCapturedViewAt(finalLeft,finalTop,Math.floor(this.mVelocityTracker.getXVelocity(this.mActivePointerId)),Math.floor(this.mVelocityTracker.getYVelocity(this.mActivePointerId)));}},{key:"forceSettleCapturedViewAt",value:function forceSettleCapturedViewAt(finalLeft,finalTop,xvel,yvel){var startLeft=this.mCapturedView.getLeft();var startTop=this.mCapturedView.getTop();var dx=finalLeft - startLeft;var dy=finalTop - startTop;if(dx == 0 && dy == 0){this.mScroller.abortAnimation();this.setDragState(ViewDragHelper.STATE_IDLE);return false;}var duration=this.computeSettleDuration(this.mCapturedView,dx,dy,xvel,yvel);this.mScroller.startScroll(startLeft,startTop,dx,dy,duration);this.setDragState(ViewDragHelper.STATE_SETTLING);return true;}},{key:"computeSettleDuration",value:function computeSettleDuration(child,dx,dy,xvel,yvel){xvel = this.clampMag(xvel,Math.floor(this.mMinVelocity),Math.floor(this.mMaxVelocity));yvel = this.clampMag(yvel,Math.floor(this.mMinVelocity),Math.floor(this.mMaxVelocity));var absDx=Math.abs(dx);var absDy=Math.abs(dy);var absXVel=Math.abs(xvel);var absYVel=Math.abs(yvel);var addedVel=absXVel + absYVel;var addedDistance=absDx + absDy;var xweight=xvel != 0?absXVel / addedVel:absDx / addedDistance;var yweight=yvel != 0?absYVel / addedVel:absDy / addedDistance;var xduration=this.computeAxisDuration(dx,xvel,this.mCallback.getViewHorizontalDragRange(child));var yduration=this.computeAxisDuration(dy,yvel,this.mCallback.getViewVerticalDragRange(child));return Math.floor(xduration * xweight + yduration * yweight);}},{key:"computeAxisDuration",value:function computeAxisDuration(delta,velocity,motionRange){if(delta == 0){return 0;}var width=this.mParentView.getWidth();var halfWidth=width / 2;var distanceRatio=Math.min(1,Math.abs(delta) / width);var distance=halfWidth + halfWidth * this.distanceInfluenceForSnapDuration(distanceRatio);var duration=undefined;velocity = Math.abs(velocity);if(velocity > 0){duration = 4 * Math.round(1000 * Math.abs(distance / velocity));}else {var range=Math.abs(delta) / motionRange;duration = Math.floor((range + 1) * ViewDragHelper.BASE_SETTLE_DURATION);}return Math.min(duration,ViewDragHelper.MAX_SETTLE_DURATION);}},{key:"clampMag",value:function clampMag(value,absMin,absMax){var absValue=Math.abs(value);if(absValue < absMin)return 0;if(absValue > absMax)return value > 0?absMax:-absMax;return value;}},{key:"distanceInfluenceForSnapDuration",value:function distanceInfluenceForSnapDuration(f){f -= 0.5;f *= 0.3 * Math.PI / 2.0;return Math.sin(f);}},{key:"flingCapturedView",value:function flingCapturedView(minLeft,minTop,maxLeft,maxTop){if(!this.mReleaseInProgress){throw Error("new IllegalStateException(\"Cannot flingCapturedView outside of a call to \" + \"Callback#onViewReleased\")");}this.mScroller.fling(this.mCapturedView.getLeft(),this.mCapturedView.getTop(),Math.floor(this.mVelocityTracker.getXVelocity(this.mActivePointerId)),Math.floor(this.mVelocityTracker.getYVelocity(this.mActivePointerId)),minLeft,maxLeft,minTop,maxTop);this.setDragState(ViewDragHelper.STATE_SETTLING);}},{key:"continueSettling",value:function continueSettling(deferCallbacks){if(this.mDragState == ViewDragHelper.STATE_SETTLING){var keepGoing=this.mScroller.computeScrollOffset();var x=this.mScroller.getCurrX();var y=this.mScroller.getCurrY();var dx=x - this.mCapturedView.getLeft();var dy=y - this.mCapturedView.getTop();if(dx != 0){this.mCapturedView.offsetLeftAndRight(dx);}if(dy != 0){this.mCapturedView.offsetTopAndBottom(dy);}if(dx != 0 || dy != 0){this.mCallback.onViewPositionChanged(this.mCapturedView,x,y,dx,dy);}if(keepGoing && x == this.mScroller.getFinalX() && y == this.mScroller.getFinalY()){this.mScroller.abortAnimation();keepGoing = this.mScroller.isFinished();}if(!keepGoing){if(deferCallbacks){this.mParentView.post(this.mSetIdleRunnable);}else {this.setDragState(ViewDragHelper.STATE_IDLE);}}}return this.mDragState == ViewDragHelper.STATE_SETTLING;}},{key:"dispatchViewReleased",value:function dispatchViewReleased(xvel,yvel){this.mReleaseInProgress = true;this.mCallback.onViewReleased(this.mCapturedView,xvel,yvel);this.mReleaseInProgress = false;if(this.mDragState == ViewDragHelper.STATE_DRAGGING){this.setDragState(ViewDragHelper.STATE_IDLE);}}},{key:"clearMotionHistory",value:function clearMotionHistory(pointerId){if(this.mInitialMotionX == null){return;}if(pointerId == null){this.mInitialMotionX = [];this.mInitialMotionY = [];this.mLastMotionX = [];this.mLastMotionY = [];this.mInitialEdgesTouched = [];this.mEdgeDragsInProgress = [];this.mEdgeDragsLocked = [];this.mPointersDown = 0;}else {this.mInitialMotionX[pointerId] = 0;this.mInitialMotionY[pointerId] = 0;this.mLastMotionX[pointerId] = 0;this.mLastMotionY[pointerId] = 0;this.mInitialEdgesTouched[pointerId] = 0;this.mEdgeDragsInProgress[pointerId] = 0;this.mEdgeDragsLocked[pointerId] = 0;this.mPointersDown &= ~(1 << pointerId);}}},{key:"ensureMotionHistorySizeForId",value:function ensureMotionHistorySizeForId(pointerId){if(this.mInitialMotionX == null || this.mInitialMotionX.length <= pointerId){var imx=new Array(pointerId + 1);var imy=new Array(pointerId + 1);var lmx=new Array(pointerId + 1);var lmy=new Array(pointerId + 1);var iit=new Array(pointerId + 1);var edip=new Array(pointerId + 1);var edl=new Array(pointerId + 1);if(this.mInitialMotionX != null){System.arraycopy(this.mInitialMotionX,0,imx,0,this.mInitialMotionX.length);System.arraycopy(this.mInitialMotionY,0,imy,0,this.mInitialMotionY.length);System.arraycopy(this.mLastMotionX,0,lmx,0,this.mLastMotionX.length);System.arraycopy(this.mLastMotionY,0,lmy,0,this.mLastMotionY.length);System.arraycopy(this.mInitialEdgesTouched,0,iit,0,this.mInitialEdgesTouched.length);System.arraycopy(this.mEdgeDragsInProgress,0,edip,0,this.mEdgeDragsInProgress.length);System.arraycopy(this.mEdgeDragsLocked,0,edl,0,this.mEdgeDragsLocked.length);}this.mInitialMotionX = imx;this.mInitialMotionY = imy;this.mLastMotionX = lmx;this.mLastMotionY = lmy;this.mInitialEdgesTouched = iit;this.mEdgeDragsInProgress = edip;this.mEdgeDragsLocked = edl;}}},{key:"saveInitialMotion",value:function saveInitialMotion(x,y,pointerId){this.ensureMotionHistorySizeForId(pointerId);this.mInitialMotionX[pointerId] = this.mLastMotionX[pointerId] = x;this.mInitialMotionY[pointerId] = this.mLastMotionY[pointerId] = y;this.mInitialEdgesTouched[pointerId] = this.getEdgesTouched(Math.floor(x),Math.floor(y));this.mPointersDown |= 1 << pointerId;}},{key:"saveLastMotion",value:function saveLastMotion(ev){var pointerCount=ev.getPointerCount();for(var i=0;i < pointerCount;i++) {var pointerId=ev.getPointerId(i);var x=ev.getX(i);var y=ev.getY(i);this.mLastMotionX[pointerId] = x;this.mLastMotionY[pointerId] = y;}}},{key:"isPointerDown",value:function isPointerDown(pointerId){return (this.mPointersDown & 1 << pointerId) != 0;}},{key:"setDragState",value:function setDragState(state){if(this.mDragState != state){this.mDragState = state;this.mCallback.onViewDragStateChanged(state);if(state == ViewDragHelper.STATE_IDLE){this.mCapturedView = null;}}}},{key:"tryCaptureViewForDrag",value:function tryCaptureViewForDrag(toCapture,pointerId){if(toCapture == this.mCapturedView && this.mActivePointerId == pointerId){return true;}if(toCapture != null && this.mCallback.tryCaptureView(toCapture,pointerId)){this.mActivePointerId = pointerId;this.captureChildView(toCapture,pointerId);return true;}return false;}},{key:"canScroll",value:function canScroll(v,checkV,dx,dy,x,y){if(v instanceof ViewGroup){var group=v;var _scrollX13=v.getScrollX();var _scrollY12=v.getScrollY();var count=group.getChildCount();for(var i=count - 1;i >= 0;i--) {var child=group.getChildAt(i);if(x + _scrollX13 >= child.getLeft() && x + _scrollX13 < child.getRight() && y + _scrollY12 >= child.getTop() && y + _scrollY12 < child.getBottom() && this.canScroll(child,true,dx,dy,x + _scrollX13 - child.getLeft(),y + _scrollY12 - child.getTop())){return true;}}}return checkV && (v.canScrollHorizontally(-dx) || v.canScrollVertically(-dy));}},{key:"shouldInterceptTouchEvent",value:function shouldInterceptTouchEvent(ev){var action=ev.getActionMasked();var actionIndex=ev.getActionIndex();if(action == MotionEvent.ACTION_DOWN){this.cancel();}if(this.mVelocityTracker == null){this.mVelocityTracker = VelocityTracker.obtain();}this.mVelocityTracker.addMovement(ev);switch(action){case MotionEvent.ACTION_DOWN:{var x=ev.getX();var y=ev.getY();var pointerId=ev.getPointerId(0);this.saveInitialMotion(x,y,pointerId);var toCapture=this.findTopChildUnder(Math.floor(x),Math.floor(y));if(toCapture == this.mCapturedView && this.mDragState == ViewDragHelper.STATE_SETTLING){this.tryCaptureViewForDrag(toCapture,pointerId);}var edgesTouched=this.mInitialEdgesTouched[pointerId];if((edgesTouched & this.mTrackingEdges) != 0){this.mCallback.onEdgeTouched(edgesTouched & this.mTrackingEdges,pointerId);}break;}case MotionEvent.ACTION_POINTER_DOWN:{var pointerId=ev.getPointerId(actionIndex);var x=ev.getX(actionIndex);var y=ev.getY(actionIndex);this.saveInitialMotion(x,y,pointerId);if(this.mDragState == ViewDragHelper.STATE_IDLE){var edgesTouched=this.mInitialEdgesTouched[pointerId];if((edgesTouched & this.mTrackingEdges) != 0){this.mCallback.onEdgeTouched(edgesTouched & this.mTrackingEdges,pointerId);}}else if(this.mDragState == ViewDragHelper.STATE_SETTLING){var toCapture=this.findTopChildUnder(Math.floor(x),Math.floor(y));if(toCapture == this.mCapturedView){this.tryCaptureViewForDrag(toCapture,pointerId);}}break;}case MotionEvent.ACTION_MOVE:{var pointerCount=ev.getPointerCount();for(var i=0;i < pointerCount;i++) {var pointerId=ev.getPointerId(i);var x=ev.getX(i);var y=ev.getY(i);var dx=x - this.mInitialMotionX[pointerId];var dy=y - this.mInitialMotionY[pointerId];this.reportNewEdgeDrags(dx,dy,pointerId);if(this.mDragState == ViewDragHelper.STATE_DRAGGING){break;}var toCapture=this.findTopChildUnder(Math.floor(x),Math.floor(y));if(toCapture != null && this.checkTouchSlop(toCapture,dx,dy) && this.tryCaptureViewForDrag(toCapture,pointerId)){break;}}this.saveLastMotion(ev);break;}case MotionEvent.ACTION_POINTER_UP:{var pointerId=ev.getPointerId(actionIndex);this.clearMotionHistory(pointerId);break;}case MotionEvent.ACTION_UP:case MotionEvent.ACTION_CANCEL:{this.cancel();break;}}return this.mDragState == ViewDragHelper.STATE_DRAGGING;}},{key:"processTouchEvent",value:function processTouchEvent(ev){var action=ev.getActionMasked();var actionIndex=ev.getActionIndex();if(action == MotionEvent.ACTION_DOWN){this.cancel();}if(this.mVelocityTracker == null){this.mVelocityTracker = VelocityTracker.obtain();}this.mVelocityTracker.addMovement(ev);switch(action){case MotionEvent.ACTION_DOWN:{var x=ev.getX();var y=ev.getY();var pointerId=ev.getPointerId(0);var toCapture=this.findTopChildUnder(Math.floor(x),Math.floor(y));this.saveInitialMotion(x,y,pointerId);this.tryCaptureViewForDrag(toCapture,pointerId);var edgesTouched=this.mInitialEdgesTouched[pointerId];if((edgesTouched & this.mTrackingEdges) != 0){this.mCallback.onEdgeTouched(edgesTouched & this.mTrackingEdges,pointerId);}break;}case MotionEvent.ACTION_POINTER_DOWN:{var pointerId=ev.getPointerId(actionIndex);var x=ev.getX(actionIndex);var y=ev.getY(actionIndex);this.saveInitialMotion(x,y,pointerId);if(this.mDragState == ViewDragHelper.STATE_IDLE){var toCapture=this.findTopChildUnder(Math.floor(x),Math.floor(y));this.tryCaptureViewForDrag(toCapture,pointerId);var edgesTouched=this.mInitialEdgesTouched[pointerId];if((edgesTouched & this.mTrackingEdges) != 0){this.mCallback.onEdgeTouched(edgesTouched & this.mTrackingEdges,pointerId);}}else if(this.isCapturedViewUnder(Math.floor(x),Math.floor(y))){this.tryCaptureViewForDrag(this.mCapturedView,pointerId);}break;}case MotionEvent.ACTION_MOVE:{if(this.mDragState == ViewDragHelper.STATE_DRAGGING){var index=ev.findPointerIndex(this.mActivePointerId);var x=ev.getX(index);var y=ev.getY(index);var idx=Math.floor(x - this.mLastMotionX[this.mActivePointerId]);var idy=Math.floor(y - this.mLastMotionY[this.mActivePointerId]);this.dragTo(this.mCapturedView.getLeft() + idx,this.mCapturedView.getTop() + idy,idx,idy);this.saveLastMotion(ev);}else {var pointerCount=ev.getPointerCount();for(var i=0;i < pointerCount;i++) {var pointerId=ev.getPointerId(i);var x=ev.getX(i);var y=ev.getY(i);var dx=x - this.mInitialMotionX[pointerId];var dy=y - this.mInitialMotionY[pointerId];this.reportNewEdgeDrags(dx,dy,pointerId);if(this.mDragState == ViewDragHelper.STATE_DRAGGING){break;}var toCapture=this.findTopChildUnder(Math.floor(x),Math.floor(y));if(this.checkTouchSlop(toCapture,dx,dy) && this.tryCaptureViewForDrag(toCapture,pointerId)){break;}}this.saveLastMotion(ev);}break;}case MotionEvent.ACTION_POINTER_UP:{var pointerId=ev.getPointerId(actionIndex);if(this.mDragState == ViewDragHelper.STATE_DRAGGING && pointerId == this.mActivePointerId){var newActivePointer=ViewDragHelper.INVALID_POINTER;var pointerCount=ev.getPointerCount();for(var i=0;i < pointerCount;i++) {var id=ev.getPointerId(i);if(id == this.mActivePointerId){continue;}var x=ev.getX(i);var y=ev.getY(i);if(this.findTopChildUnder(Math.floor(x),Math.floor(y)) == this.mCapturedView && this.tryCaptureViewForDrag(this.mCapturedView,id)){newActivePointer = this.mActivePointerId;break;}}if(newActivePointer == ViewDragHelper.INVALID_POINTER){this.releaseViewForPointerUp();}}this.clearMotionHistory(pointerId);break;}case MotionEvent.ACTION_UP:{if(this.mDragState == ViewDragHelper.STATE_DRAGGING){this.releaseViewForPointerUp();}this.cancel();break;}case MotionEvent.ACTION_CANCEL:{if(this.mDragState == ViewDragHelper.STATE_DRAGGING){this.dispatchViewReleased(0,0);}this.cancel();break;}}}},{key:"reportNewEdgeDrags",value:function reportNewEdgeDrags(dx,dy,pointerId){var dragsStarted=0;if(this.checkNewEdgeDrag(dx,dy,pointerId,ViewDragHelper.EDGE_LEFT)){dragsStarted |= ViewDragHelper.EDGE_LEFT;}if(this.checkNewEdgeDrag(dy,dx,pointerId,ViewDragHelper.EDGE_TOP)){dragsStarted |= ViewDragHelper.EDGE_TOP;}if(this.checkNewEdgeDrag(dx,dy,pointerId,ViewDragHelper.EDGE_RIGHT)){dragsStarted |= ViewDragHelper.EDGE_RIGHT;}if(this.checkNewEdgeDrag(dy,dx,pointerId,ViewDragHelper.EDGE_BOTTOM)){dragsStarted |= ViewDragHelper.EDGE_BOTTOM;}if(dragsStarted != 0){this.mEdgeDragsInProgress[pointerId] |= dragsStarted;this.mCallback.onEdgeDragStarted(dragsStarted,pointerId);}}},{key:"checkNewEdgeDrag",value:function checkNewEdgeDrag(delta,odelta,pointerId,edge){var absDelta=Math.abs(delta);var absODelta=Math.abs(odelta);if((this.mInitialEdgesTouched[pointerId] & edge) != edge || (this.mTrackingEdges & edge) == 0 || (this.mEdgeDragsLocked[pointerId] & edge) == edge || (this.mEdgeDragsInProgress[pointerId] & edge) == edge || absDelta <= this.mTouchSlop && absODelta <= this.mTouchSlop){return false;}if(absDelta < absODelta * 0.5 && this.mCallback.onEdgeLock(edge)){this.mEdgeDragsLocked[pointerId] |= edge;return false;}return (this.mEdgeDragsInProgress[pointerId] & edge) == 0 && absDelta > this.mTouchSlop;}},{key:"checkTouchSlop",value:function checkTouchSlop(){for(var _len39=arguments.length,args=Array(_len39),_key39=0;_key39 < _len39;_key39++) {args[_key39] = arguments[_key39];}if(args.length === 1)return this._checkTouchSlop_1(args[0]);if(args.length === 2)return this._checkTouchSlop_2(args[0],args[1]);if(args.length === 3)return this._checkTouchSlop_3(args[0],args[2],args[3]);return false;}},{key:"_checkTouchSlop_3",value:function _checkTouchSlop_3(child,dx,dy){if(child == null){return false;}var checkHorizontal=this.mCallback.getViewHorizontalDragRange(child) > 0;var checkVertical=this.mCallback.getViewVerticalDragRange(child) > 0;if(checkHorizontal && checkVertical){return dx * dx + dy * dy > this.mTouchSlop * this.mTouchSlop;}else if(checkHorizontal){return Math.abs(dx) > this.mTouchSlop;}else if(checkVertical){return Math.abs(dy) > this.mTouchSlop;}return false;}},{key:"_checkTouchSlop_1",value:function _checkTouchSlop_1(directions){var count=this.mInitialMotionX.length;for(var i=0;i < count;i++) {if(this.checkTouchSlop(directions,i)){return true;}}return false;}},{key:"_checkTouchSlop_2",value:function _checkTouchSlop_2(directions,pointerId){if(!this.isPointerDown(pointerId)){return false;}var checkHorizontal=(directions & ViewDragHelper.DIRECTION_HORIZONTAL) == ViewDragHelper.DIRECTION_HORIZONTAL;var checkVertical=(directions & ViewDragHelper.DIRECTION_VERTICAL) == ViewDragHelper.DIRECTION_VERTICAL;var dx=this.mLastMotionX[pointerId] - this.mInitialMotionX[pointerId];var dy=this.mLastMotionY[pointerId] - this.mInitialMotionY[pointerId];if(checkHorizontal && checkVertical){return dx * dx + dy * dy > this.mTouchSlop * this.mTouchSlop;}else if(checkHorizontal){return Math.abs(dx) > this.mTouchSlop;}else if(checkVertical){return Math.abs(dy) > this.mTouchSlop;}return false;}},{key:"isEdgeTouched",value:function isEdgeTouched(edges,pointerId){if(pointerId == null){var count=this.mInitialEdgesTouched.length;for(var i=0;i < count;i++) {if(this.isEdgeTouched(edges,i)){return true;}}}return this.isPointerDown(pointerId) && (this.mInitialEdgesTouched[pointerId] & edges) != 0;}},{key:"releaseViewForPointerUp",value:function releaseViewForPointerUp(){this.mVelocityTracker.computeCurrentVelocity(1000,this.mMaxVelocity);var xvel=this.clampMag(this.mVelocityTracker.getXVelocity(this.mActivePointerId),this.mMinVelocity,this.mMaxVelocity);var yvel=this.clampMag(this.mVelocityTracker.getYVelocity(this.mActivePointerId),this.mMinVelocity,this.mMaxVelocity);this.dispatchViewReleased(xvel,yvel);}},{key:"dragTo",value:function dragTo(left,top,dx,dy){var clampedX=left;var clampedY=top;var oldLeft=this.mCapturedView.getLeft();var oldTop=this.mCapturedView.getTop();if(dx != 0){clampedX = this.mCallback.clampViewPositionHorizontal(this.mCapturedView,left,dx);this.mCapturedView.offsetLeftAndRight(clampedX - oldLeft);}if(dy != 0){clampedY = this.mCallback.clampViewPositionVertical(this.mCapturedView,top,dy);this.mCapturedView.offsetTopAndBottom(clampedY - oldTop);}if(dx != 0 || dy != 0){var clampedDx=clampedX - oldLeft;var clampedDy=clampedY - oldTop;this.mCallback.onViewPositionChanged(this.mCapturedView,clampedX,clampedY,clampedDx,clampedDy);}}},{key:"isCapturedViewUnder",value:function isCapturedViewUnder(x,y){return this.isViewUnder(this.mCapturedView,x,y);}},{key:"isViewUnder",value:function isViewUnder(view,x,y){if(view == null){return false;}return x >= view.getLeft() && x < view.getRight() && y >= view.getTop() && y < view.getBottom();}},{key:"findTopChildUnder",value:function findTopChildUnder(x,y){var childCount=this.mParentView.getChildCount();for(var i=childCount - 1;i >= 0;i--) {var child=this.mParentView.getChildAt(this.mCallback.getOrderedChildIndex(i));if(x >= child.getLeft() && x < child.getRight() && y >= child.getTop() && y < child.getBottom()){return child;}}return null;}},{key:"getEdgesTouched",value:function getEdgesTouched(x,y){var result=0;if(x < this.mParentView.getLeft() + this.mEdgeSize)result |= ViewDragHelper.EDGE_LEFT;if(y < this.mParentView.getTop() + this.mEdgeSize)result |= ViewDragHelper.EDGE_TOP;if(x > this.mParentView.getRight() - this.mEdgeSize)result |= ViewDragHelper.EDGE_RIGHT;if(y > this.mParentView.getBottom() - this.mEdgeSize)result |= ViewDragHelper.EDGE_BOTTOM;return result;}}],[{key:"create",value:function create(){for(var _len40=arguments.length,args=Array(_len40),_key40=0;_key40 < _len40;_key40++) {args[_key40] = arguments[_key40];}if(args.length === 2)return new ViewDragHelper(args[0],args[1]);else if(args.length === 3){var forParent=args[0];var sensitivity=args[1];var cb=args[2];var helper=ViewDragHelper.create(forParent,cb);helper.mTouchSlop = Math.floor(helper.mTouchSlop * (1 / sensitivity));return helper;}}}]);return ViewDragHelper;})();ViewDragHelper.TAG = "ViewDragHelper";ViewDragHelper.INVALID_POINTER = -1;ViewDragHelper.STATE_IDLE = 0;ViewDragHelper.STATE_DRAGGING = 1;ViewDragHelper.STATE_SETTLING = 2;ViewDragHelper.EDGE_LEFT = 1 << 0;ViewDragHelper.EDGE_RIGHT = 1 << 1;ViewDragHelper.EDGE_TOP = 1 << 2;ViewDragHelper.EDGE_BOTTOM = 1 << 3;ViewDragHelper.EDGE_ALL = ViewDragHelper.EDGE_LEFT | ViewDragHelper.EDGE_TOP | ViewDragHelper.EDGE_RIGHT | ViewDragHelper.EDGE_BOTTOM;ViewDragHelper.DIRECTION_HORIZONTAL = 1 << 0;ViewDragHelper.DIRECTION_VERTICAL = 1 << 1;ViewDragHelper.DIRECTION_ALL = ViewDragHelper.DIRECTION_HORIZONTAL | ViewDragHelper.DIRECTION_VERTICAL;ViewDragHelper.EDGE_SIZE = 20;ViewDragHelper.BASE_SETTLE_DURATION = 256;ViewDragHelper.MAX_SETTLE_DURATION = 600;ViewDragHelper.sInterpolator = (function(){var _Inner=(function(){function _Inner(){_classCallCheck(this,_Inner);}_createClass(_Inner,[{key:"getInterpolation",value:function getInterpolation(t){t -= 1.0;return t * t * t * t * t + 1.0;}}]);return _Inner;})();return new _Inner();})();widget.ViewDragHelper = ViewDragHelper;(function(ViewDragHelper){var Callback=(function(){function Callback(){_classCallCheck(this,Callback);}_createClass(Callback,[{key:"onViewDragStateChanged",value:function onViewDragStateChanged(state){}},{key:"onViewPositionChanged",value:function onViewPositionChanged(changedView,left,top,dx,dy){}},{key:"onViewCaptured",value:function onViewCaptured(capturedChild,activePointerId){}},{key:"onViewReleased",value:function onViewReleased(releasedChild,xvel,yvel){}},{key:"onEdgeTouched",value:function onEdgeTouched(edgeFlags,pointerId){}},{key:"onEdgeLock",value:function onEdgeLock(edgeFlags){return false;}},{key:"onEdgeDragStarted",value:function onEdgeDragStarted(edgeFlags,pointerId){}},{key:"getOrderedChildIndex",value:function getOrderedChildIndex(index){return index;}},{key:"getViewHorizontalDragRange",value:function getViewHorizontalDragRange(child){return 0;}},{key:"getViewVerticalDragRange",value:function getViewVerticalDragRange(child){return 0;}},{key:"clampViewPositionHorizontal",value:function clampViewPositionHorizontal(child,left,dx){return 0;}},{key:"clampViewPositionVertical",value:function clampViewPositionVertical(child,top,dy){return 0;}}]);return Callback;})();ViewDragHelper.Callback = Callback;})(ViewDragHelper = widget.ViewDragHelper || (widget.ViewDragHelper = {}));})(widget = v4.widget || (v4.widget = {}));})(v4 = support.v4 || (support.v4 = {}));})(support = android.support || (android.support = {}));})(android || (android = {})); /**
 * Created by linfaxin on 15/11/6.
 */ ///<reference path="../../../../android/view/View.ts"/>
///<reference path="../../../../android/view/ViewGroup.ts"/>
///<reference path="../../../../android/support/v4/view/ViewPager.ts"/>
///<reference path="../../../../android/support/v4/view/PagerAdapter.ts"/>
var com;(function(com){var jakewharton;(function(jakewharton){var salvage;(function(salvage){var SparseArray=android.util.SparseArray;var PagerAdapter=android.support.v4.view.PagerAdapter;var RecyclingPagerAdapter=(function(_PagerAdapter){_inherits(RecyclingPagerAdapter,_PagerAdapter);function RecyclingPagerAdapter(){_classCallCheck(this,RecyclingPagerAdapter);_get(Object.getPrototypeOf(RecyclingPagerAdapter.prototype),"constructor",this).call(this);this.recycleBin = new RecycleBin();this.recycleBin.setViewTypeCount(this.getViewTypeCount());}_createClass(RecyclingPagerAdapter,[{key:"notifyDataSetChanged",value:function notifyDataSetChanged(){this.recycleBin.scrapActiveViews();_get(Object.getPrototypeOf(RecyclingPagerAdapter.prototype),"notifyDataSetChanged",this).call(this);}},{key:"instantiateItem",value:function instantiateItem(container,position){var viewType=this.getItemViewType(position);var view=null;if(viewType != RecyclingPagerAdapter.IGNORE_ITEM_VIEW_TYPE){view = this.recycleBin.getScrapView(position,viewType);}view = this.getView(position,view,container);container.addView(view);return view;}},{key:"destroyItem",value:function destroyItem(container,position,object){var view=object;container.removeView(view);var viewType=this.getItemViewType(position);if(viewType != RecyclingPagerAdapter.IGNORE_ITEM_VIEW_TYPE){this.recycleBin.addScrapView(view,position,viewType);}}},{key:"isViewFromObject",value:function isViewFromObject(view,object){return view === object;}},{key:"getViewTypeCount",value:function getViewTypeCount(){return 1;}},{key:"getItemViewType",value:function getItemViewType(position){return 0;}}]);return RecyclingPagerAdapter;})(PagerAdapter);RecyclingPagerAdapter.IGNORE_ITEM_VIEW_TYPE = -1;salvage.RecyclingPagerAdapter = RecyclingPagerAdapter;var RecycleBin=(function(){function RecycleBin(){_classCallCheck(this,RecycleBin);this.activeViews = [];this.activeViewTypes = [];this.viewTypeCount = 0;}_createClass(RecycleBin,[{key:"setViewTypeCount",value:function setViewTypeCount(viewTypeCount){if(viewTypeCount < 1){throw new Error("Can't have a viewTypeCount < 1");}var scrapViews=new Array(viewTypeCount);for(var i=0;i < viewTypeCount;i++) {scrapViews[i] = new SparseArray();}this.viewTypeCount = viewTypeCount;this.currentScrapViews = scrapViews[0];this.scrapViews = scrapViews;}},{key:"shouldRecycleViewType",value:function shouldRecycleViewType(viewType){return viewType >= 0;}},{key:"getScrapView",value:function getScrapView(position,viewType){if(this.viewTypeCount == 1){return this.retrieveFromScrap(this.currentScrapViews,position);}else if(viewType >= 0 && viewType < this.scrapViews.length){return this.retrieveFromScrap(this.scrapViews[viewType],position);}return null;}},{key:"addScrapView",value:function addScrapView(scrap,position,viewType){if(this.viewTypeCount == 1){this.currentScrapViews.put(position,scrap);}else {this.scrapViews[viewType].put(position,scrap);}}},{key:"scrapActiveViews",value:function scrapActiveViews(){var activeViews=this.activeViews;var activeViewTypes=this.activeViewTypes;var multipleScraps=this.viewTypeCount > 1;var scrapViews=this.currentScrapViews;var count=activeViews.length;for(var i=count - 1;i >= 0;i--) {var victim=activeViews[i];if(victim != null){var whichScrap=activeViewTypes[i];activeViews[i] = null;activeViewTypes[i] = -1;if(!this.shouldRecycleViewType(whichScrap)){continue;}if(multipleScraps){scrapViews = this.scrapViews[whichScrap];}scrapViews.put(i,victim);}}this.pruneScrapViews();}},{key:"pruneScrapViews",value:function pruneScrapViews(){var maxViews=this.activeViews.length;var viewTypeCount=this.viewTypeCount;var scrapViews=this.scrapViews;for(var i=0;i < viewTypeCount;++i) {var scrapPile=scrapViews[i];var size=scrapPile.size();var extras=size - maxViews;size--;for(var j=0;j < extras;j++) {scrapPile.remove(scrapPile.keyAt(size--));}}}},{key:"retrieveFromScrap",value:function retrieveFromScrap(scrapViews,position){var size=scrapViews.size();if(size > 0){for(var i=0;i < size;i++) {var fromPosition=scrapViews.keyAt(i);var view=scrapViews.get(fromPosition);if(fromPosition == position){scrapViews.remove(fromPosition);return view;}}var index=size - 1;var r=scrapViews.valueAt(index);scrapViews.remove(scrapViews.keyAt(index));return r;}else {return null;}}}]);return RecycleBin;})();})(salvage = jakewharton.salvage || (jakewharton.salvage = {}));})(jakewharton = com.jakewharton || (com.jakewharton = {}));})(com || (com = {})); /**
 * Created by linfaxin on 15/10/23.
 */ ///<reference path="../android/view/View.ts"/>
///<reference path="../android/view/ViewGroup.ts"/>
///<reference path="../android/view/ViewRootImpl.ts"/>
///<reference path="../android/widget/FrameLayout.ts"/>
///<reference path="../android/view/MotionEvent.ts"/>
///<reference path="../android/view/KeyEvent.ts"/>
var androidui;(function(androidui){var View=android.view.View;var ViewGroup=android.view.ViewGroup;var ViewRootImpl=android.view.ViewRootImpl;var FrameLayout=android.widget.FrameLayout;var MotionEvent=android.view.MotionEvent;var KeyEvent=android.view.KeyEvent;var sNextAndroidID=0;var AndroidUI=(function(){function AndroidUI(element){_classCallCheck(this,AndroidUI);this._windowBound = new android.graphics.Rect();this.tempRect = new android.graphics.Rect();this.touchEvent = new MotionEvent();this.ketEvent = new KeyEvent();this.element = element;if(element[AndroidUI.BindTOElementName]){throw Error('already init a AndroidUI with this element');}element[AndroidUI.BindTOElementName] = this;this.init();}_createClass(AndroidUI,[{key:"init",value:function init(){this.AndroidID = sNextAndroidID++;this.element.classList.add(AndroidUI.DomClassName);this.element.classList.add('id-' + this.AndroidID);this._viewRootImpl = new ViewRootImpl();this._viewRootImpl.rootElement = this.element;this._rootLayout = new RootLayout();this._canvas = document.createElement("canvas");this.initInflateView();this.element.innerHTML = '';this.initElementStyle();if(this.rootResourceElement)this.element.appendChild(this.rootResourceElement);if(this.rootStyleElement)this.element.appendChild(this.rootStyleElement);this.element.appendChild(this._canvas);this.element.appendChild(this._rootLayout.bindElement);this._viewRootImpl.setView(this._rootLayout);this._viewRootImpl.initSurface(this._canvas);this.initFocus();this.initEvent();this.initListenSizeChange();}},{key:"initInflateView",value:function initInflateView(){var _this37=this;Array.from(this.element.children).forEach(function(item){if(item.tagName.toLowerCase() === 'resources'){_this37.rootResourceElement = item;}else if(item instanceof HTMLStyleElement){_this37.rootStyleElement = item;}else if(item instanceof HTMLElement){var view=View.inflate(item,_this37.element,_this37._rootLayout);if(view)_this37._rootLayout.addView(view);}});}},{key:"initElementStyle",value:function initElementStyle(){if(!this.rootStyleElement){this.rootStyleElement = document.createElement("style");}this.rootStyleElement.setAttribute('scoped','');if(this.element.style.display === 'none'){this.element.style.display = '';}if(this.rootStyleElement.innerHTML.length == 0){this.rootStyleElement = null;}}},{key:"refreshWindowBound",value:function refreshWindowBound(){var rootViewBound=this.element.getBoundingClientRect();this._windowBound.set(rootViewBound.left,rootViewBound.top,rootViewBound.right,rootViewBound.bottom);}},{key:"initFocus",value:function initFocus(){this.element.setAttribute('tabindex','0');this.element.focus();}},{key:"initEvent",value:function initEvent(){this.initTouchEvent();this.initMouseEvent();this.initKeyEvent();this.initGenericEvent();}},{key:"initTouchEvent",value:function initTouchEvent(){var _this38=this;this.element.addEventListener('touchstart',function(e){_this38.refreshWindowBound();e.preventDefault();e.stopPropagation();_this38.element.focus();_this38.touchEvent.initWithTouch(e,MotionEvent.ACTION_DOWN,_this38._windowBound);_this38._viewRootImpl.dispatchInputEvent(_this38.touchEvent);},true);this.element.addEventListener('touchmove',function(e){e.preventDefault();e.stopPropagation();_this38.touchEvent.initWithTouch(e,MotionEvent.ACTION_MOVE,_this38._windowBound);_this38._viewRootImpl.dispatchInputEvent(_this38.touchEvent);},true);this.element.addEventListener('touchend',function(e){e.preventDefault();e.stopPropagation();_this38.touchEvent.initWithTouch(e,MotionEvent.ACTION_UP,_this38._windowBound);_this38._viewRootImpl.dispatchInputEvent(_this38.touchEvent);},true);this.element.addEventListener('touchcancel',function(e){e.preventDefault();e.stopPropagation();_this38.touchEvent.initWithTouch(e,MotionEvent.ACTION_CANCEL,_this38._windowBound);_this38._viewRootImpl.dispatchInputEvent(_this38.touchEvent);},true);}},{key:"initMouseEvent",value:function initMouseEvent(){var _this39=this;function mouseToTouchEvent(e){var touch={identifier:0,target:null,screenX:e.screenX,screenY:e.screenY,clientX:e.clientX,clientY:e.clientY,pageX:e.pageX,pageY:e.pageY};return {changedTouches:[touch],targetTouches:[touch],touches:e.type === 'mouseup'?[]:[touch],timeStamp:e.timeStamp};}var isMouseDown=false;this.element.addEventListener('mousedown',function(e){isMouseDown = true;_this39.refreshWindowBound();e.preventDefault();e.stopPropagation();_this39.element.focus();_this39.touchEvent.initWithTouch(mouseToTouchEvent(e),MotionEvent.ACTION_DOWN,_this39._windowBound);_this39._viewRootImpl.dispatchInputEvent(_this39.touchEvent);},true);this.element.addEventListener('mousemove',function(e){if(!isMouseDown)return;e.preventDefault();e.stopPropagation();_this39.touchEvent.initWithTouch(mouseToTouchEvent(e),MotionEvent.ACTION_MOVE,_this39._windowBound);_this39._viewRootImpl.dispatchInputEvent(_this39.touchEvent);},true);this.element.addEventListener('mouseup',function(e){isMouseDown = false;e.preventDefault();e.stopPropagation();_this39.touchEvent.initWithTouch(mouseToTouchEvent(e),MotionEvent.ACTION_UP,_this39._windowBound);_this39._viewRootImpl.dispatchInputEvent(_this39.touchEvent);},true);this.element.addEventListener('mouseleave',function(e){if(e.fromElement === _this39.element){isMouseDown = false;e.preventDefault();e.stopPropagation();_this39.touchEvent.initWithTouch(mouseToTouchEvent(e),MotionEvent.ACTION_CANCEL,_this39._windowBound);_this39._viewRootImpl.dispatchInputEvent(_this39.touchEvent);}},true);var scrollEvent=new MotionEvent();this.element.addEventListener('mousewheel',function(e){scrollEvent.initWithMouseWheel(e);if(_this39._viewRootImpl.dispatchInputEvent(scrollEvent)){e.preventDefault();e.stopPropagation();}},true);}},{key:"initKeyEvent",value:function initKeyEvent(){var _this40=this;this.element.addEventListener('keydown',function(e){_this40.ketEvent.appendKeyEvent(e,KeyEvent.ACTION_DOWN);if(_this40._viewRootImpl.dispatchInputEvent(_this40.ketEvent)){e.preventDefault();e.stopPropagation();}},true);this.element.addEventListener('keyup',function(e){_this40.ketEvent.appendKeyEvent(e,KeyEvent.ACTION_UP);if(_this40._viewRootImpl.dispatchInputEvent(_this40.ketEvent)){e.preventDefault();e.stopPropagation();}},true);}},{key:"initGenericEvent",value:function initGenericEvent(){}},{key:"initListenSizeChange",value:function initListenSizeChange(){var _this=this;window.addEventListener('resize',function(){_this.notifySizeChange();});var lastWidth=this.element.offsetWidth;var lastHeight=this.element.offsetHeight;if(lastWidth > 0 && lastHeight > 0)this.notifySizeChange();setInterval(function(){var width=_this.element.offsetWidth;var height=_this.element.offsetHeight;if(lastHeight !== height || lastWidth !== width){lastWidth = width;lastHeight = height;_this.notifySizeChange();}},500);}},{key:"notifySizeChange",value:function notifySizeChange(){this.refreshWindowBound();var density=android.content.res.Resources.getDisplayMetrics().density;this.tempRect.set(this._windowBound.left * density,this._windowBound.top * density,this._windowBound.right * density,this._windowBound.bottom * density);this._viewRootImpl.dispatchResized(this.tempRect);var width=this._windowBound.width();var height=this._windowBound.height();this._canvas.width = width * density;this._canvas.height = height * density;this._canvas.style.width = width + "px";this._canvas.style.height = height + "px";}},{key:"setContentView",value:function setContentView(view){this._rootLayout.removeAllViews();this._rootLayout.addView(view,-1,-1);}},{key:"addContentView",value:function addContentView(view){var params=arguments.length <= 1 || arguments[1] === undefined?new ViewGroup.LayoutParams(-1,-1):arguments[1];this._rootLayout.addView(view,params);}},{key:"findViewById",value:function findViewById(id){return this._rootLayout.findViewById(id);}},{key:"windowBound",get:function get(){return this._windowBound;}}]);return AndroidUI;})();AndroidUI.DomClassName = 'AndroidUI';AndroidUI.BindTOElementName = 'AndroidUI';androidui.AndroidUI = AndroidUI;var styleElement=document.createElement('style');styleElement.innerHTML += "\n        ." + AndroidUI.DomClassName + " {\n            position : relative;\n            overflow : hidden;\n            display : block;\n            outline: none;\n        }\n        ." + AndroidUI.DomClassName + " * {\n            overflow : hidden;\n            border : none;\n            outline: none;\n        }\n        ." + AndroidUI.DomClassName + " resources {\n            display: none;\n        }\n        ." + AndroidUI.DomClassName + " Button {\n            border: none;\n            background: none;\n        }\n        ." + AndroidUI.DomClassName + " > canvas {\n            position: absolute;\n            left: 0;\n            top: 0;\n        }\n        ";document.head.appendChild(styleElement);var RootLayout=(function(_FrameLayout2){_inherits(RootLayout,_FrameLayout2);function RootLayout(){_classCallCheck(this,RootLayout);_get(Object.getPrototypeOf(RootLayout.prototype),"constructor",this).apply(this,arguments);}_createClass(RootLayout,[{key:"_syncBoundToElement",value:function _syncBoundToElement(){var change=_get(Object.getPrototypeOf(RootLayout.prototype),"_syncBoundToElement",this).call(this);var density=android.content.res.Resources.getDisplayMetrics().density;if(change && density !== 1){this.bindElement.style.cssText += "transform:scale(" + 1 / density + "," + 1 / density + ");\n                    -webkit-transform:scale(" + 1 / density + "," + 1 / density + ");\n                    transform-origin:0 0;\n                    -webkit-transform-origin:0 0;";}return change;}}]);return RootLayout;})(FrameLayout);})(androidui || (androidui = {})); /**
 * Created by linfaxin on 15/10/11.
 */ ///<reference path="../view/View.ts"/>
///<reference path="../view/ViewRootImpl.ts"/>
///<reference path="../widget/FrameLayout.ts"/>
///<reference path="../view/MotionEvent.ts"/>
///<reference path="../../androidui/AndroidUI.ts"/>
var android;(function(android){var app;(function(app){var AndroidUI=androidui.AndroidUI;if(typeof HTMLDivElement !== 'function'){var _HTMLDivElement=function _HTMLDivElement(){};_HTMLDivElement.prototype = HTMLDivElement.prototype;HTMLDivElement = _HTMLDivElement;}var Activity=(function(_HTMLDivElement2){_inherits(Activity,_HTMLDivElement2);function Activity(){_classCallCheck(this,Activity);_get(Object.getPrototypeOf(Activity.prototype),"constructor",this).apply(this,arguments);}_createClass(Activity,[{key:"onCreate",value:function onCreate(){}},{key:"createdCallback",value:function createdCallback(){var _this41=this;requestAnimationFrame(function(){_this41.AndroidUI = new AndroidUI(_this41);_this41.onCreate();var onCreateFunc=_this41.getAttribute('oncreate');if(onCreateFunc && typeof window[onCreateFunc] === "function"){window[onCreateFunc].call(_this41,_this41);}});}},{key:"attachedCallback",value:function attachedCallback(){var _this42=this;if(this.AndroidUI){this.AndroidUI.notifySizeChange();}else {setTimeout(function(){_this42.AndroidUI.notifySizeChange();},50);}}},{key:"detachedCallback",value:function detachedCallback(){}},{key:"attributeChangedCallback",value:function attributeChangedCallback(attributeName,oldVal,newVal){}},{key:"setContentView",value:function setContentView(view){this.AndroidUI.setContentView(view);}},{key:"addContentView",value:function addContentView(view){this.AndroidUI.addContentView(view);}},{key:"findViewById",value:function findViewById(id){return this.AndroidUI.findViewById(id);}}],[{key:"registerCustomElement",value:function registerCustomElement(){document.registerElement("android-" + this.name,this);}}]);return Activity;})(HTMLDivElement);app.Activity = Activity;Activity.registerCustomElement();})(app = android.app || (android.app = {}));})(android || (android = {})); /**
 * Created by linfaxin on 15/11/16.
 */ ///<reference path="../../android/view/View.ts"/>
///<reference path="../../android/view/ViewGroup.ts"/>
///<reference path="../../android/widget/AbsListView.ts"/>
///<reference path="../../android/widget/ListAdapter.ts"/>
///<reference path="../../android/widget/BaseAdapter.ts"/>
///<reference path="../../android/widget/AdapterView.ts"/>
///<reference path="../../android/widget/SpinnerAdapter.ts"/>
///<reference path="../../android/database/DataSetObservable.ts"/>
///<reference path="../../android/database/DataSetObserver.ts"/>
var androidui;(function(androidui){var widget;(function(widget){var View=android.view.View;var AbsListView=android.widget.AbsListView;var BaseAdapter=android.widget.BaseAdapter;var AdapterView=android.widget.AdapterView;var HtmlDataListAdapter=(function(_BaseAdapter){_inherits(HtmlDataListAdapter,_BaseAdapter);function HtmlDataListAdapter(){_classCallCheck(this,HtmlDataListAdapter);_get(Object.getPrototypeOf(HtmlDataListAdapter.prototype),"constructor",this).apply(this,arguments);}_createClass(HtmlDataListAdapter,[{key:"onInflateAdapter",value:function onInflateAdapter(bindElement,rootElement,parent){this.bindElementData = bindElement;this.rootElement = rootElement;if(parent instanceof AbsListView){parent.setAdapter(this);}bindElement[HtmlDataListAdapter.BindAdapterProperty] = this;this.registerHtmlDataObserver();}},{key:"registerHtmlDataObserver",value:function registerHtmlDataObserver(){var adapter=this;function callBack(arr,observer){adapter.notifyDataSetChanged();}var observer=new MutationObserver(callBack);observer.observe(this.bindElementData,{childList:true});}},{key:"getItemViewType",value:function getItemViewType(position){return AdapterView.ITEM_VIEW_TYPE_IGNORE;}},{key:"getView",value:function getView(position,convertView,parent){var element=this.getItem(position);var view=element[View.AndroidViewProperty];this.checkReplaceWithRef(element);if(!view){view = View.inflate(element,this.rootElement,parent);element[View.AndroidViewProperty] = view;}return view;}},{key:"getCount",value:function getCount(){return this.bindElementData.children.length;}},{key:"getItem",value:function getItem(position){var element=this.bindElementData.children[position];if(element.tagName === HtmlDataListAdapter.RefElementTag){element = element[HtmlDataListAdapter.RefElementProperty];if(!element)throw Error('Reference element is ' + element);}return element;}},{key:"checkReplaceWithRef",value:function checkReplaceWithRef(element){var refElement=element[HtmlDataListAdapter.RefElementProperty] || document.createElement(HtmlDataListAdapter.RefElementTag);refElement[HtmlDataListAdapter.RefElementProperty] = element;element[HtmlDataListAdapter.RefElementProperty] = refElement;if(element.parentNode === this.bindElementData){this.bindElementData.insertBefore(refElement,element);this.bindElementData.removeChild(element);}return refElement;}},{key:"removeElementRefAndRestoreToAdapter",value:function removeElementRefAndRestoreToAdapter(childElement){if(childElement.tagName === HtmlDataListAdapter.RefElementTag){var element=childElement[HtmlDataListAdapter.RefElementProperty];this.bindElementData.insertBefore(element,childElement);this.bindElementData.removeChild(childElement);}}},{key:"notifyDataSizeWillChange",value:function notifyDataSizeWillChange(){for(var i=0,count=this.bindElementData.children.length;i < count;i++) {this.removeElementRefAndRestoreToAdapter(this.bindElementData.children[i]);}this.notifyDataSetChanged();}},{key:"getItemId",value:function getItemId(position){var id=this.getItem(position).id;var idNumber=Number.parseInt(id);if(Number.isInteger(idNumber))return idNumber;return -1;}}]);return HtmlDataListAdapter;})(BaseAdapter);HtmlDataListAdapter.RefElementTag = "ref-element".toUpperCase();HtmlDataListAdapter.RefElementProperty = "RefElement";HtmlDataListAdapter.BindAdapterProperty = "BindAdapter";widget.HtmlDataListAdapter = HtmlDataListAdapter;})(widget = androidui.widget || (androidui.widget = {}));})(androidui || (androidui = {})); /**
 * Created by linfaxin on 15/11/16.
 */ ///<reference path="../../android/database/DataSetObservable.ts"/>
///<reference path="../../android/database/Observable.ts"/>
///<reference path="../../android/database/DataSetObserver.ts"/>
///<reference path="../../android/view/ViewGroup.ts"/>
///<reference path="../../android/support/v4/view/ViewPager.ts"/>
///<reference path="../../android/support/v4/view/PagerAdapter.ts"/>
var androidui;(function(androidui){var widget;(function(widget){var View=android.view.View;var ViewPager=android.support.v4.view.ViewPager;var PagerAdapter=android.support.v4.view.PagerAdapter;var HtmlDataPagerAdapter=(function(_PagerAdapter2){_inherits(HtmlDataPagerAdapter,_PagerAdapter2);function HtmlDataPagerAdapter(){_classCallCheck(this,HtmlDataPagerAdapter);_get(Object.getPrototypeOf(HtmlDataPagerAdapter.prototype),"constructor",this).apply(this,arguments);}_createClass(HtmlDataPagerAdapter,[{key:"onInflateAdapter",value:function onInflateAdapter(bindElement,rootElement,parent){this.bindElementData = bindElement;this.rootElement = rootElement;if(parent instanceof ViewPager){parent.setAdapter(this);}bindElement[HtmlDataPagerAdapter.BindAdapterProperty] = this;this.registerHtmlDataObserver();}},{key:"registerHtmlDataObserver",value:function registerHtmlDataObserver(){var adapter=this;function callBack(arr,observer){adapter.notifyDataSetChanged();}var observer=new MutationObserver(callBack);observer.observe(this.bindElementData,{childList:true});}},{key:"getCount",value:function getCount(){return this.bindElementData.children.length;}},{key:"instantiateItem",value:function instantiateItem(container,position){var element=this.getItem(position);var view=element[View.AndroidViewProperty];this.checkReplaceWithRef(element);if(!view){view = View.inflate(element,this.rootElement,container);element[View.AndroidViewProperty] = view;}container.addView(view);return view;}},{key:"getItem",value:function getItem(position){var element=this.bindElementData.children[position];if(element.tagName === HtmlDataPagerAdapter.RefElementTag){element = element[HtmlDataPagerAdapter.RefElementProperty];if(!element)throw Error('Reference element is ' + element);}return element;}},{key:"checkReplaceWithRef",value:function checkReplaceWithRef(element){var refElement=element[HtmlDataPagerAdapter.RefElementProperty] || document.createElement(HtmlDataPagerAdapter.RefElementTag);refElement[HtmlDataPagerAdapter.RefElementProperty] = element;element[HtmlDataPagerAdapter.RefElementProperty] = refElement;if(element.parentNode === this.bindElementData){this.bindElementData.insertBefore(refElement,element);this.bindElementData.removeChild(element);}return refElement;}},{key:"removeElementRefAndRestoreToAdapter",value:function removeElementRefAndRestoreToAdapter(childElement){if(childElement.tagName === HtmlDataPagerAdapter.RefElementTag){var element=childElement[HtmlDataPagerAdapter.RefElementProperty];this.bindElementData.insertBefore(element,childElement);this.bindElementData.removeChild(childElement);}}},{key:"notifyDataSizeWillChange",value:function notifyDataSizeWillChange(){for(var i=0,count=this.bindElementData.children.length;i < count;i++) {this.removeElementRefAndRestoreToAdapter(this.bindElementData.children[i]);}this.notifyDataSetChanged();}},{key:"destroyItem",value:function destroyItem(container,position,object){var view=object;container.removeView(view);}},{key:"isViewFromObject",value:function isViewFromObject(view,object){return view === object;}},{key:"getItemPosition",value:function getItemPosition(object){var position=PagerAdapter.POSITION_NONE;if(object == null)return position;for(var i=0,count=this.getCount();i < count;i++) {if(object === this.getItem(i)[View.AndroidViewProperty]){position = i;break;}}return position;}}]);return HtmlDataPagerAdapter;})(PagerAdapter);HtmlDataPagerAdapter.RefElementTag = "ref-element".toUpperCase();HtmlDataPagerAdapter.RefElementProperty = "RefElement";HtmlDataPagerAdapter.BindAdapterProperty = "BindAdapter";widget.HtmlDataPagerAdapter = HtmlDataPagerAdapter;})(widget = androidui.widget || (androidui.widget = {}));})(androidui || (androidui = {})); /**
 * Created by linfaxin on 15/11/16.
 */ ///<reference path="../../android/view/ViewGroup.ts"/>
///<reference path="../../android/widget/NumberPicker.ts"/>
var androidui;(function(androidui){var widget;(function(widget){var NumberPicker=android.widget.NumberPicker;var HtmlDataPickerAdapter=(function(){function HtmlDataPickerAdapter(){_classCallCheck(this,HtmlDataPickerAdapter);}_createClass(HtmlDataPickerAdapter,[{key:"onInflateAdapter",value:function onInflateAdapter(bindElement,rootElement,parent){var _this43=this;this.bindElementData = bindElement;this.rootElement = rootElement;if(parent instanceof NumberPicker){var callBack=function callBack(arr,observer){var values=[];var _iteratorNormalCompletion35=true;var _didIteratorError35=false;var _iteratorError35=undefined;try{for(var _iterator35=Array.from(_this43.bindElementData.children)[Symbol.iterator](),_step35;!(_iteratorNormalCompletion35 = (_step35 = _iterator35.next()).done);_iteratorNormalCompletion35 = true) {var child=_step35.value;values.push(child.innerText);}}catch(err) {_didIteratorError35 = true;_iteratorError35 = err;}finally {try{if(!_iteratorNormalCompletion35 && _iterator35["return"]){_iterator35["return"]();}}finally {if(_didIteratorError35){throw _iteratorError35;}}}parent.setDisplayedValues(values);};callBack.call(this);var observer=new MutationObserver(callBack);observer.observe(this.bindElementData,{childList:true});}}}]);return HtmlDataPickerAdapter;})();widget.HtmlDataPickerAdapter = HtmlDataPickerAdapter;})(widget = androidui.widget || (androidui.widget = {}));})(androidui || (androidui = {}));var android;(function(android){var R;(function(R){var string_=(function(){function string_(){_classCallCheck(this,string_);}_createClass(string_,null,[{key:"zh",value:function zh(){this.prll_header_state_normal = '下拉以刷新';this.prll_header_state_ready = '松开马上刷新';this.prll_header_state_loading = '正在刷新...';this.prll_header_state_fail = '刷新失败';this.prll_footer_state_normal = '点击加载更多';this.prll_footer_state_loading = '正在加载...';this.prll_footer_state_ready = '松开加载更多';this.prll_footer_state_no_more = '加载完毕';this.prll_footer_state_fail = '加载失败,点击重试';}}]);return string_;})();string_.prll_header_state_normal = 'Pull to refresh';string_.prll_header_state_ready = 'Release to refresh';string_.prll_header_state_loading = 'Loading';string_.prll_header_state_fail = 'Refresh fail';string_.prll_footer_state_normal = 'Load more';string_.prll_footer_state_loading = 'Loading';string_.prll_footer_state_ready = 'Pull to load more';string_.prll_footer_state_fail = 'Click to reload';string_.prll_footer_state_no_more = 'Load Finish';R.string_ = string_;var lang=navigator.language.split('-')[0].toLowerCase();if(typeof string_[lang] === 'function')string_[lang].call(string_);})(R = android.R || (android.R = {}));})(android || (android = {})); ///<reference path="../../android/view/View.ts"/>
///<reference path="../../android/view/Gravity.ts"/>
///<reference path="../../android/view/ViewGroup.ts"/>
///<reference path="../../android/view/MotionEvent.ts"/>
///<reference path="../../android/widget/FrameLayout.ts"/>
///<reference path="../../android/widget/AbsListView.ts"/>
///<reference path="../../android/widget/ScrollView.ts"/>
///<reference path="../../android/widget/OverScroller.ts"/>
///<reference path="../../java/lang/Integer.ts"/>
var androidui;(function(androidui){var widget;(function(widget){var MotionEvent=android.view.MotionEvent;var AbsListView=android.widget.AbsListView;var ScrollView=android.widget.ScrollView;var Integer=java.lang.Integer;var OverScrollLocker;(function(OverScrollLocker){var InstanceMap=new WeakMap();function getFrom(view){var scrollLocker=InstanceMap.get(view);if(!scrollLocker){if(view instanceof AbsListView){scrollLocker = new ListViewOverScrollLocker(view);}else if(view instanceof ScrollView){scrollLocker = new ScrollViewScrollLocker(view);}if(scrollLocker)InstanceMap.set(view,scrollLocker);}return scrollLocker;}OverScrollLocker.getFrom = getFrom;var BaseOverScrollLocker=(function(){function BaseOverScrollLocker(view){var _this44=this;_classCallCheck(this,BaseOverScrollLocker);this.view = view;var onTouchEventFunc=view.onTouchEvent;view.onTouchEvent = function(event){var result=onTouchEventFunc.call(view,event);switch(event.getAction()){case MotionEvent.ACTION_DOWN:case MotionEvent.ACTION_MOVE:_this44.isInTouch = true;break;case MotionEvent.ACTION_UP:case MotionEvent.ACTION_CANCEL:_this44.isInTouch = false;break;}return result;};}_createClass(BaseOverScrollLocker,[{key:"lockOverScrollTop",value:function lockOverScrollTop(lockTop){this.lockTop = lockTop;if(!this.isInTouch && this.getOverScrollY() < -lockTop){this.springBackToLockTop();}}},{key:"lockOverScrollBottom",value:function lockOverScrollBottom(lockBottom){this.lockBottom = lockBottom;if(!this.isInTouch && this.getOverScrollY() > lockBottom){this.springBackToLockBottom();}}}]);return BaseOverScrollLocker;})();var ListViewOverScrollLocker=(function(_BaseOverScrollLocker){_inherits(ListViewOverScrollLocker,_BaseOverScrollLocker);function ListViewOverScrollLocker(listView){_classCallCheck(this,ListViewOverScrollLocker);_get(Object.getPrototypeOf(ListViewOverScrollLocker.prototype),"constructor",this).call(this,listView);this.listView = listView;this.configListView();}_createClass(ListViewOverScrollLocker,[{key:"configListView",value:function configListView(){var _this45=this;var listView=this.listView;if(!listView.mFlingRunnable)listView.mFlingRunnable = new AbsListView.FlingRunnable(listView);var scroller=listView.mFlingRunnable.mScroller;listView.mFlingRunnable.startOverfling = function(initialVelocity){scroller.setInterpolator(null);var minY=Integer.MIN_VALUE,maxY=Integer.MAX_VALUE;if(listView.mScrollY < 0)minY = -_this45.lockTop;else if(listView.mScrollY > 0)maxY = _this45.lockBottom;scroller.fling(0,listView.mScrollY,0,initialVelocity,0,0,minY,maxY,0,listView._mOverflingDistance);listView.mTouchMode = AbsListView.TOUCH_MODE_OVERFLING;listView.invalidate();listView.postOnAnimation(listView.mFlingRunnable);};var layoutChildrenFunc=listView.layoutChildren;listView.layoutChildren = function(){var overScrollY=_this45.getOverScrollY();layoutChildrenFunc.call(listView);if(overScrollY !== 0){listView.overScrollBy(0,-overScrollY,0,listView.mScrollY,0,0,0,listView.mOverscrollDistance,false);var atEdge=listView.trackMotionScroll(-overScrollY,-overScrollY);if(atEdge){listView.overScrollBy(0,overScrollY,0,listView.mScrollY,0,0,0,listView.mOverscrollDistance,false);}else {listView.mFlingRunnable.mScroller.abortAnimation();}}};listView.checkOverScrollStartScrollIfNeeded = function(){return listView.mScrollY > _this45.lockBottom || listView.mScrollY < _this45.lockTop;};listView.mFlingRunnable.edgeReached = function(delta){var initialVelocity=listView.mFlingRunnable.mScroller.getCurrVelocity();if(delta > 0)initialVelocity = -initialVelocity;listView.mFlingRunnable.startOverfling(initialVelocity);};var oldSpringBack=scroller.springBack;scroller.springBack = function(startX,startY,minX,maxX,minY,maxY){minY = -_this45.lockTop;maxY = _this45.lockBottom;return oldSpringBack.call(scroller,startX,startY,minX,maxX,minY,maxY);};var oldFling=scroller.fling;scroller.fling = function(startX,startY,velocityX,velocityY,minX,maxX,minY,maxY){var overX=arguments.length <= 8 || arguments[8] === undefined?0:arguments[8];var overY=arguments.length <= 9 || arguments[9] === undefined?0:arguments[9];if(velocityY > 0)overY += _this45.lockBottom;else overY += _this45.lockTop;oldFling.call(scroller,startX,startY,velocityX,velocityY,minX,maxX,minY,maxY,overX,overY);};}},{key:"getScrollContentBottom",value:function getScrollContentBottom(){var childCount=this.listView.getChildCount();var maxBottom=0;var minTop=0;for(var i=0;i < childCount;i++) {var child=this.listView.getChildAt(i);var childBottom=child.getBottom();var childTop=child.getTop();if(childBottom > maxBottom){maxBottom = childBottom;}if(childTop < minTop){minTop = childTop;}}if(minTop > 0)minTop = 0;if(this.listView.getAdapter() && childCount > 0){return (maxBottom - minTop) * this.listView.getAdapter().getCount() / childCount;}return 0;}},{key:"getOverScrollY",value:function getOverScrollY(){return this.listView.mScrollY;}},{key:"startSpringBack",value:function startSpringBack(){this.listView.reportScrollStateChange(AbsListView.OnScrollListener.SCROLL_STATE_FLING);this.listView.mFlingRunnable.mScroller.springBack(0,this.listView.mScrollY,0,0,0,0);this.listView.mTouchMode = AbsListView.TOUCH_MODE_OVERFLING;this.listView.postOnAnimation(this.listView.mFlingRunnable);}},{key:"springBackToLockTop",value:function springBackToLockTop(){this.startSpringBack();}},{key:"springBackToLockBottom",value:function springBackToLockBottom(){this.startSpringBack();}}]);return ListViewOverScrollLocker;})(BaseOverScrollLocker);var ScrollViewScrollLocker=(function(_BaseOverScrollLocker2){_inherits(ScrollViewScrollLocker,_BaseOverScrollLocker2);function ScrollViewScrollLocker(scrollView){var _this46=this;_classCallCheck(this,ScrollViewScrollLocker);_get(Object.getPrototypeOf(ScrollViewScrollLocker.prototype),"constructor",this).call(this,scrollView);this.scrollView = scrollView;var scroller=scrollView.mScroller;var oldSpringBack=scroller.springBack;scroller.springBack = function(startX,startY,minX,maxX,minY,maxY){minY = -_this46.lockTop;maxY = _this46.scrollView.getScrollRange() + _this46.lockBottom;return oldSpringBack.call(scroller,startX,startY,minX,maxX,minY,maxY);};var oldFling=scroller.fling;scroller.fling = function(startX,startY,velocityX,velocityY,minX,maxX,minY,maxY){var overX=arguments.length <= 8 || arguments[8] === undefined?0:arguments[8];var overY=arguments.length <= 9 || arguments[9] === undefined?0:arguments[9];if(velocityY > 0)overY += _this46.lockBottom;else overY += _this46.lockTop;minY -= _this46.lockTop;maxY += _this46.lockBottom;oldFling.call(scroller,startX,startY,velocityX,velocityY,minX,maxX,minY,maxY,overX,overY);};this.listenScrollContentHeightChange();}_createClass(ScrollViewScrollLocker,[{key:"listenScrollContentHeightChange",value:function listenScrollContentHeightChange(){var _this47=this;var listenHeightChange=function listenHeightChange(v){var onSizeChangedFunc=v.onSizeChanged;v.onSizeChanged = function(w,h,oldw,oldh){onSizeChangedFunc.call(v,w,h,oldw,oldh);_this47.scrollView.overScrollBy(0,0,0,_this47.scrollView.mScrollY,0,_this47.scrollView.getScrollRange(),0,_this47.scrollView.mOverscrollDistance,false);};};if(this.scrollView.getChildCount() > 0){listenHeightChange(this.scrollView.getChildAt(0));}else {(function(){var onViewAddedFunc=_this47.scrollView.onViewAdded;_this47.scrollView.onViewAdded = function(v){onViewAddedFunc.call(_this47.scrollView,v);listenHeightChange(v);};})();}}},{key:"getScrollContentBottom",value:function getScrollContentBottom(){if(this.scrollView.getChildCount() > 0){return this.scrollView.getChildAt(0).getBottom();}return this.scrollView.getPaddingTop();}},{key:"getOverScrollY",value:function getOverScrollY(){var scrollY=this.scrollView.getScrollY();if(scrollY < 0)return scrollY;var scrollRange=this.scrollView.getScrollRange();if(scrollY > scrollRange){return scrollY - scrollRange;}return 0;}},{key:"startSpringBack",value:function startSpringBack(){if(this.scrollView.mScroller.springBack(this.scrollView.mScrollX,this.scrollView.mScrollY,0,0,0,this.scrollView.getScrollRange())){this.scrollView.postInvalidateOnAnimation();}}},{key:"springBackToLockTop",value:function springBackToLockTop(){this.startSpringBack();}},{key:"springBackToLockBottom",value:function springBackToLockBottom(){this.startSpringBack();}}]);return ScrollViewScrollLocker;})(BaseOverScrollLocker);})(OverScrollLocker = widget.OverScrollLocker || (widget.OverScrollLocker = {}));})(widget = androidui.widget || (androidui.widget = {}));})(androidui || (androidui = {})); /**
 * Created by linfaxin on 15/11/19.
 */ ///<reference path="../../android/view/View.ts"/>
///<reference path="../../android/view/Gravity.ts"/>
///<reference path="../../android/view/ViewGroup.ts"/>
///<reference path="../../android/widget/FrameLayout.ts"/>
///<reference path="../../android/widget/AbsListView.ts"/>
///<reference path="../../android/widget/ScrollView.ts"/>
///<reference path="../../android/widget/OverScroller.ts"/>
///<reference path="../../android/widget/TextView.ts"/>
///<reference path="../../android/R/string.ts"/>
///<reference path="../../java/lang/Integer.ts"/>
///<reference path="OverScrollLocker.ts"/>
var androidui;(function(androidui){var widget;(function(widget){var _PullRefreshLoadLayout$StateChangeLimit;var Gravity=android.view.Gravity;var ViewGroup=android.view.ViewGroup;var FrameLayout=android.widget.FrameLayout;var TextView=android.widget.TextView;var R=android.R;var PullRefreshLoadLayout=(function(_FrameLayout3){_inherits(PullRefreshLoadLayout,_FrameLayout3);function PullRefreshLoadLayout(bindElement,rootElement){var _this48=this;_classCallCheck(this,PullRefreshLoadLayout);_get(Object.getPrototypeOf(PullRefreshLoadLayout.prototype),"constructor",this).call(this,bindElement,rootElement);this.autoLoadScrollAtBottom = true;this.footerViewReadyDistance = 36 * android.content.res.Resources.getDisplayMetrics().density;this.contentOverY = 0;this.setHeaderView(new PullRefreshLoadLayout.DefaultHeaderView());this.setFooterView(new PullRefreshLoadLayout.DefaultFooterView());this._attrBinder.addAttr('refreshEnable',function(value){_this48.setRefreshEnable(_this48._attrBinder.parseBoolean(value,true));});this._attrBinder.addAttr('loadEnable',function(value){_this48.setLoadEnable(_this48._attrBinder.parseBoolean(value,true));});}_createClass(PullRefreshLoadLayout,[{key:"onViewAdded",value:function onViewAdded(child){_get(Object.getPrototypeOf(PullRefreshLoadLayout.prototype),"onViewAdded",this).call(this,child);if(child instanceof PullRefreshLoadLayout.HeaderView){if(child != this.headerView)this.setHeaderView(child);}else if(child instanceof PullRefreshLoadLayout.FooterView){if(child != this.footerView)this.setFooterView(child);}else {if(child != this.contentView)this.setContentView(child);}}},{key:"configHeaderView",value:function configHeaderView(){var headerView=this.headerView;var params=headerView.getLayoutParams();params.gravity = Gravity.TOP | Gravity.CENTER_HORIZONTAL;params.height = ViewGroup.LayoutParams.WRAP_CONTENT;params.width = ViewGroup.LayoutParams.MATCH_PARENT;headerView.setLayoutParams(params);}},{key:"configFooterView",value:function configFooterView(){var footerView=this.footerView;var params=footerView.getLayoutParams();params.gravity = Gravity.BOTTOM | Gravity.CENTER_HORIZONTAL;params.height = ViewGroup.LayoutParams.WRAP_CONTENT;params.width = ViewGroup.LayoutParams.WRAP_CONTENT;footerView.setLayoutParams(params);}},{key:"configContentView",value:function configContentView(){var _this49=this;var contentView=this.contentView;var params=contentView.getLayoutParams();params.height = ViewGroup.LayoutParams.MATCH_PARENT;params.width = ViewGroup.LayoutParams.MATCH_PARENT;contentView.setLayoutParams(params);this.overScrollLocker = widget.OverScrollLocker.getFrom(contentView);var overScrollByFunc=contentView.overScrollBy;contentView.overScrollBy = function(deltaX,deltaY,scrollX,scrollY,scrollRangeX,scrollRangeY,maxOverScrollX,maxOverScrollY,isTouchEvent){var result=overScrollByFunc.call(contentView,deltaX,deltaY,scrollX,scrollY,scrollRangeX,scrollRangeY,maxOverScrollX,maxOverScrollY,isTouchEvent);if(contentView === _this49.contentView){_this49.onContentOverScroll(scrollRangeY,maxOverScrollY,isTouchEvent);}return result;};}},{key:"onContentOverScroll",value:function onContentOverScroll(scrollRangeY,maxOverScrollY,isTouchEvent){var newScrollY=this.contentView.mScrollY;var top=0;var bottom=scrollRangeY;if(newScrollY > bottom){this.contentOverY = newScrollY - bottom;}else if(newScrollY < top){this.contentOverY = newScrollY - top;}else {this.contentOverY = 0;}this.checkHeaderFooterPosition();if(this.headerView){if(this.contentOverY < -this.headerView.getHeight()){if(isTouchEvent){this.setHeaderState(PullRefreshLoadLayout.State_Header_ReadyToRefresh);}else if(this.headerView.state === PullRefreshLoadLayout.State_Header_ReadyToRefresh){this.setHeaderState(PullRefreshLoadLayout.State_Header_Refreshing);}}else if(this.headerView.state === PullRefreshLoadLayout.State_Header_ReadyToRefresh){this.setHeaderState(this.headerView.stateBeforeReady);}}if(this.footerView){var footerState=this.footerView.state;if(this.contentOverY > this.footerView.getHeight() + this.footerViewReadyDistance){if(isTouchEvent){this.setFooterState(PullRefreshLoadLayout.State_Footer_ReadyToLoad);}else if(footerState === PullRefreshLoadLayout.State_Footer_ReadyToLoad){this.setFooterState(PullRefreshLoadLayout.State_Footer_Loading);}}else if(footerState === PullRefreshLoadLayout.State_Footer_ReadyToLoad){this.setFooterState(this.footerView.stateBeforeReady);}if(this.contentOverY > 0 && this.autoLoadScrollAtBottom && footerState === PullRefreshLoadLayout.State_Footer_Normal){this.setFooterState(PullRefreshLoadLayout.State_Footer_Loading);}}}},{key:"setHeaderView",value:function setHeaderView(headerView){if(this.headerView){this.removeView(this.headerView);}this.headerView = headerView;if(headerView.getParent() == null)this.addView(headerView);this.configHeaderView();}},{key:"setFooterView",value:function setFooterView(footerView){if(this.footerView){this.removeView(this.footerView);}this.footerView = footerView;if(footerView.getParent() == null)this.addView(footerView);this.configFooterView();}},{key:"setContentView",value:function setContentView(contentView){if(this.contentView){this.removeView(this.contentView);}this.contentView = contentView;if(contentView.getParent() == null)this.addView(contentView);this.configContentView();}},{key:"setHeaderState",value:function setHeaderState(newState){if(!this.headerView)return;if(this.headerView.state === newState)return;var changeLimit=PullRefreshLoadLayout.StateChangeLimit[this.headerView.state];if(changeLimit && changeLimit.indexOf(newState) !== -1)return;this.headerView.setStateInner(this,newState);this.checkLockOverScroll();if(newState === PullRefreshLoadLayout.State_Header_Refreshing && this.refreshLoadListener){this.refreshLoadListener.onRefresh(this);}}},{key:"getHeaderState",value:function getHeaderState(){if(!this.headerView)return PullRefreshLoadLayout.State_Disable;return this.headerView.state;}},{key:"setFooterState",value:function setFooterState(newState){if(!this.footerView)return;if(this.footerView.state === newState)return;var changeLimit=PullRefreshLoadLayout.StateChangeLimit[this.footerView.state];if(changeLimit && changeLimit.indexOf(newState) !== -1)return;this.footerView.setStateInner(this,newState);this.checkLockOverScroll();if(newState === PullRefreshLoadLayout.State_Footer_Loading && this.refreshLoadListener){this.refreshLoadListener.onLoadMore(this);}}},{key:"getFooterState",value:function getFooterState(){if(!this.footerView)return PullRefreshLoadLayout.State_Disable;return this.footerView.state;}},{key:"checkLockOverScroll",value:function checkLockOverScroll(){if(!this.overScrollLocker)return;if(this.headerView){switch(this.headerView.state){case PullRefreshLoadLayout.State_Header_Normal:this.overScrollLocker.lockOverScrollTop(0);break;case PullRefreshLoadLayout.State_Header_Refreshing:this.overScrollLocker.lockOverScrollTop(this.headerView.getHeight());break;case PullRefreshLoadLayout.State_Header_ReadyToRefresh:this.overScrollLocker.lockOverScrollTop(this.headerView.getHeight());break;case PullRefreshLoadLayout.State_Header_RefreshFail:this.overScrollLocker.lockOverScrollTop(this.headerView.getHeight());break;}}else {this.overScrollLocker.lockOverScrollTop(0);}this.overScrollLocker.lockOverScrollBottom(this.footerView?this.footerView.getHeight():0);}},{key:"checkHeaderFooterPosition",value:function checkHeaderFooterPosition(){if(this.contentOverY > 0){this.setHeaderViewAppearDistance(0);this.setFooterViewAppearDistance(this.contentOverY);}else if(this.contentOverY < 0){this.setHeaderViewAppearDistance(-this.contentOverY);this.setFooterViewAppearDistance(0);}else {this.setHeaderViewAppearDistance(0);this.setFooterViewAppearDistance(0);}}},{key:"setHeaderViewAppearDistance",value:function setHeaderViewAppearDistance(distance){if(!this.headerView)return;var offset=-this.headerView.getHeight() - this.headerView.getTop() + distance;this.headerView.offsetTopAndBottom(offset);}},{key:"setFooterViewAppearDistance",value:function setFooterViewAppearDistance(distance){if(!this.contentView || !this.footerView)return;var bottomToParentBottom=Math.min(this.overScrollLocker.getScrollContentBottom(),this.contentView.getHeight()) - this.footerView.getBottom();if(this.contentOverY < 0)bottomToParentBottom -= this.contentOverY;var offset=this.footerView.getHeight() + bottomToParentBottom - distance;this.footerView.offsetTopAndBottom(offset);}},{key:"onLayout",value:function onLayout(changed,left,top,right,bottom){_get(Object.getPrototypeOf(PullRefreshLoadLayout.prototype),"onLayout",this).call(this,changed,left,top,right,bottom);this.checkHeaderFooterPosition();this.checkLockOverScroll();}},{key:"setAutoLoadMoreWhenScrollBottom",value:function setAutoLoadMoreWhenScrollBottom(autoLoad){this.autoLoadScrollAtBottom = autoLoad;}},{key:"setRefreshEnable",value:function setRefreshEnable(enable){var oldEnable=this.headerView != null;if(enable === oldEnable)return;if(!enable){this.removeView(this.headerView);this.headerView = null;if(this.overScrollLocker)this.overScrollLocker.lockOverScrollTop(0);}else {this.setHeaderView(new PullRefreshLoadLayout.DefaultHeaderView());}}},{key:"setLoadEnable",value:function setLoadEnable(enable){var oldEnable=this.footerView != null;if(enable === oldEnable)return;if(!enable){this.removeView(this.footerView);this.footerView = null;if(this.overScrollLocker)this.overScrollLocker.lockOverScrollBottom(0);}else {this.setFooterView(new PullRefreshLoadLayout.DefaultFooterView());}}},{key:"setRefreshLoadListener",value:function setRefreshLoadListener(refreshLoadListener){this.refreshLoadListener = refreshLoadListener;}},{key:"startRefresh",value:function startRefresh(){this.setHeaderState(PullRefreshLoadLayout.State_Header_Refreshing);}},{key:"startLoadMore",value:function startLoadMore(){this.setFooterState(PullRefreshLoadLayout.State_Footer_Loading);}}]);return PullRefreshLoadLayout;})(FrameLayout);PullRefreshLoadLayout.State_Disable = -1;PullRefreshLoadLayout.State_Header_Normal = 0;PullRefreshLoadLayout.State_Header_Refreshing = 1;PullRefreshLoadLayout.State_Header_ReadyToRefresh = 2;PullRefreshLoadLayout.State_Header_RefreshFail = 3;PullRefreshLoadLayout.State_Footer_Normal = 4;PullRefreshLoadLayout.State_Footer_Loading = 5;PullRefreshLoadLayout.State_Footer_ReadyToLoad = 6;PullRefreshLoadLayout.State_Footer_LoadFail = 7;PullRefreshLoadLayout.State_Footer_NoMoreToLoad = 8;PullRefreshLoadLayout.StateChangeLimit = (_PullRefreshLoadLayout$StateChangeLimit = {},_defineProperty(_PullRefreshLoadLayout$StateChangeLimit,PullRefreshLoadLayout.State_Header_Refreshing,[PullRefreshLoadLayout.State_Header_ReadyToRefresh,PullRefreshLoadLayout.State_Footer_Loading,PullRefreshLoadLayout.State_Footer_ReadyToLoad,PullRefreshLoadLayout.State_Footer_LoadFail,PullRefreshLoadLayout.State_Footer_NoMoreToLoad]),_defineProperty(_PullRefreshLoadLayout$StateChangeLimit,PullRefreshLoadLayout.State_Header_RefreshFail,[PullRefreshLoadLayout.State_Header_ReadyToRefresh,PullRefreshLoadLayout.State_Footer_Loading,PullRefreshLoadLayout.State_Footer_ReadyToLoad,PullRefreshLoadLayout.State_Footer_LoadFail,PullRefreshLoadLayout.State_Footer_NoMoreToLoad]),_defineProperty(_PullRefreshLoadLayout$StateChangeLimit,PullRefreshLoadLayout.State_Footer_Loading,[PullRefreshLoadLayout.State_Header_ReadyToRefresh,PullRefreshLoadLayout.State_Header_Refreshing,PullRefreshLoadLayout.State_Footer_ReadyToLoad,PullRefreshLoadLayout.State_Header_RefreshFail]),_defineProperty(_PullRefreshLoadLayout$StateChangeLimit,PullRefreshLoadLayout.State_Footer_NoMoreToLoad,[PullRefreshLoadLayout.State_Footer_ReadyToLoad]),_PullRefreshLoadLayout$StateChangeLimit);widget.PullRefreshLoadLayout = PullRefreshLoadLayout;(function(PullRefreshLoadLayout){var HeaderView=(function(_FrameLayout4){_inherits(HeaderView,_FrameLayout4);function HeaderView(){_classCallCheck(this,HeaderView);for(var _len41=arguments.length,args=Array(_len41),_key41=0;_key41 < _len41;_key41++) {args[_key41] = arguments[_key41];}_get(Object.getPrototypeOf(HeaderView.prototype),"constructor",this).apply(this,args);this.state = PullRefreshLoadLayout.State_Header_Normal;this.stateBeforeReady = PullRefreshLoadLayout.State_Header_Normal;}_createClass(HeaderView,[{key:"setStateInner",value:function setStateInner(prll,state){var oldState=this.state;this.state = state;this.onStateChange(state,oldState);var _this=this;switch(state){case PullRefreshLoadLayout.State_Header_RefreshFail:this.postDelayed({run:function run(){if(state === _this.state){prll.setHeaderState(PullRefreshLoadLayout.State_Header_Normal);}}},1000);break;case PullRefreshLoadLayout.State_Header_ReadyToRefresh:this.stateBeforeReady = oldState;break;}}}]);return HeaderView;})(FrameLayout);PullRefreshLoadLayout.HeaderView = HeaderView;var FooterView=(function(_FrameLayout5){_inherits(FooterView,_FrameLayout5);function FooterView(){_classCallCheck(this,FooterView);for(var _len42=arguments.length,args=Array(_len42),_key42=0;_key42 < _len42;_key42++) {args[_key42] = arguments[_key42];}_get(Object.getPrototypeOf(FooterView.prototype),"constructor",this).apply(this,args);this.state = PullRefreshLoadLayout.State_Footer_Normal;this.stateBeforeReady = PullRefreshLoadLayout.State_Footer_Normal;}_createClass(FooterView,[{key:"setStateInner",value:function setStateInner(prll,state){var oldState=this.state;this.state = state;this.onStateChange(state,oldState);switch(state){case PullRefreshLoadLayout.State_Footer_ReadyToLoad:this.stateBeforeReady = oldState;break;}}}]);return FooterView;})(FrameLayout);PullRefreshLoadLayout.FooterView = FooterView;var DefaultHeaderView=(function(_HeaderView){_inherits(DefaultHeaderView,_HeaderView);function DefaultHeaderView(bindElement,rootElement){_classCallCheck(this,DefaultHeaderView);_get(Object.getPrototypeOf(DefaultHeaderView.prototype),"constructor",this).call(this,bindElement,rootElement);this.textView = new TextView();var pad=16 * android.content.res.Resources.getDisplayMetrics().density;this.textView.setPadding(pad,pad,pad,pad);this.textView.setGravity(Gravity.CENTER);this.addView(this.textView,-1,-2);this.onStateChange(PullRefreshLoadLayout.State_Header_Normal,PullRefreshLoadLayout.State_Disable);}_createClass(DefaultHeaderView,[{key:"onStateChange",value:function onStateChange(newState,oldState){switch(newState){case PullRefreshLoadLayout.State_Header_Refreshing:this.textView.setText(R.string_.prll_header_state_loading);break;case PullRefreshLoadLayout.State_Header_ReadyToRefresh:this.textView.setText(R.string_.prll_header_state_ready);break;case PullRefreshLoadLayout.State_Header_RefreshFail:this.textView.setText(R.string_.prll_header_state_fail);break;default:this.textView.setText(R.string_.prll_header_state_normal);}}}]);return DefaultHeaderView;})(HeaderView);PullRefreshLoadLayout.DefaultHeaderView = DefaultHeaderView;var DefaultFooterView=(function(_FooterView){_inherits(DefaultFooterView,_FooterView);function DefaultFooterView(bindElement,rootElement){_classCallCheck(this,DefaultFooterView);_get(Object.getPrototypeOf(DefaultFooterView.prototype),"constructor",this).call(this,bindElement,rootElement);this.textView = new TextView();var pad=16 * android.content.res.Resources.getDisplayMetrics().density;this.textView.setPadding(pad,pad,pad,pad);this.textView.setGravity(Gravity.CENTER);this.addView(this.textView,-1,-2);this.onStateChange(PullRefreshLoadLayout.State_Footer_Normal,PullRefreshLoadLayout.State_Disable);this.setOnClickListener({onClick:function onClick(v){var parent=v.getParent();if(parent instanceof PullRefreshLoadLayout){parent.setFooterState(PullRefreshLoadLayout.State_Footer_Loading);}}});}_createClass(DefaultFooterView,[{key:"onStateChange",value:function onStateChange(newState,oldState){switch(newState){case PullRefreshLoadLayout.State_Footer_Loading:this.textView.setText(R.string_.prll_footer_state_loading);break;case PullRefreshLoadLayout.State_Footer_ReadyToLoad:this.textView.setText(R.string_.prll_footer_state_ready);break;case PullRefreshLoadLayout.State_Footer_LoadFail:this.textView.setText(R.string_.prll_footer_state_fail);break;case PullRefreshLoadLayout.State_Footer_NoMoreToLoad:this.textView.setText(R.string_.prll_footer_state_no_more);break;default:this.textView.setText(R.string_.prll_footer_state_normal);}}}]);return DefaultFooterView;})(FooterView);PullRefreshLoadLayout.DefaultFooterView = DefaultFooterView;})(PullRefreshLoadLayout = widget.PullRefreshLoadLayout || (widget.PullRefreshLoadLayout = {}));})(widget = androidui.widget || (androidui.widget = {}));})(androidui || (androidui = {})); /**
 * Created by linfaxin on 15/12/1.
 */ ///<reference path="../../android/graphics/Canvas.ts"/>
var androidui;(function(androidui){var util;(function(util){var PerformanceAdjuster=(function(){function PerformanceAdjuster(){_classCallCheck(this,PerformanceAdjuster);}_createClass(PerformanceAdjuster,null,[{key:"noCanvasMode",value:function noCanvasMode(){android.graphics.Canvas.prototype = HackCanvas.prototype;}}]);return PerformanceAdjuster;})();util.PerformanceAdjuster = PerformanceAdjuster;var HackCanvas=(function(_android$graphics$Canvas){_inherits(HackCanvas,_android$graphics$Canvas);function HackCanvas(){_classCallCheck(this,HackCanvas);_get(Object.getPrototypeOf(HackCanvas.prototype),"constructor",this).apply(this,arguments);}_createClass(HackCanvas,[{key:"init",value:function init(){}},{key:"recycle",value:function recycle(){}},{key:"translate",value:function translate(dx,dy){}},{key:"scale",value:function scale(sx,sy,px,py){}},{key:"rotate",value:function rotate(degrees,px,py){}},{key:"drawRGB",value:function drawRGB(r,g,b){}},{key:"drawARGB",value:function drawARGB(a,r,g,b){}},{key:"drawColor",value:function drawColor(color){}},{key:"clearColor",value:function clearColor(){}},{key:"save",value:function save(){return 1;}},{key:"restore",value:function restore(){}},{key:"restoreToCount",value:function restoreToCount(saveCount){}},{key:"getSaveCount",value:function getSaveCount(){return 1;}},{key:"clipRect",value:function clipRect(){return false;}},{key:"getClipBounds",value:function getClipBounds(bounds){return null;}},{key:"quickReject",value:function quickReject(){return false;}},{key:"drawCanvas",value:function drawCanvas(canvas,offsetX,offsetY){}},{key:"drawRect",value:function drawRect(){}},{key:"drawText",value:function drawText(text,x,y,paint){}}]);return HackCanvas;})(android.graphics.Canvas);})(util = androidui.util || (androidui.util = {}));})(androidui || (androidui = {})); /**
 * Created by linfaxin on 15/10/6.
 */ //use the deepest sub class as enter
///<reference path="android/view/ViewOverlay.ts"/>
///<reference path="android/view/GestureDetector.ts"/>
///<reference path="android/widget/FrameLayout.ts"/>
///<reference path="android/widget/ScrollView.ts"/>
///<reference path="android/widget/LinearLayout.ts"/>
///<reference path="android/widget/TextView.ts"/>
///<reference path="android/widget/Button.ts"/>
///<reference path="android/widget/ImageView.ts"/>
///<reference path="android/widget/ImageButton.ts"/>
///<reference path="android/widget/ListView.ts"/>
///<reference path="android/widget/GridView.ts"/>
///<reference path="android/widget/HorizontalScrollView.ts"/>
///<reference path="android/widget/NumberPicker.ts"/>
///<reference path="android/support/v4/view/ViewPager.ts"/>
///<reference path="android/support/v4/widget/ViewDragHelper.ts"/>
///<reference path="lib/com/jakewharton/salvage/RecyclingPagerAdapter.ts"/>
///<reference path="android/app/Activity.ts"/>
///<reference path="androidui/AndroidUI.ts"/>
///<reference path="androidui/widget/HtmlImageView.ts"/>
///<reference path="androidui/widget/HtmlDataListAdapter.ts"/>
///<reference path="androidui/widget/HtmlDataPagerAdapter.ts"/>
///<reference path="androidui/widget/HtmlDataPickerAdapter.ts"/>
///<reference path="androidui/widget/PullRefreshLoadLayout.ts"/>
///<reference path="androidui/util/PerformanceAdjuster.ts"/>
window["android"] = android;window["java"] = java;window["AndroidUI"] = androidui.AndroidUI;

//# sourceMappingURL=android-ui.es5.js.map